{
	"name": "Ventes derogees",
	"properties": {
		"folder": {
			"name": "BASE COMMERCIALE"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FacturationForOther",
						"type": "DatasetReference"
					},
					"name": "FacturationForOther"
				},
				{
					"dataset": {
						"referenceName": "associationoffre",
						"type": "DatasetReference"
					},
					"name": "ArticulationSap"
				},
				{
					"dataset": {
						"referenceName": "STG_OFFRE_SOURCE",
						"type": "DatasetReference"
					},
					"name": "stgOffre"
				},
				{
					"dataset": {
						"referenceName": "InPrixMoyenSplited",
						"type": "DatasetReference"
					},
					"name": "PrixPeriode"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "filter2"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "columnChoicePrix"
				},
				{
					"name": "join3"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          { Org commerciale} as string,",
				"          {Canal distribution} as string,",
				"          {Secteur d'activité} as string,",
				"          {Document de vente} as string,",
				"          Poste as string,",
				"          {Jour calendaire} as string,",
				"          {1ereDateLivrDdee} as string,",
				"          {Agence commerciale corrigé} as string,",
				"          {ATC Corrigé} as string,",
				"          {Donneur d'ordre} as string,",
				"          {Recept de march} as string,",
				"          {Destinataire facture} as string,",
				"          {Type doc vente} as string,",
				"          {Type de poste} as string,",
				"          Livraison as string,",
				"          {Type de livraison} as string,",
				"          {Type poste Livraison} as string,",
				"          Facture as string,",
				"          {Type de facture} as string,",
				"          {Type poste Facture} as string,",
				"          {Mois calendrier} as string,",
				"          {Année civile} as string,",
				"          {Motif commande} as string,",
				"          {Qté cdée} as string,",
				"          {CA cdé} as string,",
				"          {Qté livrée} as string,",
				"          {CA livré} as string,",
				"          {Qté facturée} as string,",
				"          {CA facturé} as string,",
				"          {Cout standard cdé} as string,",
				"          {Cout fabrication} as string,",
				"          {Cout standard livré} as string,",
				"          {Cout standard facturé} as string,",
				"          date_id as string,",
				"          year as string,",
				"          yearmonth as string,",
				"          qt_cd_e as string,",
				"          ca_cd_ as string,",
				"          qt_livr_e as string,",
				"          ca_livr_ as string,",
				"          qt_factur_e as string,",
				"          ca_factur_ as string,",
				"          year_month as string,",
				"          reference as string,",
				"          WholeSalerID as string,",
				"          WholeSalerHubID as string,",
				"          HubName as string,",
				"          HubSAPid as string,",
				"          toreplicate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> FacturationForOther",
				"source(output(",
				"          Commande as string,",
				"          {Référence Offre BA} as string,",
				"          {Qté Cdée} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ArticulationSap",
				"source(output(",
				"          DateOffre as string,",
				"          {Référence} as string,",
				"          Marque as string,",
				"          {Quantité} as string,",
				"          Client as string,",
				"          Responsable as string,",
				"          Offre as string,",
				"          CodeATC as string,",
				"          Canal as string,",
				"          Produit as string,",
				"          {Créateur offre} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> stgOffre",
				"source(output(",
				"          Article as string,",
				"          Distributeur as string,",
				"          prix_unitaire as string,",
				"          {Durée_période} as string,",
				"          {Période} as string,",
				"          {Mois début} as string,",
				"          {Mois fin} as string,",
				"          mois1 as string,",
				"          annee1 as string,",
				"          mois2 as string,",
				"          annee2 as string,",
				"          dd as string,",
				"          month as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PrixPeriode",
				"FacturationForOther filter({Canal distribution} != \"42\") ~> filter1",
				"filter1, ArticulationSap join({Document de vente} == Commande,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> join1",
				"join1, stgOffre join({Référence Offre BA} == Offre,",
				"     joinType:'left',",
				"     broadcast: 'auto')~> join2",
				"join3 filter({Canal distribution}==\"43\") ~> filter2",
				"PrixPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Article,",
				"          Distributeur,",
				"          {Période},",
				"          annee2,",
				"          month",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> columnChoicePrix",
				"derivedColumn2, PrixPeriode join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'left',",
				"     broadcast: 'auto')~> join3",
				"join2 derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index)) ~> derivedColumn2"
			]
		}
	}
}