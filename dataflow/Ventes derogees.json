{
	"name": "Ventes derogees",
	"properties": {
		"folder": {
			"name": "VENTES DEROGEES"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FacturationForOther",
						"type": "DatasetReference"
					},
					"name": "FacturationForOther"
				},
				{
					"dataset": {
						"referenceName": "associationoffre",
						"type": "DatasetReference"
					},
					"name": "ArticulationSap"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "stgOffre"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "filter2"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          { Org commerciale} as string,",
				"          {Canal distribution} as string,",
				"          {Secteur d'activité} as string,",
				"          {Document de vente} as string,",
				"          Poste as string,",
				"          {Jour calendaire} as string,",
				"          {1ereDateLivrDdee} as string,",
				"          {Agence commerciale corrigé} as string,",
				"          {ATC Corrigé} as string,",
				"          {Donneur d'ordre} as string,",
				"          {Recept de march} as string,",
				"          {Destinataire facture} as string,",
				"          {Type doc vente} as string,",
				"          {Type de poste} as string,",
				"          Livraison as string,",
				"          {Type de livraison} as string,",
				"          {Type poste Livraison} as string,",
				"          Facture as string,",
				"          {Type de facture} as string,",
				"          {Type poste Facture} as string,",
				"          {Mois calendrier} as string,",
				"          {Année civile} as string,",
				"          {Motif commande} as string,",
				"          {Qté cdée} as string,",
				"          {CA cdé} as string,",
				"          {Qté livrée} as string,",
				"          {CA livré} as string,",
				"          {Qté facturée} as string,",
				"          {CA facturé} as string,",
				"          {Cout standard cdé} as string,",
				"          {Cout fabrication} as string,",
				"          {Cout standard livré} as string,",
				"          {Cout standard facturé} as string,",
				"          date_id as string,",
				"          year as string,",
				"          yearmonth as string,",
				"          qt_cd_e as string,",
				"          ca_cd_ as string,",
				"          qt_livr_e as string,",
				"          ca_livr_ as string,",
				"          qt_factur_e as string,",
				"          ca_factur_ as string,",
				"          year_month as string,",
				"          reference as string,",
				"          WholeSalerID as string,",
				"          WholeSalerHubID as string,",
				"          HubName as string,",
				"          HubSAPid as string,",
				"          toreplicate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> FacturationForOther",
				"source(output(",
				"          Commande as string,",
				"          {Référence Offre BA} as string,",
				"          {Qté Cdée} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ArticulationSap",
				"source(output(",
				"          DateOffre as string,",
				"          {Date Prev Cde} as string,",
				"          {Code projet} as string,",
				"          Projet as string,",
				"          Type as string,",
				"          {CP projet} as string,",
				"          {Ville projet} as string,",
				"          NbLogement as string,",
				"          {Référence} as string,",
				"          Marque as string,",
				"          Famille as string,",
				"          Produit as string,",
				"          {Quantité} as string,",
				"          {Prix de base} as string,",
				"          {Prix DO} as string,",
				"          {Prix pro} as string,",
				"          {Prix total} as string,",
				"          {Numéro interne 1} as string,",
				"          Client as string,",
				"          {Ville client} as string,",
				"          {Type financement} as string,",
				"          {Numéro interne 2} as string,",
				"          {Négoce} as string,",
				"          {Ville négoce} as string,",
				"          {Statut offre} as string,",
				"          Responsable as string,",
				"          Groupe as string,",
				"          Offre as string,",
				"          {Date de maj statut} as string,",
				"          {Numéro avant vente} as string,",
				"          {Créateur offre} as string,",
				"          {Commentaire interne} as string,",
				"          {Offre dérogée} as string,",
				"          {Contrat cadre} as string,",
				"          {Offre nationale} as string,",
				"          {Année Tarif} as string,",
				"          PotentielP1N as string,",
				"          PotentielP2N as string,",
				"          PotentielP3N as string,",
				"          PotentielP4N as string,",
				"          PotentielP5N as string,",
				"          PotentielP6N as string,",
				"          {DateFinValidité} as string,",
				"          CODE_CMI as string,",
				"          NOM_CMI as string,",
				"          CodeATC as string,",
				"          DEEE as string,",
				"          OffreSupprimee as string,",
				"          {Date de création} as string,",
				"          NomSignataire1 as string,",
				"          NomSignataire2 as string,",
				"          DateSignataire1 as string,",
				"          DateSignataire2 as string,",
				"          {DateDérogation} as string,",
				"          Canal as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> stgOffre",
				"FacturationForOther filter({Canal distribution} != \"42\") ~> filter1",
				"filter1 filter({Canal distribution}==\"43\") ~> filter2",
				"filter2, ArticulationSap join({Document de vente} == Commande",
				"     && { Org commerciale} == Commande,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> join1",
				"join1, stgOffre join({Référence Offre BA} == Offre,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> join2"
			]
		}
	}
}