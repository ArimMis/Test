{
	"name": "MAILLARD_PREPARATION",
	"properties": {
		"folder": {
			"name": "PREPARATION ECOULEMENT"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MAILLARD_ECOULEMENT",
						"type": "DatasetReference"
					},
					"name": "ecoulement"
				},
				{
					"dataset": {
						"referenceName": "MAILLARD_ORGANISATION",
						"type": "DatasetReference"
					},
					"name": "organisation"
				},
				{
					"dataset": {
						"referenceName": "VENTES_DIRECTES_PREPARED",
						"type": "DatasetReference"
					},
					"name": "ventesDirectes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MAILLARD_ECOUL_PREPARED",
						"type": "DatasetReference"
					},
					"name": "MAILLARDECOULPREPARED"
				},
				{
					"dataset": {
						"referenceName": "MAILLARD_ORGANISATION_NOTFOUND",
						"type": "DatasetReference"
					},
					"name": "organisationNotFound"
				}
			],
			"transformations": [
				{
					"name": "quantityNotNull"
				},
				{
					"name": "cleansingEcoulement",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "getYear"
				},
				{
					"name": "yearMonth"
				},
				{
					"name": "depotNotNull"
				},
				{
					"name": "cleansing"
				},
				{
					"name": "notNull"
				},
				{
					"name": "uniqueAgenceAndHubsapID"
				},
				{
					"name": "innerOrganisation"
				},
				{
					"name": "leftOrganisation"
				},
				{
					"name": "outerleftOrganisation"
				},
				{
					"name": "cleansingVentesDirectes"
				},
				{
					"name": "sumQuantity"
				},
				{
					"name": "innerVentesDirectes"
				},
				{
					"name": "typeCaste"
				},
				{
					"name": "leftVentesDirectes"
				},
				{
					"name": "outerleftVentesDirectes"
				},
				{
					"name": "enleverVentesDirectes"
				},
				{
					"name": "Rename"
				},
				{
					"name": "fullLeftUnion"
				},
				{
					"name": "marqueFile"
				},
				{
					"name": "uniformisation"
				},
				{
					"name": "yearmonthSplit"
				},
				{
					"name": "window1"
				},
				{
					"name": "filter3"
				}
			],
			"script": "source(output(\n\t\t{Société} as string,\n\t\t{Dépot} as string,\n\t\tMois as string,\n\t\t{Code GTAC} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\t{Quantité} as string,\n\t\tValeur as string,\n\t\t{Quantité n-1} as string,\n\t\t{Valeur n-1} as string,\n\t\t{CP Dépôt} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'fname',\n\twildcardPaths:['Ecoulement/Maillard/*.csv']) ~> ecoulement\nsource(output(\n\t\t{Nom Agence (Code)} as string,\n\t\t{CP Agence} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyear as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\necoulement filter(!isNull({Quantité})) ~> quantityNotNull\nquantityNotNull derive({Quantité} = toDouble(replace({Quantité}, \",\", \".\"))) ~> cleansingEcoulement\ncleansingEcoulement derive(Year = split(Mois, \"/\")[2],\n\t\tMonth = split(Mois, \"/\")[1]) ~> getYear\ngetYear derive(Yearmonth = concat(Year, Month)) ~> yearMonth\nyearMonth filter(!isNull({Dépot})) ~> depotNotNull\norganisation derive({Nom Agence (Code)} = trim({Nom Agence (Code)}, \" \"),\n\t\tHubSAPid = trim({HubSAPid}, \" \")) ~> cleansing\ncleansing filter(!isNull({Nom Agence (Code)})) ~> notNull\nnotNull aggregate(groupBy({Nom Agence (Code)},\n\t\tHubSAPid),\n\t{CP Agence} = max({CP Agence}),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tBrandID = max(BrandID)) ~> uniqueAgenceAndHubsapID\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull({Nom Agence (Code)})) ~> outerleftOrganisation\nventesDirectes derive({Code client} = trim({Code client}, \" \"),\n\t\t{Qté facturée} = toDouble(qte_ecoulement),\n\t\tyear = trim(year, \" \"),\n\t\tArticle = trim(reference, \" \")) ~> cleansingVentesDirectes\ncleansingVentesDirectes aggregate(groupBy(year,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> sumQuantity\nwindow1, typeCaste join(getYear@Year == typeCaste@year\n\t&& coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\nRename derive(year = toString(year),\n\t\tArticle = toString(Article),\n\t\t{Code client} = toString({Code client})) ~> typeCaste\nyearmonthSplit, typeCaste join(Yearmonth == typeCaste@year\n\t&& coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(typeCaste@year) || isNull(Article) || isNull({Code client})) ~> outerleftVentesDirectes\ninnerVentesDirectes derive({Quantité} = iif(runingQte-{Qté ventes directes} >0 , runingQte-{Qté ventes directes}, toDouble(0))) ~> enleverVentesDirectes\nsumQuantity select(mapColumn(\n\t\tyear,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté ventes directes} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nenleverVentesDirectes, outerleftVentesDirectes union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(marque_file = iif(toInteger(BrandID)==1604, \"saunier\", \"vaillant\"),\n\t\t{Société} = upper({Société})) ~> marqueFile\nmarqueFile select(mapColumn(\n\t\tdistributeur = {Société},\n\t\treference = {Référence},\n\t\tarticle = {Désignation},\n\t\tqte_ecoulement = {Quantité},\n\t\tca_ecoulement = Valeur,\n\t\t{Code postal} = {CP Dépôt},\n\t\tyear = fullLeftUnion@Year,\n\t\tmonth = Month,\n\t\tyearmonth = Yearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tmarque_id = BrandID,\n\t\tmarque_file\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\ninnerOrganisation derive(Yearmonth = replace(Yearmonth, \" \", \"\")) ~> yearmonthSplit\nyearmonthSplit window(over(Year,\n\t\tPOSSAMid,\n\t\t{Référence}),\n\tasc(Mois, true),\n\truningQte = sum({Quantité})) ~> window1\nwindow1 filter(POSSAMid=='16007943' && {Référence}==\"10021497\") ~> filter3\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0} as string,\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1} as string,\n\t\tSaunierDuval as string,\n\t\t{01000} as string,\n\t\t{01999} as string,\n\t\t{nicolas hernandez} as string,\n\t\t{Conseiller Technique Thermodynamique} as string,\n\t\t{01} as string,\n\t\t{1647-Rhône-Alpes Auvergne} as string,\n\t\t{16400092} as string,\n\t\t{nicolas julien} as string,\n\t\t{SD diffus} as string,\n\t\t{NICOLAS Julien} as string,\n\t\t{16566798} as string,\n\t\tProp_14 as string\n\t),\n\tpartitionFileNames:['MAILLARD_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> MAILLARDECOULPREPARED\nouterleftOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MAILLARD_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound"
		}
	}
}