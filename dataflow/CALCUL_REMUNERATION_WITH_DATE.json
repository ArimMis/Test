{
	"name": "CALCUL_REMUNERATION_WITH_DATE",
	"properties": {
		"folder": {
			"name": "CONTRAT_DISTRIBUTION"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CONTRAT_CADRE",
						"type": "DatasetReference"
					},
					"name": "contratCadre"
				},
				{
					"dataset": {
						"referenceName": "CONTRAT",
						"type": "DatasetReference"
					},
					"name": "contrat"
				},
				{
					"dataset": {
						"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
						"type": "DatasetReference"
					},
					"name": "article"
				},
				{
					"dataset": {
						"referenceName": "InputBaseCommercialMarketing",
						"type": "DatasetReference"
					},
					"name": "baseCommerciale"
				},
				{
					"dataset": {
						"referenceName": "TEMPLATE_CONTRAT",
						"type": "DatasetReference"
					},
					"name": "templateContrat"
				},
				{
					"dataset": {
						"referenceName": "TEMPLATE_CALCUL_REM",
						"type": "DatasetReference"
					},
					"name": "calculRem"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OUTPUT_CALCUL_REMUNERATION",
						"type": "DatasetReference"
					},
					"name": "CALCULREMUNERATION"
				}
			],
			"transformations": [
				{
					"name": "joinContrat"
				},
				{
					"name": "uniqueColumnContrat"
				},
				{
					"name": "innerContratLevier"
				},
				{
					"name": "uniqueColumnLevier"
				},
				{
					"name": "canal"
				},
				{
					"name": "uniqueIDContrat"
				},
				{
					"name": "codeProduitToList"
				},
				{
					"name": "FlattenCodeProduit"
				},
				{
					"name": "articleToLIst"
				},
				{
					"name": "uniqueReferenceArticle"
				},
				{
					"name": "name"
				},
				{
					"name": "getArticleList"
				},
				{
					"name": "newCodeProduit"
				},
				{
					"name": "dropArticleList"
				},
				{
					"name": "FlattenCodeProduitExclu"
				},
				{
					"name": "toDeleteCode"
				},
				{
					"name": "deleteCodeProduitExclu"
				},
				{
					"name": "getHierarchieLocale"
				},
				{
					"name": "familleProduitToList"
				},
				{
					"name": "FlattenFamille"
				},
				{
					"name": "FlattenFamilleExclu"
				},
				{
					"name": "touteFamille"
				},
				{
					"name": "touteFamilleToDelete"
				},
				{
					"name": "toKeep1"
				},
				{
					"name": "pasTouteFamille"
				},
				{
					"name": "pasTouteFamilleToDelete"
				},
				{
					"name": "toKeep"
				},
				{
					"name": "UniontoKeep"
				},
				{
					"name": "canalToList"
				},
				{
					"name": "FlattenCanal"
				},
				{
					"name": "FlattenPOS"
				},
				{
					"name": "innerBaseCommerciale"
				},
				{
					"name": "columnChoice"
				},
				{
					"name": "baseColumnChoice"
				},
				{
					"name": "toDelete"
				},
				{
					"name": "filtreListePOS"
				},
				{
					"name": "toDelete2"
				},
				{
					"name": "filtreCanal"
				},
				{
					"name": "CA"
				},
				{
					"name": "uniqueForCA"
				},
				{
					"name": "quantite"
				},
				{
					"name": "uniqueForQuantity"
				},
				{
					"name": "UnionCAQuantity"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "verificationDateDebutDateFin"
				},
				{
					"name": "filtreDate"
				},
				{
					"name": "filtreMarque"
				},
				{
					"name": "filter1"
				},
				{
					"name": "filter2"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "hierarchieLocaleNonVide"
				},
				{
					"name": "filter3"
				},
				{
					"name": "aggregate2"
				}
			],
			"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as date 'yyyy-MM-dd',\n\t\t{Date de fin} as date 'yyyy-MM-dd',\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, calculRem join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(replace(Canal, \" \", \"\"), \"<>\", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque)) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\ndropArticleList foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\nhierarchieLocaleNonVide aggregate(groupBy(Article),\n\thierarchieLocale = first({Hiérarch.locale})) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropArticleList\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu, uniqueReferenceArticle join(code_produit == Article,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ngetHierarchieLocale derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale} = hierarchieLocale,\n\t\tcount = hierarchieLocale,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\nFlattenFamilleExclu filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> toKeep1\nFlattenFamilleExclu filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> toKeep\ntoKeep1, toKeep union(byName: true)~> UniontoKeep\nUniontoKeep derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\nFlattenPOS, baseColumnChoice join(coalesce(toString(toInteger(replace(code_produit, \" \", \"\"))),replace(code_produit, \" \", \"\")) == coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\nfiltreDate select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque = FlattenPOS@Marque,\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nDerivedColumn1 select(mapColumn(\n\t\tyear,\n\t\tyearmonth,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> toDelete\ntoDelete filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif( !isNull(Canal) && Canal=={nom du canal} , 1, 0)) ~> toDelete2\ntoDelete2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca))) ~> uniqueForCA\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite))) ~> uniqueForQuantity\nuniqueForCA, uniqueForQuantity union(byName: true)~> UnionCAQuantity\nbaseCommerciale derive(ca = replace(ca, \",\", \".\")) ~> DerivedColumn1\nfiltreMarque derive(betweenDate = between(toDate(year+\"-\"+substring(yearmonth, 5, 2)+\"-01\"), {Date de début}, {Date de fin})) ~> verificationDateDebutDateFin\nverificationDateDebutDateFin filter(betweenDate==true()) ~> filtreDate\ninnerBaseCommerciale filter(lower(replace(FlattenPOS@Marque,\" \",\"\")) == lower(replace(baseColumnChoice@marque,\" \",\"\"))) ~> filtreMarque\nbaseColumnChoice filter({Code client livré}==\"16000761\" || {Code client livré}==\"16000475\" || {Code client livré}==\"\") ~> filter1\nfilter1 filter(year==\"2021\" && {nom du canal} != \"FC\" && marque==\"Vaillant\") ~> filter2\nfilter2 aggregate(groupBy(year),\n\tca = sum(toDouble(ca))) ~> aggregate1\narticle filter(!isNull({Hiérarch.locale})) ~> hierarchieLocaleNonVide\nfiltreCanal filter({ID levier}==\"20211621110\") ~> filter3\nfilter3 aggregate(groupBy({ID levier}),\n\tca = sum(toDouble(ca))) ~> aggregate2\nUnionCAQuantity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_REMUNERATION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> CALCULREMUNERATION"
		}
	}
}