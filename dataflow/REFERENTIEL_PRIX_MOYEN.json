{
	"name": "REFERENTIEL_PRIX_MOYEN",
	"properties": {
		"folder": {
			"name": "REFERENTIEL"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "facturationBW_AC",
						"type": "DatasetReference"
					},
					"name": "facturation"
				},
				{
					"dataset": {
						"referenceName": "platforme",
						"type": "DatasetReference"
					},
					"name": "plateforme"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TEMP_PRIX_PAR_PERIODE",
						"type": "DatasetReference"
					},
					"name": "dureePeriodeOutput"
				}
			],
			"transformations": [
				{
					"name": "keep42and51"
				},
				{
					"name": "factureFilter"
				},
				{
					"name": "innerPlateforme"
				},
				{
					"name": "dropColumnsInCommonInner"
				},
				{
					"name": "sort"
				},
				{
					"name": "addKey"
				},
				{
					"name": "previousID"
				},
				{
					"name": "joinPreviousRow"
				},
				{
					"name": "prixUnitaire"
				},
				{
					"name": "prixMoyen"
				},
				{
					"name": "dropColumns"
				},
				{
					"name": "renameToPrevious"
				},
				{
					"name": "nextID"
				},
				{
					"name": "renameToNext"
				},
				{
					"name": "joinNextRow"
				},
				{
					"name": "changementDePeriode"
				},
				{
					"name": "changementDePeriodeFiltre"
				},
				{
					"name": "DureePeriode"
				},
				{
					"name": "cleansing"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "dropColumnsInCommon1"
				},
				{
					"name": "dropNULL"
				},
				{
					"name": "leftPlateforme"
				},
				{
					"name": "leftOuterPlateforme"
				},
				{
					"name": "prixUnitaireLeft"
				},
				{
					"name": "dureePeriodeLeft"
				},
				{
					"name": "uniqueWholeSalerID"
				},
				{
					"name": "drop"
				},
				{
					"name": "join"
				},
				{
					"name": "Join1"
				},
				{
					"name": "dropColumnsInCommon"
				},
				{
					"name": "dropColumns2"
				},
				{
					"name": "addperiod"
				},
				{
					"name": "Union1"
				},
				{
					"name": "facFilter"
				},
				{
					"name": "addNewKey"
				},
				{
					"name": "deletePreviousAndNext"
				},
				{
					"name": "Sort2"
				},
				{
					"name": "nextNewID"
				},
				{
					"name": "renameToNextNew"
				},
				{
					"name": "previousNewID"
				},
				{
					"name": "renameToPreviousNew"
				},
				{
					"name": "joinNewPreviousID"
				},
				{
					"name": "joinNewNextID"
				},
				{
					"name": "join2"
				},
				{
					"name": "leftJoin"
				},
				{
					"name": "averagePrix"
				}
			],
			"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> plateforme\ncleansing filter({Canal distribution}==42 || {Canal distribution}==51) ~> keep42and51\nkeep42and51 derive(fact_filter1 = iif( instr(lower({Type de facture}),\"yfar\")==0 && instr(lower({Motif commande}),\"fas\")==0, 0, 1),\n\t\tfact_filter2 = iif(instr(lower({Type de facture}),\"yafb\")==0 && instr(lower({Motif commande}),\"fas\")==0, 0, 1)) ~> factureFilter\nfacFilter, plateforme join(trim({Récept. de march.}, \" \") == trim(HubSAPid, \" \"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerPlateforme\ninnerPlateforme select(mapColumn(\n\t\tArticle,\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonInner\nprixMoyen sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> sort\ndropColumns keyGenerate(output(ID as long),\n\tstartAt: 1L) ~> addKey\naddKey derive(ID = ID+1) ~> previousID\naddKey, renameToPrevious join(ID == {previous ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinPreviousRow\nsort derive(prix_unitaire = {CA facturé}/{Qté facturée}) ~> prixUnitaire\ndropColumnsInCommonInner aggregate(groupBy(WholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier}),\n\t{Qté facturée} = max({Qté facturée}),\n\t\t{CA facturé} = max({CA facturé})) ~> prixMoyen\nprixUnitaire select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\npreviousID select(mapColumn(\n\t\t{previous WholeSalerID} = WholeSalerID,\n\t\t{previous Article} = Article,\n\t\t{previous Année civile} = {Année civile},\n\t\t{previous Mois calendrier} = {Mois calendrier},\n\t\t{previous prix_unitaire} = prix_unitaire,\n\t\t{previous ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToPrevious\naddKey derive(ID = ID-1) ~> nextID\nnextID select(mapColumn(\n\t\t{next WholeSalerID} = WholeSalerID,\n\t\t{next Article} = Article,\n\t\t{next Année civile} = {Année civile},\n\t\t{next Mois calendrier} = {Mois calendrier},\n\t\t{next prix_unitaire} = prix_unitaire,\n\t\t{next ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToNext\njoinPreviousRow, renameToNext join(ID == {next ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinNextRow\njoinNextRow derive({Changement de période} = iif({previous Article}!=Article || {previous WholeSalerID}!=WholeSalerID || {previous Année civile}!={Année civile}, \r\n    1, \r\n\r\n    iif(abs(({previous prix_unitaire}-prix_unitaire)/{previous prix_unitaire})>0.1, 1, 0))) ~> changementDePeriode\nchangementDePeriode filter({Changement de période}==1) ~> changementDePeriodeFiltre\njoinNewNextID derive({Durée_période} = iif(WholeSalerID=={previous WholeSalerID} && Article=={previous Article} && {Année civile}=={previous Année civile}\r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article} && {Année civile}=={next Année civile}\r\n    \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-12/\"+toString({Année civile}))\r\n    \r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article} && {Année civile}=={next Année civile}\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile})))) ~> DureePeriode\nfacturation derive({Canal distribution} = toInteger({Canal distribution})) ~> cleansing\nDureePeriode sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> Sort1\nSort1 select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon1\ndropColumnsInCommon1 filter(!isNull(WholeSalerID) || !isNull(Article) || !isNull({Année civile}) || !isNull({Mois calendrier}) || !isNull(prix_unitaire) || !isNull({Durée_période})) ~> dropNULL\nfacFilter, plateforme join(trim({Récept. de march.}, \" \") == trim(HubSAPid, \" \"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftPlateforme\nleftPlateforme filter(isNull(HubSAPid)) ~> leftOuterPlateforme\nleftOuterPlateforme aggregate(groupBy(Article,\n\t\t{Année civile}),\n\tprix_unitaire = mean({CA facturé}/{Qté facturée})) ~> prixUnitaireLeft\nprixUnitaireLeft derive({Durée_période} = \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile}),\n\t\tjoin = 1) ~> dureePeriodeLeft\nplateforme aggregate(groupBy(WholeSalerID),\n\tHubName = max(WholeSalerHubID)) ~> uniqueWholeSalerID\nuniqueWholeSalerID select(mapColumn(\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> drop\ndrop derive(join = 1) ~> join\ndureePeriodeLeft, join join(dureePeriodeLeft@join == join@join,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\ndropNULL select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\ndropColumnsInCommon derive({Période} = 1) ~> addperiod\ndropColumns2, averagePrix union(byName: true)~> Union1\nfactureFilter filter(fact_filter1==0 || fact_filter2==0) ~> facFilter\nSort2 keyGenerate(output(ID as long),\n\tstartAt: 1L) ~> addNewKey\nchangementDePeriodeFiltre select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deletePreviousAndNext\ndeletePreviousAndNext sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> Sort2\naddNewKey derive(ID = ID-1) ~> nextNewID\nnextNewID select(mapColumn(\n\t\t{next WholeSalerID} = WholeSalerID,\n\t\t{next Article} = Article,\n\t\t{next Année civile} = {Année civile},\n\t\t{next Mois calendrier} = {Mois calendrier},\n\t\t{next ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToNextNew\naddNewKey derive(ID = ID+1) ~> previousNewID\npreviousNewID select(mapColumn(\n\t\t{previous WholeSalerID} = WholeSalerID,\n\t\t{previous Article} = Article,\n\t\t{previous Année civile} = {Année civile},\n\t\t{previous Mois calendrier} = {Mois calendrier},\n\t\t{previous ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToPreviousNew\naddNewKey, renameToPreviousNew join(ID == {previous ID},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinNewPreviousID\njoinNewPreviousID, renameToNextNew join(ID == {next ID},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinNewNextID\naddperiod, dropColumns2 join(dropColumnsInCommon@WholeSalerID == dropColumns2@WholeSalerID\n\t&& dropColumnsInCommon@Article == dropColumns2@Article,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join2\njoin2 filter(isNull(dropColumns2@WholeSalerID) || isNull(dropColumns2@Article)) ~> leftJoin\nleftJoin select(mapColumn(\n\t\tArticle = dropColumnsInCommon@Article,\n\t\tprix_unitaire = dropColumnsInCommon@prix_unitaire,\n\t\t{Durée_période} = dropColumnsInCommon@{Durée_période},\n\t\tWholeSalerID = dropColumnsInCommon@WholeSalerID,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> averagePrix\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TEMP_PRIX_PAR_PERIODE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> dureePeriodeOutput"
		}
	}
}