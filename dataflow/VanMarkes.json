{
	"name": "VanMarkes",
	"properties": {
		"folder": {
			"name": "BASE COMMERCIALE"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EVanMarkes1",
						"type": "DatasetReference"
					},
					"name": "organisaation"
				},
				{
					"dataset": {
						"referenceName": "AvoirForVanMarkesInput",
						"type": "DatasetReference"
					},
					"name": "Avoir"
				},
				{
					"dataset": {
						"referenceName": "In_FacturationVM",
						"type": "DatasetReference"
					},
					"name": "Facturation"
				},
				{
					"dataset": {
						"referenceName": "extractionSap",
						"type": "DatasetReference"
					},
					"name": "ExtarctionSAP"
				},
				{
					"dataset": {
						"referenceName": "ref_atc",
						"type": "DatasetReference"
					},
					"name": "REFATC"
				},
				{
					"dataset": {
						"referenceName": "STG_OFFRE_SOURCE",
						"type": "DatasetReference"
					},
					"name": "Offre"
				},
				{
					"dataset": {
						"referenceName": "article_hierarchi",
						"type": "DatasetReference"
					},
					"name": "articleInput"
				},
				{
					"dataset": {
						"referenceName": "inepsv2",
						"type": "DatasetReference"
					},
					"name": "inputEPS"
				},
				{
					"dataset": {
						"referenceName": "InPrixMoyenSplited",
						"type": "DatasetReference"
					},
					"name": "PrixPeriode"
				},
				{
					"dataset": {
						"referenceName": "PLATEFORMES",
						"type": "DatasetReference"
					},
					"name": "plateforme"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SinkVanMarkes",
						"type": "DatasetReference"
					},
					"name": "SinkVanMarkes"
				}
			],
			"transformations": [
				{
					"name": "selectAvoir"
				},
				{
					"name": "InnerfacturationOrganisation"
				},
				{
					"name": "FilterQte"
				},
				{
					"name": "typeCast"
				},
				{
					"name": "mapCanalID"
				},
				{
					"name": "efacturation"
				},
				{
					"name": "inner"
				},
				{
					"name": "month"
				},
				{
					"name": "fullLeft"
				},
				{
					"name": "fullRight"
				},
				{
					"name": "dropColumns"
				},
				{
					"name": "left"
				},
				{
					"name": "dataOriginAvoir"
				},
				{
					"name": "dropColumnsInCommon"
				},
				{
					"name": "right"
				},
				{
					"name": "renameColumns"
				},
				{
					"name": "dataOriginFacturation"
				},
				{
					"name": "renameColumns1"
				},
				{
					"name": "getUnique"
				},
				{
					"name": "endInner"
				},
				{
					"name": "dataOriginFacturationAvoir"
				},
				{
					"name": "endRight"
				},
				{
					"name": "endLeft"
				},
				{
					"name": "unionFacturation"
				},
				{
					"name": "unionAvoir"
				},
				{
					"name": "endDerementaiton"
				},
				{
					"name": "typeCastCanal"
				},
				{
					"name": "Agregat"
				},
				{
					"name": "SelectcolonneATC"
				},
				{
					"name": "SelectColonneOffre"
				},
				{
					"name": "AgregatOffreCanalATC"
				},
				{
					"name": "SelectOffre"
				},
				{
					"name": "canalfinal"
				},
				{
					"name": "SelectSAP"
				},
				{
					"name": "JoinSAP"
				},
				{
					"name": "marqueNamee"
				},
				{
					"name": "SelectCol"
				},
				{
					"name": "JoinATC"
				},
				{
					"name": "addDataorigin"
				},
				{
					"name": "RenameATC"
				},
				{
					"name": "JoinOffre"
				},
				{
					"name": "renameNoOffre"
				},
				{
					"name": "distributeur"
				},
				{
					"name": "filtreCompany"
				},
				{
					"name": "setHubsID"
				},
				{
					"name": "Select1"
				},
				{
					"name": "endArticle"
				},
				{
					"name": "Join1",
					"description": "Inner join on 'dropColumnsInCommon' and 'endArticle'\n\nto get the marque id"
				},
				{
					"name": "endEPS"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Join3"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "derivedColumn100"
				},
				{
					"name": "columnChoicePrix"
				},
				{
					"name": "join100"
				},
				{
					"name": "derivedColumn101"
				},
				{
					"name": "derivedColumn102"
				},
				{
					"name": "derivedColumn103"
				},
				{
					"name": "join101"
				},
				{
					"name": "derivedColumn104"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "aggregate4"
				},
				{
					"name": "aggregate5"
				},
				{
					"name": "aggregate6"
				},
				{
					"name": "aggregate7"
				},
				{
					"name": "aggregate8"
				},
				{
					"name": "filter1"
				}
			],
			"script": "source(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tF5 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisaation\nsource(output(\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Avoir\nsource(output(\n\t\t{ Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit?} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrig?} as string,\n\t\t{ATC Corrig?} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann?e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qt? cd?e} as string,\n\t\t{CA cd?} as string,\n\t\t{Qt? livr?e} as string,\n\t\t{CA livr?} as string,\n\t\t{Qt? factur?e} as string,\n\t\t{CA factur?} as string,\n\t\t{Cout standard cd?} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr?} as string,\n\t\t{Cout standard factur?} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Facturation\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtarctionSAP\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> REFATC\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Offre\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleInput\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputEPS\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PrixPeriode\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> plateforme\nAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\treference = NoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectAvoir\nFacturation, organisaation join(Facturation@HubSAPid == organisaation@HubSAPid,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> InnerfacturationOrganisation\nsetHubsID filter(toDouble(Qte_Validee_VGF)>0) ~> FilterQte\nFilterQte derive(Mois = toInteger(Mois),\n\t\t{Année} = toInteger({Année}),\n\t\tcanal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\",     iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\")),\n\t\tyearmonth = iif(toInteger(Mois)<10, {Année}+\"0\"+Mois  ,   {Année}+\"0\"+Mois  )) ~> typeCast\naggregate2 derive(id_canal_final = iif(canal==\"FP\", 45,     iif(canal==\"FS\", 51,     iif(canal==\"FC\", 43, 42))),\n\t\ttOrigin = \"avoir\") ~> mapCanalID\naggregate1 select(mapColumn(\n\t\tmarque_id = {Org. commerciale},\n\t\t{Canal distribution},\n\t\tPoste,\n\t\t{ATC Corrigé},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString = {Récept. de march.},\n\t\treference = f_Article,\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear,\n\t\tHubSAPid,\n\t\ttOrigin,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> efacturation\nmapCanalID, efacturation join(aggregate2@HubSAPid == efacturation@HubSAPid\n\t&& {Année} == toInteger(year)\n\t&& toInteger(aggregate2@{Période}) == toInteger(efacturation@{Période})\n\t&& coalesce(toString(toInteger(replace(aggregate2@reference, \" \", \"\"))),replace(aggregate2@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(efacturation@reference, \" \", \"\"))),replace(efacturation@reference, \" \", \"\")),\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> inner\nInnerfacturationOrganisation derive(month = right(yearmonth, 2),\n\t\ttOrigin = \"facturation\") ~> month\nmapCanalID, efacturation join({Année} == toInteger(year)\n\t&& toInteger(aggregate2@{Période}) == toInteger(efacturation@{Période})\n\t&& aggregate2@HubSAPid == efacturation@HubSAPid\n\t&& coalesce(toString(toInteger(replace(aggregate2@reference, \" \", \"\"))),replace(aggregate2@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(efacturation@reference, \" \", \"\"))),replace(efacturation@reference, \" \", \"\")),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> fullLeft\nmapCanalID, efacturation join(aggregate2@HubSAPid == efacturation@HubSAPid\n\t&& coalesce(toString(toInteger(replace(aggregate2@reference, \" \", \"\"))),replace(aggregate2@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(efacturation@reference, \" \", \"\"))),replace(efacturation@reference, \" \", \"\"))\n\t&& toInteger(aggregate2@{Période}) == toInteger(efacturation@{Période})\n\t&& {Année} == toInteger(year),\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> fullRight\ntypeCast select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\treference,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tcanal,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nfullLeft filter(isNull(efacturation@tOrigin)) ~> left\nleft derive(data_origin = \"avoir\",\n\t\tid_canal_final = toString(id_canal_final)) ~> dataOriginAvoir\ndataOriginAvoir select(mapColumn(\n\t\tNoOffre,\n\t\treference = aggregate2@reference,\n\t\tqt_final = Qte_Validee_VGF,\n\t\tPOSSAMidString = NoCli,\n\t\tca_final = PA_Valide_VGF,\n\t\tHubSAPid = aggregate2@HubSAPid,\n\t\tyearmonth = {Année},\n\t\tcanal,\n\t\tid_canal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nfullRight filter(isNull(mapCanalID@tOrigin)) ~> right\nright select(mapColumn(\n\t\tmarque_id,\n\t\tid_canal_final = {Canal distribution},\n\t\t{ATC Corrigé},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\treference = efacturation@reference,\n\t\tyearmonth = year,\n\t\tHubSAPid = efacturation@HubSAPid,\n\t\tqt_final = {Qté facturée},\n\t\tca_final = {CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrenameColumns derive(data_origin = \"facturation\") ~> dataOriginFacturation\ninner select(mapColumn(\n\t\tNoOffre,\n\t\treference = efacturation@reference,\n\t\tqt_final = Qte_Validee_VGF,\n\t\tca_final = PA_Valide_VGF,\n\t\tHubSAPid = efacturation@HubSAPid,\n\t\tyearmonth = year,\n\t\tcanal,\n\t\tid_canal_final,\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\tPoste,\n\t\t{ATC Corrigé},\n\t\t{Donneur d ordre} = {Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\tNoCli\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns1\nrenameColumns1 aggregate(groupBy(reference,\n\t\tyearmonth,\n\t\tHubSAPid),\n\tca_final = first(ca_final),\n\t\tNoOffre = max(NoOffre),\n\t\tqt_final = max(qt_final),\n\t\tcanal = max(canal),\n\t\tid_canal_final = max(id_canal_final),\n\t\t{ATC Corrigé} = max({ATC Corrigé}),\n\t\tmarque_id = max(marque_id),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\t{Donneur d ordre} = max({Donneur d ordre}),\n\t\tNoCli = max(NoCli)) ~> getUnique\ndataOriginFacturationAvoir select(mapColumn(\n\t\treference,\n\t\tNoOffre,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString = NoCli,\n\t\t{Donneur d ordre},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endInner\ngetUnique derive(data_origin = \"facturation avoir\") ~> dataOriginFacturationAvoir\ndataOriginFacturation select(mapColumn(\n\t\tmarque_id,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\t{Document de vente},\n\t\t{Donneur d ordre} = {Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endRight\nJoin2 select(mapColumn(\n\t\tNoOffre,\n\t\treference,\n\t\tmarque_id,\n\t\tqt_final,\n\t\tPOSSAMidString,\n\t\tca_final,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tcanal,\n\t\tid_canal_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endLeft\ntypeCastCanal, endRight union(byName: true)~> unionFacturation\nunionFacturation, endLeft union(byName: true)~> unionAvoir\ndistributeur select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDerementaiton\nendInner derive(id_canal_final = toString(id_canal_final)) ~> typeCastCanal\nSelect1 aggregate(groupBy({Canal final},\n\t\tMarque,\n\t\tcode_postal_atc),\n\tMatricule = max(Matricule),\n\t\tNomATC = max(NomATC),\n\t\tATC = max(ATC)) ~> Agregat\nAgregat select(mapColumn(\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectcolonneATC\nOffre select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tATC = CodeATC,\n\t\tCanal,\n\t\tProduit,\n\t\t{Créateur offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColonneOffre\nSelectColonneOffre aggregate(groupBy(Offre,\n\t\tCanal,\n\t\tATC),\n\tDateOffre = first(DateOffre)) ~> AgregatOffreCanalATC\nAgregatOffreCanalATC select(mapColumn(\n\t\tOffre,\n\t\tcanal = Canal,\n\t\t{ATC performance} = ATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOffre\nendDerementaiton derive(canal_final = iif(id_canal_final==\"43\", \"Chantier\",  \"Diffus\")) ~> canalfinal\nExtarctionSAP select(mapColumn(\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal},\n\t\t{Téléphone 1},\n\t\t{Numéro de télécopie},\n\t\t{Org. commerciale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSAP\ncanalfinal, SelectSAP join(toInteger(POSSAMidString) == toInteger(Client)\n\t&& toInteger(marque_id) == toInteger({Org. commerciale}),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> JoinSAP\nDerivedColumn1 derive(marque_name = iif(marque_id==\"1604\", 'SaunierDuval', 'Vaillant'),\n\t\tdistributeur = \"van markes\") ~> marqueNamee\nmarqueNamee select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tcanal_final,\n\t\t{Agence commerciale},\n\t\tClient = SelectSAP@Client,\n\t\t{Téléphone 1},\n\t\t{Numéro de télécopie},\n\t\t{Org. commerciale},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCol\nSelectCol, SelectcolonneATC join(canal_final == {Canal final}\n\t&& {Code postal} == code_postal_atc\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> JoinATC\nJoin1 derive(data_origin = \"avoir\",\n\t\tyearmonth = toString(yearmonth)) ~> addDataorigin\nJoinATC select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tcanal_final,\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal},\n\t\t{Org. commerciale},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameATC\nRenameATC, SelectOffre join(NoOffre == Offre,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> JoinOffre\nJoinOffre select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\tdata_origin,\n\t\tno_offre = NoOffre,\n\t\tcanal_final,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\tMarque,\n\t\t{Canal final},\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC,\n\t\tOffre,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameNoOffre\nunionAvoir derive(distributeur = \"Van Markes\") ~> distributeur\nselectAvoir filter(CompanyId==\"11\") ~> filtreCompany\nfiltreCompany derive(HubSAPid = \"16012633\") ~> setHubsID\nREFATC select(mapColumn(\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tATC,\n\t\tNomATC,\n\t\t{Plan primes},\n\t\tMatricule,\n\t\t{Canal final},\n\t\ttoreplicate,\n\t\tdd,\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\narticleInput select(mapColumn(\n\t\tmarque_id = OrgCm,\n\t\tarticle = Article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endArticle\ndropColumnsInCommon, endArticle join(coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(article, \" \", \"\"))),replace(article, \" \", \"\")),\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join1\ninputEPS select(mapColumn(\n\t\tclient = {Numéro du compte},\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEPS\naddDataorigin, endEPS join(POSSAMidString == client,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join2\nJoinSAP, endEPS join(toInteger(POSSAMidString) == toInteger(endEPS@client),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join3\nJoin3 derive({Code postal} = coalesce(SelectSAP@{Code postal},endEPS@{Code postal})) ~> DerivedColumn1\nPrixPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> derivedColumn100\nderivedColumn100 select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\nderivedColumn101, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger({Mois calendrier}) == toInteger(columnChoicePrix@month)\n\t&& coalesce(toString(toInteger(replace(Facturation@Article, \" \", \"\"))),replace(Facturation@Article, \" \", \"\")) == coalesce(toString(toInteger(replace(columnChoicePrix@Article, \" \", \"\"))),replace(columnChoicePrix@Article, \" \", \"\")),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join100\nmonth derive(tempDist = \"Van Marcke\") ~> derivedColumn101\njoin100 derive({Période} = coalesce( {Période}, \"00\" )) ~> derivedColumn102\ndropColumns derive(tempDist = \"Van Marcke\") ~> derivedColumn103\nderivedColumn103, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")\n\t&& toInteger({Année}) == toInteger(annee2)\n\t&& toInteger(Mois_Selection) == toInteger(month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join101\njoin101 derive({Période} = coalesce( {Période}, \"00\" )) ~> derivedColumn104\nderivedColumn102 aggregate(groupBy({Org. commerciale} = {Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tf_Article = Facturation@Article,\n\t\t{ vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\tProp_0,\n\t\tyear,\n\t\tfact_filter,\n\t\tFacturation@WholeSalerID,\n\t\tFacturation@WholeSalerHubID,\n\t\tFacturation@HubName,\n\t\torganisaation@HubSAPid,\n\t\tF5,\n\t\ttOrigin,\n\t\ttempDist,\n\t\tArticle = columnChoicePrix@Article,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2),\n\t{Qté cdée} = sum(toFloat({Qté cdée})),\n\t\t{CA cdé} = sum(toFloat({CA cdé})),\n\t\t{Qté livrée} = sum(toFloat({Qté livrée})),\n\t\t{CA livré} = sum(toFloat({CA livré})),\n\t\t{Qté facturée} = sum(toFloat({Qté facturée})),\n\t\t{CA facturé} = sum(toFloat({CA facturé})),\n\t\t{Cout standard cdé} = sum(toFloat({Cout standard cdé})),\n\t\t{Cout fabrication} = sum(toFloat({Cout fabrication})),\n\t\t{Cout standard livré} = sum(toFloat({Cout standard livré})),\n\t\t{Cout standard facturé} = sum(toFloat({Cout standard facturé})),\n\t\tqt_cd_e = sum(toFloat(qt_cd_e)),\n\t\tca_cd_ = sum(toFloat(ca_cd_)),\n\t\tqt_livr_e = sum(toFloat(qt_livr_e)),\n\t\tca_livr_ = sum(toFloat(ca_livr_)),\n\t\tqt_factur_e = sum(toFloat(qt_factur_e)),\n\t\tca_factur_ = sum(toFloat(ca_factur_)),\n\t\tcout_standard_cd_ = sum(toFloat(cout_standard_cd_)),\n\t\tcout_fabrication = sum(toFloat(cout_fabrication)),\n\t\tcout_standard_livr_ = sum(toFloat(cout_standard_livr_)),\n\t\tcout_standard_factur_ = sum(toFloat(cout_standard_factur_))) ~> aggregate1\nderivedColumn104 aggregate(groupBy(Mois_Selection,\n\t\tNoOffre,\n\t\treference,\n\t\tNoCli,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tcanal,\n\t\ttempDist,\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2),\n\tQte_Validee_VGF = sum(toFloat(Qte_Validee_VGF)),\n\t\tPA_Valide_VGF = sum(toFloat(PA_Valide_VGF))) ~> aggregate2\nmonth aggregate(qt_factur_e = sum(toFloat({qt_factur_e})),\n\t\tca_factur_ = sum(toFloat({ca_factur_})),\n\t\t{Qté facturée} = sum(toFloat({Qté facturée})),\n\t\t{CA facturé} = sum(toFloat({CA facturé}))) ~> aggregate3\njoin100 aggregate(qt_factur_e = sum(toFloat(qt_factur_e)),\n\t\tca_factur_ = sum(toFloat(ca_factur_)),\n\t\t{Qté facturée} = sum(toFloat({Qté facturée})),\n\t\t{CA facturé} = sum(toFloat({CA facturé}))) ~> aggregate4\naggregate1 aggregate(qt_factur_e = sum(toFloat(qt_factur_e)),\n\t\tca_factur_ = sum(toFloat(ca_factur_)),\n\t\t{Qté facturée} = sum(toFloat({Qté facturée})),\n\t\t{CA facturé} = sum(toFloat({CA facturé}))) ~> aggregate5\nFilterQte aggregate(Qte_Validee_VGF = sum(toFloat(Qte_Validee_VGF)),\n\t\tPA_Valide_VGF = sum(toFloat(PA_Valide_VGF))) ~> aggregate6\naggregate2 aggregate(Qte_Validee_VGF = sum(toFloat(Qte_Validee_VGF)),\n\t\tPA_Valide_VGF = sum(toFloat(PA_Valide_VGF))) ~> aggregate7\nrenameNoOffre aggregate(ca_final = sum(toFloat(ca_final)),\n\t\tqt_final = sum(toFloat(qt_final))) ~> aggregate8\nplateforme filter(HubSAPid==\"16012633\") ~> filter1\nrenameNoOffre sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SinkVanMarkes'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SinkVanMarkes"
		}
	}
}