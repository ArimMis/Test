{
	"name": "DSCTEREVA_copy1",
	"properties": {
		"folder": {
			"name": "BASE COMMERCIALE"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "InEcoulementWithIndexDSC",
						"type": "DatasetReference"
					},
					"name": "ecoulementwithIndex"
				},
				{
					"dataset": {
						"referenceName": "In_avoirwithIndex",
						"type": "DatasetReference"
					},
					"name": "avoirwithIndex"
				},
				{
					"dataset": {
						"referenceName": "STG_OFFRE_SOURCE",
						"type": "DatasetReference"
					},
					"name": "stgOffre"
				},
				{
					"dataset": {
						"referenceName": "ref_atc",
						"type": "DatasetReference"
					},
					"name": "referentielATC"
				},
				{
					"dataset": {
						"referenceName": "inFacturationDSC",
						"type": "DatasetReference"
					},
					"name": "facturation"
				},
				{
					"dataset": {
						"referenceName": "InPrixMoyenSplited",
						"type": "DatasetReference"
					},
					"name": "prixMoyen"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "avoirUnMappedutput",
						"type": "DatasetReference"
					},
					"name": "avoirUnMapped"
				},
				{
					"dataset": {
						"referenceName": "DscModelBis",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "fullLeft"
				},
				{
					"name": "caFinal"
				},
				{
					"name": "RenameLeft"
				},
				{
					"name": "outerLeft"
				},
				{
					"name": "columnChoiceEcoulement"
				},
				{
					"name": "renameAvoir"
				},
				{
					"name": "innerAvoir"
				},
				{
					"name": "canal"
				},
				{
					"name": "idCanal"
				},
				{
					"name": "idCanalFinal"
				},
				{
					"name": "Select1"
				},
				{
					"name": "uniqueOffre"
				},
				{
					"name": "fullLeftOffre"
				},
				{
					"name": "EndInner",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "fullLeftUnion"
				},
				{
					"name": "canalFinal"
				},
				{
					"name": "atcKeepingColumn"
				},
				{
					"name": "atcNotNull"
				},
				{
					"name": "uniqueATC"
				},
				{
					"name": "typeCaste"
				},
				{
					"name": "dropColumns"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "JoinAvoir"
				},
				{
					"name": "FilterIndexCols2"
				},
				{
					"name": "columnsChoice"
				},
				{
					"name": "Filter8"
				},
				{
					"name": "DerivedColumn4"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "columnChoicePrix"
				},
				{
					"name": "prepareGetPeriode"
				},
				{
					"name": "join2"
				},
				{
					"name": "fillNaPeriodeFact"
				},
				{
					"name": "join3"
				},
				{
					"name": "derivedColumn200"
				},
				{
					"name": "CreateIndexColEcoul"
				},
				{
					"name": "CreateIndexColFact"
				},
				{
					"name": "join4"
				},
				{
					"name": "EndFact"
				},
				{
					"name": "split1"
				},
				{
					"name": "select104"
				},
				{
					"name": "select105"
				},
				{
					"name": "split3"
				},
				{
					"name": "EcoulementRetraiteMatche"
				},
				{
					"name": "derivedColumn201"
				},
				{
					"name": "derivedColumn202"
				},
				{
					"name": "split4"
				},
				{
					"name": "select106"
				},
				{
					"name": "derivedColumn203"
				},
				{
					"name": "select107"
				},
				{
					"name": "derivedColumn204"
				},
				{
					"name": "derivedColumn205"
				},
				{
					"name": "EndFacturationSansMatching"
				},
				{
					"name": "derivedColumn206"
				},
				{
					"name": "EndDerecmentationEcoulementSM"
				},
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn207"
				},
				{
					"name": "derivedColumn208"
				},
				{
					"name": "window1"
				},
				{
					"name": "select108"
				},
				{
					"name": "derivedColumn209"
				},
				{
					"name": "window2"
				},
				{
					"name": "flatten2"
				},
				{
					"name": "select109"
				},
				{
					"name": "EndEcoulementRetraiteMatche"
				},
				{
					"name": "EndEcoulementMatche"
				},
				{
					"name": "EndEcoulementRetraiteNonMatche"
				},
				{
					"name": "EndEcoulementNonMatche"
				},
				{
					"name": "union1"
				},
				{
					"name": "union2"
				},
				{
					"name": "union3"
				},
				{
					"name": "union4"
				},
				{
					"name": "union5"
				},
				{
					"name": "select110"
				},
				{
					"name": "join5"
				},
				{
					"name": "EndUniqueATC"
				},
				{
					"name": "select111"
				},
				{
					"name": "derivedColumn210"
				}
			],
			"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixMoyen\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerAvoir\ninnerAvoir derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\")),\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tyear = {Année},\n\t\tmonth = Mois) ~> canal\ncanal derive(id_canal_final = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(canal_final = iif(id_canal_final==43, \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\ndropColumns select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\nDerivedColumn4 filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_),\n\t\ttempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva',    iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc',     iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \tiif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',lower(WholeSalerID))))))) ~> typeCaste\nfullLeftOffre select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nwindow1 derive(tempOrigin = \"facturation\",\n\t\t{Canal distribution} = 42,\n\t\t{Qté facturée} = iif(toFloat({Qté facturée})> 0 , 1 , -1)) ~> DerivedColumn2\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> JoinAvoir\nJoinAvoir filter(isNull(columnChoiceEcoulement@indexcols2)) ~> FilterIndexCols2\nFilterIndexCols2 select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoice\nEndUniqueATC filter(code_postal_atc==\"3300\") ~> Filter8\natcKeepingColumn derive(code_postal_atc = toInteger(code_postal_atc)) ~> DerivedColumn4\nprixMoyen derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> derivedColumn1\nderivedColumn1 select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> prepareGetPeriode\ntypeCaste, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger({Mois calendrier}) == toInteger(month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(columnChoicePrix@Article, \" \", \"\"))),replace(columnChoicePrix@Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join2\njoin2 derive({Période} = coalesce( {Période}, \"00\" )) ~> fillNaPeriodeFact\nprepareGetPeriode, columnChoicePrix join(replace(lower( iif(prepareGetPeriode@distributeur==\"MABILLE\", \"sonac\", prepareGetPeriode@distributeur) ), \" \", \"\") == replace(lower(columnChoicePrix@Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger(prepareGetPeriode@month) == toInteger(columnChoicePrix@month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join3\nselect108 derive({Période} = coalesce( {Période}, \"00\" ),\n\t\ttoroll = mapLoop(abs(toInteger( qt_final )), #index)) ~> derivedColumn200\nwindow2 derive(indexcol2 = year+\"-\"+{Période}+\"-\"+HubSAPid+\"-\"+ref2+\"-\"+toString(indexcol2)) ~> CreateIndexColEcoul\nDerivedColumn2 derive(indexcol2 = year+\"-\"+{Période}+\"-\"+HubSAPid+\"-\"+ref2+\"-\"+toString(indexcol2)) ~> CreateIndexColFact\nCreateIndexColEcoul, EndFact join(indexcol2 == f_Indexcol2,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> join4\nCreateIndexColFact select(mapColumn(\n\t\t{f_Org commerciale} = {Org commerciale},\n\t\t{f_Canal distribution} = {Canal distribution},\n\t\t{f_Secteur d'activité} = {Secteur d'activité},\n\t\t{f_Document de vente} = {Document de vente},\n\t\tf_Poste = Poste,\n\t\t{f_Jour calendaire} = {Jour calendaire},\n\t\t{f_Agence commerciale corrigé} = {Agence commerciale corrigé},\n\t\t{f_ATC Corrigé} = {ATC Corrigé},\n\t\t{f_Donneur d'ordre} = {Donneur d'ordre},\n\t\t{f_recept de march} = {recept de march},\n\t\t{f_Destinataire facture} = {Destinataire facture},\n\t\t{f_type doc vente} = {type doc vente},\n\t\t{f_Type de poste} = {Type de poste},\n\t\tf_Livraison = Livraison,\n\t\t{f_Type de livraison} = {Type de livraison},\n\t\t{f_Type poste Livraison} = {Type poste Livraison},\n\t\tf_Facture = Facture,\n\t\t{f_Type de facture} = {Type de facture},\n\t\t{f_Type poste Facture} = {Type poste Facture},\n\t\t{f_Mois calendrier} = {Mois calendrier},\n\t\t{f_Année civile} = {Année civile},\n\t\t{Motif commande},\n\t\t{f_Qté cdée} = {Qté cdée},\n\t\t{f_CA cdé} = {CA cdé},\n\t\t{f_Qté livrée} = {Qté livrée},\n\t\t{f_CA livré} = {CA livré},\n\t\t{f_Qté facturée} = {Qté facturée},\n\t\t{f_CA facturé} = {CA facturé},\n\t\t{f_Cout standard cdé} = {Cout standard cdé},\n\t\t{f_Cout fabrication} = {Cout fabrication},\n\t\t{f_Cout standard livré} = {Cout standard livré},\n\t\t{f_Cout standard facturé} = {Cout standard facturé},\n\t\tf_date_id = date_id,\n\t\tf_year = year,\n\t\tf_yearmonth = yearmonth,\n\t\tf_year_month = year_month,\n\t\tf_reference = reference,\n\t\tf_article = flatten1@article,\n\t\tf_prix_unitaire_std = prix_unitaire_std,\n\t\tf_WholeSalerID = WholeSalerID,\n\t\tf_WholeSalerHubID = WholeSalerHubID,\n\t\tf_HubName = HubName,\n\t\tf_HubSAPid = HubSAPid,\n\t\tf_tempDist = tempDist,\n\t\tf_Article = flatten1@Article,\n\t\tf_Distributeur = Distributeur,\n\t\t{f_Période} = {Période},\n\t\tf_annee2 = annee2,\n\t\tf_month = month,\n\t\tf_ref2 = ref2,\n\t\tf_tempOrigin = tempOrigin,\n\t\tf_Indexcol2 = indexcol2,\n\t\tf_article = flatten1@article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndFact\njoin4 split(!isNull(data_origin) && !isNull(f_tempOrigin),\n\t!isNull(data_origin) && isNull(f_tempOrigin),\n\tdisjoint: false) ~> split1@(EcoulementMatche, EcoulementNonMatch, FacturationSansMatching)\nsplit1@EcoulementNonMatch select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select104\nsplit1@FacturationSansMatching select(mapColumn(\n\t\t{Org commerciale} = {f_Org commerciale},\n\t\t{Canal distribution} = {f_Canal distribution},\n\t\t{Secteur d'activité} = {f_Secteur d'activité},\n\t\t{Document de vente} = {f_Document de vente},\n\t\tPoste = f_Poste,\n\t\t{Jour calendaire} = {f_Jour calendaire},\n\t\t{Agence commerciale corrigé} = {f_Agence commerciale corrigé},\n\t\t{ATC Corrigé} = {f_ATC Corrigé},\n\t\t{Donneur d'ordre} = {f_Donneur d'ordre},\n\t\t{recept de march} = {f_recept de march},\n\t\t{Destinataire facture} = {f_Destinataire facture},\n\t\t{type doc vente} = {f_type doc vente},\n\t\t{Type de poste} = {f_Type de poste},\n\t\tLivraison = f_Livraison,\n\t\t{Type de livraison} = {f_Type de livraison},\n\t\t{Type poste Livraison} = {f_Type poste Livraison},\n\t\tFacture = f_Facture,\n\t\t{Type de facture} = {f_Type de facture},\n\t\t{Type poste Facture} = {f_Type poste Facture},\n\t\t{Mois calendrier} = {f_Mois calendrier},\n\t\t{Année civile} = {f_Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée} = {f_Qté facturée},\n\t\t{CA facturé} = {f_CA facturé},\n\t\tdate_id = f_date_id,\n\t\tyear = f_year,\n\t\tyearmonth = f_yearmonth,\n\t\treference = f_reference,\n\t\tarticle = split1@FacturationSansMatching@f_article,\n\t\tprix_unitaire_std = f_prix_unitaire_std,\n\t\tWholeSalerID = f_WholeSalerID,\n\t\tWholeSalerHubID = f_WholeSalerHubID,\n\t\tHubName = f_HubName,\n\t\tHubSAPid = f_HubSAPid,\n\t\tArticle,\n\t\tDistributeur = f_Distributeur,\n\t\t{Période} = {f_Période},\n\t\tannee2 = f_annee2,\n\t\tmonth = f_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select105\nsplit1@EcoulementMatche split(data_origin == \"ecoulement retraité\",\n\tdisjoint: false) ~> split3@(EcoulementRetraiteMatche, EcoulementMatch)\nsplit3@EcoulementRetraiteMatche select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\t{Org commerciale} = {f_Org commerciale},\n\t\t{Canal distribution} = {f_Canal distribution},\n\t\t{Secteur d'activité} = {f_Secteur d'activité},\n\t\t{Document de vente} = {f_Document de vente},\n\t\tPoste = f_Poste,\n\t\t{Jour calendaire} = {f_Jour calendaire},\n\t\t{Agence commerciale corrigé} = {f_Agence commerciale corrigé},\n\t\t{ATC Corrigé} = {f_ATC Corrigé},\n\t\t{Donneur d'ordre} = {f_Donneur d'ordre},\n\t\t{recept de march} = {f_recept de march},\n\t\t{Destinataire facture} = {f_Destinataire facture},\n\t\t{type doc vente} = {f_type doc vente},\n\t\t{Type de poste} = {f_Type de poste},\n\t\tLivraison = f_Livraison,\n\t\t{Type de livraison} = {f_Type de livraison},\n\t\t{Type poste Livraison} = {f_Type poste Livraison},\n\t\tFacture = f_Facture,\n\t\t{Type de facture} = {f_Type de facture},\n\t\t{Type poste Facture} = {f_Type poste Facture},\n\t\t{Mois calendrier} = {f_Mois calendrier},\n\t\t{Année civile} = {f_Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée} = {f_Qté facturée},\n\t\t{CA facturé} = {f_CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EcoulementRetraiteMatche\nEcoulementRetraiteMatche derive(origine_de_la_ligne = \"Ecoulement Retraité - Matché\",\n\t\tqt_final = toDouble(qt_final),\n\t\tca_final = toDouble(ca_final)) ~> derivedColumn201\nselect109 derive(origine_de_la_ligne = \"Ecoulement Matché\",\n\t\tqt_final = toDouble(qt_final),\n\t\tca_final = toDouble(ca_final)) ~> derivedColumn202\nselect104 split(data_origin == \"ecoulement retraité\",\n\tdisjoint: false) ~> split4@(EcoulementRetraiteNonMatche, EcoulementNonM)\nsplit4@EcoulementRetraiteNonMatche select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select106\nselect106 derive(origine_de_la_ligne = \"Ecoulement retraité - non matché\",\n\t\tqt_final = toDouble(qt_final),\n\t\tca_final = toDouble(ca_final)) ~> derivedColumn203\nsplit4@EcoulementNonM select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select107\nselect107 derive(origine_de_la_ligne = \"Ecoulement - non matché\",\n\t\tqt_final = toDouble(qt_final),\n\t\tca_final = toDouble(ca_final)) ~> derivedColumn204\nselect105 derive(origine_de_la_ligne = \"Facturation sans mapping\",\n\t\tqt_final = toDouble({Qté facturée}),\n\t\tca_final = toDouble({CA facturé}),\n\t\tdistributeur = WholeSalerID) ~> derivedColumn205\nderivedColumn205 select(mapColumn(\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march},\n\t\t{Destinataire facture},\n\t\t{type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tarticle = select105@article,\n\t\tprix_unitaire_std,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tArticle = select105@Article,\n\t\tdistributeur = derivedColumn205@distributeur,\n\t\tmonth,\n\t\torigine_de_la_ligne,\n\t\tqt_final,\n\t\tca_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndFacturationSansMatching\nselect104 derive(ca_final = toDouble(-1*ca_final),\n\t\torigine_de_la_ligne = \"Décrémentation écoulements sans matching\",\n\t\tqt_final = toDouble(-1*qt_final)) ~> derivedColumn206\nderivedColumn206 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin,\n\t\torigine_de_la_ligne\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndDerecmentationEcoulementSM\nderivedColumn207 foldDown(unroll(toroll, toroll),\n\tmapColumn(\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march},\n\t\t{Destinataire facture},\n\t\t{type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tarticle = facturation@article,\n\t\tprix_unitaire_std,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttempDist,\n\t\tArticle = columnChoicePrix@Article,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flatten1\nfillNaPeriodeFact derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index)) ~> derivedColumn207\nflatten1 derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn208\nderivedColumn208 window(over(year,\n\t\t{Période},\n\t\tHubSAPid,\n\t\tref2),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcol2 = rowNumber()) ~> window1\njoin3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = prepareGetPeriode@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = prepareGetPeriode@distributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tArticle,\n\t\tperiode_Distributeur = columnChoicePrix@Distributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tperiode_month = columnChoicePrix@month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select108\nflatten2 derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn209\nderivedColumn209 window(over(year,\n\t\t{Période},\n\t\tHubSAPid,\n\t\tref2),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcol2 = rowNumber()) ~> window2\nderivedColumn200 foldDown(unroll(toroll, toroll),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tArticle,\n\t\tperiode_Distributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tperiode_month\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flatten2\nsplit3@EcoulementMatch select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final = {f_CA facturé},\n\t\tqt_final = {f_Qté facturée},\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\t{f_Org commerciale},\n\t\t{Canal distribution} = {f_Canal distribution},\n\t\t{Secteur d'activité} = {f_Secteur d'activité},\n\t\t{Document de vente} = {f_Document de vente},\n\t\tPoste = f_Poste,\n\t\t{Jour calendaire} = {f_Jour calendaire},\n\t\t{Agence commerciale corrigé} = {f_Agence commerciale corrigé},\n\t\t{ATC Corrigé} = {f_ATC Corrigé},\n\t\t{Donneur d'ordre} = {f_Donneur d'ordre},\n\t\t{recept de march} = {f_recept de march},\n\t\t{Destinataire facture} = {f_Destinataire facture},\n\t\t{type doc vente} = {f_type doc vente},\n\t\t{Type de poste} = {f_Type de poste},\n\t\tLivraison = f_Livraison,\n\t\t{Type de livraison} = {f_Type de livraison},\n\t\t{Type poste Livraison} = {f_Type poste Livraison},\n\t\tFacture = f_Facture,\n\t\t{Type de facture} = {f_Type de facture},\n\t\t{Type poste Facture} = {f_Type poste Facture},\n\t\t{Mois calendrier} = {f_Mois calendrier},\n\t\t{Année civile} = {f_Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée} = {f_Qté facturée},\n\t\t{CA facturé} = {f_CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select109\nderivedColumn201 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndEcoulementRetraiteMatche\nderivedColumn202 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndEcoulementMatche\nderivedColumn203 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\torigine_de_la_ligne\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndEcoulementRetraiteNonMatche\nderivedColumn204 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\torigine_de_la_ligne\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndEcoulementNonMatche\nEndEcoulementRetraiteMatche, EndEcoulementMatche union(byName: true)~> union1\nunion1, EndEcoulementRetraiteNonMatche union(byName: true)~> union2\nunion2, EndEcoulementNonMatche union(byName: true)~> union3\nunion3, EndDerecmentationEcoulementSM union(byName: true)~> union4\nunion4, EndFacturationSansMatching union(byName: true)~> union5\nunion5 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march},\n\t\t{Destinataire facture},\n\t\t{type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\torigine_de_la_ligne,\n\t\t{f_Org commerciale},\n\t\tdate_id,\n\t\tarticle = union5@article,\n\t\tprix_unitaire_std,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tArticle = union5@Article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select110\nderivedColumn210, EndUniqueATC join({Code postal} == code_postal_atc\n\t&& canal_final == {Canal final}\n\t&& marque_name == uniqueATC@Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join5\nuniqueATC derive(code_postal_atc = toString(code_postal_atc)) ~> EndUniqueATC\njoin5 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque = select110@marque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march},\n\t\t{Destinataire facture},\n\t\t{type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\torigine_de_la_ligne,\n\t\t{Org commerciale} = {f_Org commerciale},\n\t\tdate_id,\n\t\tarticle,\n\t\tprix_unitaire_std,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tArticle,\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tMarque = uniqueATC@Marque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select111\nselect110 derive(distributeur = iif(distributeur == \"DSC - Distribution Sanitaire Chauffage\",\"DSC\",iif(distributeur == \"TRVA - TEREVA\",\"TEREVA\",distributeur))) ~> derivedColumn210\ncolumnsChoice sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoirUnMapped.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> avoirUnMapped\nselect111 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string,\n\t\tColumn_23 as string,\n\t\tColumn_24 as string,\n\t\tColumn_25 as string,\n\t\tColumn_26 as string,\n\t\tColumn_27 as string,\n\t\tColumn_28 as string,\n\t\tColumn_29 as string,\n\t\tColumn_30 as string,\n\t\tColumn_31 as string,\n\t\tColumn_32 as string,\n\t\tColumn_33 as string,\n\t\tColumn_34 as string,\n\t\tColumn_35 as string,\n\t\tColumn_36 as string,\n\t\tColumn_37 as string,\n\t\tColumn_38 as string,\n\t\tColumn_39 as string,\n\t\tColumn_40 as string,\n\t\tColumn_41 as string,\n\t\tColumn_42 as string,\n\t\tColumn_43 as string,\n\t\tColumn_44 as string,\n\t\tColumn_45 as string,\n\t\tColumn_46 as string,\n\t\tColumn_47 as string,\n\t\tColumn_48 as string,\n\t\tColumn_49 as string,\n\t\tColumn_50 as string,\n\t\tColumn_51 as string,\n\t\tColumn_52 as string,\n\t\tColumn_53 as string,\n\t\tColumn_54 as string,\n\t\tColumn_55 as string,\n\t\tColumn_56 as string,\n\t\tColumn_57 as string,\n\t\tColumn_58 as string,\n\t\tColumn_59 as string,\n\t\tColumn_60 as string\n\t),\n\tpartitionFileNames:['OModelDSCbis.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}