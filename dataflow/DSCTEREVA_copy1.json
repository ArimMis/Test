{
	"name": "DSCTEREVA_copy1",
	"properties": {
		"folder": {
			"name": "BASE COMMERCIALE"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "InEcoulementWithIndexDSC",
						"type": "DatasetReference"
					},
					"name": "ecoulementwithIndex"
				},
				{
					"dataset": {
						"referenceName": "In_avoirwithIndex",
						"type": "DatasetReference"
					},
					"name": "avoirwithIndex"
				},
				{
					"dataset": {
						"referenceName": "STG_OFFRE_SOURCE",
						"type": "DatasetReference"
					},
					"name": "stgOffre"
				},
				{
					"dataset": {
						"referenceName": "ref_atc",
						"type": "DatasetReference"
					},
					"name": "referentielATC"
				},
				{
					"dataset": {
						"referenceName": "inFacturationDSC",
						"type": "DatasetReference"
					},
					"name": "facturation"
				},
				{
					"dataset": {
						"referenceName": "InPrixMoyenSplited",
						"type": "DatasetReference"
					},
					"name": "prixMoyen"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "avoirUnMappedutput",
						"type": "DatasetReference"
					},
					"name": "avoirUnMapped"
				}
			],
			"transformations": [
				{
					"name": "fullLeft"
				},
				{
					"name": "caFinal"
				},
				{
					"name": "RenameLeft"
				},
				{
					"name": "outerLeft"
				},
				{
					"name": "columnChoiceEcoulement"
				},
				{
					"name": "renameAvoir"
				},
				{
					"name": "innerAvoir"
				},
				{
					"name": "canal"
				},
				{
					"name": "idCanal"
				},
				{
					"name": "idCanalFinal"
				},
				{
					"name": "Select1"
				},
				{
					"name": "uniqueOffre"
				},
				{
					"name": "fullLeftOffre"
				},
				{
					"name": "EndInner",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "fullLeftUnion"
				},
				{
					"name": "canalFinal"
				},
				{
					"name": "atcKeepingColumn"
				},
				{
					"name": "atcNotNull"
				},
				{
					"name": "uniqueATC"
				},
				{
					"name": "typeCaste"
				},
				{
					"name": "Aggregate2"
				},
				{
					"name": "dropColumns"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "JoinAvoir"
				},
				{
					"name": "FilterIndexCols2"
				},
				{
					"name": "columnsChoice"
				},
				{
					"name": "Filter8"
				},
				{
					"name": "DerivedColumn4"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "columnChoicePrix"
				},
				{
					"name": "prepareGetPeriode"
				},
				{
					"name": "join2"
				},
				{
					"name": "fillNaPeriodeFact"
				},
				{
					"name": "join3"
				},
				{
					"name": "derivedColumn200"
				},
				{
					"name": "CreateIndexColEcoul"
				},
				{
					"name": "CreateIndexColFact"
				},
				{
					"name": "join4"
				},
				{
					"name": "EndFact"
				},
				{
					"name": "split1"
				},
				{
					"name": "split2"
				},
				{
					"name": "select103"
				},
				{
					"name": "select104"
				},
				{
					"name": "select105"
				}
			],
			"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixMoyen\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerAvoir\ninnerAvoir derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\")),\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tyear = {Année},\n\t\tmonth = Mois) ~> canal\ncanal derive(id_canal_final = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(canal_final = iif(id_canal_final==43, \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\ndropColumns select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\nDerivedColumn4 filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_),\n\t\ttempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva',    iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc',     iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \tiif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',lower(WholeSalerID))))))) ~> typeCaste\nfillNaPeriodeFact aggregate(groupBy(reference,\n\t\tHubSAPid,\n\t\tyear,\n\t\t{Période}),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_),\n\t\t{Canal distribution} = first({Canal distribution}),\n\t\t{Org commerciale} = first({Org commerciale}),\n\t\t{recept de march} = first({recept de march})) ~> Aggregate2\nfullLeftOffre select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nAggregate2 derive(tempOrigin = \"facturation\",\n\t\t{Canal distribution} = 42) ~> DerivedColumn2\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> JoinAvoir\nJoinAvoir filter(isNull(columnChoiceEcoulement@indexcols2)) ~> FilterIndexCols2\nFilterIndexCols2 select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoice\nuniqueATC filter(code_postal_atc==3300) ~> Filter8\natcKeepingColumn derive(code_postal_atc = toInteger(code_postal_atc)) ~> DerivedColumn4\nprixMoyen derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> derivedColumn1\nderivedColumn1 select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> prepareGetPeriode\ntypeCaste, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger({Mois calendrier}) == toInteger(month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(columnChoicePrix@Article, \" \", \"\"))),replace(columnChoicePrix@Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join2\njoin2 derive({Période} = coalesce( {Période}, \"00\" )) ~> fillNaPeriodeFact\nprepareGetPeriode, columnChoicePrix join(replace(lower( iif(prepareGetPeriode@distributeur==\"MABILLE\", \"sonac\", prepareGetPeriode@distributeur) ), \" \", \"\") == replace(lower(columnChoicePrix@Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger(prepareGetPeriode@month) == toInteger(columnChoicePrix@month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join3\njoin3 derive({Période} = coalesce( {Période}, \"00\" )) ~> derivedColumn200\nderivedColumn200 derive(Indexcol2 = concat(lower(HubSAPid) , \"-\" , lower(year), \"-\" , lower({Période}), \"-\" , lower(reference))) ~> CreateIndexColEcoul\nDerivedColumn2 derive(Indexcol2 = concat(lower(HubSAPid) , \"-\" , lower(year), \"-\" , lower({Période}), \"-\" , lower(reference))) ~> CreateIndexColFact\nCreateIndexColEcoul, EndFact join(Indexcol2 == f_Indexcol2,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> join4\nselect103 select(mapColumn(\n\t\tf_reference,\n\t\tf_HubSAPid,\n\t\tf_year,\n\t\t{f_Période},\n\t\tf_qt_cd_e,\n\t\tf_ca_cd_,\n\t\tf_qt_livr_e,\n\t\tf_ca_livr_,\n\t\tf_qt_factur_e,\n\t\tf_ca_factur_,\n\t\t{f_Canal distribution},\n\t\t{f_Org commerciale},\n\t\t{f_recept de march},\n\t\tf_tempOrigin,\n\t\tf_Indexcol2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndFact\njoin4 split(!isNull(data_origin) && !isNull(f_tempOrigin),\n\t!isNull(data_origin) && isNull(f_tempOrigin),\n\tdisjoint: false) ~> split1@(EcoulementMatche, EcoulementNonMatch, FacturationSansMatching)\nCreateIndexColFact split(isNull(reference),\n\tdisjoint: false) ~> split2@(null, notNull)\nCreateIndexColFact select(mapColumn(\n\t\tf_reference = reference,\n\t\tf_HubSAPid = HubSAPid,\n\t\tf_year = year,\n\t\t{f_Période} = {Période},\n\t\tf_qt_cd_e = qt_cd_e,\n\t\tf_ca_cd_ = ca_cd_,\n\t\tf_qt_livr_e = qt_livr_e,\n\t\tf_ca_livr_ = ca_livr_,\n\t\tf_qt_factur_e = qt_factur_e,\n\t\tf_ca_factur_ = ca_factur_,\n\t\t{f_Canal distribution} = {Canal distribution},\n\t\t{f_Org commerciale} = {Org commerciale},\n\t\t{f_recept de march} = {recept de march},\n\t\tf_tempOrigin = tempOrigin,\n\t\tf_Indexcol2 = Indexcol2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select103\nsplit1@EcoulementNonMatch select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = split1@EcoulementNonMatch@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = split1@EcoulementNonMatch@distributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tArticle,\n\t\tDistributeur = split1@EcoulementNonMatch@Distributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth = split1@EcoulementNonMatch@month,\n\t\tIndexcol2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select104\nsplit1@FacturationSansMatching select(mapColumn(\n\t\tf_reference,\n\t\tf_HubSAPid,\n\t\tf_year,\n\t\t{f_Période},\n\t\tf_qt_cd_e,\n\t\tf_ca_cd_,\n\t\tf_qt_livr_e,\n\t\tf_ca_livr_,\n\t\tf_qt_factur_e,\n\t\tf_ca_factur_,\n\t\t{f_Canal distribution},\n\t\t{f_Org commerciale},\n\t\t{f_recept de march},\n\t\tf_tempOrigin,\n\t\tf_Indexcol2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select105\ncolumnsChoice sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoirUnMapped.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> avoirUnMapped"
		}
	}
}