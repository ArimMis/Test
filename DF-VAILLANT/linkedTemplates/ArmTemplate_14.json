{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-VAILLANT"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/EHS_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EHS",
								"type": "DatasetReference"
							},
							"name": "EHS"
						},
						{
							"dataset": {
								"referenceName": "OrganisationEHS",
								"type": "DatasetReference"
							},
							"name": "OrganisationEHS"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "VenteDirecte"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieEHS",
								"type": "DatasetReference"
							},
							"name": "SoriteEHS"
						},
						{
							"dataset": {
								"referenceName": "EHSOrganiationNotfound",
								"type": "DatasetReference"
							},
							"name": "EHSOrganisationNotfound"
						}
					],
					"transformations": [
						{
							"name": "ExtractMonthYear"
						},
						{
							"name": "FiltrerCIA"
						},
						{
							"name": "FiltreCPCoop"
						},
						{
							"name": "UniqueCpCoopHubsApid"
						},
						{
							"name": "InnerJoinCIACPCoop"
						},
						{
							"name": "JoinLeftCIACPCoop"
						},
						{
							"name": "JoinVenteDirect"
						},
						{
							"name": "QuantiteesLivres"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Reference"
						},
						{
							"name": "distributeur"
						},
						{
							"name": "RenamePOSSAMIDstring"
						},
						{
							"name": "RenameMarqueFile"
						},
						{
							"name": "dropDuplicatedColumn"
						}
					],
					"script": "source(output(\n\t\tMarques as string,\n\t\t{Région} as string,\n\t\t{Nom Agence} as string,\n\t\tCIA as string,\n\t\t{Département} as string,\n\t\t{Référence Article} as string,\n\t\t{Description Article} as string,\n\t\t{Catégorie Achat} as string,\n\t\t{Quantitées livrées} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Marques/ Constructeur} as string,\n\t\t{Gestion entrepôt} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EHS\nsource(output(\n\t\t{Nom Coopérative} as string,\n\t\t{CP Coop.} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string,\n\t\tDept as string,\n\t\t{Code Postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrganisationEHS\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> VenteDirecte\nEHS derive(yearmonth = year+month,\n\t\tMarques = iif(!isNull(Marques), upper(Marques), upper({Marques/ Constructeur}))) ~> ExtractMonthYear\ndropDuplicatedColumn filter(!isNull(CIA)) ~> FiltrerCIA\nOrganisationEHS filter(!isNull({CP Coop.})) ~> FiltreCPCoop\nFiltreCPCoop aggregate(groupBy({CP Coop.},\n\t\tHubSAPid),\n\t{Nom Coopérative} = max({Nom Coopérative}),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tBrandID = max(BrandID),\n\t\tDept = max(Dept),\n\t\t{Code Postal} = max({Code Postal})) ~> UniqueCpCoopHubsApid\nFiltrerCIA, UniqueCpCoopHubsApid join(CIA == {CP Coop.},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoinCIACPCoop\nFiltrerCIA, UniqueCpCoopHubsApid join(CIA == {CP Coop.},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLeftCIACPCoop\nInnerJoinCIACPCoop, Rename join(coalesce(toString(toInteger(replace({Référence Article}, \" \", \"\"))),replace({Référence Article}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& dropDuplicatedColumn@yearmonth == Rename@yearmonth\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinVenteDirect\nJoinVenteDirect derive({Quantitées livrées} = iif(toDouble({Quantitées livrées}) - coalesce(toDouble({Qté vente directe}) , 0) >0, toDouble({Quantitées livrées}) - coalesce(toDouble({Qté vente directe}) , 0), toDouble(0))) ~> QuantiteesLivres\nVenteDirecte select(mapColumn(\n\t\tyearmonth,\n\t\tArticle = reference,\n\t\t{Code client},\n\t\t{Qté vente directe} = qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nQuantiteesLivres derive(reference = replace({Référence Article}, 'SDU', '')) ~> Reference\nReference derive(distributeur = \"EHS\",\n\t\tMarques = coalesce(Marques , {Marques/ Constructeur})) ~> distributeur\ndistributeur select(mapColumn(\n\t\tmarque_str = Marques,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tagence_code = CIA,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\tqte_ecoulement = {Quantitées livrées},\n\t\tyear,\n\t\t{Gestion entrepôt},\n\t\tmonth,\n\t\tyearmonth = dropDuplicatedColumn@yearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMidString = POSSAMid,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code postal} = {Code Postal},\n\t\tyearmonth = Rename@yearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe},\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenamePOSSAMIDstring\nRenamePOSSAMIDstring select(mapColumn(\n\t\tmarque_file = marque_str,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tagence_code,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\tqte_ecoulement,\n\t\tyear,\n\t\t{Gestion entrepôt},\n\t\tmonth,\n\t\tyearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMidString,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code postal},\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe},\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameMarqueFile\nExtractMonthYear select(mapColumn(\n\t\tMarques,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tCIA,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\t{Quantitées livrées},\n\t\tyear,\n\t\tmonth,\n\t\t{Gestion entrepôt},\n\t\t{Marques/ Constructeur},\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropDuplicatedColumn\nRenameMarqueFile sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SortieEcoulementEHS.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SoriteEHS\nJoinLeftCIACPCoop sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['EHSOrganisationNotfound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> EHSOrganisationNotfound"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EPS_CLEANING_POST_UNION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tecouunion",
								"type": "DatasetReference"
							},
							"name": "unionEccoulement"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "articlehierarchi"
						},
						{
							"dataset": {
								"referenceName": "unionSapEhsIn",
								"type": "DatasetReference"
							},
							"name": "unionsapehs"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "pricelisteReplicated"
						},
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "EHS"
						},
						{
							"dataset": {
								"referenceName": "inepsv2",
								"type": "DatasetReference"
							},
							"name": "EPS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "allECoulementPrepared",
								"type": "DatasetReference"
							},
							"name": "outputPreparationEcoulement"
						},
						{
							"dataset": {
								"referenceName": "tunionSap",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "ecoulementArticleNotFound",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "articlDropdupl"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "setPostalCode"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "pricelisteTojoin"
						},
						{
							"name": "Join3"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Join4"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "endEPS"
						},
						{
							"name": "endEHS"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "endEhsEPS"
						},
						{
							"name": "leftarticle"
						},
						{
							"name": "addIdentifier"
						},
						{
							"name": "fnullarticle"
						}
					],
					"script": "source(output(\n\t\t{Code postal} as string,\n\t\tmarque_file as string,\n\t\tca_ecoulement as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionEccoulement\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> articlehierarchi\nsource(output(\n\t\tClient as integer,\n\t\t{Code postal} as string,\n\t\t{Org# commerciale} as short,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionsapehs\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> pricelisteReplicated\nsource(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EHS\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EPS\nunionEccoulement derive(marque_id = iif (  instr(lower({marque_file}) , \"saunier\") >0  , 1604 , 1621 )) ~> DerivedColumn1\narticlehierarchi select(mapColumn(\n\t\tmarque = OrgCm,\n\t\treference = Article,\n\t\tCDis\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(marque,\n\t\treference),\n\tCDis = max(CDis)) ~> articlDropdupl\nDerivedColumn1, articlDropdupl join(coalesce(toString(toInteger(replace(unionEccoulement@reference, \" \", \"\"))),replace(unionEccoulement@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(articlDropdupl@reference, \" \", \"\"))),replace(articlDropdupl@reference, \" \", \"\"))\n\t&& toString(marque_id) == marque,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nSelect3, endEhsEPS join(POSSAMidString == toString(Client),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tEcc_Code_postal = {Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{Sap_Code postal} = {client Code postal }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = unionEccoulement@reference,\n\t\t{Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect2 derive({code postal} = iif( !isNull({Sap_Code postal}) , {Sap_Code postal} , Ecc_Code_postal),\n\t\tmarque_name = iif(marque==\"1604\",  \"SaunierDuval\", \"Vaillant\"),\n\t\tdistributeur = upper(distributeur)) ~> setPostalCode\nSelect5 derive(month = toInteger(mois1)+ toInteger(order),\n\t\tDistributeur = lower(Distributeur)) ~> DerivedColumn2\nAggregate1 derive(distributeur = iif(  instr(Distributeur ,'sonac' ) >0 , upper('mabille') , upper(Distributeur)  )) ~> pricelisteTojoin\nsetPostalCode, pricelisteTojoin join(upper(setPostalCode@distributeur) == upper(pricelisteTojoin@distributeur)\n\t&& toDouble(Select2@month) == toDouble(Aggregate1@month)\n\t&& toDouble(year) == toDouble(annee1)\n\t&& toDouble(reference) == toDouble(Article),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(ca_ecoulement = iif( !isNull(prix_unitaire) , prix_unitaire, \"0\" )) ~> DerivedColumn3\nDerivedColumn3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = Select2@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = setPostalCode@distributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\npricelisteReplicated select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\torder = dd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nDerivedColumn2 aggregate(groupBy(Distributeur,\n\t\tArticle,\n\t\tmonth,\n\t\tannee1),\n\tprix_unitaire = max(prix_unitaire)) ~> Aggregate1\nsetPostalCode filter(upper(distributeur)==upper('MAILLARD')) ~> Filter1\npricelisteTojoin filter(upper(pricelisteTojoin@distributeur)==\"MAILLARD\") ~> Filter2\nFilter1, Filter2 join(upper(setPostalCode@distributeur) == upper(pricelisteTojoin@distributeur)\n\t&& toInteger(reference) == toInteger(Article)\n\t&& year == annee1\n\t&& toDouble(Select2@month) == toDouble(Aggregate1@month),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join4\nFilter2 filter(toInteger(Article)==toInteger(\"0020082651\")) ~> Filter3\nEPS select(mapColumn(\n\t\tClient = {Numéro du compte},\n\t\tNom = {Nom du compte},\n\t\t{Code postal } = {Code postal},\n\t\tVille\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEPS\nEHS select(mapColumn(\n\t\tClient,\n\t\t{Code postal } = {Code Postal},\n\t\tNom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEHS\nendEHS, endEPS union(byName: true)~> Union1\nDerivedColumn4 aggregate(groupBy(Client,\n\t\t{Code postal },\n\t\tNom,\n\t\tVille),\n\ttemp = sum(temp)) ~> Aggregate2\nUnion1 derive(temp = 1,\n\t\tClient = toString(toInteger(Client))) ~> DerivedColumn4\nAggregate2 select(mapColumn(\n\t\tClient,\n\t\t{client Code postal } = {Code postal },\n\t\tNom,\n\t\tVille\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEhsEPS\nDerivedColumn1, addIdentifier join(coalesce(toString(toInteger(replace(unionEccoulement@reference, \" \", \"\"))),replace(unionEccoulement@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(articlDropdupl@reference, \" \", \"\"))),replace(articlDropdupl@reference, \" \", \"\"))\n\t&& toString(marque_id) == marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftarticle\narticlDropdupl derive(torigin = \"article\") ~> addIdentifier\nleftarticle filter(isNull(torigin)) ~> fnullarticle\nSelect4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFournisseur as string,\n\t\t{Coopérative} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\tMois as string,\n\t\tpath as string,\n\t\tqte_ecoulement as string,\n\t\tREFFOURNISSEUR as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\t{Nom Coopérative} as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string\n\t),\n\tpartitionFileNames:['eccoulementUniforme.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputPreparationEcoulement\nunionsapehs sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string\n\t),\n\tpartitionFileNames:['tunionSap.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nfnullarticle sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ecoulementArticleNotFound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink3"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExpeditionBW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "expeditionBW_AC",
								"type": "DatasetReference"
							},
							"name": "AC"
						},
						{
							"dataset": {
								"referenceName": "expeditionBW_AP",
								"type": "DatasetReference"
							},
							"name": "AP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieExpeditionBW",
								"type": "DatasetReference"
							},
							"name": "SortieExpeditionBW"
						}
					],
					"transformations": [
						{
							"name": "RecordID"
						},
						{
							"name": "DateExtDocVteLongDateCRE"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "formatDecimal"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AC\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AP\nUnion1 keyGenerate(output(CleDataSD as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nRecordID derive(DateExt = \"\",\n\t\tDocVte_Long = \"\",\n\t\tDateCRE = \"\",\n\t\t{ATC Corrigé} = iif(  instr({ATC Corrigé}, \"#\")>0, \"\", {ATC Corrigé}),\n\t\t{Agence commerciale corrigé} = iif(  instr({Agence commerciale corrigé}, \"#\")>0, \"\", {Agence commerciale corrigé})) ~> DateExtDocVteLongDateCRE\nDateExtDocVteLongDateCRE select(mapColumn(\n\t\tOrgCial = {Org. commerciale},\n\t\tCanalDist = {Canal distribution},\n\t\tSectAct = {Secteur d'activité},\n\t\tDocVte = {Document de vente},\n\t\tPoste,\n\t\tDate = {Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\tDRCde = {Agence commerciale corrigé},\n\t\tATCCde = {ATC Corrigé},\n\t\tCliCde = {Donneur d'ordre},\n\t\tCliLiv = {Récept. de march.},\n\t\tCliFac = {Destinataire facture},\n\t\tNoArt = Article,\n\t\tTypDocVte = {Type doc. vente},\n\t\tTypPoste = {Type de poste},\n\t\tNoLiv = Livraison,\n\t\tTypLiv = {Type de livraison},\n\t\tTypPostLiv = {Type poste Livraison},\n\t\tNoFac = Facture,\n\t\tTypFac = {Type de facture},\n\t\tTypPostFac = {Type poste Facture},\n\t\tMois = {Mois calendrier},\n\t\tAn = {Année civile},\n\t\tRaiCde = {Motif commande},\n\t\tQtCde = {Qté cdée},\n\t\tValNet = {CA cdé},\n\t\tQtLiv = {Qté livrée},\n\t\tValLiv = {CA livré},\n\t\tQtFac = {Qté facturée},\n\t\tValFac = {CA facturé},\n\t\tStdCost = {Cout standard cdé},\n\t\tFabCost = {Cout fabrication},\n\t\tStdCostLiv = {Cout standard livré},\n\t\tStdCostFac = {Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nAC, AP union(byName: true)~> Union1\nRename derive(ValNet = replace(ValNet, \".\", \",\"),\n\t\tValLiv = replace(ValLiv, \".\", \",\"),\n\t\tValFac = replace(ValFac, \".\", \",\"),\n\t\tStdCost = replace(StdCost, \".\", \",\"),\n\t\tStdCostLiv = replace(StdCostLiv, \".\", \",\"),\n\t\tStdCostFac = replace(StdCostFac, \".\", \",\")) ~> formatDecimal\nformatDecimal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['ExpéditionBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieExpeditionBW"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationBW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "AC"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "AP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieFacturationBW",
								"type": "DatasetReference"
							},
							"name": "SortieFacturationBW"
						}
					],
					"transformations": [
						{
							"name": "RecordID"
						},
						{
							"name": "DateExtDocVteLongDateCRE"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "formatDecimal"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AC\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AP\nUnion1 keyGenerate(output(CleDataSD as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nRecordID derive(DateExt = \"\",\n\t\tDocVte_Long = \"\",\n\t\tDateCRE = \"\",\n\t\t{ATC Corrigé} = iif(  instr({ATC Corrigé}, \"#\")>0, \"\", {ATC Corrigé}),\n\t\t{Agence commerciale corrigé} = iif(  instr({Agence commerciale corrigé}, \"#\")>0, \"\", {Agence commerciale corrigé})) ~> DateExtDocVteLongDateCRE\nDateExtDocVteLongDateCRE select(mapColumn(\n\t\tOrgCial = {Org. commerciale},\n\t\tCanalDist = {Canal distribution},\n\t\tSectAct = {Secteur d'activité},\n\t\tDocVte = {Document de vente},\n\t\tPoste,\n\t\tDate = {Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\tDRCde = {Agence commerciale corrigé},\n\t\tATCCde = {ATC Corrigé},\n\t\tCliCde = {Donneur d'ordre},\n\t\tCliLiv = {Récept. de march.},\n\t\tCliFac = {Destinataire facture},\n\t\tNoArt = Article,\n\t\tTypDocVte = {Type doc. vente},\n\t\tTypPoste = {Type de poste},\n\t\tNoLiv = Livraison,\n\t\tTypLiv = {Type de livraison},\n\t\tTypPostLiv = {Type poste Livraison},\n\t\tNoFac = Facture,\n\t\tTypFac = {Type de facture},\n\t\tTypPostFac = {Type poste Facture},\n\t\tMois = {Mois calendrier},\n\t\tAn = {Année civile},\n\t\tRaiCde = {Motif commande},\n\t\tQtCde = {Qté cdée},\n\t\tValNet = {CA cdé},\n\t\tQtLiv = {Qté livrée},\n\t\tValLiv = {CA livré},\n\t\tQtFac = {Qté facturée},\n\t\tValFac = {CA facturé},\n\t\tStdCost = {Cout standard cdé},\n\t\tFabCost = {Cout fabrication},\n\t\tStdCostLiv = {Cout standard livré},\n\t\tStdCostFac = {Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nAC, AP union(byName: true)~> Union1\nRename derive(ValNet = replace(ValNet, \".\", \",\"),\n\t\tValLiv = replace(ValLiv, \".\", \",\"),\n\t\tValFac = replace(ValFac, \".\", \",\"),\n\t\tStdCost = replace(StdCost, \".\", \",\"),\n\t\tStdCostLiv = replace(StdCostLiv, \".\", \",\"),\n\t\tStdCostFac = replace(StdCostFac, \".\", \",\")) ~> formatDecimal\nformatDecimal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['FacturationBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieFacturationBW"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "RH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "dataCommerciale"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "levierPerformance"
						},
						{
							"dataset": {
								"referenceName": "FILTRE_OBJECTIF_RH",
								"type": "DatasetReference"
							},
							"name": "filtre"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_PERFORMANCE",
								"type": "DatasetReference"
							},
							"name": "REFERENTIELPYTHON"
						},
						{
							"dataset": {
								"referenceName": "FILTRE_OBJECTIF_SORTIE",
								"type": "DatasetReference"
							},
							"name": "sortieFiltre"
						}
					],
					"transformations": [
						{
							"name": "filtreAffectation"
						},
						{
							"name": "cleansingInput"
						},
						{
							"name": "cleansingPlateformes"
						},
						{
							"name": "innerPlateformes"
						},
						{
							"name": "innerTypeDeVente"
						},
						{
							"name": "fullLeftPlateforme"
						},
						{
							"name": "outerLeftPlateforme"
						},
						{
							"name": "dropColumnsInCommonLeft"
						},
						{
							"name": "TypeVentesDirectes"
						},
						{
							"name": "unionVentesDirectes"
						},
						{
							"name": "dropColumnsInCommonInner"
						},
						{
							"name": "Rename"
						},
						{
							"name": "typeParse"
						},
						{
							"name": "ATCandDistributeurNotNull"
						},
						{
							"name": "newColumn"
						},
						{
							"name": "RecordID"
						},
						{
							"name": "Select3"
						},
						{
							"name": "splitting"
						},
						{
							"name": "FlattenHierarchie"
						},
						{
							"name": "FlattenMarque"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "libelleLevier"
						},
						{
							"name": "uniqueLevier"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "typeParseLevier"
						},
						{
							"name": "FlattenDiffusChantier"
						},
						{
							"name": "clejointure"
						},
						{
							"name": "cleJointureBase"
						},
						{
							"name": "ajoutColonneFiltre"
						},
						{
							"name": "filtreCalcul"
						},
						{
							"name": "Join1"
						},
						{
							"name": "yearFilter"
						},
						{
							"name": "deleteColumns"
						},
						{
							"name": "ventesDirectes"
						},
						{
							"name": "ajoutManuel"
						},
						{
							"name": "typeAjoutManuel"
						},
						{
							"name": "unionAjoutManuel"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dataCommerciale\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10000,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nsource(output(\n\t\t{Année} as string,\n\t\tDocumentation as string,\n\t\tMarque as string,\n\t\tCible as string,\n\t\t{Périmètre} as string,\n\t\tLevier as string,\n\t\tCanal as string,\n\t\t{Hiérarchie inclues} as string,\n\t\t{Hiérarchies exclues} as string,\n\t\tType as string,\n\t\t{Valeur Annuelle} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levierPerformance\nsource(output(\n\t\t{Année} as integer,\n\t\t{Mois début} as integer,\n\t\t{Mois fin} as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> filtre\ndataCommerciale filter({affecte/non_affecte}==\"affecté\") ~> filtreAffectation\ndropColumns derive(HubSAPid = trim(HubSAPid, \" \"),\n\t\tATC = toInteger(ATC),\n\t\tca_final = toDouble(replace(ca_final, \",\", \".\"))) ~> cleansingInput\nPLATEFORMES derive(HubSAPid = trim(HubSAPid, \" \")) ~> cleansingPlateformes\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerPlateformes\ninnerPlateformes derive({Type de vente} = WholeSalerID) ~> innerTypeDeVente\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftPlateforme\nfullLeftPlateforme filter(isNull(cleansingPlateformes@HubSAPid)) ~> outerLeftPlateforme\nouterLeftPlateforme select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque = marque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonLeft\nventesDirectes derive({Type de vente} = \"Ventes directes\") ~> TypeVentesDirectes\ndropColumnsInCommonInner, TypeVentesDirectes union(byName: true)~> unionVentesDirectes\ninnerTypeDeVente select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tmarque = marque_name,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonInner\nunionAjoutManuel select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tcanal_jointure = canal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente},\n\t\tOrgCm = marque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nRename derive({Canal distribution} = toInteger(canal_jointure),\n\t\tid_canal_final = toInteger(canal_jointure),\n\t\tcanal = toInteger(canal_jointure),\n\t\tid_canal = toInteger(canal_jointure),\n\t\t{Canal Final} = toInteger(canal_jointure),\n\t\tOrgCm = toInteger(OrgCm),\n\t\tcanal_final = replace(lower(canal_final), \" \", \"\"),\n\t\tyear = toInteger(year),\n\t\tN1locale = replace(N1locale, \" \", \"\")) ~> typeParse\ntypeParse filter(!isNull(ATC) && !isNull({Type de vente}) && !isNull({OrgCm})) ~> ATCandDistributeurNotNull\nFilter3 derive({diffus/chantier} = iif(Cible!=\"DR\", trim(split(Cible, \" \")[2], \" \"), \"diffus,chantier\"),\n\t\tID_KPI = \"Sum_XRow_\"+toString(RecordID)) ~> newColumn\nuniqueLevier keyGenerate(output(RecordID as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nnewColumn select(mapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie = {Hiérarchie inclues},\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 derive(Marque = split(Marque, \".\"),\n\t\tCanal = split(Canal, \",\"),\n\t\tHierarchie = split(Hierarchie, \",\"),\n\t\tdiffusChantier = split({diffus/chantier}, \",\")) ~> splitting\nFlattenCanal foldDown(unroll(Hierarchie),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenHierarchie\nFlattenDiffusChantier foldDown(unroll(Marque),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenMarque\nFlattenMarque foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nfiltreCalcul select(mapColumn(\n\t\tdistributeur = {plateforme/vente directe},\n\t\tdata_origin = {origine de la ligne},\n\t\treference = {code produit},\n\t\tyearmonth,\n\t\tHubSAPid = {code client plateforme livree},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final = quantite,\n\t\tca_final = ca,\n\t\tcanal_final,\n\t\tPOSSAMidString = {Code client livré},\n\t\tmarque_name = marque_code,\n\t\tno_offre,\n\t\tHierarchiegroupe = {Hiérarchgroupe},\n\t\tHierarchielocale = {Hiérarchlocale},\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation = N1groupedesignation,\n\t\tN2GroupeDesignation = N2groupedesignation,\n\t\tN3GroupeDesignation = N3groupedesignation,\n\t\tN4GroupeDesignation = N4groupedesignation,\n\t\tN5GroupeDesignation = N5groupedesignation,\n\t\tN6GroupeDesignation = N6groupedesignation,\n\t\tN7GroupeDesignation = N7groupedesignation,\n\t\tN1LocalDesignation = N1localedesignation,\n\t\tN2LocalDesignation = N2localedesignation,\n\t\tN3LocalDesignation = N3localedesignation,\n\t\tN4LocalDesignation = N4localedesignation,\n\t\tN6LocalDesignation = N6localedesignation,\n\t\tN7LocalDesignation = N7localedesignation,\n\t\t{Code postal},\n\t\tmarque = marque_code,\n\t\tATC = {ATC Performance},\n\t\tATC1 = {ATC livré},\n\t\tATC2 = {ATC offre},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tN5LocalDesignation = N5localedesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nRecordID filter(!isNull(Documentation) || !isNull(Levier)) ~> Filter3\nlevierPerformance derive({Libellé levié} = Levier+\"-\"+Documentation+\" \"+Cible+\" \"+{Périmètre}+\" \"+iif({Valeur Annuelle}==\"YES\", \"Annuel\", \"Mensuel\"),\n\t\tjointure = 1) ~> libelleLevier\ndeleteColumns aggregate(groupBy({Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\t{Hiérarchie inclues},\n\t\t{Hiérarchies exclues},\n\t\tType,\n\t\t{Valeur Annuelle}),\n\t{Libellé levié} = max({Libellé levié})) ~> uniqueLevier\nuniqueLevier aggregate(groupBy({Libellé levié}),\n\tcount = count({Libellé levié})) ~> Aggregate1\nFlattenHierarchie derive(Marque = toInteger(Marque),\n\t\t{Année} = toInteger({Année}),\n\t\tHierarchie = replace(Hierarchie, \" \", \"\"),\n\t\t{diffus/chantier} = replace(lower({diffus/chantier}), \" \", \"\")) ~> typeParseLevier\nsplitting foldDown(unroll(diffusChantier),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier} = diffusChantier,\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenDiffusChantier\nfiltre derive(jointure = 1) ~> clejointure\nfiltreAffectation derive(jointure = 1) ~> cleJointureBase\ncleJointureBase, clejointure join(cleJointureBase@jointure == clejointure@jointure,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> ajoutColonneFiltre\najoutColonneFiltre filter(toInteger(year)=={Année} && toInteger(month)>={Mois début} && toInteger(month)<={Mois fin}) ~> filtreCalcul\nlibelleLevier, clejointure join(libelleLevier@jointure == clejointure@jointure,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(toInteger(levierPerformance@{Année})==filtre@{Année}) ~> yearFilter\nyearFilter select(mapColumn(\n\t\t{Année} = levierPerformance@{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\t{Hiérarchie inclues},\n\t\t{Hiérarchies exclues},\n\t\tType,\n\t\t{Valeur Annuelle},\n\t\t{Libellé levié}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteColumns\ndropColumnsInCommonLeft filter(data_origin != \"Ajout manuel\") ~> ventesDirectes\ndropColumnsInCommonLeft filter(data_origin == \"Ajout manuel\") ~> ajoutManuel\najoutManuel derive({Type de vente} = \"Ajout manuel: \" + HubSAPid) ~> typeAjoutManuel\nunionVentesDirectes, typeAjoutManuel union(byName: true)~> unionAjoutManuel\nATCandDistributeurNotNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TEMP_LEVIER_RH.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\ntypeParseLevier sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['TEMP_LEVIER_PERFORMANCE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> REFERENTIELPYTHON\nclejointure sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string\n\t),\n\tpartitionFileNames:['FILTRE_OBJECTIF_SORTIE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sortieFiltre"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MABILLE_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "MabilleSaunierDuvale"
						},
						{
							"dataset": {
								"referenceName": "MABILE_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "OrganisationMabilleSonac"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MABILE_ECOULEMENT_OUTPUT",
								"type": "DatasetReference"
							},
							"name": "MABILLEECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "MABILE_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "MabileQteNull"
						},
						{
							"dataset": {
								"referenceName": "MABILE_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						},
						{
							"dataset": {
								"referenceName": "mabilleBefoDecrementation",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ExtractYearAndMonth"
						},
						{
							"name": "FiltreQteMois"
						},
						{
							"name": "FiltreQteMoisANull"
						},
						{
							"name": "FiltreRefFournisseur"
						},
						{
							"name": "caEcoulementAndAgenceClient"
						},
						{
							"name": "FiltreAgenceClient"
						},
						{
							"name": "FiltrePOSid"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "leftOuterOrganisation"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "substractVentesDirectes"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "leftOuterVentesDirectes"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "dropColumnsInCommon2"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "endVenteDirect"
						},
						{
							"name": "yearmonthNOTNULL"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "filter1"
						},
						{
							"name": "filter2"
						}
					],
					"script": "source(output(\n\t\t{Activité} as string,\n\t\t{Fournisseur Groupe} as string,\n\t\t{Société} as string,\n\t\tCode as string,\n\t\tFournisseur as string,\n\t\t{Agence du client} as string,\n\t\t{Code article} as string,\n\t\t{Libellé article} as string,\n\t\t{Ref fournisseur} as string,\n\t\t{Qté Mois A-1} as string,\n\t\t{Qté Cumul A-1} as string,\n\t\t{CA Mois A-1} as string,\n\t\t{CA Cumul A-1} as string,\n\t\t{MB Mois A-1} as string,\n\t\t{MB Cumul A-1} as string,\n\t\t{VVA Mois A-1} as string,\n\t\t{VVA Cumul A-1} as string,\n\t\t{Qté Mois A} as string,\n\t\t{Qté Cumul A} as string,\n\t\t{CA Mois A} as string,\n\t\t{CA Cumul A} as string,\n\t\t{MB Mois A} as string,\n\t\t{MB Cumul A} as string,\n\t\t{VVA Mois A} as string,\n\t\t{VVA Cumul A} as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MabilleSaunierDuvale\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string,\n\t\tCommentaire as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrganisationMabilleSonac\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nyearmonthNOTNULL derive(month = substring(yearmonth, 5, 2),\n\t\tyear = substring(yearmonth, 1, 4),\n\t\torigin = \"ecoulement\") ~> ExtractYearAndMonth\nExtractYearAndMonth filter(not({Qté Mois A}=='0')) ~> FiltreQteMois\nExtractYearAndMonth filter({Qté Mois A}=='0') ~> FiltreQteMoisANull\nFiltreQteMois filter({Ref fournisseur}!='') ~> FiltreRefFournisseur\nFiltreRefFournisseur derive({Qté Mois A} = toDouble({Qté Mois A})) ~> caEcoulementAndAgenceClient\ncaEcoulementAndAgenceClient filter({Agence du client} != '') ~> FiltreAgenceClient\nOrganisationMabilleSonac filter(!isNull(POSid)) ~> FiltrePOSid\nFiltrePOSid aggregate(groupBy(POSid,\n\t\tHubSAPid,\n\t\tUnitID),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID),\n\t\tCommentaire = max(Commentaire)) ~> uniqueOrganisation\nFiltreAgenceClient, uniqueOrganisation join(replace({Agence du client},\" \",\"\") == replace({POSid},\" \",\"\")\n\t&& replace({Société},\" \",\"\") == replace(UnitID,\" \",\"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\nselect1, uniqueOrganisation join({Agence du client} == POSid\n\t&& {Société} == UnitID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull(POSid)) ~> leftOuterOrganisation\ninnerOrganisation, endVenteDirect join(MabilleSaunierDuvale@yearmonth == select2@yearmonth\n\t&& coalesce(toString(toInteger(replace({Ref fournisseur}, \" \", \"\"))),replace({Ref fournisseur}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMidString == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerVentesDirectes derive({Qté Mois A} = iif(toDouble({Qté Mois A})-toDouble(qte_ecoulement) >0, toDouble({Qté Mois A})-toDouble(qte_ecoulement), toDouble(0))) ~> substractVentesDirectes\ninnerOrganisation, endVenteDirect join(MabilleSaunierDuvale@yearmonth == select2@yearmonth\n\t&& coalesce(toString(toInteger(replace({Ref fournisseur}, \" \", \"\"))),replace({Ref fournisseur}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMidString == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(torigin)) ~> leftOuterVentesDirectes\ndropColumnsInCommon2, dropColumnsInCommon union(byName: true)~> fullLeftUnion\nsubstractVentesDirectes select(mapColumn(\n\t\t{Activité},\n\t\t{Fournisseur Groupe},\n\t\t{Société},\n\t\tCode,\n\t\tFournisseur,\n\t\t{Agence du client},\n\t\t{Code article},\n\t\t{Libellé article},\n\t\t{Ref fournisseur},\n\t\t{Qté Mois A-1},\n\t\t{Qté Cumul A-1},\n\t\t{VVA Mois A-1},\n\t\t{VVA Cumul A-1},\n\t\t{Qté Mois A},\n\t\t{Qté Cumul A},\n\t\t{VVA Mois A},\n\t\t{VVA Cumul A},\n\t\tyearmonth = MabilleSaunierDuvale@yearmonth,\n\t\tmonth,\n\t\tyear,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tCommentaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon2\nleftOuterVentesDirectes select(mapColumn(\n\t\t{Activité},\n\t\t{Fournisseur Groupe},\n\t\t{Société},\n\t\tCode,\n\t\tFournisseur,\n\t\t{Agence du client},\n\t\t{Code article},\n\t\t{Libellé article},\n\t\t{Ref fournisseur},\n\t\t{Qté Mois A-1},\n\t\t{Qté Cumul A-1},\n\t\t{VVA Mois A-1},\n\t\t{VVA Cumul A-1},\n\t\t{Qté Mois A},\n\t\t{Qté Cumul A},\n\t\t{VVA Mois A},\n\t\t{VVA Cumul A},\n\t\tyearmonth = MabilleSaunierDuvale@yearmonth,\n\t\tmonth,\n\t\tyear,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tCommentaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nAddcolumn select(mapColumn(\n\t\tmarque_file = {Fournisseur Groupe},\n\t\tagence_code = {Agence du client},\n\t\tarticle = {Libellé article},\n\t\treference = {Ref fournisseur},\n\t\tqte_ecoulement = {Qté Mois A},\n\t\tyearmonth,\n\t\tmonth,\n\t\tyear,\n\t\tHubSAPid,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubName,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nfullLeftUnion derive(distributeur = \"MABILLE\") ~> Addcolumn\nselect2 derive(torigin = \"vente direct\") ~> endVenteDirect\nMabilleSaunierDuvale filter(!isNull(yearmonth)) ~> yearmonthNOTNULL\nFiltreAgenceClient select(mapColumn(\n\t\t{Activité},\n\t\t{Fournisseur Groupe},\n\t\t{Société},\n\t\tCode,\n\t\tFournisseur,\n\t\t{Agence du client},\n\t\t{Code article},\n\t\t{Libellé article},\n\t\t{Ref fournisseur},\n\t\t{Qté Mois A-1},\n\t\t{Qté Cumul A-1},\n\t\t{CA Mois A-1},\n\t\t{CA Cumul A-1},\n\t\t{MB Mois A-1},\n\t\t{MB Cumul A-1},\n\t\t{VVA Mois A-1},\n\t\t{VVA Cumul A-1},\n\t\t{Qté Mois A},\n\t\t{Qté Cumul A},\n\t\t{CA Mois A},\n\t\t{CA Cumul A},\n\t\t{MB Mois A},\n\t\t{MB Cumul A},\n\t\t{VVA Mois A},\n\t\t{VVA Cumul A},\n\t\tyearmonth,\n\t\tmonth,\n\t\tyear,\n\t\torigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nventesDirectes select(mapColumn(\n\t\tyearmonth,\n\t\tArticle = reference,\n\t\t{Code client},\n\t\tqte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nendVenteDirect filter({Code client}=='16007943' && Article=='0010021497' &&yearmonth=='202104') ~> filter1\nsubstractVentesDirectes filter({Code client}=='16007943' && Article=='0010021497' &&  select2@yearmonth=='202104') ~> filter2\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Représentant} as string,\n\t\t{N° Département} as string,\n\t\t{Département} as string,\n\t\t{Code point de vente} as string,\n\t\t{Libellé point de vente} as string,\n\t\t{Code Depot source} as string,\n\t\t{Code client} as string,\n\t\tClient as string,\n\t\t{N° Siret} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Année livraison} as string,\n\t\t{Mois livraison} as string,\n\t\t{code fournisseur} as string,\n\t\t{fournisseur principal} as string,\n\t\t{Code produit} as string,\n\t\tproduit as string,\n\t\t{Réference} as string,\n\t\t{Qte en unité de vente} as string,\n\t\t{Montant prv net} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['MABILLE_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> MABILLEECOULPREPARED\nFiltreQteMoisANull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['MABILE_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> MabileQteNull\nleftOuterOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MABILE_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound\ninnerOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal;marque;marque_code;canal_distribution_final;nom du canal;canal_final;document_vente;Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);no_offre;ATC offre;ATC livr�;ATC Performance;NomATC;DR;Matricule;Motif commande;Type de facture;Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Num�ro du compte;EPS_Nom du compte;EPS_Groupe cible/Typologie g�n�rale;EPS_Sous groupe cible/Typologie d�taill�e;EPS_Compte principal: Num�ro du compte;EPS_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP;yearmonth;ATC Corrig�} as string\n\t),\n\tpartitionFileNames:['mabileBeforeDecremation.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MAILLARD_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MAILLARD_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "MAILLARDECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						}
					],
					"transformations": [
						{
							"name": "quantityNotNull"
						},
						{
							"name": "cleansingEcoulement",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "getYear"
						},
						{
							"name": "yearMonth"
						},
						{
							"name": "depotNotNull"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "notNull"
						},
						{
							"name": "uniqueAgenceAndHubsapID"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "outerleftOrganisation"
						},
						{
							"name": "cleansingVentesDirectes"
						},
						{
							"name": "sumQuantity"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerleftVentesDirectes"
						},
						{
							"name": "enleverVentesDirectes"
						},
						{
							"name": "Rename"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "marqueFile"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "yearmonthSplit"
						},
						{
							"name": "filter2"
						}
					],
					"script": "source(output(\n\t\t{Société} as string,\n\t\t{Dépot} as string,\n\t\tMois as string,\n\t\t{Code GTAC} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\t{Quantité} as string,\n\t\tValeur as string,\n\t\t{Quantité n-1} as string,\n\t\t{Valeur n-1} as string,\n\t\t{CP Dépôt} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'fname',\n\twildcardPaths:['Ecoulement/Maillard/*.csv']) ~> ecoulement\nsource(output(\n\t\t{Nom Agence (Code)} as string,\n\t\t{CP Agence} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\necoulement filter(!isNull({Quantité})) ~> quantityNotNull\nquantityNotNull derive({Quantité} = toDouble(replace({Quantité}, \",\", \".\"))) ~> cleansingEcoulement\ncleansingEcoulement derive(Year = split(Mois, \"/\")[2],\n\t\tMonth = split(Mois, \"/\")[1]) ~> getYear\ngetYear derive(Yearmonth = concat(Year, Month)) ~> yearMonth\nyearMonth filter(!isNull({Dépot})) ~> depotNotNull\norganisation derive({Nom Agence (Code)} = trim({Nom Agence (Code)}, \" \"),\n\t\tHubSAPid = trim({HubSAPid}, \" \")) ~> cleansing\ncleansing filter(!isNull({Nom Agence (Code)})) ~> notNull\nnotNull aggregate(groupBy({Nom Agence (Code)},\n\t\tHubSAPid),\n\t{CP Agence} = max({CP Agence}),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tBrandID = max(BrandID)) ~> uniqueAgenceAndHubsapID\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull({Nom Agence (Code)})) ~> outerleftOrganisation\nventesDirectes derive({Code client} = trim({Code client}, \" \"),\n\t\t{Qté facturée} = toDouble(qte_ecoulement),\n\t\tyearmonth = trim(yearmonth, \" \"),\n\t\tArticle = trim(reference, \" \")) ~> cleansingVentesDirectes\ncleansingVentesDirectes aggregate(groupBy(yearmonth,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> sumQuantity\nyearmonthSplit, typeCaste join(yearmonthSplit@Yearmonth == typeCaste@yearmonth\n\t&& coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\nRename derive(yearmonth = toString(yearmonth),\n\t\tArticle = toString(Article),\n\t\t{Code client} = toString({Code client})) ~> typeCaste\nyearmonthSplit, typeCaste join(yearmonthSplit@Yearmonth == typeCaste@yearmonth\n\t&& coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(typeCaste@yearmonth) || isNull(Article) || isNull({Code client})) ~> outerleftVentesDirectes\ninnerVentesDirectes derive({Quantité} = iif({Quantité}-{Qté ventes directes} >0 , {Quantité}-{Qté ventes directes}, toDouble(0))) ~> enleverVentesDirectes\nsumQuantity select(mapColumn(\n\t\tyearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté ventes directes} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nenleverVentesDirectes, outerleftVentesDirectes union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(marque_file = iif(toInteger(BrandID)==1604, \"saunier\", \"vaillant\"),\n\t\t{Société} = upper({Société})) ~> marqueFile\nmarqueFile select(mapColumn(\n\t\tdistributeur = {Société},\n\t\treference = {Référence},\n\t\tarticle = {Désignation},\n\t\tqte_ecoulement = {Quantité},\n\t\tca_ecoulement = Valeur,\n\t\t{Code postal} = {CP Dépôt},\n\t\tyear = Year,\n\t\tmonth = Month,\n\t\tyearmonth = fullLeftUnion@Yearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tmarque_id = BrandID,\n\t\tmarque_file\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\ninnerOrganisation derive(Yearmonth = replace(Yearmonth, \" \", \"\")) ~> yearmonthSplit\ntypeCaste filter(Article=='001002624'&& {Code client}=='16010144') ~> filter2\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0} as string,\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1} as string,\n\t\tSaunierDuval as string,\n\t\t{01000} as string,\n\t\t{01999} as string,\n\t\t{nicolas hernandez} as string,\n\t\t{Conseiller Technique Thermodynamique} as string,\n\t\t{01} as string,\n\t\t{1647-Rhône-Alpes Auvergne} as string,\n\t\t{16400092} as string,\n\t\t{nicolas julien} as string,\n\t\t{SD diffus} as string,\n\t\t{NICOLAS Julien} as string,\n\t\t{16566798} as string,\n\t\tProp_14 as string\n\t),\n\tpartitionFileNames:['MAILLARD_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> MAILLARDECOULPREPARED\nouterleftOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MAILLARD_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Marketing')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "InputBaseCom"
						},
						{
							"dataset": {
								"referenceName": "HierarchieMKT_SD",
								"type": "DatasetReference"
							},
							"name": "HierarchieMKTSD"
						},
						{
							"dataset": {
								"referenceName": "HierarchieMKT_VA",
								"type": "DatasetReference"
							},
							"name": "HerarchieMKTVA"
						},
						{
							"dataset": {
								"referenceName": "StgOffreChantier",
								"type": "DatasetReference"
							},
							"name": "StgOffreChantier"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHI_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "ArticleHierarchi"
						},
						{
							"dataset": {
								"referenceName": "TYPOLOGIE_EPS",
								"type": "DatasetReference"
							},
							"name": "typologieEPS"
						},
						{
							"dataset": {
								"referenceName": "inputRefVMC",
								"type": "DatasetReference"
							},
							"name": "vmc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SORTIE_MARKETING",
								"type": "DatasetReference"
							},
							"name": "Smarketing"
						}
					],
					"transformations": [
						{
							"name": "Map"
						},
						{
							"name": "TypologieClientIndirect"
						},
						{
							"name": "marqueSaunier"
						},
						{
							"name": "marqueVaillant"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "dropColumns2"
						},
						{
							"name": "UnionMKT"
						},
						{
							"name": "Joindre1"
						},
						{
							"name": "innerMKT"
						},
						{
							"name": "FiltreCanalDiffusTrue"
						},
						{
							"name": "FiltreCanalDiffusFalse"
						},
						{
							"name": "FiltreCanalChantierTrue"
						},
						{
							"name": "FiltrerCanalChantierFalse"
						},
						{
							"name": "UniqueStgOffreChantier"
						},
						{
							"name": "TypologieOffreSIdiffus"
						},
						{
							"name": "UnionALL"
						},
						{
							"name": "JoinStgCanalChantieTrue"
						},
						{
							"name": "NoOffreVide"
						},
						{
							"name": "RemoveColumns1",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "UnionMKTR"
						},
						{
							"name": "FiltreLeft"
						},
						{
							"name": "RemoveColumns3",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "UniqueArticle"
						},
						{
							"name": "JoinUniqueArticle"
						},
						{
							"name": "SelectLast"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "typologieEPSKeepColumns"
						},
						{
							"name": "deleteXinCompte"
						},
						{
							"name": "coalesceCompte"
						},
						{
							"name": "typologieClientDirect"
						},
						{
							"name": "typologieClientIndirectGroupe"
						},
						{
							"name": "renameTypologieClientDirect"
						},
						{
							"name": "renameTypologieClientIndirect"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "coalesceArticle"
						},
						{
							"name": "coalesceRef"
						},
						{
							"name": "uniqueNumeroCompte"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> InputBaseCom\nsource(output(\n\t\t{Référence article} as string,\n\t\t{Grande famille} as string,\n\t\t{Sous-famille} as string,\n\t\t{eShop level 1 - CATALOG - désignation} as string,\n\t\t{eShop level 2 - RANGE - désignation} as string,\n\t\t{eShop level 3 - FAMILY - désignation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> HierarchieMKTSD\nsource(output(\n\t\t{Référence article active} as string,\n\t\t{Grande famille} as string,\n\t\t{Sous-famille} as string,\n\t\t{eShop level 1} as string,\n\t\t{eShop level 2} as string,\n\t\t{eShop level 3} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> HerarchieMKTVA\nsource(output(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix client} as string,\n\t\t{Prix négoce} as string,\n\t\t{Prix total} as string,\n\t\tClient as string,\n\t\t{Type financement} as string,\n\t\t{Ville client} as string,\n\t\t{Numéro interne 1} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Typologie projet} as string,\n\t\tDateValidite as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> StgOffreChantier\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hi�rarch.groupe} as string,\n\t\t{Hi�rarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{D�signation Statut} as string,\n\t\t{D�b. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ArticleHierarchi\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> typologieEPS\nsource(output(\n\t\tMaterial as string,\n\t\tyear as string,\n\t\tVMC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> vmc\nInputBaseCom select(mapColumn(\n\t\t{Typologie client direct} = {Code client livré},\n\t\tyearmonth,\n\t\tyear,\n\t\tcanal_final,\n\t\t{Typologie client indirect} = {code client plateforme livree},\n\t\t{Code article} = {code produit},\n\t\t{Quantité} = quantite,\n\t\t{CA net} = ca,\n\t\tmarque,\n\t\t{Canal de distribution} = {nom du canal},\n\t\tno_offre,\n\t\t{Hiérarchgroupe},\n\t\t{ATC Performance},\n\t\tDR,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Map\nMap derive({Typologie client indirect} = iif({Typologie client indirect}=={Typologie client direct}, \r\n \"\", \r\n {Typologie client indirect}),\n\t\ttemp = \"left\") ~> TypologieClientIndirect\nHierarchieMKTSD derive(marque = \"SaunierDuval\") ~> marqueSaunier\nHerarchieMKTVA derive(marque = \"Vaillant\") ~> marqueVaillant\nmarqueSaunier select(mapColumn(\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nmarqueVaillant select(mapColumn(\n\t\t{Référence article} = {Référence article active},\n\t\t{eShop level 1 - CATALOG - désignation} = {eShop level 1},\n\t\t{eShop level 2 - RANGE - désignation} = {eShop level 2},\n\t\t{eShop level 3 - FAMILY - désignation} = {eShop level 3},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\ndropColumns, dropColumns2 union(byName: true)~> UnionMKT\nTypologieClientIndirect, UnionMKTR join(Map@marque == UnionMKT@marque\n\t&& coalesce(toString(toInteger(replace({Code article}, \" \", \"\"))),replace({Code article}, \" \", \"\")) == coalesce(toString(toInteger(replace({Référence article}, \" \", \"\"))),replace({Référence article}, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Joindre1\nTypologieClientIndirect, UnionMKT join(coalesce(toString(toInteger(replace({Code article}, \" \", \"\"))),replace({Code article}, \" \", \"\")) == coalesce(toString(toInteger(replace({Référence article}, \" \", \"\"))),replace({Référence article}, \" \", \"\"))\n\t&& Map@marque == UnionMKT@marque,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerMKT\nRemoveColumns3 filter(canal_final==\"Diffus\") ~> FiltreCanalDiffusTrue\nRemoveColumns3 filter(canal_final!=\"Diffus\") ~> FiltreCanalDiffusFalse\nFiltreCanalDiffusFalse filter(canal_final==\"Chantier\") ~> FiltreCanalChantierTrue\nFiltreCanalDiffusFalse filter(canal_final!=\"Chantier\") ~> FiltrerCanalChantierFalse\ncoalesceRef aggregate(groupBy(Offre,\n\t\t{Référence}),\n\t{Code projet} = max({Code projet}),\n\t\t{Typologie projet} = max(Type)) ~> UniqueStgOffreChantier\nNoOffreVide derive({Typologie offre si diffus} = substring(no_offre,1,3)) ~> TypologieOffreSIdiffus\nJoinStgCanalChantieTrue, TypologieOffreSIdiffus, RemoveColumns1, FiltrerCanalChantierFalse union(byName: true)~> UnionALL\nUniqueStgOffreChantier, FiltreCanalChantierTrue join(Offre == no_offre\n\t&& coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\")) == coalesce(toString(toInteger(replace({Code article}, \" \", \"\"))),replace({Code article}, \" \", \"\")),\n\tjoinType:'right',\n\tbroadcast: 'auto')~> JoinStgCanalChantieTrue\nFiltreCanalDiffusTrue derive(no_offre = iifNull(no_offre, \"\", no_offre)) ~> NoOffreVide\nFiltreLeft select(mapColumn(\n\t\t{Typologie client direct},\n\t\tcanal_final,\n\t\t{Typologie client indirect},\n\t\t{Code article},\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Canal de distribution},\n\t\tno_offre,\n\t\tyearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{Hiérarchgroupe},\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tmarque = UnionMKT@marque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nUnionMKT derive(temp = \"right\") ~> UnionMKTR\nJoindre1 filter(isNull(UnionMKTR@temp)) ~> FiltreLeft\ninnerMKT select(mapColumn(\n\t\t{Typologie client direct},\n\t\tcanal_final,\n\t\t{Typologie client indirect},\n\t\t{Code article},\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Canal de distribution},\n\t\tno_offre,\n\t\tyearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{Hiérarchgroupe},\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\ttemp,\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns3\ncoalesceArticle aggregate(groupBy(Article),\n\tDescription = max(Description),\n\t\tN1groupe = max({N1.groupe}),\n\t\tN2groupe = max({N2.groupe}),\n\t\tN3groupe = max({N3.groupe}),\n\t\tN4groupe = max({N4.groupe}),\n\t\tN5groupe = max({N5.groupe}),\n\t\tN6groupe = max({N6.groupe}),\n\t\tN7groupe = max({N7.groupe})) ~> UniqueArticle\nUnionALL, UniqueArticle join(coalesce(toString(toInteger(replace({Code article}, \" \", \"\"))),replace({Code article}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinUniqueArticle\nJoinUniqueArticle select(mapColumn(\n\t\t{Code article},\n\t\t{Description article} = Description,\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tN1groupe,\n\t\tN1groupedesignation,\n\t\tN2groupe,\n\t\tN2groupedesignation,\n\t\tN3groupe,\n\t\tN3groupedesignation,\n\t\tN4groupe,\n\t\tN4groupedesignation,\n\t\tN4groupe = N5groupe,\n\t\tN5groupedesignation,\n\t\tN6groupe,\n\t\tN6groupedesignation,\n\t\tN7groupe,\n\t\tN7groupedesignation,\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Typologie client direct},\n\t\t{Typologie client indirect},\n\t\t{Canal de distribution},\n\t\t{Typologie offre si diffus},\n\t\t{Typologie projet},\n\t\tyearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{Hiérarchgroupe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLast\nStgOffreChantier filter(!isNull(Offre)) ~> Filter1\ntypologieEPS select(mapColumn(\n\t\t{Numéro du compte},\n\t\t{Groupe cible/Typologie générale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> typologieEPSKeepColumns\ntypologieEPSKeepColumns derive({Numéro du compte} = replace({Numéro du compte}, \"x\", \"\")) ~> deleteXinCompte\ndeleteXinCompte derive({Numéro du compte} = coalesce(toString(toInteger(replace({Numéro du compte}, \" \", \"\"))),replace({Numéro du compte}, \" \", \"\"))) ~> coalesceCompte\nSelectLast, uniqueNumeroCompte join(coalesce(toString(toInteger(replace({Typologie client direct}, \" \", \"\"))),replace({Typologie client direct}, \" \", \"\")) == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> typologieClientDirect\nrenameTypologieClientDirect, uniqueNumeroCompte join(coalesce(toString(toInteger(replace({Typologie client indirect}, \" \", \"\"))),replace({Typologie client indirect}, \" \", \"\")) == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> typologieClientIndirectGroupe\ntypologieClientDirect select(mapColumn(\n\t\t{Code article},\n\t\t{Description article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tN1groupe,\n\t\tN1groupedesignation,\n\t\tN2groupe,\n\t\tN2groupedesignation,\n\t\tN3groupe,\n\t\tN3groupedesignation,\n\t\tN4groupe,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupe,\n\t\tN6groupedesignation,\n\t\tN7groupe,\n\t\tN7groupedesignation,\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Typologie client indirect},\n\t\t{Canal de distribution},\n\t\t{Typologie offre si diffus},\n\t\t{Typologie projet},\n\t\t{Typologie client direct} = {Groupe cible/Typologie générale},\n\t\tyearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{Hiérarchgroupe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameTypologieClientDirect\ntypologieClientIndirectGroupe select(mapColumn(\n\t\t{Code article},\n\t\t{Description article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tN1groupe,\n\t\tN1groupedesignation,\n\t\tN2groupe,\n\t\tN2groupedesignation,\n\t\tN3groupe,\n\t\tN3groupedesignation,\n\t\tN4groupe,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupe,\n\t\tN6groupedesignation,\n\t\tN7groupe,\n\t\tN7groupedesignation,\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Typologie client direct},\n\t\t{Typologie client indirect} = {Groupe cible/Typologie générale},\n\t\t{Canal de distribution},\n\t\t{Typologie offre si diffus},\n\t\t{Typologie projet},\n\t\tDate = yearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{code article \"groupe\"} = {Hiérarchgroupe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameTypologieClientIndirect\nrenameTypologieClientIndirect derive({Prix de vente unitaire} = toDouble( replace({CA net}, \",\", \".\") )/ toDouble(replace({Quantité}, \",\", \".\"))) ~> DerivedColumn1\nDerivedColumn1, vmc join({Code article} == Material\n\t&& renameTypologieClientIndirect@year == vmc@year,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nDerivedColumn2 select(mapColumn(\n\t\t{Code article},\n\t\t{Description article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tN1groupe,\n\t\tN1groupedesignation,\n\t\tN2groupe,\n\t\tN2groupedesignation,\n\t\tN3groupe,\n\t\tN3groupedesignation,\n\t\tN4groupe,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupe,\n\t\tN6groupedesignation,\n\t\tN7groupe,\n\t\tN7groupedesignation,\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Typologie client direct},\n\t\t{Typologie client indirect},\n\t\t{Canal de distribution},\n\t\t{Typologie offre si diffus},\n\t\t{Typologie projet},\n\t\tDate,\n\t\tyear = renameTypologieClientIndirect@year,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{code article \"groupe\"},\n\t\t{Prix de vente unitaire},\n\t\tVMC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nJoin1 derive({Code article} = {Code article},\n\t\tVMC = replace(VMC, \".\", \",\"),\n\t\t{Prix de vente unitaire} = replace(toString({Prix de vente unitaire}), \".\", \",\")) ~> DerivedColumn2\nArticleHierarchi derive(Article = coalesce(toString(toInteger(replace({Article}, \" \", \"\"))),replace({Article}, \" \", \"\"))) ~> coalesceArticle\nFilter1 derive({Référence} = coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\"))) ~> coalesceRef\ncoalesceCompte aggregate(groupBy({Numéro du compte}),\n\t{Groupe cible/Typologie générale} = last({Groupe cible/Typologie générale}, true())) ~> uniqueNumeroCompte\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string\n\t),\n\tpartitionFileNames:['SORTIE_MARKETING.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> Smarketing"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ModelVenteDirecte')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InFacturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "ventedirecte"
						},
						{
							"dataset": {
								"referenceName": "compteSap",
								"type": "DatasetReference"
							},
							"name": "comptesap"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtc"
						},
						{
							"dataset": {
								"referenceName": "associationoffre",
								"type": "DatasetReference"
							},
							"name": "associationoffre"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "offre"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "venteDirectePrepared",
								"type": "DatasetReference"
							},
							"name": "OVenteDirectePrepared"
						}
					],
					"transformations": [
						{
							"name": "addCols"
						},
						{
							"name": "projection"
						},
						{
							"name": "dropDuplicade"
						},
						{
							"name": "sapJoin"
						},
						{
							"name": "removeCol1"
						},
						{
							"name": "joinAtc"
						},
						{
							"name": "keepColumnsATC"
						},
						{
							"name": "atcDropDuplicate"
						},
						{
							"name": "joinAssociation"
						},
						{
							"name": "keepColumnsOffre"
						},
						{
							"name": "offreDropDuplicade"
						},
						{
							"name": "joinOffre"
						},
						{
							"name": "removeCol2"
						},
						{
							"name": "setQteCA"
						},
						{
							"name": "removeCols"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						}
					],
					"script": "source(output(\n\t\t{ Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\t{ vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventedirecte\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> comptesap\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refAtc\nsource(output(\n\t\tCommande as string,\n\t\t{Référence Offre BA} as string,\n\t\t{Qté Cdée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> associationoffre\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offre\nremoveCols derive(distributeur = \"vente directe\",\n\t\t{Diffus/chantier} = iif( {Canal distribution}==\"43\", \"Chantier\", \"Diffus\"),\n\t\t{marque(SD/vaillant)} = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\")) ~> addCols\ncomptesap select(mapColumn(\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> projection\nDerivedColumn2 aggregate(groupBy(Client,\n\t\t{Code postal}),\n\t{Agence commerciale} = max({Agence commerciale})) ~> dropDuplicade\nremoveCol1, dropDuplicade join({Code client} == Client,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> sapJoin\naddCols select(mapColumn(\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Code client} = {Recept de march},\n\t\t{Destinataire facture},\n\t\tArticle = reference,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyearmonth,\n\t\treference,\n\t\tdistributeur,\n\t\t{Diffus/chantier},\n\t\t{marque(SD/vaillant)},\n\t\t{Agence commerciale corrigé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> removeCol1\nsapJoin, atcDropDuplicate join({Diffus/chantier} == {Canal final}\n\t&& {Code postal} == code_postal_atc\n\t&& {marque(SD/vaillant)} == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinAtc\nrefAtc select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumnsATC\nDerivedColumn1 aggregate(groupBy({Canal final},\n\t\tcode_postal_atc,\n\t\tMarque),\n\tMatricule = max(Matricule),\n\t\tATC = max(ATC),\n\t\tNomATC = max(NomATC)) ~> atcDropDuplicate\njoinAtc, associationoffre join({Document de vente} == Commande,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinAssociation\noffre select(mapColumn(\n\t\tResponsable,\n\t\tOffre,\n\t\t{ATC performance} = CodeATC,\n\t\tcanal = Canal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumnsOffre\nkeepColumnsOffre aggregate(groupBy(Offre,\n\t\t{ATC performance},\n\t\tcanal),\n\tResponsable = max(Responsable)) ~> offreDropDuplicade\njoinAssociation, offreDropDuplicade join({Référence Offre BA} == Offre\n\t&& {Canal final} == canal,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinOffre\nsetQteCA select(mapColumn(\n\t\tmarque_id = {Org commerciale},\n\t\tmarque_name = {marque(SD/vaillant)},\n\t\tcanal_final = {Diffus/chantier},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString = {Code client},\n\t\treference = Article,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tyearmonth,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\t{Agence commerciale} = {Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tno_offre = {Référence Offre BA},\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> removeCol2\njoinOffre derive(ca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tdata_origin = \"facturation\") ~> setQteCA\nventedirecte select(mapColumn(\n\t\t{Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{Type doc vente} = { vente},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> removeCols\nkeepColumnsATC derive(code_postal_atc = toInteger(code_postal_atc)) ~> DerivedColumn1\nprojection derive({Code postal} = toInteger({Code postal})) ~> DerivedColumn2\nremoveCol2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OVenteDirectePrepared.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OVenteDirectePrepared"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Model_PARTEDIS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecouPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "ecoulmnt"
						},
						{
							"dataset": {
								"referenceName": "facturationWithIndex",
								"type": "DatasetReference"
							},
							"name": "facturation"
						},
						{
							"dataset": {
								"referenceName": "associationoffre",
								"type": "DatasetReference"
							},
							"name": "association"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "offre"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sortiePardedis",
								"type": "DatasetReference"
							},
							"name": "OModelPartedis"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "sAssociation"
						},
						{
							"name": "selectfacturation"
						},
						{
							"name": "InnerJoin"
						},
						{
							"name": "leftFacturationAvoir"
						},
						{
							"name": "origin"
						},
						{
							"name": "sEcoul"
						},
						{
							"name": "fullleft"
						},
						{
							"name": "filterLeft"
						},
						{
							"name": "newColumnsLeft"
						},
						{
							"name": "fullRght"
						},
						{
							"name": "filterRight"
						},
						{
							"name": "newColumnsRight"
						},
						{
							"name": "endRight"
						},
						{
							"name": "endLeft"
						},
						{
							"name": "endjoin"
						},
						{
							"name": "UnionEndRight"
						},
						{
							"name": "JoinOffre"
						},
						{
							"name": "selectOffre"
						},
						{
							"name": "selectATC"
						},
						{
							"name": "unique"
						},
						{
							"name": "Select4"
						},
						{
							"name": "UnionEndLeft"
						},
						{
							"name": "addCanalFinal"
						},
						{
							"name": "uniqueOffreCanalATC"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "marqueName"
						},
						{
							"name": "JoinAtc"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "dropColumnsInCommon2"
						},
						{
							"name": "renameColumns"
						},
						{
							"name": "positifEc"
						},
						{
							"name": "UnionpositiveEc"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "select1"
						},
						{
							"name": "revertPosMid"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulmnt\nsource(output(\n\t\t{ Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\ttoroll as string,\n\t\tindexcols2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\nsource(output(\n\t\tCommande as string,\n\t\t{Référence Offre BA} as string,\n\t\t{Qté Cdée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> association\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offre\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refAtc\nInnerJoin derive(ca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tdata_origin = \"facturation avec matching\",\n\t\tcanal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" )) ~> DerivedColumn1\nassociation select(mapColumn(\n\t\tCommande,\n\t\tno_offre = {Référence Offre BA},\n\t\t{Qté Cdée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sAssociation\nleftFacturationAvoir select(mapColumn(\n\t\t{Org commerciale} = { Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tarticle = reference,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\torigin,\n\t\tno_offre,\n\t\tindexcols2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectfacturation\nsEcoul, selectfacturation join(replace(ecoulmnt@indexcols2, \" \", \"\") == replace(selectfacturation@indexcols2, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoin\norigin, sAssociation join({Document de vente} == Commande,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftFacturationAvoir\nfacturation derive(origin = \"facturation\") ~> origin\necoulmnt derive(origin = \"ecoulement\") ~> sEcoul\nsEcoul, selectfacturation join(replace(ecoulmnt@indexcols2, \" \", \"\") == replace(selectfacturation@indexcols2, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullleft\nfullleft filter(isNull(selectfacturation@origin)) ~> filterLeft\nfilterLeft derive({Canal distribution} = \"42\",\n\t\tca_final = toString(-1*toDouble(ca_ecoulement)),\n\t\tqt_final = toString(-1*toDouble(qte_ecc)),\n\t\tdata_origin = \"decrementation ecoulement sans matching\",\n\t\ttposID = POSSAMidString) ~> newColumnsLeft\nsEcoul, selectfacturation join(replace(ecoulmnt@indexcols2, \" \", \"\") == replace(selectfacturation@indexcols2, \" \", \"\"),\n\tjoinType:'right',\n\tbroadcast: 'auto')~> fullRght\nfullRght filter(isNull(sEcoul@origin)) ~> filterRight\nfilterRight derive(ca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tdata_origin = \"facturation sans ecoulement\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\"),\n\t\tcanal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" )) ~> newColumnsRight\nnewColumnsRight select(mapColumn(\n\t\tmarque_id = {Org commerciale},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString = {Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear = selectfacturation@year,\n\t\tyearmonth = selectfacturation@yearmonth,\n\t\treference = selectfacturation@reference,\n\t\tarticle = selectfacturation@reference,\n\t\tHubSAPid = selectfacturation@HubSAPid,\n\t\ttoreplicate = selectfacturation@toreplicate,\n\t\tindexcols2 = selectfacturation@indexcols2,\n\t\torigin = selectfacturation@origin,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endRight\naddCanalFinal select(mapColumn(\n\t\tyearmonth = ecoulmnt@yearmonth,\n\t\tyear = ecoulmnt@year,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = ecoulmnt@HubSAPid,\n\t\treference = ecoulmnt@reference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate = ecoulmnt@toreplicate,\n\t\tdd,\n\t\tindexcols2 = ecoulmnt@indexcols2,\n\t\torigin = sEcoul@origin,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\t{Canal distribution},\n\t\tcanal_final,\n\t\ttposID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endLeft\nSelect4 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endjoin\ndropColumnsInCommon, endRight union(byName: true)~> UnionEndRight\nDerivedColumn1, selectOffre join(no_offre == Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOffre\nuniqueOffreCanalATC select(mapColumn(\n\t\tOffre,\n\t\t{ATC performance} = ATC,\n\t\t{offre canal} = canal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectOffre\nDerivedColumn2 select(mapColumn(\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc = {Code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectATC\nrefAtc aggregate(groupBy(Marque,\n\t\t{Canal final},\n\t\t{Code postal}),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> unique\nJoinOffre select(mapColumn(\n\t\tyearmonth = ecoulmnt@yearmonth,\n\t\tyear = ecoulmnt@year,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = ecoulmnt@HubSAPid,\n\t\treference = ecoulmnt@reference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate = ecoulmnt@toreplicate,\n\t\tdd,\n\t\t{ Org commerciale} = {Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear = selectfacturation@year,\n\t\tyearmonth = selectfacturation@yearmonth,\n\t\treference = selectfacturation@reference,\n\t\tarticle = selectfacturation@reference,\n\t\tHubSAPid = selectfacturation@HubSAPid,\n\t\ttoreplicate = selectfacturation@toreplicate,\n\t\tindexcols2 = selectfacturation@indexcols2,\n\t\torigin = selectfacturation@origin,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nendjoin, endDecrementation union(byName: true)~> UnionEndLeft\nnewColumnsLeft derive(canal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" ),\n\t\tPOSSAMidString = ecoulmnt@HubSAPid) ~> addCanalFinal\nrenameColumns aggregate(groupBy(Offre,\n\t\tcanal,\n\t\tATC),\n\tDateOffre = first(DateOffre)) ~> uniqueOffreCanalATC\nmarqueName select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tarticle = reference,\n\t\t{Code postal},\n\t\tmarque_id = marque,\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\tcanal_final,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nUnionpositiveEc derive(marque_name = iif(marque==\"1604\", \"SaunierDuval\", \"Vaillant\"),\n\t\t{Code postal} = toInteger({Code postal})) ~> marqueName\nRemoveColumns1, selectATC join(marque_name == Marque\n\t&& canal_final == {Canal final}\n\t&& iif(data_origin==\"decrementation ecoulement sans matching\", -5, {Code postal}) == code_postal_atc,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAtc\nJoinAtc select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nUnionEndRight select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon2\noffre select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tATC = CodeATC,\n\t\tcanal = Canal,\n\t\tProduit,\n\t\t{Créateur offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrevertPosMid derive(data_origin = \"ecoulement sans matching\",\n\t\tca_final = ca_ecoulement,\n\t\tqt_final = toString(-1*toDouble(qt_final))) ~> positifEc\nUnionEndLeft, positifEc union(byName: true)~> UnionpositiveEc\nunique derive({Code postal} = toInteger({Code postal})) ~> DerivedColumn2\nselect1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd,\n\t\tindexcols2,\n\t\torigin,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\t{Canal distribution},\n\t\tcanal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\nendLeft select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd,\n\t\tindexcols2,\n\t\torigin,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\t{Canal distribution},\n\t\tcanal_final,\n\t\ttposID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nendLeft select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString = tposID,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd,\n\t\tindexcols2,\n\t\torigin,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\t{Canal distribution},\n\t\tcanal_final,\n\t\ttposID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> revertPosMid\ndropColumnsInCommon2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelPartedis.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OModelPartedis"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_CLIENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "EXtractionSAP"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_ATC4_copy1",
								"type": "DatasetReference"
							},
							"name": "ReferentielAtc4"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieNomenclatureClient",
								"type": "DatasetReference"
							},
							"name": "SortieNomenclatureClient"
						}
					],
					"transformations": [
						{
							"name": "FiltreATCClient"
						},
						{
							"name": "UniqueATC"
						},
						{
							"name": "JointureATC"
						},
						{
							"name": "Rename"
						},
						{
							"name": "MapDrifted1",
							"description": "Crée un mappage explicite pour chaque colonne dérivée"
						},
						{
							"name": "NomCli"
						}
					],
					"script": "source(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EXtractionSAP\nsource(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ReferentielAtc4\nMapDrifted1 filter({ATC Client}!=\"#\") ~> FiltreATCClient\nReferentielAtc4 aggregate(groupBy(ATC),\n\tRight_DR = max(Right_DR)) ~> UniqueATC\nFiltreATCClient, UniqueATC join({ATC Client} == ATC,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JointureATC\nNomCli select(mapColumn(\n\t\tNoNiv1 = {Niveau 1},\n\t\tNiv1 = {_c4},\n\t\tNoNiv2 = {Niveau 2},\n\t\tNiv2 = {_c10},\n\t\tNoNiv3 = {Niveau 3},\n\t\tNiv3 = {_c6},\n\t\tNoNiv4 = {Niveau 4},\n\t\tNiv4 = {_c30},\n\t\tNoCli = Client,\n\t\tNomCli,\n\t\tDept = {Dép},\n\t\tVille = {Localité},\n\t\tNoGrpCli5 = {Groupe de clients 5},\n\t\tGrpCli5 = {_c26},\n\t\tNoGrpCli = {Groupe de clients},\n\t\tGrpCli = {_c24},\n\t\tPartnerID = {Récept. de march.}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nEXtractionSAP derive({_c2} = toString(byName('_c2')),\n\t\t{_c4} = toString(byName('_c4')),\n\t\t{_c6} = toString(byName('_c6')),\n\t\t{_c8} = toString(byName('_c8')),\n\t\t{_c10} = toString(byName('_c10')),\n\t\t{_c18} = toString(byName('_c18')),\n\t\t{_c22} = toString(byName('_c22')),\n\t\t{_c24} = toString(byName('_c24')),\n\t\t{_c26} = toString(byName('_c26')),\n\t\t{_c28} = toString(byName('_c28')),\n\t\t{_c30} = toString(byName('_c30')),\n\t\t{_c32} = toString(byName('_c32')),\n\t\t{_c34} = toString(byName('_c34')),\n\t\t{_c36} = toString(byName('_c36')),\n\t\t{_c39} = toString(byName('_c39')),\n\t\t{_c41} = toString(byName('_c41')),\n\t\t{_c43} = toString(byName('_c43'))) ~> MapDrifted1\nJointureATC derive(NomCli = {_c10}) ~> NomCli\nRename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SortieNomenclatureCLient.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieNomenclatureClient"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_PRODUIT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HIERARCHI_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "hierarchieArticle"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NOMENCLATURE_PRODUIT",
								"type": "DatasetReference"
							},
							"name": "nomenclatureProduit"
						}
					],
					"transformations": [
						{
							"name": "RenameArticle"
						},
						{
							"name": "Unique"
						},
						{
							"name": "CanalDist"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> hierarchieArticle\nhierarchieArticle select(mapColumn(\n\t\tNoCanalDist = CDis,\n\t\tNoArt = Article,\n\t\tArticle = Description,\n\t\tNoNiv1 = {N1.locale},\n\t\tNoNiv2 = {N2.locale},\n\t\tNoNiv3 = {N3.locale},\n\t\tNoNiv4 = {N4.locale},\n\t\tNoNiv5 = {N5.locale},\n\t\tNoNiv6 = {N6.locale},\n\t\tNoNiv7 = {N7.locale},\n\t\tNiv1 = {N1.locale.designation},\n\t\tNiv2 = {N2.locale.designation},\n\t\tNiv3 = {N3.locale.designation},\n\t\tNiv4 = {N4.locale.designation},\n\t\tNiv5 = {N5.locale.designation},\n\t\tNiv6 = {N6.locale.designation},\n\t\tNiv7 = {N7.locale.designation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameArticle\nRenameArticle aggregate(groupBy(Article),\n\tNoCanalDist = max(NoCanalDist),\n\t\tNoArt = max(NoArt),\n\t\tNoNiv1 = max(NoNiv1),\n\t\tNoNiv2 = max(NoNiv2),\n\t\tNoNiv3 = max(NoNiv3),\n\t\tNoNiv4 = max(NoNiv4),\n\t\tNoNiv5 = max(NoNiv5),\n\t\tNoNiv6 = max(NoNiv6),\n\t\tNoNiv7 = max(NoNiv7),\n\t\tNiv1 = max(Niv1),\n\t\tNiv2 = max(Niv2),\n\t\tNiv3 = max(Niv3),\n\t\tNiv4 = max(Niv4),\n\t\tNiv5 = max(Niv5),\n\t\tNiv6 = max(Niv6),\n\t\tNiv7 = max(Niv7)) ~> Unique\nUnique derive(CanalDist = iif(NoCanalDist==\"43\",\r\n\"Chantier/Contract Business\",\r\niif(NoCanalDist==\"42\", \r\n\"Diffus/One-off\",\r\n iif(NoCanalDist==\"51\",\r\n  \"FS\",\r\n   iif(NoCanalDist==\"45\", \r\n   \"Constructeurs/CMI\", \r\n   iif(NoCanalDist==\"40\",\r\n    \"Non core Business\",\r\n     '')))))) ~> CanalDist\nCanalDist select(mapColumn(\n\t\tArticle,\n\t\tNoArt,\n\t\tNoNiv1,\n\t\tNoNiv2,\n\t\tNoNiv3,\n\t\tNoNiv4,\n\t\tNoNiv5,\n\t\tNoNiv6,\n\t\tNoNiv7,\n\t\tNiv1,\n\t\tNiv2,\n\t\tNiv3,\n\t\tNiv4,\n\t\tNiv5,\n\t\tNiv6,\n\t\tNiv7\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SortieNomenclatureProduit.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> nomenclatureProduit"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ORCAB_ECOULEMENT_INPUT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ORCAB_ECOULEMENT_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ORCABECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "quantityNullOutput"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						}
					],
					"transformations": [
						{
							"name": "monthToNumber"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "cooperativenotNull"
						},
						{
							"name": "orgaCooperativeNotNull"
						},
						{
							"name": "unique"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "getYear"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "fillNaRefFournisseur"
						}
					],
					"script": "source(output(\n\t\tFournisseur as string,\n\t\t{Coopérative} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\tMois as string,\n\t\t{CA 2020} as string,\n\t\t{CA 2019} as string,\n\t\t{Qte 2020} as string,\n\t\t{Qte 2019} as string,\n\t\tpath as string,\n\t\tqte_ecoulement as string,\n\t\tFamille as string,\n\t\t{Sous Famille} as string,\n\t\tREFFOURNISSEUR as string,\n\t\t{Qte Livrée 2020} as string,\n\t\t{Qte Livrée 2019} as string,\n\t\t{Code Dispo Cde} as string,\n\t\t{Code SAPAIG} as string,\n\t\t{CA sans Marge} as string,\n\t\t{CA sans Marge A-1} as string,\n\t\t{Evol. CA A/A-1} as string,\n\t\t{Qte Livrée} as string,\n\t\t{Qte Livrée A-1} as string,\n\t\t{Evol. Qte A/A-1} as string,\n\t\t{Qté Livrée 2020} as string,\n\t\t{Qté Livrée 2019} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Nom Coopérative} as string,\n\t\t{CP Coop.} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nfillNaRefFournisseur derive(month = iif(lower(Mois)==\"janvier\", \"01\",      iif(lower(Mois)==\"février\",\"02\",     iif(lower(Mois)==\"mars\", \"03\",      iif(lower(Mois)==\"avril\", \"04\",      iif(lower(Mois)==\"mai\", \"05\",      iif(lower(Mois)==\"juin\", \"06\",      iif(lower(Mois)==\"juillet\", \"07\",      iif(lower(Mois)==\"août\", \"08\",      iif(lower(Mois)==\"septembre\", \"09\",      iif(lower(Mois)==\"octobre\", \"10\",      iif(lower(Mois)==\"novembre\", \"11\",      iif(lower(Mois)==\"décembre\", \"12\", \"0\")))))))))))),\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> monthToNumber\nyearmonth filter(!isNull(qte_ecoulement)) ~> quantityNotNull\nmonthToNumber filter(isNull(qte_ecoulement)) ~> quantityNull\nquantityNotNull filter(!isNull({Coopérative})) ~> cooperativenotNull\norganisation filter(!isNull({Nom Coopérative})) ~> orgaCooperativeNotNull\norgaCooperativeNotNull aggregate(groupBy({Nom Coopérative},\n\t\tHubSAPid),\n\tPOSSAMid = max(POSSAMid)) ~> unique\ncooperativenotNull, unique join({Coopérative} == {Nom Coopérative},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\ncooperativenotNull, unique join({Coopérative} == {Nom Coopérative},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull({Nom Coopérative})) ~> leftOuter\nmonthToNumber derive(yearmonth = year+month,\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonth\ninnerOrganisation derive(marque_id = iif(lower(marque_file)==\"vaillant\", 1621, 1604)) ~> typeCaste\ntypeCaste select(mapColumn(\n\t\tmarque_file,\n\t\treference = {Référence},\n\t\tarticle = {Désignation},\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tmarque_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nDerivedColumn1 select(mapColumn(\n\t\tmarque_file = Fournisseur,\n\t\t{Coopérative},\n\t\t{Référence},\n\t\t{Désignation},\n\t\tMois,\n\t\tpath,\n\t\tqte_ecoulement,\n\t\tREFFOURNISSEUR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\ncolumnChoice derive(year = regexExtract(path, \"(\\\\d+)\", 1)) ~> getYear\necoulement derive({Référence} = coalesce(REFFOURNISSEUR,{Référence})) ~> DerivedColumn1\ngetYear derive({Référence} = coalesce({Référence},REFFOURNISSEUR)) ~> fillNaRefFournisseur\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['ORCAB_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> ORCABECOULPREPARED\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ORCAB_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> quantityNullOutput\nleftOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ORCAB_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PARTEDIS_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "venteDirecte"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PARTEDIS_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						},
						{
							"dataset": {
								"referenceName": "Partedis_qte_null",
								"type": "DatasetReference"
							},
							"name": "quantityNullOutput"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "PARTEDISECOULPREPARED"
						}
					],
					"transformations": [
						{
							"name": "columnChoice"
						},
						{
							"name": "typeCaste",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "posIdNotNull"
						},
						{
							"name": "unique"
						},
						{
							"name": "InnerJoin"
						},
						{
							"name": "LeftJoin"
						},
						{
							"name": "Outer"
						},
						{
							"name": "uniqueKey"
						},
						{
							"name": "cleansingVenteDirecte"
						},
						{
							"name": "eccoulementVenteDirecteLeftJoin"
						},
						{
							"name": "cleansingEcoulement"
						},
						{
							"name": "ecoulementVenteDirecteInnerJoin"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "rendreZeroLesVentesDirectesNegatives"
						},
						{
							"name": "enleverQuantiteVenteDirecte"
						},
						{
							"name": "fullLeft"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "exctractYear"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						}
					],
					"script": "source(output(\n\t\t{Nom Fournisseur Principal} as string,\n\t\tClients as string,\n\t\t{Code Agence} as string,\n\t\t{Libellé Agence} as string,\n\t\t{Code postal agence} as string,\n\t\t{Ag Siret} as string,\n\t\tSiren as string,\n\t\tMKT1 as string,\n\t\tMKT2 as string,\n\t\tMKT3 as string,\n\t\t{Reference Fournisseur} as string,\n\t\tLibelle as string,\n\t\t{Qté Livré Mois A} as string,\n\t\t{Qté Livré Mois A-1} as string,\n\t\t{Qté Livré Cumul A} as string,\n\t\t{Qté Livré Cumul A-1} as string,\n\t\t{VVA MOIS} as string,\n\t\t{VVA MOIS N-1} as string,\n\t\t{VVA CUMUL EXERCICE} as string,\n\t\t{VVA CUMUL EXERCICE N-1} as string,\n\t\tpath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> venteDirecte\necoulement select(mapColumn(\n\t\tMarque_file = {Nom Fournisseur Principal},\n\t\tClients,\n\t\t{Code Agence},\n\t\t{Libellé Agence},\n\t\t{Code postal agence},\n\t\t{Ag Siret},\n\t\tSiren,\n\t\tMKT1,\n\t\tMKT2,\n\t\tMKT3,\n\t\tReference = {Reference Fournisseur},\n\t\tLibelle,\n\t\t{Qté Livré Mois A},\n\t\t{Qté Livré Mois A-1},\n\t\t{Qté Livré Cumul A},\n\t\t{Qté Livré Cumul A-1},\n\t\t{VVA MOIS},\n\t\t{VVA MOIS N-1},\n\t\t{VVA CUMUL EXERCICE},\n\t\t{VVA CUMUL EXERCICE N-1},\n\t\tpath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\ncolumnChoice derive({Qté Livré Mois A} = toInteger({Qté Livré Mois A}),\n\t\tyearmonth = trim(replace(split(path, \"-\")[3], \".xlsx\", \"\"), \" \")) ~> typeCaste\norganisation filter(!isNull(POSid)) ~> posIdNotNull\nposIdNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> unique\ntypeCaste, unique join({Code Agence} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoin\ntypeCaste, unique join({Code Agence} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoin\nLeftJoin filter(isNull(POSid)) ~> Outer\ncleansingVenteDirecte aggregate(groupBy(yearmonth_right,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté ventes directes} = sum({Qté ventes directes})) ~> uniqueKey\nventeDirecte derive({Qté ventes directes} = toDouble(qte_ecoulement),\n\t\tyearmonth_right = replace(yearmonth, \" \", \"\"),\n\t\tArticle = replace(reference, \" \", \"\"),\n\t\t{Code client} = replace({Code client}, \" \", \"\")) ~> cleansingVenteDirecte\ncleansingEcoulement, uniqueKey join(yearmonth == yearmonth_right\n\t&& coalesce(toString(toInteger(replace(Reference, \" \", \"\"))),replace(Reference, \" \", \"\")) == coalesce(toString(toInteger(replace({Article}, \" \", \"\"))),replace({Article}, \" \", \"\"))\n\t&& POSSAMidString == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> eccoulementVenteDirecteLeftJoin\nInnerJoin derive(Reference = replace(Reference,\" \",\"\"),\n\t\tPOSSAMidString = replace(POSSAMidString,\" \",\"\")) ~> cleansingEcoulement\ncleansingEcoulement, uniqueKey join(yearmonth == yearmonth_right\n\t&& coalesce(toString(toInteger(replace(Reference, \" \", \"\"))),replace(Reference, \" \", \"\")) == coalesce(toString(toInteger(replace({Article}, \" \", \"\"))),replace({Article}, \" \", \"\"))\n\t&& POSSAMidString == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> ecoulementVenteDirecteInnerJoin\necoulementVenteDirecteInnerJoin filter(isNull(yearmonth_right) || isNull(Article) || isNull({Code client})) ~> leftOuter\neccoulementVenteDirecteLeftJoin derive({Qté ventes directes} = iif({Qté ventes directes}<0, toDouble(0), {Qté ventes directes})) ~> rendreZeroLesVentesDirectesNegatives\nrendreZeroLesVentesDirectesNegatives derive({Qté Livré Mois A} = iif({Qté Livré Mois A}-{Qté ventes directes} >0 , {Qté Livré Mois A}-{Qté ventes directes} , toDouble(0) )) ~> enleverQuantiteVenteDirecte\nenleverQuantiteVenteDirecte, leftOuter union(byName: true)~> fullLeft\nfullLeft select(mapColumn(\n\t\tMarque_file,\n\t\tClients,\n\t\t{Code Agence},\n\t\t{Libellé Agence},\n\t\t{Code postal agence},\n\t\t{Ag Siret},\n\t\tSiren,\n\t\tReference,\n\t\tLibelle,\n\t\t{Qté Livré Mois A},\n\t\t{VVA MOIS},\n\t\tyearmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\ndropColumnsInCommon derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> exctractYear\nexctractYear filter(!isNull({Qté Livré Mois A})) ~> quantityNotNull\nexctractYear filter(isNull({Qté Livré Mois A})) ~> quantityNull\nAddcolumn select(mapColumn(\n\t\tmarque_file = Marque_file,\n\t\tagence_code = {Code Agence},\n\t\t{Code postal} = {Code postal agence},\n\t\treference = Reference,\n\t\tqte_ecoulement = {Qté Livré Mois A},\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nquantityNotNull derive(canal = '',\n\t\tDept = '') ~> Addcolumn\nOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['PARTEDIS_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OeccPartedis.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> quantityNullOutput\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['PARTEDIS_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> PARTEDISECOULPREPARED"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_FACTURATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "pre",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "facturationAC"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "facturationAP"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outfactDescTereva",
								"type": "DatasetReference"
							},
							"name": "facturationForDSCTEREVA"
						},
						{
							"dataset": {
								"referenceName": "facturationForOtherPlateform",
								"type": "DatasetReference"
							},
							"name": "facturationForOtherPlateform"
						},
						{
							"dataset": {
								"referenceName": "notDSCTerevaPlateform",
								"type": "DatasetReference"
							},
							"name": "notDSCTerevaPlateform"
						},
						{
							"dataset": {
								"referenceName": "facturationForVanMarkes",
								"type": "DatasetReference"
							},
							"name": "facturationForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outFacturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "venteDirecteForModel"
						},
						{
							"dataset": {
								"referenceName": "AZ_OFacturactionPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "OFacturactionPartedisLikeWithIndex"
						},
						{
							"dataset": {
								"referenceName": "outFacturation",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "tempVD",
								"type": "DatasetReference"
							},
							"name": "VenteDirectForDecrementation"
						},
						{
							"dataset": {
								"referenceName": "facturationVF",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "extractYearMonth"
						},
						{
							"name": "FactFilterc"
						},
						{
							"name": "AddColumn"
						},
						{
							"name": "extractYearMonthc"
						},
						{
							"name": "FactFilter"
						},
						{
							"name": "filtreDSC"
						},
						{
							"name": "innerDSC"
						},
						{
							"name": "filtreOtherPlateforme"
						},
						{
							"name": "InnerPlateforme"
						},
						{
							"name": "renameColumns"
						},
						{
							"name": "leftPlateforme"
						},
						{
							"name": "hubsapidNULL"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "rename"
						},
						{
							"name": "typecaste"
						},
						{
							"name": "toroll"
						},
						{
							"name": "torolltoList"
						},
						{
							"name": "createIndexPartedis"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "CAfacture"
						},
						{
							"name": "quantityNULL"
						},
						{
							"name": "qteNullFacturaction"
						},
						{
							"name": "UnionQteNullFacturation"
						},
						{
							"name": "AllFacturation"
						},
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "select2"
						},
						{
							"name": "filter1"
						},
						{
							"name": "mapColName"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "keepPeriode"
						},
						{
							"name": "periode"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as date 'dd/MM/yyyy',\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as date 'dd/MM/yyyy',\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAP\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\nAllFacturation derive(year = toString(year({Jour calendaire})),\n\t\tyearmonth = iif(month({Jour calendaire})<10, toString(year({Jour calendaire}))+\"0\"+toString(month({Jour calendaire})), toString(year({Jour calendaire}))+toString(month({Jour calendaire}))),\n\t\tdate_id = toString({Jour calendaire}, \"dd-MM-yyyy\"),\n\tpartitionBy('hash', 1)) ~> extractYearMonth\nextractYearMonth derive(fact_filter = iif ( ({Type de facture} =='YFAR' && ({Motif commande}=='FAS')  ||  ( {Type de facture}=='YFAB' && {Motif commande}=='FAS' )) ,1,0)) ~> FactFilterc\nFactFilterc derive(qt_cd_e = {Qté cdée},\n\t\tca_cd_ = {CA cdé},\n\t\tqt_livr_e = {Qté livrée},\n\t\tca_livr_ = {CA livré},\n\t\tqt_factur_e = {Qté facturée},\n\t\tca_factur_ = {CA facturé},\n\t\tcout_standard_cd_ = {Cout standard cdé},\n\t\tcout_fabrication = {Cout fabrication},\n\t\tcout_standard_livr_ = {Cout standard livré},\n\t\tcout_standard_factur_ = {Cout standard facturé}) ~> AddColumn\nAddColumn derive(year_month = substring(date_id,1,6)) ~> extractYearMonthc\nextractYearMonthc filter(fact_filter==0 && !isNull(Article)) ~> FactFilter\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')> 0  ||instr(WholeSalerID, 'TEREVA')> 0) ~> filtreDSC\nrenameColumns, filtreDSC join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerDSC\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')== 0  &&  instr(WholeSalerID, 'TEREVA')== 0) ~> filtreOtherPlateforme\nrenameColumns, filtreOtherPlateforme join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerPlateforme\nFactFilter select(mapColumn(\n\t\t{ Org. commerciale} = {Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{ vente} = {Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference = Article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrenameColumns, PLATEFORMES join({Récept. de march.} == HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftPlateforme\nleftPlateforme filter(isNull( HubSAPid )) ~> hubsapidNULL\ninnerDSC select(mapColumn(\n\t\t{Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nInnerPlateforme select(mapColumn(\n\t\t{ Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{Type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\nfilter1 derive(toreplicate = abs(toInteger({Qté facturée})),\n\t\t{CA facturé} = toDouble( {CA facturé}) / toDouble( {Qté facturée})) ~> typecaste\ntypecaste derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index),\n\t\ttempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc', \r\n    iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \r\n     iif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',\r\nlower(WholeSalerID))))))) ~> toroll\ntoroll foldDown(unroll(toroll, toroll),\n\tmapColumn(\n\t\t{ Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\ttoroll\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> torolltoList\ntorolltoList window(over(yearmonth,\n\t\tHubSAPid,\n\t\treference),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> createIndexPartedis\ncreateIndexPartedis derive(indexcols2 = yearmonth+HubSAPid+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+toString(indexcols2),\n\t\t{Qté facturée} = iif(toDouble({Qté facturée})<=0, -1, 1)) ~> newColumns\nnewColumns derive({CA facturé} = {Qté facturée}*abs({CA facturé})) ~> CAfacture\ntypecaste filter(isNull({Qté facturée})) ~> quantityNULL\nquantityNULL derive({CA facturé} = toDouble(ca_factur_),\n\t\tindexcols2 = yearmonth+HubSAPid+reference+\"null\",\n\t\t{Qté facturée} = toInteger({Qté facturée})) ~> qteNullFacturaction\nCAfacture, qteNullFacturaction union(byName: true)~> UnionQteNullFacturation\nfacturationAC, facturationAP union(byName: true)~> AllFacturation\nextractYearMonthc select(mapColumn(\n\t\t{Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tProp_0,\n\t\tyear,\n\t\tyearmonth,\n\t\tdate_id,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nselect1, PLATEFORMES join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> join1\njoin1 select(mapColumn(\n\t\t{Org commerciale} = {Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{ vente} = {Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tProp_0,\n\t\tyear,\n\t\tyearmonth,\n\t\tdate_id,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nrename filter(toString(HubSAPid)!=\"16004028\") ~> filter1\nhubsapidNULL derive(yearmonth = yearmonth,\n\t\tArticle = reference,\n\t\t{Code client} = {Récept. de march.},\n\t\t{Qté vente directe} = {Qté facturée}) ~> mapColName\nperiode select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\nUnionQteNullFacturation select(mapColumn(\n\t\t{ Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\ttoroll,\n\t\tindexcols2,\n\t\t{1ereDateLivrDdee}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepPeriode\nprixParPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> periode\nderivedColumn1 aggregate(groupBy(reference),\n\tNombre = count(reference),\n\t\tCA = sum({CA facturé}),\n\t\t{Qté} = sum({Qté facturée})) ~> aggregate1\nkeepPeriode filter(replace(year, \" \", \"\")==\"2021\"  && WholeSalerID==\"VFC - VF CONFORT\") ~> filter2\nfilter2 derive(reference = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn1\ndropColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['AZ_facturationDescTEREVA.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForDSCTEREVA\ntypecaste sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForOther.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForOtherPlateform\nfiltreOtherPlateforme sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['notDSCTerevaPlateform.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> notDSCTerevaPlateform\nselect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForVanMarkes'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForVanMarkes\nhubsapidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['facturationForVenteDirect.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> venteDirecteForModel\nkeepPeriode sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OFacturactionPartedisLikeWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OFacturactionPartedisLikeWithIndex\nextractYearMonth sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SAUNIER DUVAL} as string,\n\t\t{208.0} as string,\n\t\t{Pièces détachées pour chauffage} as string,\n\t\t{05608600} as string,\n\t\t{5272.0} as string,\n\t\t{33.0} as string,\n\t\t{0.0} as string,\n\t\t{202008} as string,\n\t\t{2020} as string,\n\t\t{08} as string\n\t),\n\tpartitionFileNames:['facturactionBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nmapColName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal;marque;marque_code;canal_distribution_final;nom du canal;canal_final;document_vente;Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);no_offre;ATC offre;ATC livr�;ATC Performance;NomATC;DR;Matricule;Motif commande;Type de facture;Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Num�ro du compte;EPS_Nom du compte;EPS_Groupe cible/Typologie g�n�rale;EPS_Sous groupe cible/Typologie d�taill�e;EPS_Compte principal: Num�ro du compte;EPS_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP;yearmonth;ATC Corrig�} as string\n\t),\n\tpartitionFileNames:['VENTES_DIRECTES_PREPARATION'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VenteDirectForDecrementation\naggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{yearmonth;reference;Code client;qte_ecoulement} as string\n\t),\n\tpartitionFileNames:['facturationVF.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_FACTURATION_PERIOD')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "pre",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "facturationAC"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "facturationAP"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outfactDescTereva",
								"type": "DatasetReference"
							},
							"name": "facturationForDSCTEREVA"
						},
						{
							"dataset": {
								"referenceName": "facturationForOtherPlateform",
								"type": "DatasetReference"
							},
							"name": "facturationForOtherPlateform"
						},
						{
							"dataset": {
								"referenceName": "notDSCTerevaPlateform",
								"type": "DatasetReference"
							},
							"name": "notDSCTerevaPlateform"
						},
						{
							"dataset": {
								"referenceName": "facturationForVanMarkes",
								"type": "DatasetReference"
							},
							"name": "facturationForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outFacturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "venteDirecteForModel"
						},
						{
							"dataset": {
								"referenceName": "AZ_OFacturactionPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "OFacturactionPartedisLikeWithIndex"
						},
						{
							"dataset": {
								"referenceName": "outFacturation",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "tempVD",
								"type": "DatasetReference"
							},
							"name": "VenteDirectForDecrementation"
						},
						{
							"dataset": {
								"referenceName": "partedislile",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "extractYearMonth"
						},
						{
							"name": "FactFilterc"
						},
						{
							"name": "AddColumn"
						},
						{
							"name": "extractYearMonthc"
						},
						{
							"name": "FactFilter"
						},
						{
							"name": "filtreDSC"
						},
						{
							"name": "innerDSC"
						},
						{
							"name": "filtreOtherPlateforme"
						},
						{
							"name": "InnerPlateforme"
						},
						{
							"name": "renameColumns"
						},
						{
							"name": "leftPlateforme"
						},
						{
							"name": "hubsapidNULL"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "rename"
						},
						{
							"name": "typecaste"
						},
						{
							"name": "toroll"
						},
						{
							"name": "torolltoList"
						},
						{
							"name": "createIndexPartedis"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "CAfacture"
						},
						{
							"name": "quantityNULL"
						},
						{
							"name": "qteNullFacturaction"
						},
						{
							"name": "AllFacturation"
						},
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "select2"
						},
						{
							"name": "filter1"
						},
						{
							"name": "mapColName"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "keepPeriode"
						},
						{
							"name": "getPeriode"
						},
						{
							"name": "periode"
						},
						{
							"name": "filter2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as date 'dd/MM/yyyy',\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as date 'dd/MM/yyyy',\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAP\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\nAllFacturation derive(year = toString(year({Jour calendaire})),\n\t\tyearmonth = iif(month({Jour calendaire})<10, toString(year({Jour calendaire}))+\"0\"+toString(month({Jour calendaire})), toString(year({Jour calendaire}))+toString(month({Jour calendaire}))),\n\t\tdate_id = toString({Jour calendaire}, \"dd-MM-yyyy\"),\n\tpartitionBy('hash', 1)) ~> extractYearMonth\nextractYearMonth derive(fact_filter = iif ( ({Type de facture} =='YFAR' && ({Motif commande}=='FAS')  ||  ( {Type de facture}=='YFAB' && {Motif commande}=='FAS' )) ,1,0)) ~> FactFilterc\nFactFilterc derive(qt_cd_e = {Qté cdée},\n\t\tca_cd_ = {CA cdé},\n\t\tqt_livr_e = {Qté livrée},\n\t\tca_livr_ = {CA livré},\n\t\tqt_factur_e = {Qté facturée},\n\t\tca_factur_ = {CA facturé},\n\t\tcout_standard_cd_ = {Cout standard cdé},\n\t\tcout_fabrication = {Cout fabrication},\n\t\tcout_standard_livr_ = {Cout standard livré},\n\t\tcout_standard_factur_ = {Cout standard facturé}) ~> AddColumn\nAddColumn derive(year_month = substring(date_id,1,6)) ~> extractYearMonthc\nextractYearMonthc filter(fact_filter==0 && !isNull(Article)) ~> FactFilter\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')> 0  ||instr(WholeSalerID, 'TEREVA')> 0) ~> filtreDSC\nrenameColumns, filtreDSC join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerDSC\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')== 0  &&  instr(WholeSalerID, 'TEREVA')== 0) ~> filtreOtherPlateforme\nrenameColumns, filtreOtherPlateforme join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerPlateforme\nFactFilter select(mapColumn(\n\t\t{ Org. commerciale} = {Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{ vente} = {Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference = Article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrenameColumns, PLATEFORMES join({Récept. de march.} == HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftPlateforme\nleftPlateforme filter(isNull( HubSAPid )) ~> hubsapidNULL\ninnerDSC select(mapColumn(\n\t\t{Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nInnerPlateforme select(mapColumn(\n\t\t{ Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{Type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\nfilter1 derive(toreplicate = abs(toInteger({Qté facturée})),\n\t\t{CA facturé} = toDouble( {CA facturé}) / toDouble( {Qté facturée})) ~> typecaste\ntypecaste derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index),\n\t\ttempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc', \r\n    iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \r\n     iif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',\r\nlower(WholeSalerID))))))) ~> toroll\nderivedColumn1 foldDown(unroll(toroll, toroll),\n\tmapColumn(\n\t\t{ Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\ttoroll,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> torolltoList\nderivedColumn2 window(over(year,\n\t\t{Période},\n\t\tHubSAPid,\n\t\tref2),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> createIndexPartedis\ncreateIndexPartedis derive(indexcols2 = year+\"-\"+{Période}+\"-\"+HubSAPid+\"-\"+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+\"-\"+toString(indexcols2),\n\t\t{Qté facturée} = iif(toDouble({Qté facturée})<=0, -1, 1)) ~> newColumns\nnewColumns derive({CA facturé} = {Qté facturée}*abs({CA facturé}),\n\t\t{1ereDateLivrDdee} = \"\") ~> CAfacture\ntypecaste filter(isNull({Qté facturée})) ~> quantityNULL\nquantityNULL derive({CA facturé} = toDouble(ca_factur_),\n\t\tindexcols2 = yearmonth+HubSAPid+reference+\"null\",\n\t\t{Qté facturée} = toInteger({Qté facturée})) ~> qteNullFacturaction\nfacturationAC, facturationAP union(byName: true)~> AllFacturation\nextractYearMonthc select(mapColumn(\n\t\t{Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tProp_0,\n\t\tyear,\n\t\tyearmonth,\n\t\tdate_id,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nselect1, PLATEFORMES join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> join1\njoin1 select(mapColumn(\n\t\t{Org commerciale} = {Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{ vente} = {Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tProp_0,\n\t\tyear,\n\t\tyearmonth,\n\t\tdate_id,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nrename filter(toString(HubSAPid)!=\"16004028\") ~> filter1\nhubsapidNULL derive(yearmonth = yearmonth,\n\t\tArticle = reference,\n\t\t{Code client} = {Récept. de march.},\n\t\t{Qté vente directe} = {Qté facturée}) ~> mapColName\nperiode select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\nCAfacture select(mapColumn(\n\t\t{ Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\ttoroll,\n\t\tindexcols2,\n\t\t{1ereDateLivrDdee}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepPeriode\ntoroll, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger({Mois calendrier}) == toInteger(month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getPeriode\nprixParPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> periode\nkeepPeriode filter(reference=='0020260953') ~> filter2\ngetPeriode derive({Période} = coalesce( {Période}, \"00\" )) ~> derivedColumn1\ntorolltoList derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn2\ndropColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['AZ_facturationDescTEREVA.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForDSCTEREVA\ntypecaste sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForOther.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForOtherPlateform\nfiltreOtherPlateforme sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['notDSCTerevaPlateform.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> notDSCTerevaPlateform\nselect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForVanMarkes'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForVanMarkes\nhubsapidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['facturationForVenteDirect.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> venteDirecteForModel\nkeepPeriode sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OFacturactionPartedisLikeWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OFacturactionPartedisLikeWithIndex\nextractYearMonth sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SAUNIER DUVAL} as string,\n\t\t{208.0} as string,\n\t\t{Pièces détachées pour chauffage} as string,\n\t\t{05608600} as string,\n\t\t{5272.0} as string,\n\t\t{33.0} as string,\n\t\t{0.0} as string,\n\t\t{202008} as string,\n\t\t{2020} as string,\n\t\t{08} as string\n\t),\n\tpartitionFileNames:['facturactionBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nmapColName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal;marque;marque_code;canal_distribution_final;nom du canal;canal_final;document_vente;Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);no_offre;ATC offre;ATC livr�;ATC Performance;NomATC;DR;Matricule;Motif commande;Type de facture;Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Num�ro du compte;EPS_Nom du compte;EPS_Groupe cible/Typologie g�n�rale;EPS_Sous groupe cible/Typologie d�taill�e;EPS_Compte principal: Num�ro du compte;EPS_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP;yearmonth;ATC Corrig�} as string\n\t),\n\tpartitionFileNames:['VENTES_DIRECTES_PREPARATION'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VenteDirectForDecrementation\ngetPeriode sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{yearmonth;reference;Code client;qte_ecoulement} as string\n\t),\n\tpartitionFileNames:['partedislileBeforeSplit.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_OBJECTIF_RH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "RH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "OBJECTIFS_RH",
								"type": "DatasetReference"
							},
							"name": "objectif"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PREPARATION_OBJECTIF_RH",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "keepColumns"
						},
						{
							"name": "SelectQuantity"
						},
						{
							"name": "quantityToLine"
						},
						{
							"name": "SelectCA"
						},
						{
							"name": "CAtoLine"
						},
						{
							"name": "getQuantityMonth"
						},
						{
							"name": "getCAMonth"
						},
						{
							"name": "joinQuantityAndCA"
						},
						{
							"name": "changeNULL"
						},
						{
							"name": "deleteRightColumn"
						},
						{
							"name": "dataCleansing"
						}
					],
					"script": "source(output(\n\t\t{Num Org} as string,\n\t\t{Nom Org} as string,\n\t\t{Nom DR} as string,\n\t\t{Num DR} as string,\n\t\tDR as string,\n\t\t{ATC (ATC- DR)} as string,\n\t\t{ATC (DR-ATC)} as string,\n\t\t{Num ATC} as string,\n\t\t{Nom ATC} as string,\n\t\tDept as string,\n\t\t{Canal Dist} as string,\n\t\t{Nom Canal} as string,\n\t\t{Flux text} as string,\n\t\tHubSAPiD as string,\n\t\t{Activité} as string,\n\t\t{Nom Activité} as string,\n\t\t{Art Niv 1} as string,\n\t\t{Nom Niv 1} as string,\n\t\t{Art Niv 2} as string,\n\t\t{Nom Niv 2} as string,\n\t\t{Art Niv 3} as string,\n\t\t{Nom Niv 3} as string,\n\t\t{Art Niv 4} as string,\n\t\t{Nom Niv 4} as string,\n\t\t{Art Niv 5} as string,\n\t\t{Nom Niv 5} as string,\n\t\t{Nom Niv Combiné} as string,\n\t\t{PMV An} as string,\n\t\t{Qté Obj An} as double,\n\t\t{CA Obj An} as string,\n\t\t{Qté Mois 01} as string,\n\t\t{Qté Mois 02} as string,\n\t\t{Qté Mois 03} as string,\n\t\t{Qté Mois 04} as string,\n\t\t{Qté Mois 05} as string,\n\t\t{Qté Mois 06} as string,\n\t\t{Qté Mois 07} as string,\n\t\t{Qté Mois 08} as string,\n\t\t{Qté Mois 09} as string,\n\t\t{Qté Mois 10} as string,\n\t\t{Qté Mois 11} as string,\n\t\t{Qté Mois 12} as string,\n\t\t{CA Mois 01} as string,\n\t\t{CA Mois 02} as string,\n\t\t{CA Mois 03} as string,\n\t\t{CA Mois 04} as string,\n\t\t{CA Mois 05} as string,\n\t\t{CA Mois 06} as string,\n\t\t{CA Mois 07} as string,\n\t\t{CA Mois 08} as string,\n\t\t{CA Mois 09} as string,\n\t\t{CA Mois 10} as string,\n\t\t{CA Mois 11} as string,\n\t\t{CA Mois 12} as string,\n\t\t{Qté Trim 1} as string,\n\t\t{Qté Trim 2} as string,\n\t\t{Qté Trim 3} as string,\n\t\t{Qté Trim 4} as string,\n\t\t{CA Trim 1} as string,\n\t\t{CA Trim 2} as string,\n\t\t{CA Trim 3} as string,\n\t\t{CA Trim 4} as string,\n\t\t{Qté Cumul 01} as string,\n\t\t{Qté Cumul 02} as string,\n\t\t{Qté Cumul 03} as string,\n\t\t{Qté Cumul 04} as string,\n\t\t{Qté Cumul 05} as string,\n\t\t{Qté Cumul 06} as string,\n\t\t{Qté Cumul 07} as string,\n\t\t{Qté Cumul 08} as string,\n\t\t{Qté Cumul 09} as string,\n\t\t{Qté Cumul 10} as string,\n\t\t{Qté Cumul 11} as string,\n\t\t{Qté Cumul 12} as string,\n\t\t{CA Cumul 01} as string,\n\t\t{CA Cumul 02} as string,\n\t\t{CA Cumul 03} as string,\n\t\t{CA Cumul 04} as string,\n\t\t{CA Cumul 05} as string,\n\t\t{CA Cumul 06} as string,\n\t\t{CA Cumul 07} as string,\n\t\t{CA Cumul 08} as string,\n\t\t{CA Cumul 09} as string,\n\t\t{CA Cumul 10} as string,\n\t\t{CA Cumul 11} as string,\n\t\t{CA Cumul 12} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false) ~> objectif\nchangeNULL select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\t{Qté Mois 01},\n\t\t{Qté Mois 02},\n\t\t{Qté Mois 03},\n\t\t{Qté Mois 04},\n\t\t{Qté Mois 05},\n\t\t{Qté Mois 06},\n\t\t{Qté Mois 07},\n\t\t{Qté Mois 08},\n\t\t{Qté Mois 09},\n\t\t{Qté Mois 10},\n\t\t{Qté Mois 11},\n\t\t{Qté Mois 12},\n\t\t{CA Mois 01},\n\t\t{CA Mois 02},\n\t\t{CA Mois 03},\n\t\t{CA Mois 04},\n\t\t{CA Mois 05},\n\t\t{CA Mois 06},\n\t\t{CA Mois 07},\n\t\t{CA Mois 08},\n\t\t{CA Mois 09},\n\t\t{CA Mois 10},\n\t\t{CA Mois 11},\n\t\t{CA Mois 12}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nkeepColumns select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\t{Qté Mois 01},\n\t\t{Qté Mois 02},\n\t\t{Qté Mois 03},\n\t\t{Qté Mois 04},\n\t\t{Qté Mois 05},\n\t\t{Qté Mois 06},\n\t\t{Qté Mois 07},\n\t\t{Qté Mois 08},\n\t\t{Qté Mois 09},\n\t\t{Qté Mois 10},\n\t\t{Qté Mois 11},\n\t\t{Qté Mois 12}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectQuantity\nSelectQuantity unpivot(output(\n\t\tcolumnName as string,\n\t\tqt_final as string\n\t),\n\tungroupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An}),\n\tlateral: false,\n\tignoreNullPivots: false) ~> quantityToLine\nkeepColumns select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\t{CA Mois 01},\n\t\t{CA Mois 02},\n\t\t{CA Mois 03},\n\t\t{CA Mois 04},\n\t\t{CA Mois 05},\n\t\t{CA Mois 06},\n\t\t{CA Mois 07},\n\t\t{CA Mois 08},\n\t\t{CA Mois 09},\n\t\t{CA Mois 10},\n\t\t{CA Mois 11},\n\t\t{CA Mois 12}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCA\nSelectCA unpivot(output(\n\t\tcolumnName as string,\n\t\tca_final as string\n\t),\n\tungroupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An}),\n\tlateral: true,\n\tignoreNullPivots: false) ~> CAtoLine\nquantityToLine derive(Mois = toInteger(split(columnName, \" \")[3]),\n\t\tqt_final = toDouble(qt_final)) ~> getQuantityMonth\nCAtoLine derive(Mois = toInteger(split(columnName, \" \")[3]),\n\t\tca_final = toDouble(ca_final)) ~> getCAMonth\ngetQuantityMonth, getCAMonth join(quantityToLine@{Num Org} == CAtoLine@{Num Org}\n\t&& quantityToLine@{Num DR} == CAtoLine@{Num DR}\n\t&& quantityToLine@{Num ATC} == CAtoLine@{Num ATC}\n\t&& quantityToLine@{Canal Dist} == CAtoLine@{Canal Dist}\n\t&& quantityToLine@{Nom Canal} == CAtoLine@{Nom Canal}\n\t&& quantityToLine@{Art Niv 1} == CAtoLine@{Art Niv 1}\n\t&& quantityToLine@{Art Niv 2} == CAtoLine@{Art Niv 2}\n\t&& quantityToLine@{Art Niv 3} == CAtoLine@{Art Niv 3}\n\t&& quantityToLine@{Art Niv 4} == CAtoLine@{Art Niv 4}\n\t&& quantityToLine@{Art Niv 5} == CAtoLine@{Art Niv 5}\n\t&& getQuantityMonth@Mois == getCAMonth@Mois\n\t&& quantityToLine@{Qté Obj An} == CAtoLine@{Qté Obj An}\n\t&& quantityToLine@{CA Obj An} == CAtoLine@{CA Obj An},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinQuantityAndCA\nobjectif derive({Art Niv 1} = iif(isNull({Art Niv 1}), \" \", {Art Niv 1}),\n\t\t{Art Niv 2} = iif(isNull({Art Niv 2}), \" \", {Art Niv 2}),\n\t\t{Art Niv 3} = iif(isNull({Art Niv 3}), \" \", {Art Niv 3}),\n\t\t{Art Niv 4} = iif(isNull({Art Niv 4}), \" \", {Art Niv 4}),\n\t\t{Art Niv 5} = iif(isNull({Art Niv 5}), \" \", {Art Niv 5})) ~> changeNULL\njoinQuantityAndCA select(mapColumn(\n\t\t{Num Org} = quantityToLine@{Num Org},\n\t\t{Num DR} = quantityToLine@{Num DR},\n\t\t{Num ATC} = quantityToLine@{Num ATC},\n\t\t{Canal Dist} = quantityToLine@{Canal Dist},\n\t\t{Nom Canal} = quantityToLine@{Nom Canal},\n\t\t{Art Niv 1} = quantityToLine@{Art Niv 1},\n\t\t{Art Niv 2} = quantityToLine@{Art Niv 2},\n\t\t{Art Niv 3} = quantityToLine@{Art Niv 3},\n\t\t{Art Niv 4} = quantityToLine@{Art Niv 4},\n\t\t{Art Niv 5} = quantityToLine@{Art Niv 5},\n\t\t{Qté Obj An} = quantityToLine@{Qté Obj An},\n\t\t{CA Obj An} = quantityToLine@{CA Obj An},\n\t\tqt_final,\n\t\tMois = getQuantityMonth@Mois,\n\t\tca_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteRightColumn\ndeleteRightColumn derive({Num Org} = toInteger({Num Org}),\n\t\t{Canal Dist} = toInteger({Canal Dist}),\n\t\t{Nom Canal} = replace(lower({Nom Canal}), \" \", \"\"),\n\t\t{Art Niv 1} = replace({Art Niv 1}, \" \", \"\"),\n\t\t{Art Niv 2} = replace({Art Niv 2}, \" \", \"\"),\n\t\t{CA Obj An} = toDouble(replace({CA Obj An}, \",\", \".\"))) ~> dataCleansing\ndataCleansing sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['PREPARATION_OBJECTIF_RH.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRIX_MOYEN_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "REFERENTIEL_PRIX",
								"type": "DatasetReference"
							},
							"name": "prixmoyen"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "prixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixsplit"
						}
					],
					"transformations": [
						{
							"name": "splitAnneeMois"
						},
						{
							"name": "createArray"
						},
						{
							"name": "splitDuree"
						},
						{
							"name": "createLoop"
						},
						{
							"name": "Flatten1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn5"
						},
						{
							"name": "month"
						}
					],
					"script": "source(output(\n\t\tWholeSalerID as string,\n\t\tArticle as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixmoyen\nsplitDuree derive(mois1 = toInteger(split( {Mois début}, \"/\")[1]),\n\t\tannee1 = split( {Mois début}, \"/\")[2],\n\t\tmois2 = toInteger(split( {Mois fin}, \"/\")[1]),\n\t\tannee2 = split( {Mois fin}, \"/\")[2],\n\t\tDistributeur = iif(WholeSalerID=='ancs - accueil négoce chauffage sanitaire','partedis',  iif(instr(WholeSalerID, 'trva - tereva' )>0, 'tereva',    iif( (instr(WholeSalerID, 'dsc')>0)  || (instr(WholeSalerID, 'cedeo')>0 ) , 'dsc',     iif(instr(WholeSalerID, 'vf' )>0, 'vf_confort',      iif(instr(WholeSalerID, 'sonac' )>0, 'sonac',WholeSalerID)))))) ~> splitAnneeMois\nsplitAnneeMois derive(toreplicate = iif (mois2 - mois1 <=0, 1 ,  mois2 - mois1+1)) ~> createArray\nprixmoyen derive({Mois début} = split( {Durée_période} ,\"-\")[1],\n\t\t{Mois fin} = split( {Durée_période} ,\"-\")[2],\n\t\tWholeSalerID = lower(WholeSalerID)) ~> splitDuree\ncreateArray derive(dd = mapLoop(abs(toInteger(toreplicate)), #index )) ~> createLoop\ncreateLoop foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tWholeSalerID,\n\t\tDistributeur,\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\ttoreplicate,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nDerivedColumn5 select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFlatten1 derive(dd = toInteger(dd) -1) ~> DerivedColumn5\nSelect1 derive(month = dd+mois1) ~> month\nmonth sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['prixmoyensplit.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> prixsplit"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_ARTICLE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "articleHierarchie"
						},
						{
							"dataset": {
								"referenceName": "DETAIL_ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "detailArticleHierarchie"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "sortieArticleDesignation"
						}
					],
					"transformations": [
						{
							"name": "splitGroupe"
						},
						{
							"name": "splitLocale"
						},
						{
							"name": "N1GroupeDesignation"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2GroupeDesignation"
						},
						{
							"name": "RemoveColumns2",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3GroupeDesignation"
						},
						{
							"name": "RemoveColumns3",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4GroupeDesignation"
						},
						{
							"name": "RemoveColumns4",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5GroupeDesignation"
						},
						{
							"name": "RemoveColumns5",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6GroupeDesignation"
						},
						{
							"name": "RemoveColumns6",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7GroupeDesignation"
						},
						{
							"name": "RemoveColumns7",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N1LocaleDesignation"
						},
						{
							"name": "RemoveColumns8",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2LocaleDesignation"
						},
						{
							"name": "RemoveColumns9",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3LocaleDesignation"
						},
						{
							"name": "RemoveColumns10",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4LocaleDesignation"
						},
						{
							"name": "RemoveColumns11",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5LocaleDesignation"
						},
						{
							"name": "RemoveColumns12",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6LocaleDesignation"
						},
						{
							"name": "RemoveColumns13",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7LocaleDesignation"
						},
						{
							"name": "RemoveColumns14",
							"description": "Autogenerated by data preview actions"
						}
					],
					"script": "source(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleHierarchie\nsource(output(\n\t\t{Hiérarch.produits} as string,\n\t\t{Désignation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> detailArticleHierarchie\narticleHierarchie derive({N1.groupe} = substring({Hiérarch.groupe}, 1, 2),\n\t\t{N2.groupe} = substring({Hiérarch.groupe}, 1, 3),\n\t\t{N3.groupe} = substring({Hiérarch.groupe}, 1, 4),\n\t\t{N4.groupe} = substring({Hiérarch.groupe}, 1, 5),\n\t\t{N5.groupe} = substring({Hiérarch.groupe}, 1, 6),\n\t\t{N6.groupe} = substring({Hiérarch.groupe}, 1, 7),\n\t\t{N7.groupe} = substring({Hiérarch.groupe}, 1, 10)) ~> splitGroupe\nsplitGroupe derive({N1.locale} = substring({Hiérarch.locale}, 1, 2),\n\t\t{N2.locale} = substring({Hiérarch.locale}, 1, 3),\n\t\t{N3.locale} = substring({Hiérarch.locale}, 1, 4),\n\t\t{N4.locale} = substring({Hiérarch.locale}, 1, 5),\n\t\t{N5.locale} = substring({Hiérarch.locale}, 1, 6),\n\t\t{N6.locale} = substring({Hiérarch.locale}, 1, 7),\n\t\t{N7.locale} = substring({Hiérarch.locale}, 1, 10)) ~> splitLocale\nsplitLocale, detailArticleHierarchie join({N1.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N1GroupeDesignation\nN1GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nRemoveColumns1, detailArticleHierarchie join({N2.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N2GroupeDesignation\nN2GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns2\nRemoveColumns2, detailArticleHierarchie join({N3.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N3GroupeDesignation\nN3GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns3\nRemoveColumns3, detailArticleHierarchie join({N4.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N4GroupeDesignation\nN4GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns4\nRemoveColumns4, detailArticleHierarchie join({N5.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N5GroupeDesignation\nN5GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns5\nRemoveColumns5, detailArticleHierarchie join({N6.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N6GroupeDesignation\nN6GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns6\nRemoveColumns6, detailArticleHierarchie join({N7.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N7GroupeDesignation\nN7GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns7\nRemoveColumns7, detailArticleHierarchie join({N1.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N1LocaleDesignation\nN1LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns8\nRemoveColumns8, detailArticleHierarchie join({N2.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N2LocaleDesignation\nN2LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns9\nRemoveColumns9, detailArticleHierarchie join({N3.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N3LocaleDesignation\nN3LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns10\nRemoveColumns10, detailArticleHierarchie join({N4.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N4LocaleDesignation\nN4LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns11\nRemoveColumns11, detailArticleHierarchie join({N5.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N5LocaleDesignation\nN5LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns12\nRemoveColumns12, detailArticleHierarchie join({N6.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N6LocaleDesignation\nN6LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns13\nRemoveColumns13, detailArticleHierarchie join({N7.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N7LocaleDesignation\nN7LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation},\n\t\t{N7.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns14\nRemoveColumns14 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['HIERARCHIE_ARTICLE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sortieArticleDesignation"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_PRIX_MOYEN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "facturationAC"
						},
						{
							"dataset": {
								"referenceName": "platforme",
								"type": "DatasetReference"
							},
							"name": "plateforme"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "facturationAP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEMP_PRIX_PAR_PERIODE",
								"type": "DatasetReference"
							},
							"name": "dureePeriodeOutput"
						}
					],
					"transformations": [
						{
							"name": "keep42and51"
						},
						{
							"name": "factureFilter"
						},
						{
							"name": "innerPlateforme"
						},
						{
							"name": "dropColumnsInCommonInner"
						},
						{
							"name": "sort"
						},
						{
							"name": "addKey"
						},
						{
							"name": "previousID"
						},
						{
							"name": "joinPreviousRow"
						},
						{
							"name": "prixUnitaire"
						},
						{
							"name": "prixMoyen"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "renameToPrevious"
						},
						{
							"name": "nextID"
						},
						{
							"name": "renameToNext"
						},
						{
							"name": "joinNextRow"
						},
						{
							"name": "changementDePeriode"
						},
						{
							"name": "changementDePeriodeFiltre"
						},
						{
							"name": "DureePeriode"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "Sort1"
						},
						{
							"name": "dropColumnsInCommon1"
						},
						{
							"name": "dropNULL"
						},
						{
							"name": "leftPlateforme"
						},
						{
							"name": "leftOuterPlateforme"
						},
						{
							"name": "prixUnitaireLeft"
						},
						{
							"name": "dureePeriodeLeft"
						},
						{
							"name": "uniqueWholeSalerID"
						},
						{
							"name": "drop"
						},
						{
							"name": "join"
						},
						{
							"name": "Join1"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "dropColumns2"
						},
						{
							"name": "addperiod"
						},
						{
							"name": "Union1"
						},
						{
							"name": "facFilter"
						},
						{
							"name": "addNewKey"
						},
						{
							"name": "deletePreviousAndNext"
						},
						{
							"name": "Sort2"
						},
						{
							"name": "nextNewID"
						},
						{
							"name": "renameToNextNew"
						},
						{
							"name": "previousNewID"
						},
						{
							"name": "renameToPreviousNew"
						},
						{
							"name": "joinNewPreviousID"
						},
						{
							"name": "joinNewNextID"
						},
						{
							"name": "join2"
						},
						{
							"name": "leftJoin"
						},
						{
							"name": "averagePrix"
						},
						{
							"name": "UnionFacturation"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as integer,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as integer,\n\t\t{CA facturé} as double,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> plateforme\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as integer,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as integer,\n\t\t{CA facturé} as double,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAP\ncleansing filter({Canal distribution}==42) ~> keep42and51\nkeep42and51 derive(fact_filter1 = iif( instr(lower({Type de facture}),\"yfar\")==0 && instr(lower({Motif commande}),\"fas\")==0, 0, 1),\n\t\tfact_filter2 = iif(instr(lower({Type de facture}),\"yafb\")==0 && instr(lower({Motif commande}),\"fas\")==0, 0, 1)) ~> factureFilter\nfacFilter, plateforme join(trim({Récept. de march.}, \" \") == trim(HubSAPid, \" \"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerPlateforme\ninnerPlateforme select(mapColumn(\n\t\tArticle,\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonInner\nprixMoyen sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> sort\ndropColumns keyGenerate(output(ID as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> addKey\naddKey derive(ID = ID+1) ~> previousID\naddKey, renameToPrevious join(ID == {previous ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinPreviousRow\nsort derive(prix_unitaire = {CA facturé}/{Qté facturée}) ~> prixUnitaire\ndropColumnsInCommonInner aggregate(groupBy(WholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier}),\n\t{Qté facturée} = max({Qté facturée}),\n\t\t{CA facturé} = max({CA facturé})) ~> prixMoyen\nprixUnitaire select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\npreviousID select(mapColumn(\n\t\t{previous WholeSalerID} = WholeSalerID,\n\t\t{previous Article} = Article,\n\t\t{previous Année civile} = {Année civile},\n\t\t{previous Mois calendrier} = {Mois calendrier},\n\t\t{previous prix_unitaire} = prix_unitaire,\n\t\t{previous ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToPrevious\naddKey derive(ID = ID-1) ~> nextID\nnextID select(mapColumn(\n\t\t{next WholeSalerID} = WholeSalerID,\n\t\t{next Article} = Article,\n\t\t{next Année civile} = {Année civile},\n\t\t{next Mois calendrier} = {Mois calendrier},\n\t\t{next prix_unitaire} = prix_unitaire,\n\t\t{next ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToNext\njoinPreviousRow, renameToNext join(ID == {next ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinNextRow\njoinNextRow derive({Changement de période} = iif({previous Article}!=Article || {previous WholeSalerID}!=WholeSalerID || {previous Année civile}!={Année civile}, \r\n    1, \r\n\r\n    iif(abs(({previous prix_unitaire}-prix_unitaire)/{previous prix_unitaire})>0.1, 1, 0))) ~> changementDePeriode\nchangementDePeriode filter({Changement de période}==1) ~> changementDePeriodeFiltre\njoinNewNextID derive({Durée_période} = iif(WholeSalerID=={previous WholeSalerID} && Article=={previous Article} && {Année civile}=={previous Année civile}\r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article} && {Année civile}=={next Année civile}\r\n    \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-12/\"+toString({Année civile}))\r\n    \r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article} && {Année civile}=={next Année civile}\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile})))) ~> DureePeriode\nUnionFacturation derive({Canal distribution} = toInteger({Canal distribution})) ~> cleansing\nDureePeriode sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> Sort1\nSort1 select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon1\ndropColumnsInCommon1 filter(!isNull(WholeSalerID) || !isNull(Article) || !isNull({Année civile}) || !isNull({Mois calendrier}) || !isNull(prix_unitaire) || !isNull({Durée_période})) ~> dropNULL\nfacFilter, plateforme join(trim({Récept. de march.}, \" \") == trim(HubSAPid, \" \"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftPlateforme\nleftPlateforme filter(isNull(HubSAPid)) ~> leftOuterPlateforme\nleftOuterPlateforme aggregate(groupBy(Article,\n\t\t{Année civile}),\n\tprix_unitaire = mean({CA facturé}/{Qté facturée})) ~> prixUnitaireLeft\nprixUnitaireLeft derive({Durée_période} = \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile}),\n\t\tjoin = 1) ~> dureePeriodeLeft\nplateforme aggregate(groupBy(WholeSalerID),\n\tHubName = max(WholeSalerHubID)) ~> uniqueWholeSalerID\nuniqueWholeSalerID select(mapColumn(\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> drop\ndrop derive(join = 1) ~> join\ndureePeriodeLeft, join join(dureePeriodeLeft@join == join@join,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\ndropNULL select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\ndropColumnsInCommon derive({Période} = 1) ~> addperiod\ndropColumns2, averagePrix union(byName: true)~> Union1\nfactureFilter filter(fact_filter1==0 || fact_filter2==0) ~> facFilter\nSort2 keyGenerate(output(ID as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> addNewKey\nchangementDePeriodeFiltre select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deletePreviousAndNext\ndeletePreviousAndNext sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> Sort2\naddNewKey derive(ID = ID-1) ~> nextNewID\nnextNewID select(mapColumn(\n\t\t{next WholeSalerID} = WholeSalerID,\n\t\t{next Article} = Article,\n\t\t{next Année civile} = {Année civile},\n\t\t{next Mois calendrier} = {Mois calendrier},\n\t\t{next ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToNextNew\naddNewKey derive(ID = ID+1) ~> previousNewID\npreviousNewID select(mapColumn(\n\t\t{previous WholeSalerID} = WholeSalerID,\n\t\t{previous Article} = Article,\n\t\t{previous Année civile} = {Année civile},\n\t\t{previous Mois calendrier} = {Mois calendrier},\n\t\t{previous ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToPreviousNew\naddNewKey, renameToPreviousNew join(ID == {previous ID},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinNewPreviousID\njoinNewPreviousID, renameToNextNew join(ID == {next ID},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinNewNextID\naddperiod, dropColumns2 join(dropColumnsInCommon@WholeSalerID == dropColumns2@WholeSalerID\n\t&& dropColumnsInCommon@Article == dropColumns2@Article,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join2\njoin2 filter(isNull(dropColumns2@WholeSalerID) || isNull(dropColumns2@Article)) ~> leftJoin\nleftJoin select(mapColumn(\n\t\tArticle = dropColumnsInCommon@Article,\n\t\tprix_unitaire = dropColumnsInCommon@prix_unitaire,\n\t\t{Durée_période} = dropColumnsInCommon@{Durée_période},\n\t\tWholeSalerID = dropColumnsInCommon@WholeSalerID,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> averagePrix\nfacturationAC, facturationAP union(byName: true)~> UnionFacturation\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TEMP_PRIX_PAR_PERIODE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> dureePeriodeOutput"
				}
			},
			"dependsOn": []
		}
	]
}