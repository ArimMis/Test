{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-VAILLANT"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/unionEcoulement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccoulement_union.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "marque_num",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionSapEhsIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "unionClientSapEHS",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/venteDirectePrepared')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vmcinput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "VMC",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Material",
						"type": "String"
					},
					{
						"name": "Description article",
						"type": "String"
					},
					{
						"name": "VMC",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wholesalerOrgat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_wholesaler_orgat.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ATC_PERFORMANCE_ET_CLIENT_SAP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BASE_AVANT_TRAITEMENT_ATC",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "SECTEUR_FICTIF",
								"type": "DatasetReference"
							},
							"name": "secteurFictif"
						},
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "ExtractionSAP"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtcinput"
						},
						{
							"dataset": {
								"referenceName": "input_manuel",
								"type": "DatasetReference"
							},
							"name": "inputManuel"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "baseCommercialOut",
								"type": "DatasetReference"
							},
							"name": "outFinale"
						},
						{
							"dataset": {
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference"
							},
							"name": "outDTP2"
						}
					],
					"transformations": [
						{
							"name": "atcOffreINNER"
						},
						{
							"name": "atcOffreFULLLEFT"
						},
						{
							"name": "atcOffreOUTERLEFT"
						},
						{
							"name": "updateATCOffre"
						},
						{
							"name": "nullToEmpty"
						},
						{
							"name": "atcOffreTraite"
						},
						{
							"name": "atcCorrigeINNER"
						},
						{
							"name": "atcCorrigeFULLLEFT"
						},
						{
							"name": "atcCorrigeOUTERLEFT"
						},
						{
							"name": "deleteSecteurColumn"
						},
						{
							"name": "updateATCCorrige"
						},
						{
							"name": "atcCorrigetraite"
						},
						{
							"name": "deleteSecteurColumn2"
						},
						{
							"name": "atcPerformance"
						},
						{
							"name": "deleteColumns"
						},
						{
							"name": "placerATCperformance"
						},
						{
							"name": "JoinClientDirect"
						},
						{
							"name": "RenameSAP"
						},
						{
							"name": "JoinClientIndirect"
						},
						{
							"name": "MapDrifted2",
							"description": "Crée un mappage explicite pour chaque colonne dérivée"
						},
						{
							"name": "deleteColumns2"
						},
						{
							"name": "deleteColumns3"
						},
						{
							"name": "AgregateClient"
						},
						{
							"name": "RenameClientDirect"
						},
						{
							"name": "RenameClientIndirect"
						},
						{
							"name": "columnDPT2"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "diffusChantier"
						},
						{
							"name": "endSecteurFictifs"
						},
						{
							"name": "uniqueNoATC"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "endAtc"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "Select2"
						},
						{
							"name": "JoinATCDR"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select5"
						},
						{
							"name": "atcPerformancecast"
						},
						{
							"name": "Union1"
						},
						{
							"name": "inputManualVerfiaction"
						},
						{
							"name": "renameToDTP2"
						},
						{
							"name": "unionAjoutManuel"
						},
						{
							"name": "yearmonthManuel"
						},
						{
							"name": "origineDeLaLigne"
						},
						{
							"name": "ATCPerformanceNF"
						},
						{
							"name": "mapPeriode"
						},
						{
							"name": "endPrixPeriode"
						},
						{
							"name": "join1"
						},
						{
							"name": "enddAddPeriode"
						},
						{
							"name": "temdist"
						},
						{
							"name": "clearPeriode"
						},
						{
							"name": "endBC"
						},
						{
							"name": "startBC"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal du client livré} as string,\n\t\tmarque as string,\n\t\t{ID marque} as string,\n\t\t{ID canal de distribution} as string,\n\t\t{Nom du canal} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{document_vente (vente directe)} as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\t{Numéro offre} as string,\n\t\t{ATC Corrigé (vente directe)} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande (vente directe)} as string,\n\t\t{Type de facture (vente directe)} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\tNoATC as string,\n\t\tATC as string,\n\t\tDRCde as string,\n\t\tFirstName as string,\n\t\tLastName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> secteurFictif\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionSAP\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refAtcinput\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal du client livré} as string,\n\t\tmarque as string,\n\t\t{ID marque} as string,\n\t\t{ID canal de distribution} as string,\n\t\t{Nom du canal} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{document_vente (vente directe)} as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\t{Numéro offre} as string,\n\t\t{ATC Corrigé (vente directe)} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{DR (ATC Performance)} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\t{Motif commande (vente directe)} as string,\n\t\t{Type de facture (vente directe)} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputManuel\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixPeriode\nnullToEmpty, endSecteurFictifs join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcOffreINNER\nstartBC, endSecteurFictifs join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcOffreFULLLEFT\nDerivedColumn1 filter(isNull(NoATC)) ~> atcOffreOUTERLEFT\natcOffreINNER derive({ATC fictif offre} = 1) ~> updateATCOffre\nstartBC derive({ATC offre} = iif(isNull({ATC offre}), \"\", {ATC offre}),\n\t\t{ATC Corrigé (vente directe)} = iif(isNull({ATC Corrigé (vente directe)}), \"\", {ATC Corrigé (vente directe)})) ~> nullToEmpty\nupdateATCOffre, atcOffreOUTERLEFT union(byName: true)~> atcOffreTraite\ndeleteSecteurColumn, endSecteurFictifs join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcCorrigeINNER\ndeleteSecteurColumn, endSecteurFictifs join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcCorrigeFULLLEFT\natcCorrigeFULLLEFT filter(isNull(NoATC)) ~> atcCorrigeOUTERLEFT\nSelect5 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn\natcCorrigeINNER derive({ATC fictif Corrigé} = 1) ~> updateATCCorrige\nSelect4, updateATCCorrige union(byName: true)~> atcCorrigetraite\ndeleteColumns select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{ATC fictif Corrigé},\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn2\ndeleteSecteurColumn2 derive({ATC Performance} = iif(!isNull({ATC offre} ) && {ATC fictif offre}!=1, {ATC offre}, {ATC livré})) ~> atcPerformance\nSelect3 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif Corrigé},\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteColumns\natcPerformance select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> placerATCperformance\nplacerATCperformance, RenameClientDirect join({Code client livré} == {Client Direct},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinClientDirect\nMapDrifted2 select(mapColumn(\n\t\t{Client Direct} = Client,\n\t\t{Client Direct - Hiérarchie N1 SAP } = {_c4},\n\t\t{Client Direct - Hiérarchie N2 SAP } = {_c6}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameSAP\ndeleteColumns2, RenameClientIndirect join({Numéro client indirect} == {Client Indirect},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinClientIndirect\nExtractionSAP derive({_c2} = toString(byName('_c2')),\n\t\t{_c4} = toString(byName('_c4')),\n\t\t{_c6} = toString(byName('_c6')),\n\t\t{_c8} = toString(byName('_c8')),\n\t\t{_c10} = toString(byName('_c10')),\n\t\t{_c18} = toString(byName('_c18')),\n\t\t{_c22} = toString(byName('_c22')),\n\t\t{_c24} = toString(byName('_c24')),\n\t\t{_c26} = toString(byName('_c26')),\n\t\t{_c28} = toString(byName('_c28')),\n\t\t{_c30} = toString(byName('_c30')),\n\t\t{_c32} = toString(byName('_c32')),\n\t\t{_c34} = toString(byName('_c34')),\n\t\t{_c36} = toString(byName('_c36')),\n\t\t{_c39} = toString(byName('_c39')),\n\t\t{_c41} = toString(byName('_c41')),\n\t\t{_c43} = toString(byName('_c43'))) ~> MapDrifted2\nJoinClientDirect select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteColumns2\nATCPerformanceNF select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tDR,\n\t\tNomATC = endAtc@NomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteColumns3\nRenameSAP aggregate(groupBy({Client Direct}),\n\t{Client Direct - Hiérarchie N1 SAP } = first({Client Direct - Hiérarchie N1 SAP }),\n\t\t{Client Direct - Hiérarchie N2 SAP } = first({Client Direct - Hiérarchie N2 SAP })) ~> AgregateClient\nAgregateClient select(mapColumn(\n\t\t{Client Direct},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameClientDirect\nAgregateClient select(mapColumn(\n\t\t{Client Indirect} = {Client Direct},\n\t\t{Client Indirect - Hiérarchie N1 SAP} = {Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Indirect - Hiérarchie N2 SAP} = {Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameClientIndirect\ndeleteColumns3 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal} = {Code postal du client livré},\n\t\tmarque,\n\t\tmarque_code = {ID marque},\n\t\tcanal_distribution_final = {ID canal de distribution},\n\t\t{nom du canal} = {Nom du canal},\n\t\tcanal_final = {Diffus/Chantier},\n\t\tdocument_vente = {document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\tno_offre = {Numéro offre},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tDR,\n\t\tMatricule,\n\t\t{Motif commande} = {Motif commande (vente directe)},\n\t\t{Type de facture} = {Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnDPT2\ncolumnDPT2 derive(yearmonth = year+month,\n\t\t{ATC Corrigé} = {ATC Performance}) ~> newColumns\nJoinClientIndirect derive({Diffus/Chantier} = iif({ID canal de distribution}==\"43\", \"Chantier\", \"Diffus\")) ~> diffusChantier\nuniqueNoATC select(mapColumn(\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endSecteurFictifs\nsecteurFictif aggregate(groupBy(NoATC),\n\tATC = last(ATC),\n\t\tDRCde = last(DRCde),\n\t\tFirstName = last(FirstName),\n\t\tLastName = last(LastName)) ~> uniqueNoATC\nnewColumns filter(isNull({ATC offre}) && isNull({ATC livré}) && isNull({ATC Corrigé})) ~> Filter1\nFilter1 aggregate(groupBy({plateforme/vente directe}),\n\tcount = count({plateforme/vente directe})) ~> Aggregate2\nAggregate3 select(mapColumn(\n\t\tATC,\n\t\tNomATC,\n\t\tDR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endAtc\nrefAtcinput select(mapColumn(\n\t\tATC,\n\t\tDR,\n\t\tNomATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(ATC),\n\tDR = first(DR),\n\t\tNomATC = first(NomATC)) ~> Aggregate3\ndeleteColumns3 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{DR (ATC Performance)} = DR,\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Client_direct_Nom du compte} = {EPS_Nom du compte},\n\t\t{Client direct_Groupe cible/Typologie générale} = {EPS_Groupe cible/Typologie générale},\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} = {EPS_Sous groupe cible/Typologie détaillée},\n\t\t{Client direct_Compte principal: Numéro du compte} = {EPS_Compte principal: Numéro du compte},\n\t\t{Client direct_Compte principal: Nom du compte} = {EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ndiffusChantier, endAtc join(toInteger({ATC Performance}) == toInteger(ATC),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinATCDR\nupdateATCOffre filter(isNull({ATC fictif offre})) ~> Filter2\nupdateATCCorrige filter(isNull({ATC fictif Corrigé})) ~> Filter3\natcCorrigetraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif offre},\n\t\t{ATC fictif Corrigé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\natcCorrigeOUTERLEFT select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\natcOffreFULLLEFT derive({ATC fictif offre} = 0) ~> DerivedColumn1\natcOffreTraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect2 derive({ATC Performance} = toString(toInteger({ATC Performance}))) ~> atcPerformancecast\natcPerformancecast, inputManualVerfiaction union(byName: true)~> Union1\norigineDeLaLigne select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{DR (ATC Performance)},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Client_direct_Nom du compte},\n\t\t{Client direct_Groupe cible/Typologie générale},\n\t\t{Client direct_Sous groupe cible/Typologie détaillée},\n\t\t{Client direct_Compte principal: Numéro du compte},\n\t\t{Client direct_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> inputManualVerfiaction\nyearmonthManuel select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal} = {Code postal du client livré},\n\t\tmarque,\n\t\tmarque_code = {ID marque},\n\t\tcanal_distribution_final = {ID canal de distribution},\n\t\t{nom du canal} = {Nom du canal},\n\t\tcanal_final = {Diffus/Chantier},\n\t\tdocument_vente = {document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\tno_offre = {Numéro offre},\n\t\t{ATC Corrigé} = {ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\tDR = {DR (ATC Performance)},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\t{Motif commande} = {Motif commande (vente directe)},\n\t\t{Type de facture} = {Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Client_direct_Nom du compte},\n\t\t{Client direct_Groupe cible/Typologie générale},\n\t\t{Client direct_Sous groupe cible/Typologie détaillée},\n\t\t{Client direct_Compte principal: Numéro du compte},\n\t\t{Client direct_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP},\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToDTP2\nnewColumns, renameToDTP2 union(byName: true)~> unionAjoutManuel\ninputManualVerfiaction derive(yearmonth = year+iif(length(month)==1, \"0\"+month, month)) ~> yearmonthManuel\ninputManuel derive({origine de la ligne} = \"Ajout manuel\") ~> origineDeLaLigne\nJoinATCDR derive({ATC Performance} = iif({affecte/non_affecte}=='non affecté', \"\", {ATC Performance})) ~> ATCPerformanceNF\nprixPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> mapPeriode\nmapPeriode select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endPrixPeriode\ntemdist, endPrixPeriode join(toInteger(year) == toInteger(annee2)\n\t&& toInteger(Union1@month) == toInteger(endPrixPeriode@month)\n\t&& coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& iif (  replace(lower(tdist), \" \", \"\") =='vf', \"vf_confort\" ,  replace(lower(tdist), \" \", \"\") ) == replace(lower(Distributeur), \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join1\njoin1 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth = Union1@month,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{DR (ATC Performance)},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Client_direct_Nom du compte},\n\t\t{Client direct_Groupe cible/Typologie générale},\n\t\t{Client direct_Sous groupe cible/Typologie détaillée},\n\t\t{Client direct_Compte principal: Numéro du compte},\n\t\t{Client direct_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP},\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> enddAddPeriode\nUnion1 derive(tdist = replace({plateforme/vente directe}, \"plateforme\", \"\")) ~> temdist\nenddAddPeriode derive({Période} = iif( in( [\"facturation\" ,\"decrementation ecoulement sans matching\",\"facturation decrementé\"] , {origine de la ligne}) , month  ,{Période} )) ~> clearPeriode\nclearPeriode derive(month = iif( in( [\"facturation\" ,\"decrementation ecoulement sans matching\",\"facturation decrementé\"]  , {origine de la ligne}) , \"\"  ,month )) ~> endBC\nbaseCommerciale select(mapColumn(\n\t\teach(match(/* All input columns */ true()),\n\t\t\t/* Input name */ $$ = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> startBC\nendBC sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\t{Code postal} as string\n\t),\n\tpartitionFileNames:['base commerciale.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outFinale\nunionAjoutManuel sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['BaseCommercialeDTP2.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outDTP2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BaseCommercialePOSTUnion')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "base commercial après UNion",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InUnionBasecommercial",
								"type": "DatasetReference"
							},
							"name": "BCUnion"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "ArticleHierarchi"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "Plateformes"
						},
						{
							"dataset": {
								"referenceName": "ExtractionComptesEPSTypologieSousTypoComptePrincipal",
								"type": "DatasetReference"
							},
							"name": "ExtractionCompte"
						},
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "ClientEHS"
						},
						{
							"dataset": {
								"referenceName": "StgOffreUniq",
								"type": "DatasetReference"
							},
							"name": "StgOffreUnique"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCommercialNotfound",
								"type": "DatasetReference"
							},
							"name": "DataCommercialNotFOund"
						},
						{
							"dataset": {
								"referenceName": "TEMP_baseCommercialOut",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Cleansing"
						},
						{
							"name": "AtcSOurceATC"
						},
						{
							"name": "MarqueID"
						},
						{
							"name": "renameReference"
						},
						{
							"name": "UniqueReferenc"
						},
						{
							"name": "JoinArticle"
						},
						{
							"name": "LeftJoinArticle"
						},
						{
							"name": "QtFinalCaFinalCanalDistributin"
						},
						{
							"name": "toDoubleCA"
						},
						{
							"name": "ExtractYearandMonth"
						},
						{
							"name": "Distributeur"
						},
						{
							"name": "distributeurr"
						},
						{
							"name": "RenameDistributeur"
						},
						{
							"name": "JoinPlateforme"
						},
						{
							"name": "CDistributeur"
						},
						{
							"name": "PossmidString"
						},
						{
							"name": "UnionClientEHSandExtractionCompte"
						},
						{
							"name": "AgregatNumeroCompte"
						},
						{
							"name": "SelectNomClient"
						},
						{
							"name": "JoinCompte"
						},
						{
							"name": "affecteNonaffecte"
						},
						{
							"name": "IdMarque"
						},
						{
							"name": "NomDuCanal"
						},
						{
							"name": "RenameDistrib"
						},
						{
							"name": "FiltrerN1Locale"
						},
						{
							"name": "RenameCaFinal"
						},
						{
							"name": "FiltreReferenceNull"
						},
						{
							"name": "renameColumns"
						},
						{
							"name": "JoinStgOffreUnique"
						},
						{
							"name": "EPSData",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "RenameNUmeroInterne"
						},
						{
							"name": "joinEPS"
						},
						{
							"name": "renameAndRepositionColumns"
						},
						{
							"name": "choiceColumns"
						},
						{
							"name": "columnsChoice"
						},
						{
							"name": "typeParseQuantity"
						},
						{
							"name": "renameColumns1"
						},
						{
							"name": "pointToComme"
						},
						{
							"name": "FilterDSC"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "uniqueCanalAndOffre"
						}
					],
					"script": "source(output(\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tcanal_final as string,\n\t\tid_canal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPOSSAMidString as string,\n\t\treference as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\tyearmonth as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\t{Agence commerciale} as string,\n\t\t{ATC Corrigé} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tHubSAPid as string,\n\t\tNoCli as string,\n\t\t{ATC Performance} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tqt_plateforme_final as string,\n\t\tca_plateforme_final as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tagence_code as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> BCUnion\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ArticleHierarchi\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Plateformes\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionCompte\nsource(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ClientEHS\nsource(output(\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\tRight_Produit as string,\n\t\t{Right_Quantité} as string,\n\t\t{Right_Numéro interne 1} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> StgOffreUnique\nrenameAndRepositionColumns derive({ATC 2} = iif(isNull({ATC 2}),'',{ATC 2}),\n\t\t{ATC 1} = iif(isNull({ATC 1}),'',{ATC 1})) ~> Cleansing\nCleansing derive(ATC = iif(distributeur!='vente directe', \r\n iif({ATC 2}!='', {ATC 2}, {ATC 1}),\r\n  iif({ATC Corrigé}!='', {ATC Corrigé}, iif({ATC 2}!='', {ATC 2}, {ATC 1}))),\n\t\tsource_atc = iif(isNull({ATC 2})||{ATC 2}!='0','[ATC 2]','[ATC 1]')) ~> AtcSOurceATC\nAtcSOurceATC derive(marque_id = marque_id) ~> MarqueID\nArticleHierarchi select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\treference = Article,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\tN1groupe = {N1.groupe},\n\t\tN2groupe = {N2.groupe},\n\t\tN3groupe = {N3.groupe},\n\t\tN4groupe = {N4.groupe},\n\t\tN5groupe = {N5.groupe},\n\t\tN6groupe = {N6.groupe},\n\t\tN7groupe = {N7.groupe},\n\t\tN1locale = {N1.locale},\n\t\tN2locale = {N2.locale},\n\t\tN3locale = {N3.locale},\n\t\tN4locale = {N4.locale},\n\t\tN5locale = {N5.locale},\n\t\tN6locale = {N6.locale},\n\t\tN7locale = {N7.locale},\n\t\tN1groupedesignation = {N1.groupe.designation},\n\t\tN2groupedesignation = {N2.groupe.designation},\n\t\tN3groupedesignation = {N3.groupe.designation},\n\t\tN4groupedesignation = {N4.groupe.designation},\n\t\tN5groupedesignation = {N5.groupe.designation},\n\t\tN6groupedesignation = {N6.groupe.designation},\n\t\tN7groupedesignation = {N7.groupe.designation},\n\t\tN1localedesignation = {N1.locale.designation},\n\t\tN2localedesignation = {N2.locale.designation},\n\t\tN3localedesignation = {N3.locale.designation},\n\t\tN4localedesignation = {N4.locale.designation},\n\t\tN5localedesignation = {N5.locale.designation},\n\t\tN6localedesignation = {N6.locale.designation},\n\t\tN7localedesignation = {N7.locale.designation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameReference\nrenameReference aggregate(groupBy(reference,\n\t\tDescription),\n\tSuccessor = max(Successor),\n\t\tCDis = max(CDis),\n\t\tOrgCm = max(OrgCm),\n\t\tPredecessor = max(Predecessor),\n\t\tSt = max(St),\n\t\t{Désignation Statut} = max({Désignation Statut}),\n\t\t{Deb val} = max({Déb. val.}),\n\t\tN1groupe = max(N1groupe),\n\t\tN2groupe = max(N2groupe),\n\t\tN3groupe = max(N3groupe),\n\t\tN4groupe = max(N4groupe),\n\t\tN5groupe = max(N5groupe),\n\t\tN6groupe = max(N6groupe),\n\t\tN7groupe = max(N7groupe),\n\t\tN1groupedesignation = max(N1groupedesignation),\n\t\tN2groupedesignation = max(N2groupedesignation),\n\t\tN3groupedesignation = max(N3groupedesignation),\n\t\tN4groupedesignation = max(N4groupedesignation),\n\t\tN5groupedesignation = max(N5groupedesignation),\n\t\tN6groupedesignation = max(N6groupedesignation),\n\t\tN7groupedesignation = max(N7groupedesignation),\n\t\tN1localedesignation = max(N1localedesignation),\n\t\tN2localedesignation = max(N2localedesignation),\n\t\tN3localedesignation = max(N3localedesignation),\n\t\tN4localedesignation = max(N4localedesignation),\n\t\tN5localedesignation = max(N5localedesignation),\n\t\tN6localedesignation = max(N6localedesignation),\n\t\tN7localedesignation = max(N7localedesignation),\n\t\tN1locale = max(N1locale),\n\t\tN2locale = max(N2locale),\n\t\tN3locale = max(N3locale),\n\t\tN4locale = max(N4locale),\n\t\tN5locale = max(N5locale),\n\t\tN6locale = max(N6locale),\n\t\tN7locale = max(N7locale),\n\t\t{Hiérarchgroupe} = max({Hiérarch.groupe}),\n\t\t{Hiérarchlocale} = max({Hiérarch.locale})) ~> UniqueReferenc\nMarqueID, UniqueReferenc join(coalesce(toString(toInteger(replace(renameAndRepositionColumns@reference, \" \", \"\"))),replace(renameAndRepositionColumns@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(UniqueReferenc@reference, \" \", \"\"))),replace(UniqueReferenc@reference, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinArticle\nMarqueID, UniqueReferenc join(coalesce(toString(toInteger(replace(renameAndRepositionColumns@reference, \" \", \"\"))),replace(renameAndRepositionColumns@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(UniqueReferenc@reference, \" \", \"\"))),replace(UniqueReferenc@reference, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinArticle\ntoDoubleCA derive(qt_final = coalesce(qt_ecc_enrichi ,{qte plateforme final}  ),\n\t\tca_final = coalesce( ca_ecc_enrichi, {ca plateforme final} ),\n\t\tcanal_distribution_final = id_canal_final) ~> QtFinalCaFinalCanalDistributin\nRenameCaFinal derive(ca_ecc_enrichi = toDouble(ca_ecc_enrichi),\n\t\t{ca plateforme final} = toDouble({ca plateforme final})) ~> toDoubleCA\nQtFinalCaFinalCanalDistributin derive(year = substring(yearmonth,1,4),\n\t\tmonth = substring(yearmonth,5,2)) ~> ExtractYearandMonth\nPlateformes derive(Distributeur = lower(WholeSalerID),\n\t\tDist = lower(WholeSalerID)) ~> Distributeur\nDistributeur derive(Distributeur = iif(Distributeur=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(Distributeur, 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(Distributeur, 'dsc')>0, 'dsc', \r\n    iif(instr(Distributeur, 'vf' )>0, 'vf', \r\n     iif(instr(Distributeur, 'sonac' )>0, 'sonac',\r\nDist)))))) ~> distributeurr\ndistributeurr select(mapColumn(\n\t\tHubSAPid,\n\t\tt_distrubuteur = Distributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistributeur\nExtractYearandMonth, RenameDistributeur join(RenameCaFinal@HubSAPid == RenameDistributeur@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinPlateforme\nJoinPlateforme derive(distributeur = iif(isNull(RenameDistributeur@HubSAPid),distributeur, 'plateforme '+t_distrubuteur)) ~> CDistributeur\nCDistributeur derive(POSSAMidString = coalesce(POSSAMidString , RenameCaFinal@HubSAPid)) ~> PossmidString\nExtractionCompte, SelectNomClient union(byName: true)~> UnionClientEHSandExtractionCompte\nUnionClientEHSandExtractionCompte aggregate(groupBy({Numéro du compte}),\n\t{Nom du compte} = max({Nom du compte}),\n\t\t{Groupe cible/Typologie générale} = max({Groupe cible/Typologie générale}),\n\t\t{Sous groupe cible/Typologie détaillée} = max({Sous groupe cible/Typologie détaillée}),\n\t\t{Compte principal: Numéro du compte} = max({Compte principal: Numéro du compte}),\n\t\t{Compte principal: Nom du compte} = max({Compte principal: Nom du compte})) ~> AgregatNumeroCompte\nClientEHS select(mapColumn(\n\t\t{Numéro du compte} = Client,\n\t\t{Nom du compte} = Nom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNomClient\nPossmidString, EPSData join(toInteger(POSSAMidString) == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCompte\nchoiceColumns derive({affecte/non_affecte} = iif(  ( data_origin ==\"vente directe\") , \"affecté\" , \r\n   iif(  ( data_origin == \"facturation decrementé\"  || data_origin==\"facturation sans matching\" || data_origin==\"decrementation ecoulement sans matching\") ,\r\n    \"non affecté\" ,\r\n      iif( ( (distributeur == \"plateforme dsc\" || distributeur == \"plateforme tereva\") && data_origin == \"facturation\" ), \"non affecté\", \"affecté\")\r\n    )  \r\n)) ~> affecteNonaffecte\naffecteNonaffecte derive({id marque} = marque_id) ~> IdMarque\nIdMarque derive({nom du canal} = iif(canal_distribution_final=='45', 'FP', \r\n iif(canal_distribution_final=='51', 'FS', \r\n  iif(canal_distribution_final=='43', 'FC', 'FD')))) ~> NomDuCanal\nNomDuCanal select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré} = POSSAMidString,\n\t\t{code client plateforme livree} = HubSAPid,\n\t\t{code produit} = reference,\n\t\t{plateforme/vente directe} = distributeur,\n\t\t{Code postal},\n\t\tmarque = marque_name,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Canal distribution} = id_canal_final,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite = qt_final,\n\t\tca = ca_final,\n\t\t{origine de la ligne} = data_origin,\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC offre} = {ATC 2},\n\t\t{ATC livré} = {ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_code = marque_id,\n\t\t{Document de vente} = document_vente,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tmarque_id,\n\t\t{ATC Performance} = ATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistrib\nRenameDistrib filter(N1locale==\"FA\"||\r\nN1locale==\"FB\"||\r\nN1locale==\"FC\"||\r\nN1locale==\"FD\"||\r\nN1locale==\"FE\"||\r\nN1locale==\"FG\"||\r\nN1locale==\"FH\"||\r\nN1locale==\"FL\"||\r\nN1locale==\"FM\"||\r\nN1locale==\"FP\"||\r\nN1locale==\"FR\"||\r\nN1locale==\"FV\") ~> FiltrerN1Locale\nJoinArticle select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = renameAndRepositionColumns@reference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\t{Secteur d'activité},\n\t\tdocument_vente = {Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_ecc_enrichi = ca_final,\n\t\tqt_ecc_enrichi = qt_final,\n\t\t{qte plateforme final} = qt_plateforme_final,\n\t\t{ca plateforme final} = ca_plateforme_final,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\t{ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameCaFinal\nLeftJoinArticle filter(isNull(UniqueReferenc@reference)) ~> FiltreReferenceNull\nFiltrerN1Locale select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\t{plateforme/vente directe},\n\t\t{Code postal},\n\t\tmarque,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite,\n\t\tca,\n\t\t{origine de la ligne},\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_code,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\t{ATC Performance},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrenameColumns, RenameNUmeroInterne join(canal_final == canal\n\t&& no_offre == Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStgOffreUnique\nAgregatNumeroCompte derive({Numéro du compte} = toInteger({Numéro du compte})) ~> EPSData\nuniqueCanalAndOffre select(mapColumn(\n\t\tMarque,\n\t\t{Quantité},\n\t\t{Numéro client indirect} = {Numéro interne 1},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tATC,\n\t\tcanal,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\tRight_Produit,\n\t\t{Right_Quantité},\n\t\t{Right_Numéro interne 1}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameNUmeroInterne\nJoinStgOffreUnique, EPSData join(toInteger({Numéro client indirect}) == EPSData@{Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinEPS\nBCUnion select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Agence commerciale},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2} = {ATC Performance},\n\t\t{ATC 1} = ATC,\n\t\t{ATC Corrigé},\n\t\tNomATC,\n\t\tMatricule,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_qte_ecoulement,\n\t\tSum_ca_ecoulement,\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAndRepositionColumns\nJoinCompte select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = RenameCaFinal@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_ecc_enrichi,\n\t\tqt_ecc_enrichi,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\t{ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tHubSAPid = RenameDistributeur@HubSAPid,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> choiceColumns\njoinEPS select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal},\n\t\tmarque = renameColumns@marque,\n\t\tmarque_code,\n\t\t{Canal distribution},\n\t\t{nom du canal},\n\t\tcanal_distribution_final,\n\t\tcanal_final,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\tno_offre,\n\t\t{ATC Corrigé},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tqte_ecoulement,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\t{Motif commande},\n\t\t{Type de facture},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte} = renameColumns@{Numéro du compte},\n\t\t{EPS_Nom du compte} = renameColumns@{Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale} = renameColumns@{Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée} = renameColumns@{Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte} = renameColumns@{Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte} = renameColumns@{Compte principal: Nom du compte},\n\t\tca_ecoulement,\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tATC,\n\t\tcanal,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\t{Numéro du compte} = EPSData@{Numéro du compte},\n\t\t{Nom du compte} = AgregatNumeroCompte@{Nom du compte},\n\t\t{Numero Interne_ Groupe cible/Typologie générale} = AgregatNumeroCompte@{Groupe cible/Typologie générale},\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} = AgregatNumeroCompte@{Sous groupe cible/Typologie détaillée},\n\t\t{Numero Interne_ Compte principal: Numéro du compte} = AgregatNumeroCompte@{Compte principal: Numéro du compte},\n\t\t{Numero Interne_ Compte principal: Nom du compte} = AgregatNumeroCompte@{Compte principal: Nom du compte},\n\t\t{Jour calendaire}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoice\ncolumnsChoice derive(quantite = toInteger(quantite),\n\t\tmarque = iif(marque_code=='1604', \"SaunierDuval\", iif(marque_code=='1621', \"Vaillant\", \"\"))) ~> typeParseQuantity\ntypeParseQuantity select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré} = {Code postal},\n\t\tmarque,\n\t\t{ID marque} = marque_code,\n\t\t{ID canal de distribution} = {Canal distribution},\n\t\t{Nom du canal} = {nom du canal},\n\t\t{Diffus/Chantier} = canal_final,\n\t\t{document_vente (vente directe)} = document_vente,\n\t\t{Agence commerciale corrigé (vente directe)} = {Agence commerciale corrigé},\n\t\t{Donneur d'ordre (vente directe)} = {Donneur d'ordre},\n\t\t{Facture (vente directe)} = Facture,\n\t\t{Type poste Facture (vente directe)} = {Type poste Facture},\n\t\t{Numéro offre} = no_offre,\n\t\t{ATC Corrigé (vente directe)} = {ATC Corrigé},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)} = {Motif commande},\n\t\t{Type de facture (vente directe)} = {Type de facture},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale} = {Numero Interne_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} = {Numero Interne_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte} = {Numero Interne_ Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte} = {Numero Interne_ Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns1\nrenameColumns1 derive(ca = replace(toString(ca), \".\", \",\")) ~> pointToComme\nJoinCompte filter(instr(distributeur, \"dsc\")>0 && (year==\"2020\")&&  instr(data_origin, \"retr\")>0) ~> FilterDSC\nFilterDSC aggregate(column1 = sum(toDouble(qt_final))) ~> Aggregate1\nStgOffreUnique aggregate(groupBy(canal,\n\t\tOffre),\n\tMarque = last(Marque),\n\t\t{Quantité} = last({Quantité}),\n\t\t{Numéro interne 1} = last( {Numéro interne 1}),\n\t\tClient = last(Client),\n\t\tResponsable = last(Responsable),\n\t\tCODE_CMI = last(CODE_CMI),\n\t\tNOM_CMI = last(NOM_CMI),\n\t\tATC = last(ATC),\n\t\tProduit = last(Produit),\n\t\t{Numéro interne 2} = last({Numéro interne 2}),\n\t\tRight_Produit = last(Right_Produit),\n\t\t{Right_Quantité} = last({Right_Quantité}),\n\t\t{Right_Numéro interne 1} = last({Right_Numéro interne 1})) ~> uniqueCanalAndOffre\nFiltreReferenceNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['BaseCommercialArticle.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DataCommercialNotFOund\npointToComme sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{yearmonth,year,month,qte_ecoulement,ca_ecoulement,POSSAMidString,HubSAPid,reference,distributeur,agence_code,marque,Code postal,marque_name,toreplicate,dd,rcount,indexcols2,qte_ecc} as string\n\t),\n\tpartitionFileNames:['base commerciale.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_REMUNERATION_WITH_DATE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_REMUNERATION",
								"type": "DatasetReference"
							},
							"name": "CALCULREMUNERATION"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "dropArticleList"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "toKeep1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "toKeep"
						},
						{
							"name": "UniontoKeep"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "toDelete"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "toDelete2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "uniqueForCA"
						},
						{
							"name": "quantite"
						},
						{
							"name": "uniqueForQuantity"
						},
						{
							"name": "UnionCAQuantity"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "verificationDateDebutDateFin"
						},
						{
							"name": "filtreDate"
						},
						{
							"name": "filtreMarque"
						},
						{
							"name": "filter1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "hierarchieLocaleNonVide"
						},
						{
							"name": "coalesceArticle"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as date 'yyyy-MM-dd',\n\t\t{Date de fin} as date 'yyyy-MM-dd',\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, calculRem join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(replace(Canal, \" \", \"\"), \"<>\", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque)) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\ndropArticleList foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\ncoalesceArticle aggregate(groupBy(Article),\n\thierarchieLocale = first({Hiérarch.locale})) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropArticleList\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu, uniqueReferenceArticle join(coalesce(toString(toInteger(replace(code_produit, \" \", \"\"))),replace(code_produit, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ngetHierarchieLocale derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale} = hierarchieLocale,\n\t\tcount = hierarchieLocale,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\nFlattenFamilleExclu filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> toKeep1\nFlattenFamilleExclu filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> toKeep\ntoKeep1, toKeep union(byName: true)~> UniontoKeep\nUniontoKeep derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\nFlattenPOS, baseColumnChoice join(coalesce(toString(toInteger(replace(code_produit, \" \", \"\"))),replace(code_produit, \" \", \"\")) == coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\nfiltreDate select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque = FlattenPOS@Marque,\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nDerivedColumn1 select(mapColumn(\n\t\tyear,\n\t\tyearmonth,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> toDelete\ntoDelete filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif( !isNull(Canal) && Canal=={nom du canal} , 1, 0)) ~> toDelete2\ntoDelete2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca))) ~> uniqueForCA\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite))) ~> uniqueForQuantity\nuniqueForCA, uniqueForQuantity union(byName: true)~> UnionCAQuantity\nbaseCommerciale derive(ca = replace(ca, \",\", \".\")) ~> DerivedColumn1\nfiltreMarque derive(betweenDate = between(toDate(year+\"-\"+substring(yearmonth, 5, 2)+\"-01\"), {Date de début}, {Date de fin})) ~> verificationDateDebutDateFin\nverificationDateDebutDateFin filter(betweenDate==true()) ~> filtreDate\ninnerBaseCommerciale filter(lower(replace(FlattenPOS@Marque,\" \",\"\")) == lower(replace(baseColumnChoice@marque,\" \",\"\"))) ~> filtreMarque\nbaseColumnChoice filter({Code client livré}==\"16000761\" || {Code client livré}==\"16000475\" || {Code client livré}==\"\") ~> filter1\nfilter1 filter(year==\"2021\" && {nom du canal} != \"FC\" && marque==\"Vaillant\") ~> filter2\nfilter2 aggregate(groupBy(year),\n\tca = sum(toDouble(ca))) ~> aggregate1\narticle filter(!isNull({Hiérarch.locale})) ~> hierarchieLocaleNonVide\nhierarchieLocaleNonVide derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> coalesceArticle\nUnionCAQuantity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_REMUNERATION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> CALCULREMUNERATION"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_SEUIL_DEBUG')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "LEVIER_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "levier"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "CALCULSEUIL"
						},
						{
							"dataset": {
								"referenceName": "outtest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "dropArticleList"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "toKeep1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "toKeep"
						},
						{
							"name": "UniontoKeep"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "toDelete"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "uniqueForCA"
						},
						{
							"name": "quantite"
						},
						{
							"name": "uniqueForQuantity"
						},
						{
							"name": "UnionCAQuantity"
						},
						{
							"name": "innerTemplateContrat"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "Realise"
						},
						{
							"name": "unique"
						},
						{
							"name": "innerTemplateRemuneration"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueYear"
						},
						{
							"name": "columnToJoin"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "addAllYear"
						},
						{
							"name": "verificationDateDebutDateFin"
						},
						{
							"name": "filtreDate"
						},
						{
							"name": "filtreMarque"
						},
						{
							"name": "filter2"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "hierarchieNull"
						},
						{
							"name": "aggregate3"
						},
						{
							"name": "deleteSpace"
						},
						{
							"name": "derivedCol"
						},
						{
							"name": "derivedColum"
						},
						{
							"name": "coalesceArticle"
						},
						{
							"name": "aggregate5"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "filter3"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derive"
						},
						{
							"name": "aggregate6"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as date 'yyyy-MM-dd',\n\t\t{Date de fin} as date 'yyyy-MM-dd',\n\t\t{Type de seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string,\n\t\t{Seuil min} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levier\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, levier join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(replace(Canal, \" \", \"\"), \"<>\", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque)) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\ndropArticleList foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\ndeleteSpace aggregate(groupBy(Article),\n\thierarchieLocale = first({Hiérarch.locale})) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropArticleList\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\ngetHierarchieLocale filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring(hierarchieLocale,1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> toKeep1\ngetHierarchieLocale filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring(hierarchieLocale,1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> toKeep\ntoKeep1, toKeep union(byName: true)~> UniontoKeep\nUniontoKeep derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale} = hierarchieLocale,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\ncoalesceArticle, baseColumnChoice join(coalesce(toString(toInteger(Article)),Article) == coalesce(toString(toInteger({code produit})),{code produit}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\nfiltreDate select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque = FlattenPOS@Marque,\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nDerivedColumn3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> toDelete\ntoDelete filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif( !isNull(Canal) && Canal=={nom du canal} , 1, 0)) ~> DerivedColumn2\nDerivedColumn2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca))) ~> uniqueForCA\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite))) ~> uniqueForQuantity\nuniqueForCA, uniqueForQuantity union(byName: true)~> UnionCAQuantity\nUnionCAQuantity, templateContrat join(UnionCAQuantity@{ID contrat cadre} == templateContrat@{ID contrat cadre}\n\t&& UnionCAQuantity@{ID contrat} == templateContrat@{ID contrat}\n\t&& UnionCAQuantity@{ID levier} == templateContrat@{ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateContrat\ninnerTemplateContrat select(mapColumn(\n\t\t{ID contrat cadre} = UnionCAQuantity@{ID contrat cadre},\n\t\t{ID contrat} = UnionCAQuantity@{ID contrat},\n\t\t{ID levier} = UnionCAQuantity@{ID levier},\n\t\tyear,\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité},\n\t\t{ID Seuil},\n\t\t{Objectif (avec règles de validation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\ndropColumns filter({Réalisé}>=toDouble({Objectif (avec règles de validation)})) ~> Realise\nRealise aggregate(groupBy(year,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Max ID Seuil} = max(toInteger({ID Seuil}))) ~> unique\nunique, calculRem join(unique@{ID levier} == calculRem@{ID levier}\n\t&& toInteger({Max ID Seuil}) == toInteger({ID seuil}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateRemuneration\ninnerTemplateRemuneration select(mapColumn(\n\t\tyear,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier} = unique@{ID levier},\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nbaseCommerciale derive(ca = replace(ca, \",\", \".\"),\n\t\t{code produit} = replace({code produit}, \" \", \"\")) ~> DerivedColumn3\ndropColumnsInCommon, addAllYear join(dropColumnsInCommon@{ID contrat cadre} == dropArticleList@{ID contrat cadre}\n\t&& dropColumnsInCommon@{ID contrat} == dropArticleList@{ID contrat}\n\t&& dropColumnsInCommon@{ID levier} == dropArticleList@{ID levier}\n\t&& dropColumnsInCommon@year == uniqueYear@year,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\t{ID contrat cadre} = dropArticleList@{ID contrat cadre},\n\t\t{ID contrat} = dropArticleList@{ID contrat},\n\t\t{ID levier} = dropArticleList@{ID levier},\n\t\tyear = uniqueYear@year\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\ndropColumnsInCommon aggregate(groupBy(year),\n\tjoin = max({ID contrat cadre})) ~> uniqueYear\nuniqueYear derive(join = 1) ~> columnToJoin\ndropArticleList derive(join = 1) ~> DerivedColumn4\nDerivedColumn4, columnToJoin join(DerivedColumn4@join == columnToJoin@join,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> addAllYear\nfiltreMarque derive(betweenDate = between(toDate(year+\"-\"+substring(yearmonth, 5, 2)+\"-01\"), {Date de début}, {Date de fin})) ~> verificationDateDebutDateFin\nverificationDateDebutDateFin filter(betweenDate==true()) ~> filtreDate\ninnerBaseCommerciale filter(lower(replace(FlattenPOS@Marque,\" \",\"\")) == lower(replace(baseColumnChoice@marque,\" \",\"\"))) ~> filtreMarque\nfiltreCanal filter({ID levier}==\"20211621110\") ~> filter2\nderivedColumn1 aggregate(groupBy({ID levier}),\n\tca = sum(toDouble(ca))) ~> aggregate1\narticle filter(!isNull({Hiérarch.locale})) ~> hierarchieNull\nuniqueReferenceArticle aggregate(groupBy(Article),\n\t{Nombre base} = count(Article)) ~> aggregate3\nhierarchieNull derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> deleteSpace\nbaseColumnChoice derive({code produit} = coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\"))) ~> derivedCol\ninnerBaseCommerciale derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> derivedColum\nFlattenPOS derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> coalesceArticle\nFlattenCodeProduitExclu aggregate(groupBy(code_produit),\n\tcount = count(code_produit)) ~> aggregate5\nFlattenFamilleExclu, uniqueReferenceArticle join(coalesce(toString(toInteger(replace(code_produit, \" \", \"\"))),replace(code_produit, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ntoKeep filter({ID levier}==\"20211621122\") ~> filter3\nfilter2 derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> derivedColumn1\ndeleteCodeProduitExclu derive(code_produit = coalesce(toString(toInteger(replace({code_produit}, \" \", \"\"))),replace({code_produit}, \" \", \"\"))) ~> derive\nderive aggregate(groupBy(code_produit),\n\tnomb = count(code_produit)) ~> aggregate6\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_SEUIL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> CALCULSEUIL\naggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string\n\t),\n\tpartitionFileNames:['seuil.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_SEUIL_WITH_DATE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "LEVIER_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "levier"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "CALCULSEUIL"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "dropArticleList"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "toKeep1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "toKeep"
						},
						{
							"name": "UniontoKeep"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "toDelete"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "uniqueForCA"
						},
						{
							"name": "quantite"
						},
						{
							"name": "uniqueForQuantity"
						},
						{
							"name": "UnionCAQuantity"
						},
						{
							"name": "innerTemplateContrat"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "Realise"
						},
						{
							"name": "unique"
						},
						{
							"name": "innerTemplateRemuneration"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueYear"
						},
						{
							"name": "columnToJoin"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "addAllYear"
						},
						{
							"name": "verificationDateDebutDateFin"
						},
						{
							"name": "filtreDate"
						},
						{
							"name": "filtreMarque"
						},
						{
							"name": "hierarchieNull"
						},
						{
							"name": "aggregate3"
						},
						{
							"name": "deleteSpace"
						},
						{
							"name": "derivedCol"
						},
						{
							"name": "coalesceArticle"
						},
						{
							"name": "seuilMin"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as date 'yyyy-MM-dd',\n\t\t{Date de fin} as date 'yyyy-MM-dd',\n\t\t{Type de seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string,\n\t\t{Seuil min} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levier\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, seuilMin join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(replace(Canal, \" \", \"\"), \"<>\", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque),\n\t\t{Seuil min} = min({Seuil min})) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\ndropArticleList foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\ndeleteSpace aggregate(groupBy(Article),\n\thierarchieLocale = first({Hiérarch.locale})) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropArticleList\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu, uniqueReferenceArticle join(coalesce(toString(toInteger(replace(code_produit, \" \", \"\"))),replace(code_produit, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ngetHierarchieLocale derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale} = hierarchieLocale,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\nFlattenFamilleExclu filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> toKeep1\nFlattenFamilleExclu filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> toKeep\ntoKeep1, toKeep union(byName: true)~> UniontoKeep\nUniontoKeep derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\ncoalesceArticle, baseColumnChoice join(coalesce(toString(toInteger(Article)),Article) == coalesce(toString(toInteger({code produit})),{code produit}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\nfiltreDate select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque = FlattenPOS@Marque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nDerivedColumn3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> toDelete\ntoDelete filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif( !isNull(Canal) && Canal=={nom du canal} , 1, 0)) ~> DerivedColumn2\nDerivedColumn2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca)),\n\t\t{Seuil min} = min({Seuil min})) ~> uniqueForCA\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite)),\n\t\t{Seuil min} = min({Seuil min})) ~> uniqueForQuantity\nuniqueForCA, uniqueForQuantity union(byName: true)~> UnionCAQuantity\nUnionCAQuantity, templateContrat join(UnionCAQuantity@{ID contrat cadre} == templateContrat@{ID contrat cadre}\n\t&& UnionCAQuantity@{ID contrat} == templateContrat@{ID contrat}\n\t&& UnionCAQuantity@{ID levier} == templateContrat@{ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateContrat\ninnerTemplateContrat select(mapColumn(\n\t\t{ID contrat cadre} = UnionCAQuantity@{ID contrat cadre},\n\t\t{ID contrat} = UnionCAQuantity@{ID contrat},\n\t\t{ID levier} = UnionCAQuantity@{ID levier},\n\t\tyear,\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité},\n\t\t{ID Seuil},\n\t\t{Objectif (avec règles de validation)},\n\t\t{Seuil min}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\ndropColumns filter({Réalisé}>=toDouble({Objectif (avec règles de validation)}) && {Réalisé}>={Seuil min}) ~> Realise\nRealise aggregate(groupBy(year,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Max ID Seuil} = max(toInteger({ID Seuil}))) ~> unique\nunique, calculRem join(unique@{ID levier} == calculRem@{ID levier}\n\t&& toInteger({Max ID Seuil}) == toInteger({ID seuil}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateRemuneration\ninnerTemplateRemuneration select(mapColumn(\n\t\tyear,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier} = unique@{ID levier},\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nbaseCommerciale derive(ca = replace(ca, \",\", \".\"),\n\t\t{code produit} = replace({code produit}, \" \", \"\")) ~> DerivedColumn3\ndropColumnsInCommon, addAllYear join(dropColumnsInCommon@{ID contrat cadre} == dropArticleList@{ID contrat cadre}\n\t&& dropColumnsInCommon@{ID contrat} == dropArticleList@{ID contrat}\n\t&& dropColumnsInCommon@{ID levier} == dropArticleList@{ID levier}\n\t&& dropColumnsInCommon@year == uniqueYear@year,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\t{ID contrat cadre} = dropArticleList@{ID contrat cadre},\n\t\t{ID contrat} = dropArticleList@{ID contrat},\n\t\t{ID levier} = dropArticleList@{ID levier},\n\t\tyear = uniqueYear@year\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\ndropColumnsInCommon aggregate(groupBy(year),\n\tjoin = max({ID contrat cadre})) ~> uniqueYear\nuniqueYear derive(join = 1) ~> columnToJoin\ndropArticleList derive(join = 1) ~> DerivedColumn4\nDerivedColumn4, columnToJoin join(DerivedColumn4@join == columnToJoin@join,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> addAllYear\nfiltreMarque derive(betweenDate = between(toDate(year+\"-\"+substring(yearmonth, 5, 2)+\"-01\"), {Date de début}, {Date de fin})) ~> verificationDateDebutDateFin\nverificationDateDebutDateFin filter(betweenDate==true()) ~> filtreDate\ninnerBaseCommerciale filter(lower(replace(FlattenPOS@Marque,\" \",\"\")) == lower(replace(baseColumnChoice@marque,\" \",\"\"))) ~> filtreMarque\narticle filter(!isNull({Hiérarch.locale})) ~> hierarchieNull\nderivedCol aggregate({Nombre base} = count({code produit})) ~> aggregate3\nhierarchieNull derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> deleteSpace\nbaseColumnChoice derive({code produit} = coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\"))) ~> derivedCol\nFlattenPOS derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> coalesceArticle\nlevier derive({Seuil min} = iif(isNull({Seuil min}), 0, toInteger({Seuil min}))) ~> seuilMin\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_SEUIL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> CALCULSEUIL"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT_DISTRIBUTION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "seuil"
						},
						{
							"dataset": {
								"referenceName": "CALCUL_REMUNERATION",
								"type": "DatasetReference"
							},
							"name": "remuneration"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CONTRAT_DISTRIBUTION",
								"type": "DatasetReference"
							},
							"name": "CONTRATDISTRIBUTION"
						}
					],
					"transformations": [
						{
							"name": "innerJoin"
						},
						{
							"name": "remunerationColumn"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "fullLeftJoin"
						},
						{
							"name": "dropInner"
						},
						{
							"name": "dropColumnsLeft"
						},
						{
							"name": "Union"
						},
						{
							"name": "formatDecimal"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{Max ID Seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\tyear as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> seuil\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\tyear as string,\n\t\tca as string,\n\t\t{Réalisé} as string,\n\t\t{Somme quantité} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> remuneration\nseuil, remuneration join(seuil@{ID contrat cadre} == remuneration@{ID contrat cadre}\n\t&& seuil@{ID contrat} == remuneration@{ID contrat}\n\t&& seuil@{ID levier} == remuneration@{ID levier}\n\t&& seuil@year == remuneration@year,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerJoin\nUnion derive({Rémunération} = toDouble({Réalisé})*toDouble({Contrepartie seuil})) ~> remunerationColumn\ninnerJoin select(mapColumn(\n\t\tyear = seuil@year,\n\t\t{ID contrat cadre} = seuil@{ID contrat cadre},\n\t\t{ID contrat} = seuil@{ID contrat},\n\t\t{ID levier} = seuil@{ID levier},\n\t\t{ID Seuil} = {Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\tca,\n\t\t{quantité} = {Somme quantité},\n\t\t{Réalisé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nseuil, remuneration join(seuil@{ID contrat cadre} == remuneration@{ID contrat cadre}\n\t&& seuil@{ID contrat} == remuneration@{ID contrat}\n\t&& seuil@{ID levier} == remuneration@{ID levier}\n\t&& seuil@year == remuneration@year,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftJoin\nfullLeftJoin filter(isNull(remuneration@{ID contrat cadre}) && isNull(remuneration@{ID contrat}) && isNull(remuneration@{ID levier}) && isNull(remuneration@year)) ~> dropInner\ndropInner select(mapColumn(\n\t\tyear = seuil@year,\n\t\t{ID contrat cadre} = seuil@{ID contrat cadre},\n\t\t{ID contrat} = seuil@{ID contrat},\n\t\t{ID levier} = seuil@{ID levier},\n\t\t{ID Seuil} = {Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsLeft\ndropColumns, dropColumnsLeft union(byName: true)~> Union\nremunerationColumn derive({Contrepartie seuil} = replace({Contrepartie seuil}, \".\", \",\"),\n\t\tca = replace(ca, \".\", \",\"),\n\t\t{Réalisé} = replace({Réalisé}, \".\", \",\"),\n\t\t{Rémunération} = replace(toString({Rémunération}), \".\", \",\"),\n\t\t{ID contrat} = \"'\"+{ID contrat}) ~> formatDecimal\nformatDecimal select(mapColumn(\n\t\tyear,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{ID Seuil},\n\t\t{Contrepartie seuil},\n\t\tca,\n\t\t{quantité},\n\t\t{Réalisé},\n\t\t{Rémunération}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CONTRAT_DISTRIBUTION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> CONTRATDISTRIBUTION"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CommandeBW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "commandeBW_AC",
								"type": "DatasetReference"
							},
							"name": "AC"
						},
						{
							"dataset": {
								"referenceName": "commandeBW_AP",
								"type": "DatasetReference"
							},
							"name": "AP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieCommandeBW",
								"type": "DatasetReference"
							},
							"name": "SortieCommandeBW"
						}
					],
					"transformations": [
						{
							"name": "RecordID"
						},
						{
							"name": "DateExtDocVteLongDateCRE"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "formatDecimal"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AC\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AP\nUnion1 keyGenerate(output(CleDataSD as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nRecordID derive(DateExt = \"\",\n\t\tDocVte_Long = \"\",\n\t\tDateCRE = \"\",\n\t\t{ATC Corrigé} = iif(  instr({ATC Corrigé}, \"#\")>0, \"\", {ATC Corrigé}),\n\t\t{Agence commerciale corrigé} = iif(  instr({Agence commerciale corrigé}, \"#\")>0, \"\", {Agence commerciale corrigé})) ~> DateExtDocVteLongDateCRE\nDateExtDocVteLongDateCRE select(mapColumn(\n\t\tOrgCial = {Org. commerciale},\n\t\tCanalDist = {Canal distribution},\n\t\tSectAct = {Secteur d'activité},\n\t\tDocVte = {Document de vente},\n\t\tPoste,\n\t\tDate = {Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\tDRCde = {Agence commerciale corrigé},\n\t\tATCCde = {ATC Corrigé},\n\t\tCliCde = {Donneur d'ordre},\n\t\tCliLiv = {Récept. de march.},\n\t\tCliFac = {Destinataire facture},\n\t\tNoArt = Article,\n\t\tTypDocVte = {Type doc. vente},\n\t\tTypPoste = {Type de poste},\n\t\tNoLiv = Livraison,\n\t\tTypLiv = {Type de livraison},\n\t\tTypPostLiv = {Type poste Livraison},\n\t\tNoFac = Facture,\n\t\tTypFac = {Type de facture},\n\t\tTypPostFac = {Type poste Facture},\n\t\tMois = {Mois calendrier},\n\t\tAn = {Année civile},\n\t\tRaiCde = {Motif commande},\n\t\tQtCde = {Qté cdée},\n\t\tValNet = {CA cdé},\n\t\tQtLiv = {Qté livrée},\n\t\tValLiv = {CA livré},\n\t\tQtFac = {Qté facturée},\n\t\tValFac = {CA facturé},\n\t\tStdCost = {Cout standard cdé},\n\t\tFabCost = {Cout fabrication},\n\t\tStdCostLiv = {Cout standard livré},\n\t\tStdCostFac = {Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nAC, AP union(byName: true)~> Union1\nRename derive(ValNet = replace(ValNet, \".\", \",\"),\n\t\tValLiv = replace(ValLiv, \".\", \",\"),\n\t\tValFac = replace(ValFac, \".\", \",\"),\n\t\tStdCost = replace(StdCost, \".\", \",\"),\n\t\tStdCostLiv = replace(StdCostLiv, \".\", \",\"),\n\t\tStdCostFac = replace(StdCostFac, \".\", \",\")) ~> formatDecimal\nformatDecimal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['CommandeBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieCommandeBW"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InEcoulementWithIndexDSC",
								"type": "DatasetReference"
							},
							"name": "ecoulementwithIndex"
						},
						{
							"dataset": {
								"referenceName": "In_avoirwithIndex",
								"type": "DatasetReference"
							},
							"name": "avoirwithIndex"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "referentielATC"
						},
						{
							"dataset": {
								"referenceName": "inFacturationDSC",
								"type": "DatasetReference"
							},
							"name": "facturation"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixMoyen"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outdsctereva2",
								"type": "DatasetReference"
							},
							"name": "OModelDSC"
						},
						{
							"dataset": {
								"referenceName": "avoirUnMappedutput",
								"type": "DatasetReference"
							},
							"name": "avoirUnMapped"
						},
						{
							"dataset": {
								"referenceName": "facturation50",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ecoulement50",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "fullLeft"
						},
						{
							"name": "caFinal"
						},
						{
							"name": "RenameLeft"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "columnChoiceEcoulement"
						},
						{
							"name": "renameAvoir"
						},
						{
							"name": "innerAvoir"
						},
						{
							"name": "canal"
						},
						{
							"name": "idCanal"
						},
						{
							"name": "idCanalFinal"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueOffre"
						},
						{
							"name": "fullLeftOffre"
						},
						{
							"name": "EndInner",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "keepColumns"
						},
						{
							"name": "atcKeepingColumn"
						},
						{
							"name": "atcNotNull"
						},
						{
							"name": "uniqueATC"
						},
						{
							"name": "fullLeftATC"
						},
						{
							"name": "renameColumn"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "aggFacturation"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "innerFacturation"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "dropColumns1"
						},
						{
							"name": "leftFacturation"
						},
						{
							"name": "newColumns1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "tempOrigin2"
						},
						{
							"name": "facturationOnly"
						},
						{
							"name": "newColumns2"
						},
						{
							"name": "EndunJoinedFacturation"
						},
						{
							"name": "endInerEcouFact"
						},
						{
							"name": "UnionendInerEcouFact"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "UnionEndDecrementation"
						},
						{
							"name": "dropColumns3"
						},
						{
							"name": "getNotNullValue"
						},
						{
							"name": "idCanalFinal1"
						},
						{
							"name": "facturationColFilter"
						},
						{
							"name": "tempOrigin"
						},
						{
							"name": "JoinFacturation"
						},
						{
							"name": "ecoulementOnly"
						},
						{
							"name": "dropColumns2"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "endunJoinedEcoulement"
						},
						{
							"name": "UnionendunJoinedEcoulement"
						},
						{
							"name": "JoinAvoir"
						},
						{
							"name": "FilterIndexCols2"
						},
						{
							"name": "columnsChoice"
						},
						{
							"name": "Filter8"
						},
						{
							"name": "Filter9"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "Select2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "prepareGetPeriode"
						},
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "yearperiode"
						},
						{
							"name": "yearperiodeecoulement"
						},
						{
							"name": "fillNaPeriode"
						},
						{
							"name": "fillNaPeriodeFact"
						},
						{
							"name": "filter2"
						},
						{
							"name": "filter3"
						},
						{
							"name": "testagg"
						},
						{
							"name": "filter4"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixMoyen\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerAvoir\ninnerAvoir derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\")),\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear = {Année},\n\t\tmonth = month) ~> canal\ncanal derive(id_canal_final = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(canal_final = iif(id_canal_final==43, \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement_retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\ndropColumns select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\nfillNaPeriode select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = prepareGetPeriode@month,\n\t\tqte_ecoulement = qte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = prepareGetPeriode@distributeur,\n\t\tmarque_id = marque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\nDerivedColumn4 filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nDerivedColumn3, uniqueATC join({Code postal} == code_postal_atc\n\t&& canal_final == {Canal final}\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftATC\ndropColumns1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumn\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_),\n\t\ttempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva',    iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc',     iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \tiif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',lower(WholeSalerID))))))) ~> typeCaste\nfillNaPeriodeFact aggregate(groupBy(reference,\n\t\tHubSAPid,\n\t\tyear,\n\t\t{Période}),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_),\n\t\t{Canal distribution} = first({Canal distribution}),\n\t\t{Org commerciale} = first({Org commerciale}),\n\t\t{recept de march} = first({recept de march})) ~> Aggregate2\nDerivedColumn2 select(mapColumn(\n\t\tarticle = reference,\n\t\tHubSAPid,\n\t\tyear,\n\t\t{Période},\n\t\tid_canal_final = {Canal distribution},\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e = qt_cd_e,\n\t\tSum_ca_cd_ = ca_cd_,\n\t\tSum_qt_livr_e = qt_livr_e,\n\t\tSum_ca_livr_ = ca_livr_,\n\t\tSum_qt_factur_e = qt_factur_e,\n\t\tSum_ca_factur_ = ca_factur_,\n\t\ttempOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> aggFacturation\nkeepColumns aggregate(groupBy(reference,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\tyear,\n\t\t{Période}),\n\tSum_ca_ecoulement = sum(toDouble(ca_ecoulement)),\n\t\tSum_qte_ecoulement = sum(toDouble(qte_ecoulement)),\n\t\tmarque_id = first(marque_id),\n\t\tid_canal_final = first(id_canal_final),\n\t\tcanal_final = first(canal_final)) ~> Aggregate3\nAggregate3, aggFacturation join(coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(article, \" \", \"\"))),replace(article, \" \", \"\"))\n\t&& Aggregate3@year == aggFacturation@year\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@{Période} == aggFacturation@{Période},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerFacturation\nfullLeftOffre select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nfullLeftATC select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns1\ntempOrigin2, aggFacturation join(coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(article, \" \", \"\"))),replace(article, \" \", \"\"))\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@year == aggFacturation@year\n\t&& Aggregate3@{Période} == aggFacturation@{Période},\n\tjoinType:'right',\n\tbroadcast: 'auto')~> leftFacturation\ninnerFacturation derive(qt_plateforme_final = toDouble(Sum_qt_factur_e) - toDouble(Sum_qte_ecoulement),\n\t\tca_plateforme_final = Sum_ca_factur_ -  Sum_ca_ecoulement,\n\t\tdata_origin = \"facturation decrementé\",\n\t\tmarque_id = {Org commerciale},\n\t\t{Canal final} = aggFacturation@id_canal_final,\n\t\tyear = Aggregate3@year+Aggregate3@{Période}) ~> newColumns1\nAggregate2 derive(tempOrigin = \"facturation\",\n\t\t{Canal distribution} = 42) ~> DerivedColumn2\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> tempOrigin2\nleftFacturation filter(isNull(tempOrigin2@tempOrigin)) ~> facturationOnly\nfacturationColFilter derive(qt_plateforme_final = toDouble(Sum_qt_factur_e),\n\t\tca_plateforme_final = Sum_ca_factur_,\n\t\tdata_origin = \"facturation\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\")) ~> newColumns2\nnewColumns2 select(mapColumn(\n\t\treference = article,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code = {Org commerciale},\n\t\tmarque_name,\n\t\tPOSSAMidString = {recept de march},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndunJoinedFacturation\nSelect2 select(mapColumn(\n\t\tyearmonth,\n\t\treference,\n\t\tmarque_id,\n\t\tHubSAPid = {recept de march},\n\t\tid_canal_final = {Canal final},\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\ttempOrigin,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endInerEcouFact\nEndunJoinedFacturation, endInerEcouFact union(byName: true)~> UnionendInerEcouFact\nidCanalFinal1 select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tPOSSAMidString,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tmarque_id = marque_code,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\nrenameColumn, endDecrementation union(byName: true)~> UnionEndDecrementation\ngetNotNullValue select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\t{Canal final},\n\t\t{ATC Performance},\n\t\t{code postal} = getNotNullValue@{code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns3\nUnionEndDecrementation derive(marque_id = coalesce(marque_id , marque_code),\n\t\tid_canal_final = coalesce(id_canal_final ),\n\t\t{Canal final} = coalesce({Canal final} , canal_final),\n\t\t{code postal} = coalesce(code_postal_atc , {Code postal})) ~> getNotNullValue\nUnionendunJoinedEcoulement derive(id_canal_final = toInteger(id_canal_final)) ~> idCanalFinal1\nyearperiode select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\ttempOrigin = tempOrigin2@tempOrigin,\n\t\tarticle,\n\t\tHubSAPid = aggFacturation@HubSAPid,\n\t\tyearmonth = year,\n\t\tid_canal_final = aggFacturation@id_canal_final,\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e,\n\t\tSum_ca_cd_,\n\t\tSum_qt_livr_e,\n\t\tSum_ca_livr_,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> facturationColFilter\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> tempOrigin\ntempOrigin, aggFacturation join(coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(article, \" \", \"\"))),replace(article, \" \", \"\"))\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@year == aggFacturation@year\n\t&& Aggregate3@{Période} == aggFacturation@{Période},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinFacturation\nJoinFacturation filter(isNull(aggFacturation@tempOrigin)) ~> ecoulementOnly\nyearperiodeecoulement select(mapColumn(\n\t\tyearmonth = year,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tdistributeur,\n\t\tca_plateforme_final = Sum_ca_ecoulement,\n\t\tqt_plateforme_final = Sum_qte_ecoulement,\n\t\tmarque_id,\n\t\tid_canal_final = Aggregate3@id_canal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\ndropColumns2 derive(data_origin = \"decrementation ecoulement sans matching\",\n\t\tca_plateforme_final = -1*toDouble(ca_plateforme_final),\n\t\tqt_plateforme_final = -toDouble(qt_plateforme_final)) ~> newColumns\nnewColumns select(mapColumn(\n\t\tyearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\tca_plateforme_final,\n\t\tqt_plateforme_final,\n\t\tdata_origin,\n\t\tmarque_id,\n\t\tid_canal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endunJoinedEcoulement\nUnionendInerEcouFact, endunJoinedEcoulement union(byName: true)~> UnionendunJoinedEcoulement\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> JoinAvoir\nJoinAvoir filter(isNull(columnChoiceEcoulement@indexcols2)) ~> FilterIndexCols2\nFilterIndexCols2 select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoice\nuniqueATC filter(code_postal_atc==3300) ~> Filter8\nfullLeftATC filter({Code postal}==3300) ~> Filter9\nkeepColumns derive({Code postal} = toInteger({Code postal})) ~> DerivedColumn3\natcKeepingColumn derive(code_postal_atc = toInteger(code_postal_atc)) ~> DerivedColumn4\nnewColumns1 select(mapColumn(\n\t\tyearmonth = year,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tdistributeur,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_id,\n\t\tid_canal_final = Aggregate3@id_canal_final,\n\t\tcanal_final,\n\t\tarticle,\n\t\tHubSAPid = aggFacturation@HubSAPid,\n\t\tyearmonth = year,\n\t\tid_canal_final = aggFacturation@id_canal_final,\n\t\tmarque_id = {Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e,\n\t\tSum_ca_cd_,\n\t\tSum_qt_livr_e,\n\t\tSum_ca_livr_,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\ttempOrigin,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\t{Canal final}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nprixMoyen derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> derivedColumn1\nderivedColumn1 select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> prepareGetPeriode\nprepareGetPeriode, columnChoicePrix join(replace(lower( iif(prepareGetPeriode@distributeur==\"MABILLE\", \"sonac\", prepareGetPeriode@distributeur) ), \" \", \"\") == replace(lower(columnChoicePrix@Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger(prepareGetPeriode@month) == toInteger(columnChoicePrix@month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join1\ntypeCaste, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger({Mois calendrier}) == toInteger(month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(columnChoicePrix@Article, \" \", \"\"))),replace(columnChoicePrix@Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join2\nfacturationOnly derive(year = aggFacturation@year+aggFacturation@{Période}) ~> yearperiode\necoulementOnly derive(year = Aggregate3@year+Aggregate3@{Période}) ~> yearperiodeecoulement\njoin1 derive({Période} = coalesce( {Période}, \"00\" )) ~> fillNaPeriode\njoin2 derive({Période} = coalesce( {Période}, \"00\" )) ~> fillNaPeriodeFact\nfillNaPeriodeFact filter(year=='2021' && {recept de march}==\"16009650\" && reference==\"0010021497\") ~> filter2\nAggregate3 filter(reference==\"10021497\" && HubSAPid==\"16009650\" && year==\"2021\") ~> filter3\nfilter3 aggregate(groupBy({Période}),\n\tSum_qte_ecoulement = sum(Sum_qte_ecoulement)) ~> testagg\nkeepColumns filter(year=='2021' && HubSAPid==\"16009650\" && reference==\"0010021497\") ~> filter4\ndropColumns3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelDSC.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OModelDSC\ncolumnsChoice sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoirUnMapped.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> avoirUnMapped\nfilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMidString as string,\n\t\t{Période} as string,\n\t\tOffre as string,\n\t\tdata_origin as string\n\t),\n\tpartitionFileNames:['facturation50.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nfilter4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMidString as string,\n\t\t{Période} as string,\n\t\tOffre as string,\n\t\tdata_origin as string\n\t),\n\tpartitionFileNames:['ecoulement50.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InEcoulementWithIndexDSC",
								"type": "DatasetReference"
							},
							"name": "ecoulementwithIndex"
						},
						{
							"dataset": {
								"referenceName": "In_avoirwithIndex",
								"type": "DatasetReference"
							},
							"name": "avoirwithIndex"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "referentielATC"
						},
						{
							"dataset": {
								"referenceName": "inFacturationDSC",
								"type": "DatasetReference"
							},
							"name": "facturation"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixMoyen"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "avoirUnMappedutput",
								"type": "DatasetReference"
							},
							"name": "avoirUnMapped"
						},
						{
							"dataset": {
								"referenceName": "DscModelBis",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "fullLeft"
						},
						{
							"name": "caFinal"
						},
						{
							"name": "RenameLeft"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "columnChoiceEcoulement"
						},
						{
							"name": "renameAvoir"
						},
						{
							"name": "innerAvoir"
						},
						{
							"name": "canal"
						},
						{
							"name": "idCanal"
						},
						{
							"name": "idCanalFinal"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueOffre"
						},
						{
							"name": "fullLeftOffre"
						},
						{
							"name": "EndInner",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "atcKeepingColumn"
						},
						{
							"name": "atcNotNull"
						},
						{
							"name": "uniqueATC"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "JoinAvoir"
						},
						{
							"name": "FilterIndexCols2"
						},
						{
							"name": "columnsChoice"
						},
						{
							"name": "Filter8"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "prepareGetPeriode"
						},
						{
							"name": "join2"
						},
						{
							"name": "fillNaPeriodeFact"
						},
						{
							"name": "join3"
						},
						{
							"name": "derivedColumn200"
						},
						{
							"name": "CreateIndexColEcoul"
						},
						{
							"name": "CreateIndexColFact"
						},
						{
							"name": "join4"
						},
						{
							"name": "EndFact"
						},
						{
							"name": "split1"
						},
						{
							"name": "split2"
						},
						{
							"name": "select104"
						},
						{
							"name": "select105"
						},
						{
							"name": "split3"
						},
						{
							"name": "EcoulementRetraiteMatche"
						},
						{
							"name": "derivedColumn201"
						},
						{
							"name": "derivedColumn202"
						},
						{
							"name": "split4"
						},
						{
							"name": "select106"
						},
						{
							"name": "derivedColumn203"
						},
						{
							"name": "select107"
						},
						{
							"name": "derivedColumn204"
						},
						{
							"name": "derivedColumn205"
						},
						{
							"name": "EndFacturationSansMatching"
						},
						{
							"name": "derivedColumn206"
						},
						{
							"name": "EndDerecmentationEcoulementSM"
						},
						{
							"name": "flatten1"
						},
						{
							"name": "derivedColumn207"
						},
						{
							"name": "derivedColumn208"
						},
						{
							"name": "window1"
						},
						{
							"name": "select108"
						},
						{
							"name": "derivedColumn209"
						},
						{
							"name": "window2"
						},
						{
							"name": "flatten2"
						},
						{
							"name": "select109"
						},
						{
							"name": "EndEcoulementRetraiteMatche"
						},
						{
							"name": "EndEcoulementMatche"
						},
						{
							"name": "EndEcoulementRetraiteNonMatche"
						},
						{
							"name": "EndEcoulementNonMatche"
						},
						{
							"name": "union1"
						},
						{
							"name": "union2"
						},
						{
							"name": "union3"
						},
						{
							"name": "union4"
						},
						{
							"name": "union5"
						},
						{
							"name": "select110"
						},
						{
							"name": "join5"
						},
						{
							"name": "EndUniqueATC"
						},
						{
							"name": "select111"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixMoyen\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerAvoir\ninnerAvoir derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\")),\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tyear = {Année},\n\t\tmonth = Mois) ~> canal\ncanal derive(id_canal_final = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(canal_final = iif(id_canal_final==43, \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\ndropColumns select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\nDerivedColumn4 filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_),\n\t\ttempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva',    iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc',     iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \tiif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',lower(WholeSalerID))))))) ~> typeCaste\nfullLeftOffre select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nwindow1 derive(tempOrigin = \"facturation\",\n\t\t{Canal distribution} = 42) ~> DerivedColumn2\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> JoinAvoir\nJoinAvoir filter(isNull(columnChoiceEcoulement@indexcols2)) ~> FilterIndexCols2\nFilterIndexCols2 select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoice\nEndUniqueATC filter(code_postal_atc==\"3300\") ~> Filter8\natcKeepingColumn derive(code_postal_atc = toInteger(code_postal_atc)) ~> DerivedColumn4\nprixMoyen derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> derivedColumn1\nderivedColumn1 select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> prepareGetPeriode\ntypeCaste, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger({Mois calendrier}) == toInteger(month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(columnChoicePrix@Article, \" \", \"\"))),replace(columnChoicePrix@Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join2\njoin2 derive({Période} = coalesce( {Période}, \"00\" )) ~> fillNaPeriodeFact\nprepareGetPeriode, columnChoicePrix join(replace(lower( iif(prepareGetPeriode@distributeur==\"MABILLE\", \"sonac\", prepareGetPeriode@distributeur) ), \" \", \"\") == replace(lower(columnChoicePrix@Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger(prepareGetPeriode@month) == toInteger(columnChoicePrix@month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join3\nselect108 derive({Période} = coalesce( {Période}, \"00\" ),\n\t\ttoroll = mapLoop(abs(toInteger( qt_final )), #index)) ~> derivedColumn200\nwindow2 derive(indexcol2 = year+\"-\"+{Période}+\"-\"+HubSAPid+\"-\"+ref2+\"-\"+toString(indexcol2)) ~> CreateIndexColEcoul\nDerivedColumn2 derive(indexcol2 = year+\"-\"+{Période}+\"-\"+HubSAPid+\"-\"+ref2+\"-\"+toString(indexcol2)) ~> CreateIndexColFact\nCreateIndexColEcoul, EndFact join(indexcol2 == f_Indexcol2,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> join4\nCreateIndexColFact select(mapColumn(\n\t\t{f_Org commerciale} = {Org commerciale},\n\t\t{f_Canal distribution} = {Canal distribution},\n\t\t{f_Secteur d'activité} = {Secteur d'activité},\n\t\t{f_Document de vente} = {Document de vente},\n\t\tf_Poste = Poste,\n\t\t{f_Jour calendaire} = {Jour calendaire},\n\t\t{f_Agence commerciale corrigé} = {Agence commerciale corrigé},\n\t\t{f_ATC Corrigé} = {ATC Corrigé},\n\t\t{f_Donneur d'ordre} = {Donneur d'ordre},\n\t\t{f_recept de march} = {recept de march},\n\t\t{f_Destinataire facture} = {Destinataire facture},\n\t\t{f_type doc vente} = {type doc vente},\n\t\t{f_Type de poste} = {Type de poste},\n\t\tf_Livraison = Livraison,\n\t\t{f_Type de livraison} = {Type de livraison},\n\t\t{f_Type poste Livraison} = {Type poste Livraison},\n\t\tf_Facture = Facture,\n\t\t{f_Type de facture} = {Type de facture},\n\t\t{f_Type poste Facture} = {Type poste Facture},\n\t\t{f_Mois calendrier} = {Mois calendrier},\n\t\t{f_Année civile} = {Année civile},\n\t\t{Motif commande},\n\t\t{f_Qté cdée} = {Qté cdée},\n\t\t{f_CA cdé} = {CA cdé},\n\t\t{f_Qté livrée} = {Qté livrée},\n\t\t{f_CA livré} = {CA livré},\n\t\t{f_Qté facturée} = {Qté facturée},\n\t\t{f_CA facturé} = {CA facturé},\n\t\t{f_Cout standard cdé} = {Cout standard cdé},\n\t\t{f_Cout fabrication} = {Cout fabrication},\n\t\t{f_Cout standard livré} = {Cout standard livré},\n\t\t{f_Cout standard facturé} = {Cout standard facturé},\n\t\tf_date_id = date_id,\n\t\tf_year = year,\n\t\tf_yearmonth = yearmonth,\n\t\tf_year_month = year_month,\n\t\tf_reference = reference,\n\t\tf_article = flatten1@article,\n\t\tf_prix_unitaire_std = prix_unitaire_std,\n\t\tf_WholeSalerID = WholeSalerID,\n\t\tf_WholeSalerHubID = WholeSalerHubID,\n\t\tf_HubName = HubName,\n\t\tf_HubSAPid = HubSAPid,\n\t\tf_tempDist = tempDist,\n\t\tf_Article = flatten1@Article,\n\t\tf_Distributeur = Distributeur,\n\t\t{f_Période} = {Période},\n\t\tf_annee2 = annee2,\n\t\tf_month = month,\n\t\tf_ref2 = ref2,\n\t\tf_tempOrigin = tempOrigin,\n\t\tf_Indexcol2 = indexcol2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndFact\njoin4 split(!isNull(data_origin) && !isNull(f_tempOrigin),\n\t!isNull(data_origin) && isNull(f_tempOrigin),\n\tdisjoint: false) ~> split1@(EcoulementMatche, EcoulementNonMatch, FacturationSansMatching)\nCreateIndexColFact split(isNull(reference),\n\tdisjoint: false) ~> split2@(null, notNull)\nsplit1@EcoulementNonMatch select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select104\nsplit1@FacturationSansMatching select(mapColumn(\n\t\t{Org commerciale} = {f_Org commerciale},\n\t\t{Canal distribution} = {f_Canal distribution},\n\t\t{Secteur d'activité} = {f_Secteur d'activité},\n\t\t{Document de vente} = {f_Document de vente},\n\t\tPoste = f_Poste,\n\t\t{Jour calendaire} = {f_Jour calendaire},\n\t\t{Agence commerciale corrigé} = {f_Agence commerciale corrigé},\n\t\t{ATC Corrigé} = {f_ATC Corrigé},\n\t\t{Donneur d'ordre} = {f_Donneur d'ordre},\n\t\t{recept de march} = {f_recept de march},\n\t\t{Destinataire facture} = {f_Destinataire facture},\n\t\t{type doc vente} = {f_type doc vente},\n\t\t{Type de poste} = {f_Type de poste},\n\t\tLivraison = f_Livraison,\n\t\t{Type de livraison} = {f_Type de livraison},\n\t\t{Type poste Livraison} = {f_Type poste Livraison},\n\t\tFacture = f_Facture,\n\t\t{Type de facture} = {f_Type de facture},\n\t\t{Type poste Facture} = {f_Type poste Facture},\n\t\t{Mois calendrier} = {f_Mois calendrier},\n\t\t{Année civile} = {f_Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée} = {f_Qté facturée},\n\t\t{CA facturé} = {f_CA facturé},\n\t\tdate_id = f_date_id,\n\t\tyear = f_year,\n\t\tyearmonth = f_yearmonth,\n\t\treference = f_reference,\n\t\tarticle = split1@FacturationSansMatching@f_article,\n\t\tprix_unitaire_std = f_prix_unitaire_std,\n\t\tWholeSalerID = f_WholeSalerID,\n\t\tWholeSalerHubID = f_WholeSalerHubID,\n\t\tHubName = f_HubName,\n\t\tHubSAPid = f_HubSAPid,\n\t\tArticle = split1@FacturationSansMatching@f_Article,\n\t\tDistributeur = f_Distributeur,\n\t\t{Période} = {f_Période},\n\t\tannee2 = f_annee2,\n\t\tmonth = f_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select105\nsplit1@EcoulementMatche split(data_origin == \"ecoulement retraité\",\n\tdisjoint: false) ~> split3@(EcoulementRetraiteMatche, EcoulementMatch)\nsplit3@EcoulementRetraiteMatche select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\t{Org commerciale} = {f_Org commerciale},\n\t\t{Canal distribution} = {f_Canal distribution},\n\t\t{Secteur d'activité} = {f_Secteur d'activité},\n\t\t{Document de vente} = {f_Document de vente},\n\t\tPoste = f_Poste,\n\t\t{Jour calendaire} = {f_Jour calendaire},\n\t\t{Agence commerciale corrigé} = {f_Agence commerciale corrigé},\n\t\t{ATC Corrigé} = {f_ATC Corrigé},\n\t\t{Donneur d'ordre} = {f_Donneur d'ordre},\n\t\t{recept de march} = {f_recept de march},\n\t\t{Destinataire facture} = {f_Destinataire facture},\n\t\t{type doc vente} = {f_type doc vente},\n\t\t{Type de poste} = {f_Type de poste},\n\t\tLivraison = f_Livraison,\n\t\t{Type de livraison} = {f_Type de livraison},\n\t\t{Type poste Livraison} = {f_Type poste Livraison},\n\t\tFacture = f_Facture,\n\t\t{Type de facture} = {f_Type de facture},\n\t\t{Type poste Facture} = {f_Type poste Facture},\n\t\t{Mois calendrier} = {f_Mois calendrier},\n\t\t{Année civile} = {f_Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée} = {f_Qté facturée},\n\t\t{CA facturé} = {f_CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EcoulementRetraiteMatche\nEcoulementRetraiteMatche derive(origine_de_la_ligne = \"Ecoulement Retraité - Matché\",\n\t\tqt_final = toDouble(qt_final),\n\t\tca_final = toDouble(ca_final)) ~> derivedColumn201\nselect109 derive(origine_de_la_ligne = \"Ecoulement Matché\",\n\t\tqt_final = toDouble(qt_final),\n\t\tca_final = toDouble(ca_final)) ~> derivedColumn202\nselect104 split(data_origin == \"ecoulement retraité\",\n\tdisjoint: false) ~> split4@(EcoulementRetraiteNonMatche, EcoulementNonM)\nsplit4@EcoulementRetraiteNonMatche select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select106\nselect106 derive(origine_de_la_ligne = \"Ecoulement retraité - non matché\",\n\t\tqt_final = toDouble(qt_final),\n\t\tca_final = toDouble(ca_final)) ~> derivedColumn203\nsplit4@EcoulementNonM select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select107\nselect107 derive(origine_de_la_ligne = \"Ecoulement - non matché\",\n\t\tqt_final = toDouble(qt_final),\n\t\tca_final = toDouble(ca_final)) ~> derivedColumn204\nselect105 derive(origine_de_la_ligne = \"Facturation sans mapping\",\n\t\tqt_final = toDouble({Qté facturée}),\n\t\tca_final = toDouble({CA facturé})) ~> derivedColumn205\nderivedColumn205 select(mapColumn(\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march},\n\t\t{Destinataire facture},\n\t\t{type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tarticle = select105@article,\n\t\tprix_unitaire_std,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tArticle = select105@Article,\n\t\tDistributeur,\n\t\tmonth,\n\t\torigine_de_la_ligne,\n\t\tqt_final,\n\t\tca_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndFacturationSansMatching\nselect104 derive(ca_final = toDouble(-1*ca_final),\n\t\tqt_final = toDouble(-1*qt_final)) ~> derivedColumn206\nderivedColumn206 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndDerecmentationEcoulementSM\nderivedColumn207 foldDown(unroll(toroll, toroll),\n\tmapColumn(\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march},\n\t\t{Destinataire facture},\n\t\t{type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tarticle = facturation@article,\n\t\tprix_unitaire_std,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttempDist,\n\t\tArticle = columnChoicePrix@Article,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flatten1\nfillNaPeriodeFact derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index)) ~> derivedColumn207\nflatten1 derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn208\nderivedColumn208 window(over(year,\n\t\t{Période},\n\t\tHubSAPid,\n\t\tref2),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcol2 = rowNumber()) ~> window1\njoin3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = prepareGetPeriode@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = prepareGetPeriode@distributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tArticle,\n\t\tperiode_Distributeur = columnChoicePrix@Distributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tperiode_month = columnChoicePrix@month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select108\nflatten2 derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn209\nderivedColumn209 window(over(year,\n\t\t{Période},\n\t\tHubSAPid,\n\t\tref2),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcol2 = rowNumber()) ~> window2\nderivedColumn200 foldDown(unroll(toroll, toroll),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tArticle,\n\t\tperiode_Distributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tperiode_month\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flatten2\nsplit3@EcoulementMatch select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final = {f_CA facturé},\n\t\tqt_final = {f_Qté facturée},\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\t{f_Org commerciale},\n\t\t{Canal distribution} = {f_Canal distribution},\n\t\t{Secteur d'activité} = {f_Secteur d'activité},\n\t\t{Document de vente} = {f_Document de vente},\n\t\tPoste = f_Poste,\n\t\t{Jour calendaire} = {f_Jour calendaire},\n\t\t{Agence commerciale corrigé} = {f_Agence commerciale corrigé},\n\t\t{ATC Corrigé} = {f_ATC Corrigé},\n\t\t{Donneur d'ordre} = {f_Donneur d'ordre},\n\t\t{recept de march} = {f_recept de march},\n\t\t{Destinataire facture} = {f_Destinataire facture},\n\t\t{type doc vente} = {f_type doc vente},\n\t\t{Type de poste} = {f_Type de poste},\n\t\tLivraison = f_Livraison,\n\t\t{Type de livraison} = {f_Type de livraison},\n\t\t{Type poste Livraison} = {f_Type poste Livraison},\n\t\tFacture = f_Facture,\n\t\t{Type de facture} = {f_Type de facture},\n\t\t{Type poste Facture} = {f_Type poste Facture},\n\t\t{Mois calendrier} = {f_Mois calendrier},\n\t\t{Année civile} = {f_Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée} = {f_Qté facturée},\n\t\t{CA facturé} = {f_CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select109\nderivedColumn201 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndEcoulementRetraiteMatche\nderivedColumn202 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndEcoulementMatche\nderivedColumn203 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\torigine_de_la_ligne\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndEcoulementRetraiteNonMatche\nderivedColumn204 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\torigine_de_la_ligne\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndEcoulementNonMatche\nEndEcoulementRetraiteMatche, EndEcoulementMatche union(byName: true)~> union1\nunion1, EndEcoulementRetraiteNonMatche union(byName: true)~> union2\nunion2, EndEcoulementNonMatche union(byName: true)~> union3\nunion3, EndDerecmentationEcoulementSM union(byName: true)~> union4\nunion4, EndFacturationSansMatching union(byName: true)~> union5\nunion5 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = union5@distributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march},\n\t\t{Destinataire facture},\n\t\t{type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\torigine_de_la_ligne,\n\t\t{f_Org commerciale},\n\t\tdate_id,\n\t\tarticle = union5@article,\n\t\tprix_unitaire_std,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tArticle = union5@Article,\n\t\tDistributeur = union5@Distributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select110\nselect110, EndUniqueATC join({Code postal} == code_postal_atc\n\t&& canal_final == {Canal final}\n\t&& marque_name == uniqueATC@Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join5\nuniqueATC derive(code_postal_atc = toString(code_postal_atc)) ~> EndUniqueATC\njoin5 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = select110@distributeur,\n\t\tmarque = select110@marque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march},\n\t\t{Destinataire facture},\n\t\t{type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\torigine_de_la_ligne,\n\t\t{f_Org commerciale},\n\t\tdate_id,\n\t\tarticle = select110@article,\n\t\tprix_unitaire_std,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tArticle = select110@Article,\n\t\tDistributeur = select110@Distributeur,\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tMarque = uniqueATC@Marque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select111\ncolumnsChoice sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoirUnMapped.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> avoirUnMapped\nselect111 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string,\n\t\tColumn_23 as string,\n\t\tColumn_24 as string,\n\t\tColumn_25 as string,\n\t\tColumn_26 as string,\n\t\tColumn_27 as string,\n\t\tColumn_28 as string,\n\t\tColumn_29 as string,\n\t\tColumn_30 as string,\n\t\tColumn_31 as string,\n\t\tColumn_32 as string,\n\t\tColumn_33 as string,\n\t\tColumn_34 as string,\n\t\tColumn_35 as string,\n\t\tColumn_36 as string,\n\t\tColumn_37 as string,\n\t\tColumn_38 as string,\n\t\tColumn_39 as string,\n\t\tColumn_40 as string,\n\t\tColumn_41 as string,\n\t\tColumn_42 as string,\n\t\tColumn_43 as string,\n\t\tColumn_44 as string,\n\t\tColumn_45 as string,\n\t\tColumn_46 as string,\n\t\tColumn_47 as string,\n\t\tColumn_48 as string,\n\t\tColumn_49 as string,\n\t\tColumn_50 as string,\n\t\tColumn_51 as string,\n\t\tColumn_52 as string,\n\t\tColumn_53 as string,\n\t\tColumn_54 as string,\n\t\tColumn_55 as string,\n\t\tColumn_56 as string,\n\t\tColumn_57 as string,\n\t\tColumn_58 as string,\n\t\tColumn_59 as string,\n\t\tColumn_60 as string\n\t),\n\tpartitionFileNames:['OModelDSCbis.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DSC_input",
								"type": "DatasetReference"
							},
							"name": "DSCINPUT"
						},
						{
							"dataset": {
								"referenceName": "dsc_orga",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DSC_PIECE_DETACHEE",
								"type": "DatasetReference"
							},
							"name": "DSCPieceDetache"
						},
						{
							"dataset": {
								"referenceName": "DSC_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "outputNullQuantity"
						},
						{
							"dataset": {
								"referenceName": "DSC_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "preparedDSC"
						},
						{
							"dataset": {
								"referenceName": "DSC_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "orgaNotFound"
						}
					],
					"transformations": [
						{
							"name": "fdecrementation",
							"flowlet": {
								"referenceName": "decrementationVenteDirecte",
								"type": "DataFlowReference",
								"parameters": {}
							}
						},
						{
							"name": "KeepImportantColumn"
						},
						{
							"name": "notNullQuantity"
						},
						{
							"name": "columnFormat",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "pieceDetache"
						},
						{
							"name": "nullQuantity"
						},
						{
							"name": "notPieceDetache"
						},
						{
							"name": "agenceCodeNotNull"
						},
						{
							"name": "posidNotNull"
						},
						{
							"name": "innerJoinWithOrga"
						},
						{
							"name": "fullLeftJoin"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "InnerVentesDirecte"
						},
						{
							"name": "fullLeftVentesDirectes"
						},
						{
							"name": "dropColumns2"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "uniquePOSid"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "select1"
						},
						{
							"name": "idDecrementation"
						},
						{
							"name": "select2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select3"
						},
						{
							"name": "join1"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "select4"
						},
						{
							"name": "select5"
						}
					],
					"script": "source(output(\n\t\tProp_0 as string,\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as integer,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSCINPUT\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as integer,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyear as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nselect5 compose(mapColumn(\n\t\tid,\n\t\tPossAMid = POSSAMidString,\n\t\treference = {Référence Article Fournisseur},\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement = {Quantité en UV BL},\n\t\tqte_venteDirecte = {Qté vente directe}\n\t),\n\tcomposition: 'decrementationVenteDirecte') ~> fdecrementation@(output1)\nDSCINPUT select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> KeepImportantColumn\ncolumnFormat filter({Quantité en UV BL}!=0) ~> notNullQuantity\nKeepImportantColumn derive({Quantité en UV BL} = toDouble({Quantité en UV BL}),\n\t\t{Marque Code} = toDouble({Marque Code}),\n\t\tyear = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> columnFormat\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})>0) ~> pieceDetache\ncolumnFormat filter({Quantité en UV BL}==0) ~> nullQuantity\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})==0) ~> notPieceDetache\nnotPieceDetache filter(!isNull({Agence Code})) ~> agenceCodeNotNull\nuniquePOSid filter(!isNull(POSid)) ~> posidNotNull\nagenceCodeNotNull, posidNotNull join(toFloat({Agence Code}) == toFloat(POSid),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerJoinWithOrga\nagenceCodeNotNull, posidNotNull join({Agence Code} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftJoin\nfullLeftJoin filter(isNull(POSid)) ~> leftOuter\nventesDirectes select(mapColumn(\n\t\tyear,\n\t\tArticle_right = reference,\n\t\t{Code client_right} = {Code client},\n\t\t{Qté vente directe} = qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\ninnerJoinWithOrga, RenameColumn join(columnFormat@year == RenameColumn@year\n\t&& coalesce(toString(toInteger(replace({Référence Article Fournisseur}, \" \", \"\"))),replace({Référence Article Fournisseur}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article_right, \" \", \"\"))),replace(Article_right, \" \", \"\"))\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerVentesDirecte\ninnerJoinWithOrga, RenameColumn join(columnFormat@year == RenameColumn@year\n\t&& coalesce(toString(toInteger(replace({Référence Article Fournisseur}, \" \", \"\"))),replace({Référence Article Fournisseur}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article_right, \" \", \"\"))),replace(Article_right, \" \", \"\"))\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftVentesDirectes\nselect4 select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\tBrandID,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\nfullLeftVentesDirectes filter(isNull(RenameColumn@year) || isNull(Article_right) || isNull({Code client_right})) ~> outerLeft\nouterLeft select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tyear = columnFormat@year,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nfullLeftUnion select(mapColumn(\n\t\tmarque_file = {Marque DESC},\n\t\tsous_famille = {Sous Famille},\n\t\treference = {Référence Article Fournisseur},\n\t\tagence_code = {Agence Code},\n\t\tdepartement_id = {Département ID},\n\t\tqte_ecoulement = {Quantité en UV BL},\n\t\tyearmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\ndropColumns2 derive(departement_id = toDouble(''),\n\t\tprix_unitaire_std = toDouble(''),\n\t\tdistributeur = \"DSC\") ~> Addcolumn\norganisation aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tPOSSAMidString = first(POSSAMidString),\n\t\tHubSAPid = first(HubSAPid),\n\t\tBrandID = first(BrandID)) ~> uniquePOSid\nAddcolumn, dropColumns union(byName: true)~> fullLeftUnion\nInnerVentesDirecte select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tyear = columnFormat@year,\n\t\tmonth,\n\t\tPOSid,\n\t\tWholeSalerID,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\tBrandID,\n\t\t{Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nselect1 keyGenerate(output(idDecrementation as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> idDecrementation\nidDecrementation select(mapColumn(\n\t\tidDecrementation,\n\t\tPOSSAMidString,\n\t\t{Référence Article Fournisseur},\n\t\tyear,\n\t\tmonth,\n\t\t{Quantité en UV BL},\n\t\t{Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nselect2 derive({Quantité en UV BL} = toFloat({Quantité en UV BL}),\n\t\t{Qté vente directe} = toFloat({Qté vente directe}),\n\t\tmonth = toInteger(month)) ~> derivedColumn1\nidDecrementation select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tWholeSalerID,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\tBrandID,\n\t\t{Qté vente directe},\n\t\tidDecrementation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select3\nselect3, endDecrementation join(idDecrementation == id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> join1\nfdecrementation@output1 select(mapColumn(\n\t\tid,\n\t\tqt_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\njoin1 select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tWholeSalerID,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\tBrandID,\n\t\t{Qté vente directe},\n\t\t{Quantité en UV BL} = qt_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select4\nderivedColumn1 select(mapColumn(\n\t\tid = idDecrementation,\n\t\tPOSSAMidString,\n\t\t{Référence Article Fournisseur},\n\t\tyear,\n\t\tmonth,\n\t\t{Quantité en UV BL},\n\t\t{Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select5\npieceDetache sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_PIECE_DETACHEE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DSCPieceDetache\nnullQuantity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputNullQuantity\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string\n\t),\n\tpartitionFileNames:['DSC_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> preparedDSC\nleftOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> orgaNotFound"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EHS_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EHS",
								"type": "DatasetReference"
							},
							"name": "EHS"
						},
						{
							"dataset": {
								"referenceName": "OrganisationEHS",
								"type": "DatasetReference"
							},
							"name": "OrganisationEHS"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "VenteDirecte"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieEHS",
								"type": "DatasetReference"
							},
							"name": "SoriteEHS"
						},
						{
							"dataset": {
								"referenceName": "EHSOrganiationNotfound",
								"type": "DatasetReference"
							},
							"name": "EHSOrganisationNotfound"
						}
					],
					"transformations": [
						{
							"name": "ddimplement",
							"flowlet": {
								"referenceName": "decrementationVenteDirecte",
								"type": "DataFlowReference",
								"parameters": {}
							}
						},
						{
							"name": "ExtractMonthYear"
						},
						{
							"name": "FiltrerCIA"
						},
						{
							"name": "FiltreCPCoop"
						},
						{
							"name": "UniqueCpCoopHubsApid"
						},
						{
							"name": "InnerJoinCIACPCoop"
						},
						{
							"name": "JoinLeftCIACPCoop"
						},
						{
							"name": "JoinVenteDirect"
						},
						{
							"name": "QuantiteesLivres"
						},
						{
							"name": "Rename"
						},
						{
							"name": "distributeur"
						},
						{
							"name": "RenamePOSSAMIDstring"
						},
						{
							"name": "RenameMarqueFile"
						},
						{
							"name": "dropDuplicatedColumn"
						},
						{
							"name": "select1"
						},
						{
							"name": "idDecrementation"
						},
						{
							"name": "select2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "select3"
						},
						{
							"name": "leftjoin"
						},
						{
							"name": "filter1"
						},
						{
							"name": "union1"
						},
						{
							"name": "endNoDecrementation"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "filter2"
						}
					],
					"script": "source(output(\n\t\tMarques as string,\n\t\t{Région} as string,\n\t\t{Nom Agence} as string,\n\t\tCIA as string,\n\t\t{Département} as string,\n\t\t{Référence Article} as string,\n\t\t{Description Article} as string,\n\t\t{Catégorie Achat} as string,\n\t\t{Quantitées livrées} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Marques/ Constructeur} as string,\n\t\t{Gestion entrepôt} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EHS\nsource(output(\n\t\t{Nom Coopérative} as string,\n\t\t{CP Coop.} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string,\n\t\tDept as string,\n\t\t{Code Postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrganisationEHS\nsource(output(\n\t\tyear as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> VenteDirecte\nselect3 compose(mapColumn(\n\t\tid = idDecrementation,\n\t\tPossAMid = POSSAMid,\n\t\treference = {Référence Article},\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement = {Quantitées livrées},\n\t\tqte_venteDirecte = {Qté vente directe}\n\t),\n\tcomposition: 'decrementationVenteDirecte') ~> ddimplement@(output1)\nEHS derive(yearmonth = year+month,\n\t\tMarques = iif(!isNull(Marques), upper(Marques), upper({Marques/ Constructeur}))) ~> ExtractMonthYear\nderivedColumn2 filter(!isNull(CIA)) ~> FiltrerCIA\nOrganisationEHS filter(!isNull({CP Coop.})) ~> FiltreCPCoop\nFiltreCPCoop aggregate(groupBy({CP Coop.},\n\t\tHubSAPid),\n\t{Nom Coopérative} = max({Nom Coopérative}),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tBrandID = max(BrandID),\n\t\tDept = max(Dept),\n\t\t{Code Postal} = max({Code Postal})) ~> UniqueCpCoopHubsApid\nFiltrerCIA, UniqueCpCoopHubsApid join(CIA == {CP Coop.},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoinCIACPCoop\nFiltrerCIA, UniqueCpCoopHubsApid join(CIA == {CP Coop.},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLeftCIACPCoop\nInnerJoinCIACPCoop, Rename join(coalesce(toString(toInteger(replace({Référence Article}, \" \", \"\"))),replace({Référence Article}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& dropDuplicatedColumn@year == Rename@year\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinVenteDirect\njoin1 derive({Quantitées livrées} = qt_final) ~> QuantiteesLivres\nVenteDirecte select(mapColumn(\n\t\tyear,\n\t\tArticle = reference,\n\t\t{Code client},\n\t\t{Qté vente directe} = qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nunion1 derive(distributeur = \"EHS\",\n\t\tMarques = coalesce(Marques , {Marques/ Constructeur}),\n\t\treference = replace( replace({Référence Article}, 'SDU', ''),\"VAI\",\"\")) ~> distributeur\ndistributeur select(mapColumn(\n\t\tmarque_str = Marques,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tagence_code = CIA,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\tqte_ecoulement = {Quantitées livrées},\n\t\tyear,\n\t\t{Gestion entrepôt},\n\t\tmonth,\n\t\tyearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMidString = POSSAMid,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code postal} = {Code Postal},\n\t\tyearmonth = year,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe},\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenamePOSSAMIDstring\nRenamePOSSAMIDstring select(mapColumn(\n\t\tmarque_file = marque_str,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tagence_code,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\tqte_ecoulement,\n\t\tyear,\n\t\t{Gestion entrepôt},\n\t\tmonth,\n\t\tyearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMidString,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code postal},\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe},\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameMarqueFile\nExtractMonthYear select(mapColumn(\n\t\tMarques,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tCIA,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\t{Quantitées livrées},\n\t\tyear,\n\t\tmonth,\n\t\t{Gestion entrepôt},\n\t\t{Marques/ Constructeur},\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropDuplicatedColumn\nJoinVenteDirect select(mapColumn(\n\t\tMarques,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tCIA,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\t{Quantitées livrées},\n\t\tyear = dropDuplicatedColumn@year,\n\t\tmonth,\n\t\t{Gestion entrepôt},\n\t\t{Marques/ Constructeur},\n\t\tyearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMid,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code Postal},\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nselect1 keyGenerate(output(idDecrementation as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> idDecrementation\nidDecrementation select(mapColumn(\n\t\tidDecrementation,\n\t\tPOSSAMid,\n\t\t{Référence Article},\n\t\tyear,\n\t\tmonth,\n\t\t{Quantitées livrées},\n\t\t{Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nselect2 derive({Quantitées livrées} = toFloat({Quantitées livrées}),\n\t\t{Qté vente directe} = toFloat({Qté vente directe}),\n\t\tmonth = toInteger(month)) ~> derivedColumn1\nddimplement@output1 select(mapColumn(\n\t\tid_ = id,\n\t\tqt_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\nidDecrementation, endDecrementation join(idDecrementation == id_,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> join1\ndropDuplicatedColumn derive({Référence Article} = replace( replace({Référence Article}, 'SDU', ''),\"VAI\",\"\")) ~> derivedColumn2\nderivedColumn1 select(mapColumn(\n\t\tidDecrementation,\n\t\tPOSSAMid,\n\t\t{Référence Article},\n\t\tyear,\n\t\tmonth,\n\t\t{Quantitées livrées},\n\t\t{Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select3\nInnerJoinCIACPCoop, Rename join(coalesce(toString(toInteger(replace({Référence Article}, \" \", \"\"))),replace({Référence Article}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& dropDuplicatedColumn@year == Rename@year\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftjoin\nleftjoin filter(isNull({Qté vente directe})) ~> filter1\nQuantiteesLivres, endNoDecrementation union(byName: true)~> union1\nderivedColumn3 select(mapColumn(\n\t\tMarques,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tCIA,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\t{Quantitées livrées},\n\t\tyear = dropDuplicatedColumn@year,\n\t\tmonth,\n\t\t{Gestion entrepôt},\n\t\t{Marques/ Constructeur},\n\t\tyearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMid,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code Postal},\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endNoDecrementation\nfilter1 derive({Quantitées livrées} = toInteger({Quantitées livrées})) ~> derivedColumn3\nRenameMarqueFile aggregate(groupBy(marque_file,\n\t\t{Nom Agence},\n\t\tagence_code,\n\t\t{Référence Article},\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tdistributeur),\n\tqte_ecoulement = sum(qte_ecoulement),\n\t\t{Description Article} = max({Description Article})) ~> aggregate1\naggregate1 filter({CP Coop.}==\"112\"&&reference==\"0010021497\" &&yearmonth==\"202101\") ~> filter2\naggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SortieEcoulementEHS.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SoriteEHS\nJoinLeftCIACPCoop sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['EHSOrganisationNotfound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> EHSOrganisationNotfound"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EPS_CLEANING_POST_UNION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tecouunion",
								"type": "DatasetReference"
							},
							"name": "unionEccoulement"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "articlehierarchi"
						},
						{
							"dataset": {
								"referenceName": "unionSapEhsIn",
								"type": "DatasetReference"
							},
							"name": "unionsapehs"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "pricelisteReplicated"
						},
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "EHS"
						},
						{
							"dataset": {
								"referenceName": "inepsv2",
								"type": "DatasetReference"
							},
							"name": "EPS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "allECoulementPrepared",
								"type": "DatasetReference"
							},
							"name": "outputPreparationEcoulement"
						},
						{
							"dataset": {
								"referenceName": "tunionSap",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "ecoulementArticleNotFound",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "articlDropdupl"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "setPostalCode"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "pricelisteTojoin"
						},
						{
							"name": "Join3"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Join4"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "endEPS"
						},
						{
							"name": "endEHS"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "endEhsEPS"
						},
						{
							"name": "leftarticle"
						},
						{
							"name": "addIdentifier"
						},
						{
							"name": "fnullarticle"
						},
						{
							"name": "derivedColumn1s"
						},
						{
							"name": "qte0"
						}
					],
					"script": "source(output(\n\t\t{Code postal} as string,\n\t\tmarque_file as string,\n\t\tca_ecoulement as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionEccoulement\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> articlehierarchi\nsource(output(\n\t\tClient as integer,\n\t\t{Code postal} as string,\n\t\t{Org# commerciale} as short,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionsapehs\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> pricelisteReplicated\nsource(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EHS\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EPS\nunionEccoulement derive(marque_id = coalesce(iif (  instr(lower({marque_file}) , \"saunier\") >0  , 1604 , 1621 )  , toInteger(marque_id)  )) ~> DerivedColumn1\narticlehierarchi select(mapColumn(\n\t\tmarque = OrgCm,\n\t\treference = Article,\n\t\tCDis\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(marque,\n\t\treference),\n\tCDis = max(CDis)) ~> articlDropdupl\nDerivedColumn1, articlDropdupl join(coalesce(toString(toInteger(replace(unionEccoulement@reference, \" \", \"\"))),replace(unionEccoulement@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(articlDropdupl@reference, \" \", \"\"))),replace(articlDropdupl@reference, \" \", \"\"))\n\t&& toString(marque_id) == marque,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nSelect3, endEhsEPS join(POSSAMidString == toString(Client),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tEcc_Code_postal = {Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{Sap_Code postal} = {client Code postal }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = unionEccoulement@reference,\n\t\t{Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect2 derive({code postal} = iif( !isNull({Sap_Code postal}) , {Sap_Code postal} , Ecc_Code_postal),\n\t\tmarque_name = iif(marque==\"1604\",  \"SaunierDuval\", \"Vaillant\"),\n\t\tdistributeur = upper(distributeur)) ~> setPostalCode\nSelect5 derive(month = toInteger(mois1)+ toInteger(order),\n\t\tDistributeur = lower(Distributeur)) ~> DerivedColumn2\nAggregate1 derive(distributeur = iif(  instr(Distributeur ,'sonac' ) >0 , upper('mabille') , upper(Distributeur)  )) ~> pricelisteTojoin\nsetPostalCode, pricelisteTojoin join(upper(setPostalCode@distributeur) == upper(pricelisteTojoin@distributeur)\n\t&& toDouble(Select2@month) == toDouble(Aggregate1@month)\n\t&& toDouble(year) == toDouble(annee1)\n\t&& toDouble(reference) == toDouble(Article),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(ca_ecoulement = iif( !isNull(prix_unitaire) , prix_unitaire, \"0\" )) ~> DerivedColumn3\nDerivedColumn3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = Select2@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = setPostalCode@distributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\npricelisteReplicated select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\torder = dd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nDerivedColumn2 aggregate(groupBy(Distributeur,\n\t\tArticle,\n\t\tmonth,\n\t\tannee1),\n\tprix_unitaire = max(prix_unitaire)) ~> Aggregate1\nsetPostalCode filter(upper(distributeur)==upper('MAILLARD')) ~> Filter1\npricelisteTojoin filter(upper(pricelisteTojoin@distributeur)==\"MAILLARD\") ~> Filter2\nFilter1, Filter2 join(upper(setPostalCode@distributeur) == upper(pricelisteTojoin@distributeur)\n\t&& toInteger(reference) == toInteger(Article)\n\t&& year == annee1\n\t&& toDouble(Select2@month) == toDouble(Aggregate1@month),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join4\nFilter2 filter(toInteger(Article)==toInteger(\"0020082651\")) ~> Filter3\nEPS select(mapColumn(\n\t\tClient = {Numéro du compte},\n\t\tNom = {Nom du compte},\n\t\t{Code postal } = {Code postal},\n\t\tVille\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEPS\nEHS select(mapColumn(\n\t\tClient,\n\t\t{Code postal } = {Code Postal},\n\t\tNom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEHS\nendEHS, endEPS union(byName: true)~> Union1\nDerivedColumn4 aggregate(groupBy(Client,\n\t\t{Code postal },\n\t\tNom,\n\t\tVille),\n\ttemp = sum(temp)) ~> Aggregate2\nUnion1 derive(temp = 1,\n\t\tClient = toString(toInteger(Client))) ~> DerivedColumn4\nAggregate2 select(mapColumn(\n\t\tClient,\n\t\t{client Code postal } = {Code postal },\n\t\tNom,\n\t\tVille\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEhsEPS\nderivedColumn1s, addIdentifier join(coalesce(toString(toInteger(replace(unionEccoulement@reference, \" \", \"\"))),replace(unionEccoulement@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(articlDropdupl@reference, \" \", \"\"))),replace(articlDropdupl@reference, \" \", \"\"))\n\t&& toString(marque_id) == marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftarticle\narticlDropdupl derive(torigin = \"article\") ~> addIdentifier\nleftarticle filter(isNull(torigin)) ~> fnullarticle\nDerivedColumn1 derive(nexcola = iif (  instr(lower(marque_file) , \"saunier\") >0  , 1604 , 1621 )) ~> derivedColumn1s\nSelect4 filter(toDouble(qte_ecoulement)!=0) ~> qte0\nqte0 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFournisseur as string,\n\t\t{Coopérative} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\tMois as string,\n\t\tpath as string,\n\t\tqte_ecoulement as string,\n\t\tREFFOURNISSEUR as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\t{Nom Coopérative} as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string\n\t),\n\tpartitionFileNames:['eccoulementUniforme.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputPreparationEcoulement\nunionsapehs sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string\n\t),\n\tpartitionFileNames:['tunionSap.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nfnullarticle sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ecoulementArticleNotFound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/unionSapEhsIn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExpeditionBW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "expeditionBW_AC",
								"type": "DatasetReference"
							},
							"name": "AC"
						},
						{
							"dataset": {
								"referenceName": "expeditionBW_AP",
								"type": "DatasetReference"
							},
							"name": "AP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieExpeditionBW",
								"type": "DatasetReference"
							},
							"name": "SortieExpeditionBW"
						}
					],
					"transformations": [
						{
							"name": "RecordID"
						},
						{
							"name": "DateExtDocVteLongDateCRE"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "formatDecimal"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AC\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AP\nUnion1 keyGenerate(output(CleDataSD as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nRecordID derive(DateExt = \"\",\n\t\tDocVte_Long = \"\",\n\t\tDateCRE = \"\",\n\t\t{ATC Corrigé} = iif(  instr({ATC Corrigé}, \"#\")>0, \"\", {ATC Corrigé}),\n\t\t{Agence commerciale corrigé} = iif(  instr({Agence commerciale corrigé}, \"#\")>0, \"\", {Agence commerciale corrigé})) ~> DateExtDocVteLongDateCRE\nDateExtDocVteLongDateCRE select(mapColumn(\n\t\tOrgCial = {Org. commerciale},\n\t\tCanalDist = {Canal distribution},\n\t\tSectAct = {Secteur d'activité},\n\t\tDocVte = {Document de vente},\n\t\tPoste,\n\t\tDate = {Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\tDRCde = {Agence commerciale corrigé},\n\t\tATCCde = {ATC Corrigé},\n\t\tCliCde = {Donneur d'ordre},\n\t\tCliLiv = {Récept. de march.},\n\t\tCliFac = {Destinataire facture},\n\t\tNoArt = Article,\n\t\tTypDocVte = {Type doc. vente},\n\t\tTypPoste = {Type de poste},\n\t\tNoLiv = Livraison,\n\t\tTypLiv = {Type de livraison},\n\t\tTypPostLiv = {Type poste Livraison},\n\t\tNoFac = Facture,\n\t\tTypFac = {Type de facture},\n\t\tTypPostFac = {Type poste Facture},\n\t\tMois = {Mois calendrier},\n\t\tAn = {Année civile},\n\t\tRaiCde = {Motif commande},\n\t\tQtCde = {Qté cdée},\n\t\tValNet = {CA cdé},\n\t\tQtLiv = {Qté livrée},\n\t\tValLiv = {CA livré},\n\t\tQtFac = {Qté facturée},\n\t\tValFac = {CA facturé},\n\t\tStdCost = {Cout standard cdé},\n\t\tFabCost = {Cout fabrication},\n\t\tStdCostLiv = {Cout standard livré},\n\t\tStdCostFac = {Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nAC, AP union(byName: true)~> Union1\nRename derive(ValNet = replace(ValNet, \".\", \",\"),\n\t\tValLiv = replace(ValLiv, \".\", \",\"),\n\t\tValFac = replace(ValFac, \".\", \",\"),\n\t\tStdCost = replace(StdCost, \".\", \",\"),\n\t\tStdCostLiv = replace(StdCostLiv, \".\", \",\"),\n\t\tStdCostFac = replace(StdCostFac, \".\", \",\")) ~> formatDecimal\nformatDecimal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['ExpéditionBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieExpeditionBW"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationBW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "AC"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "AP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieFacturationBW",
								"type": "DatasetReference"
							},
							"name": "SortieFacturationBW"
						}
					],
					"transformations": [
						{
							"name": "RecordID"
						},
						{
							"name": "DateExtDocVteLongDateCRE"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "formatDecimal"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AC\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AP\nUnion1 keyGenerate(output(CleDataSD as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nRecordID derive(DateExt = \"\",\n\t\tDocVte_Long = \"\",\n\t\tDateCRE = \"\",\n\t\t{ATC Corrigé} = iif(  instr({ATC Corrigé}, \"#\")>0, \"\", {ATC Corrigé}),\n\t\t{Agence commerciale corrigé} = iif(  instr({Agence commerciale corrigé}, \"#\")>0, \"\", {Agence commerciale corrigé})) ~> DateExtDocVteLongDateCRE\nDateExtDocVteLongDateCRE select(mapColumn(\n\t\tOrgCial = {Org. commerciale},\n\t\tCanalDist = {Canal distribution},\n\t\tSectAct = {Secteur d'activité},\n\t\tDocVte = {Document de vente},\n\t\tPoste,\n\t\tDate = {Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\tDRCde = {Agence commerciale corrigé},\n\t\tATCCde = {ATC Corrigé},\n\t\tCliCde = {Donneur d'ordre},\n\t\tCliLiv = {Récept. de march.},\n\t\tCliFac = {Destinataire facture},\n\t\tNoArt = Article,\n\t\tTypDocVte = {Type doc. vente},\n\t\tTypPoste = {Type de poste},\n\t\tNoLiv = Livraison,\n\t\tTypLiv = {Type de livraison},\n\t\tTypPostLiv = {Type poste Livraison},\n\t\tNoFac = Facture,\n\t\tTypFac = {Type de facture},\n\t\tTypPostFac = {Type poste Facture},\n\t\tMois = {Mois calendrier},\n\t\tAn = {Année civile},\n\t\tRaiCde = {Motif commande},\n\t\tQtCde = {Qté cdée},\n\t\tValNet = {CA cdé},\n\t\tQtLiv = {Qté livrée},\n\t\tValLiv = {CA livré},\n\t\tQtFac = {Qté facturée},\n\t\tValFac = {CA facturé},\n\t\tStdCost = {Cout standard cdé},\n\t\tFabCost = {Cout fabrication},\n\t\tStdCostLiv = {Cout standard livré},\n\t\tStdCostFac = {Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nAC, AP union(byName: true)~> Union1\nRename derive(ValNet = replace(ValNet, \".\", \",\"),\n\t\tValLiv = replace(ValLiv, \".\", \",\"),\n\t\tValFac = replace(ValFac, \".\", \",\"),\n\t\tStdCost = replace(StdCost, \".\", \",\"),\n\t\tStdCostLiv = replace(StdCostLiv, \".\", \",\"),\n\t\tStdCostFac = replace(StdCostFac, \".\", \",\")) ~> formatDecimal\nformatDecimal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['FacturationBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieFacturationBW"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "RH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "dataCommerciale"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "levierPerformance"
						},
						{
							"dataset": {
								"referenceName": "FILTRE_OBJECTIF_RH",
								"type": "DatasetReference"
							},
							"name": "filtre"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_PERFORMANCE",
								"type": "DatasetReference"
							},
							"name": "REFERENTIELPYTHON"
						},
						{
							"dataset": {
								"referenceName": "FILTRE_OBJECTIF_SORTIE",
								"type": "DatasetReference"
							},
							"name": "sortieFiltre"
						}
					],
					"transformations": [
						{
							"name": "filtreAffectation"
						},
						{
							"name": "cleansingInput"
						},
						{
							"name": "cleansingPlateformes"
						},
						{
							"name": "innerPlateformes"
						},
						{
							"name": "innerTypeDeVente"
						},
						{
							"name": "fullLeftPlateforme"
						},
						{
							"name": "outerLeftPlateforme"
						},
						{
							"name": "dropColumnsInCommonLeft"
						},
						{
							"name": "TypeVentesDirectes"
						},
						{
							"name": "unionVentesDirectes"
						},
						{
							"name": "dropColumnsInCommonInner"
						},
						{
							"name": "Rename"
						},
						{
							"name": "typeParse"
						},
						{
							"name": "ATCandDistributeurNotNull"
						},
						{
							"name": "newColumn"
						},
						{
							"name": "RecordID"
						},
						{
							"name": "Select3"
						},
						{
							"name": "splitting"
						},
						{
							"name": "FlattenHierarchie"
						},
						{
							"name": "FlattenMarque"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "libelleLevier"
						},
						{
							"name": "uniqueLevier"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "typeParseLevier"
						},
						{
							"name": "FlattenDiffusChantier"
						},
						{
							"name": "clejointure"
						},
						{
							"name": "cleJointureBase"
						},
						{
							"name": "ajoutColonneFiltre"
						},
						{
							"name": "filtreCalcul"
						},
						{
							"name": "Join1"
						},
						{
							"name": "yearFilter"
						},
						{
							"name": "deleteColumns"
						},
						{
							"name": "ventesDirectes"
						},
						{
							"name": "ajoutManuel"
						},
						{
							"name": "typeAjoutManuel"
						},
						{
							"name": "unionAjoutManuel"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dataCommerciale\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10000,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nsource(output(\n\t\t{Année} as string,\n\t\tDocumentation as string,\n\t\tMarque as string,\n\t\tCible as string,\n\t\t{Périmètre} as string,\n\t\tLevier as string,\n\t\tCanal as string,\n\t\t{Hiérarchie inclues} as string,\n\t\t{Hiérarchies exclues} as string,\n\t\tType as string,\n\t\t{Valeur Annuelle} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levierPerformance\nsource(output(\n\t\t{Année} as integer,\n\t\t{Mois début} as integer,\n\t\t{Mois fin} as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> filtre\ndataCommerciale filter({affecte/non_affecte}==\"affecté\") ~> filtreAffectation\ndropColumns derive(HubSAPid = trim(HubSAPid, \" \"),\n\t\tATC = toInteger(ATC),\n\t\tca_final = toDouble(replace(ca_final, \",\", \".\"))) ~> cleansingInput\nPLATEFORMES derive(HubSAPid = trim(HubSAPid, \" \")) ~> cleansingPlateformes\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerPlateformes\ninnerPlateformes derive({Type de vente} = WholeSalerID) ~> innerTypeDeVente\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftPlateforme\nfullLeftPlateforme filter(isNull(cleansingPlateformes@HubSAPid)) ~> outerLeftPlateforme\nouterLeftPlateforme select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque = marque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonLeft\nventesDirectes derive({Type de vente} = \"Ventes directes\") ~> TypeVentesDirectes\ndropColumnsInCommonInner, TypeVentesDirectes union(byName: true)~> unionVentesDirectes\ninnerTypeDeVente select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tmarque = marque_name,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonInner\nunionAjoutManuel select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tcanal_jointure = canal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente},\n\t\tOrgCm = marque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nRename derive({Canal distribution} = toInteger(canal_jointure),\n\t\tid_canal_final = toInteger(canal_jointure),\n\t\tcanal = toInteger(canal_jointure),\n\t\tid_canal = toInteger(canal_jointure),\n\t\t{Canal Final} = toInteger(canal_jointure),\n\t\tOrgCm = toInteger(OrgCm),\n\t\tcanal_final = replace(lower(canal_final), \" \", \"\"),\n\t\tyear = toInteger(year),\n\t\tN1locale = replace(N1locale, \" \", \"\")) ~> typeParse\ntypeParse filter(!isNull(ATC) && !isNull({Type de vente}) && !isNull({OrgCm})) ~> ATCandDistributeurNotNull\nFilter3 derive({diffus/chantier} = iif(Cible!=\"DR\", trim(split(Cible, \" \")[2], \" \"), \"diffus,chantier\"),\n\t\tID_KPI = \"Sum_XRow_\"+toString(RecordID)) ~> newColumn\nuniqueLevier keyGenerate(output(RecordID as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nnewColumn select(mapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie = {Hiérarchie inclues},\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 derive(Marque = split(Marque, \".\"),\n\t\tCanal = split(Canal, \",\"),\n\t\tHierarchie = split(Hierarchie, \",\"),\n\t\tdiffusChantier = split({diffus/chantier}, \",\")) ~> splitting\nFlattenCanal foldDown(unroll(Hierarchie),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenHierarchie\nFlattenDiffusChantier foldDown(unroll(Marque),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenMarque\nFlattenMarque foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nfiltreCalcul select(mapColumn(\n\t\tdistributeur = {plateforme/vente directe},\n\t\tdata_origin = {origine de la ligne},\n\t\treference = {code produit},\n\t\tyearmonth,\n\t\tHubSAPid = {code client plateforme livree},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final = quantite,\n\t\tca_final = ca,\n\t\tcanal_final,\n\t\tPOSSAMidString = {Code client livré},\n\t\tmarque_name = marque_code,\n\t\tno_offre,\n\t\tHierarchiegroupe = {Hiérarchgroupe},\n\t\tHierarchielocale = {Hiérarchlocale},\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation = N1groupedesignation,\n\t\tN2GroupeDesignation = N2groupedesignation,\n\t\tN3GroupeDesignation = N3groupedesignation,\n\t\tN4GroupeDesignation = N4groupedesignation,\n\t\tN5GroupeDesignation = N5groupedesignation,\n\t\tN6GroupeDesignation = N6groupedesignation,\n\t\tN7GroupeDesignation = N7groupedesignation,\n\t\tN1LocalDesignation = N1localedesignation,\n\t\tN2LocalDesignation = N2localedesignation,\n\t\tN3LocalDesignation = N3localedesignation,\n\t\tN4LocalDesignation = N4localedesignation,\n\t\tN6LocalDesignation = N6localedesignation,\n\t\tN7LocalDesignation = N7localedesignation,\n\t\t{Code postal},\n\t\tmarque = marque_code,\n\t\tATC = {ATC Performance},\n\t\tATC1 = {ATC livré},\n\t\tATC2 = {ATC offre},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tN5LocalDesignation = N5localedesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nRecordID filter(!isNull(Documentation) || !isNull(Levier)) ~> Filter3\nlevierPerformance derive({Libellé levié} = Levier+\"-\"+Documentation+\" \"+Cible+\" \"+{Périmètre}+\" \"+iif({Valeur Annuelle}==\"YES\", \"Annuel\", \"Mensuel\"),\n\t\tjointure = 1) ~> libelleLevier\ndeleteColumns aggregate(groupBy({Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\t{Hiérarchie inclues},\n\t\t{Hiérarchies exclues},\n\t\tType,\n\t\t{Valeur Annuelle}),\n\t{Libellé levié} = max({Libellé levié})) ~> uniqueLevier\nuniqueLevier aggregate(groupBy({Libellé levié}),\n\tcount = count({Libellé levié})) ~> Aggregate1\nFlattenHierarchie derive(Marque = toInteger(Marque),\n\t\t{Année} = toInteger({Année}),\n\t\tHierarchie = replace(Hierarchie, \" \", \"\"),\n\t\t{diffus/chantier} = replace(lower({diffus/chantier}), \" \", \"\")) ~> typeParseLevier\nsplitting foldDown(unroll(diffusChantier),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier} = diffusChantier,\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenDiffusChantier\nfiltre derive(jointure = 1) ~> clejointure\nfiltreAffectation derive(jointure = 1) ~> cleJointureBase\ncleJointureBase, clejointure join(cleJointureBase@jointure == clejointure@jointure,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> ajoutColonneFiltre\najoutColonneFiltre filter(toInteger(year)=={Année} && toInteger(month)>={Mois début} && toInteger(month)<={Mois fin}) ~> filtreCalcul\nlibelleLevier, clejointure join(libelleLevier@jointure == clejointure@jointure,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(toInteger(levierPerformance@{Année})==filtre@{Année}) ~> yearFilter\nyearFilter select(mapColumn(\n\t\t{Année} = levierPerformance@{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\t{Hiérarchie inclues},\n\t\t{Hiérarchies exclues},\n\t\tType,\n\t\t{Valeur Annuelle},\n\t\t{Libellé levié}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteColumns\ndropColumnsInCommonLeft filter(data_origin != \"Ajout manuel\") ~> ventesDirectes\ndropColumnsInCommonLeft filter(data_origin == \"Ajout manuel\") ~> ajoutManuel\najoutManuel derive({Type de vente} = \"Ajout manuel: \" + HubSAPid) ~> typeAjoutManuel\nunionVentesDirectes, typeAjoutManuel union(byName: true)~> unionAjoutManuel\nATCandDistributeurNotNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TEMP_LEVIER_RH.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\ntypeParseLevier sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['TEMP_LEVIER_PERFORMANCE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> REFERENTIELPYTHON\nclejointure sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string\n\t),\n\tpartitionFileNames:['FILTRE_OBJECTIF_SORTIE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sortieFiltre"
				}
			},
			"dependsOn": []
		}
	]
}