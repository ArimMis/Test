{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-VAILLANT"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_ARTICLE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "articleHierarchie"
						},
						{
							"dataset": {
								"referenceName": "DETAIL_ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "detailArticleHierarchie"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outDatawarehouse",
								"type": "DatasetReference"
							},
							"name": "sortieArticleDesignation"
						}
					],
					"transformations": [
						{
							"name": "splitGroupe"
						},
						{
							"name": "splitLocale"
						},
						{
							"name": "N1GroupeDesignation"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2GroupeDesignation"
						},
						{
							"name": "RemoveColumns2",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3GroupeDesignation"
						},
						{
							"name": "RemoveColumns3",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4GroupeDesignation"
						},
						{
							"name": "RemoveColumns4",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5GroupeDesignation"
						},
						{
							"name": "RemoveColumns5",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6GroupeDesignation"
						},
						{
							"name": "RemoveColumns6",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7GroupeDesignation"
						},
						{
							"name": "RemoveColumns7",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N1LocaleDesignation"
						},
						{
							"name": "RemoveColumns8",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2LocaleDesignation"
						},
						{
							"name": "RemoveColumns9",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3LocaleDesignation"
						},
						{
							"name": "RemoveColumns10",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4LocaleDesignation"
						},
						{
							"name": "RemoveColumns11",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5LocaleDesignation"
						},
						{
							"name": "RemoveColumns12",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6LocaleDesignation"
						},
						{
							"name": "RemoveColumns13",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7LocaleDesignation"
						},
						{
							"name": "RemoveColumns14",
							"description": "Autogenerated by data preview actions"
						}
					],
					"script": "source(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleHierarchie\nsource(output(\n\t\t{Hiérarch.produits} as string,\n\t\t{Désignation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> detailArticleHierarchie\narticleHierarchie derive({N1.groupe} = substring({Hiérarch.groupe}, 1, 2),\n\t\t{N2.groupe} = substring({Hiérarch.groupe}, 1, 3),\n\t\t{N3.groupe} = substring({Hiérarch.groupe}, 1, 4),\n\t\t{N4.groupe} = substring({Hiérarch.groupe}, 1, 5),\n\t\t{N5.groupe} = substring({Hiérarch.groupe}, 1, 6),\n\t\t{N6.groupe} = substring({Hiérarch.groupe}, 1, 7),\n\t\t{N7.groupe} = substring({Hiérarch.groupe}, 1, 10)) ~> splitGroupe\nsplitGroupe derive({N1.locale} = substring({Hiérarch.locale}, 1, 2),\n\t\t{N2.locale} = substring({Hiérarch.locale}, 1, 3),\n\t\t{N3.locale} = substring({Hiérarch.locale}, 1, 4),\n\t\t{N4.locale} = substring({Hiérarch.locale}, 1, 5),\n\t\t{N5.locale} = substring({Hiérarch.locale}, 1, 6),\n\t\t{N6.locale} = substring({Hiérarch.locale}, 1, 7),\n\t\t{N7.locale} = substring({Hiérarch.locale}, 1, 10)) ~> splitLocale\nsplitLocale, detailArticleHierarchie join({N1.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N1GroupeDesignation\nN1GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nRemoveColumns1, detailArticleHierarchie join({N2.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N2GroupeDesignation\nN2GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns2\nRemoveColumns2, detailArticleHierarchie join({N3.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N3GroupeDesignation\nN3GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns3\nRemoveColumns3, detailArticleHierarchie join({N4.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N4GroupeDesignation\nN4GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns4\nRemoveColumns4, detailArticleHierarchie join({N5.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N5GroupeDesignation\nN5GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns5\nRemoveColumns5, detailArticleHierarchie join({N6.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N6GroupeDesignation\nN6GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns6\nRemoveColumns6, detailArticleHierarchie join({N7.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N7GroupeDesignation\nN7GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns7\nRemoveColumns7, detailArticleHierarchie join({N1.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N1LocaleDesignation\nN1LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns8\nRemoveColumns8, detailArticleHierarchie join({N2.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N2LocaleDesignation\nN2LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns9\nRemoveColumns9, detailArticleHierarchie join({N3.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N3LocaleDesignation\nN3LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns10\nRemoveColumns10, detailArticleHierarchie join({N4.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N4LocaleDesignation\nN4LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns11\nRemoveColumns11, detailArticleHierarchie join({N5.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N5LocaleDesignation\nN5LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns12\nRemoveColumns12, detailArticleHierarchie join({N6.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N6LocaleDesignation\nN6LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns13\nRemoveColumns13, detailArticleHierarchie join({N7.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> N7LocaleDesignation\nN7LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation},\n\t\t{N7.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns14\nRemoveColumns14 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\t{Code postal} as string\n\t),\n\tpartitionFileNames:['HIERARCHIE_ARTICLE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sortieArticleDesignation"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_PRIX_MOYEN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "facturationAC"
						},
						{
							"dataset": {
								"referenceName": "platforme",
								"type": "DatasetReference"
							},
							"name": "plateforme"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "facturationAP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEMP_PRIX_PAR_PERIODE",
								"type": "DatasetReference"
							},
							"name": "dureePeriodeOutput"
						}
					],
					"transformations": [
						{
							"name": "keep42and51"
						},
						{
							"name": "factureFilter"
						},
						{
							"name": "innerPlateforme"
						},
						{
							"name": "dropColumnsInCommonInner"
						},
						{
							"name": "sort"
						},
						{
							"name": "addKey"
						},
						{
							"name": "previousID"
						},
						{
							"name": "joinPreviousRow"
						},
						{
							"name": "prixUnitaire"
						},
						{
							"name": "prixMoyen"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "renameToPrevious"
						},
						{
							"name": "nextID"
						},
						{
							"name": "renameToNext"
						},
						{
							"name": "joinNextRow"
						},
						{
							"name": "changementDePeriode"
						},
						{
							"name": "changementDePeriodeFiltre"
						},
						{
							"name": "DureePeriode"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "Sort1"
						},
						{
							"name": "dropColumnsInCommon1"
						},
						{
							"name": "dropNULL"
						},
						{
							"name": "leftPlateforme"
						},
						{
							"name": "leftOuterPlateforme"
						},
						{
							"name": "prixUnitaireLeft"
						},
						{
							"name": "dureePeriodeLeft"
						},
						{
							"name": "uniqueWholeSalerID"
						},
						{
							"name": "drop"
						},
						{
							"name": "join"
						},
						{
							"name": "Join1"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "dropColumns2"
						},
						{
							"name": "addperiod"
						},
						{
							"name": "Union1"
						},
						{
							"name": "facFilter"
						},
						{
							"name": "addNewKey"
						},
						{
							"name": "deletePreviousAndNext"
						},
						{
							"name": "Sort2"
						},
						{
							"name": "nextNewID"
						},
						{
							"name": "renameToNextNew"
						},
						{
							"name": "previousNewID"
						},
						{
							"name": "renameToPreviousNew"
						},
						{
							"name": "joinNewPreviousID"
						},
						{
							"name": "joinNewNextID"
						},
						{
							"name": "join2"
						},
						{
							"name": "leftJoin"
						},
						{
							"name": "averagePrix"
						},
						{
							"name": "UnionFacturation"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as integer,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as integer,\n\t\t{CA facturé} as double,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> plateforme\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as integer,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as integer,\n\t\t{CA facturé} as double,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAP\ncleansing filter({Canal distribution}==42) ~> keep42and51\nkeep42and51 derive(fact_filter1 = iif( instr(lower({Type de facture}),\"yfar\")==0 && instr(lower({Motif commande}),\"fas\")==0, 0, 1),\n\t\tfact_filter2 = iif(instr(lower({Type de facture}),\"yafb\")==0 && instr(lower({Motif commande}),\"fas\")==0, 0, 1)) ~> factureFilter\nfacFilter, plateforme join(trim({Récept. de march.}, \" \") == trim(HubSAPid, \" \"),\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> innerPlateforme\ninnerPlateforme select(mapColumn(\n\t\tArticle,\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonInner\nprixMoyen sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> sort\ndropColumns keyGenerate(output(ID as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> addKey\naddKey derive(ID = ID+1) ~> previousID\naddKey, renameToPrevious join(ID == {previous ID},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> joinPreviousRow\nsort derive(prix_unitaire = {CA facturé}/{Qté facturée}) ~> prixUnitaire\ndropColumnsInCommonInner aggregate(groupBy(WholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier}),\n\t{Qté facturée} = max({Qté facturée}),\n\t\t{CA facturé} = max({CA facturé})) ~> prixMoyen\nprixUnitaire select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\npreviousID select(mapColumn(\n\t\t{previous WholeSalerID} = WholeSalerID,\n\t\t{previous Article} = Article,\n\t\t{previous Année civile} = {Année civile},\n\t\t{previous Mois calendrier} = {Mois calendrier},\n\t\t{previous prix_unitaire} = prix_unitaire,\n\t\t{previous ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToPrevious\naddKey derive(ID = ID-1) ~> nextID\nnextID select(mapColumn(\n\t\t{next WholeSalerID} = WholeSalerID,\n\t\t{next Article} = Article,\n\t\t{next Année civile} = {Année civile},\n\t\t{next Mois calendrier} = {Mois calendrier},\n\t\t{next prix_unitaire} = prix_unitaire,\n\t\t{next ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToNext\njoinPreviousRow, renameToNext join(ID == {next ID},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> joinNextRow\njoinNextRow derive({Changement de période} = iif({previous Article}!=Article || {previous WholeSalerID}!=WholeSalerID || {previous Année civile}!={Année civile}, \r\n    1, \r\n\r\n    iif(abs(({previous prix_unitaire}-prix_unitaire)/{previous prix_unitaire})>0.1, 1, 0))) ~> changementDePeriode\nchangementDePeriode filter({Changement de période}==1) ~> changementDePeriodeFiltre\njoinNewNextID derive({Durée_période} = iif(WholeSalerID=={previous WholeSalerID} && Article=={previous Article} && {Année civile}=={previous Année civile}\r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article} && {Année civile}=={next Année civile}\r\n    \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-12/\"+toString({Année civile}))\r\n    \r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article} && {Année civile}=={next Année civile}\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile})))) ~> DureePeriode\nUnionFacturation derive({Canal distribution} = toInteger({Canal distribution})) ~> cleansing\nDureePeriode sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> Sort1\nSort1 select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon1\ndropColumnsInCommon1 filter(!isNull(WholeSalerID) || !isNull(Article) || !isNull({Année civile}) || !isNull({Mois calendrier}) || !isNull(prix_unitaire) || !isNull({Durée_période})) ~> dropNULL\nfacFilter, plateforme join(trim({Récept. de march.}, \" \") == trim(HubSAPid, \" \"),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> leftPlateforme\nleftPlateforme filter(isNull(HubSAPid)) ~> leftOuterPlateforme\nleftOuterPlateforme aggregate(groupBy(Article,\n\t\t{Année civile}),\n\tprix_unitaire = mean({CA facturé}/{Qté facturée})) ~> prixUnitaireLeft\nprixUnitaireLeft derive({Durée_période} = \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile}),\n\t\tjoin = 1) ~> dureePeriodeLeft\nderivedColumn1 aggregate(groupBy(WholeSalerID),\n\tHubName = max(WholeSalerHubID)) ~> uniqueWholeSalerID\nuniqueWholeSalerID select(mapColumn(\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> drop\ndrop derive(join = 1) ~> join\ndureePeriodeLeft, join join(dureePeriodeLeft@join == join@join,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\ndropNULL select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\ndropColumnsInCommon derive({Période} = 1) ~> addperiod\ndropColumns2, averagePrix union(byName: true)~> Union1\nfactureFilter filter(fact_filter1==0 || fact_filter2==0) ~> facFilter\nSort2 keyGenerate(output(ID as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> addNewKey\nchangementDePeriodeFiltre select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deletePreviousAndNext\ndeletePreviousAndNext sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> Sort2\naddNewKey derive(ID = ID-1) ~> nextNewID\nnextNewID select(mapColumn(\n\t\t{next WholeSalerID} = WholeSalerID,\n\t\t{next Article} = Article,\n\t\t{next Année civile} = {Année civile},\n\t\t{next Mois calendrier} = {Mois calendrier},\n\t\t{next ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToNextNew\naddNewKey derive(ID = ID+1) ~> previousNewID\npreviousNewID select(mapColumn(\n\t\t{previous WholeSalerID} = WholeSalerID,\n\t\t{previous Article} = Article,\n\t\t{previous Année civile} = {Année civile},\n\t\t{previous Mois calendrier} = {Mois calendrier},\n\t\t{previous ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToPreviousNew\naddNewKey, renameToPreviousNew join(ID == {previous ID},\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> joinNewPreviousID\njoinNewPreviousID, renameToNextNew join(ID == {next ID},\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> joinNewNextID\naddperiod, dropColumns2 join(dropColumnsInCommon@WholeSalerID == dropColumns2@WholeSalerID\n\t&& dropColumnsInCommon@Article == dropColumns2@Article,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join2\njoin2 filter(isNull(dropColumns2@WholeSalerID) || isNull(dropColumns2@Article)) ~> leftJoin\nleftJoin select(mapColumn(\n\t\tArticle = dropColumnsInCommon@Article,\n\t\tprix_unitaire = dropColumnsInCommon@prix_unitaire,\n\t\t{Durée_période} = dropColumnsInCommon@{Durée_période},\n\t\tWholeSalerID = dropColumnsInCommon@WholeSalerID,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> averagePrix\nfacturationAC, facturationAP union(byName: true)~> UnionFacturation\nplateforme derive(WholeSalerID = iif(WholeSalerID==\"CDO - CEDEO Distribution Sanitaire Chauffage\", \"DSC - Distribution Sanitaire Chauffage\", WholeSalerID)) ~> derivedColumn1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TEMP_PRIX_PAR_PERIODE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> dureePeriodeOutput"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_VMC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\ninput: dossier VMC\ntraitement:\nconcat all file in vmc,\ndrop duplicate.\noutput referentiel VMC.",
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "vmcinput",
								"type": "DatasetReference"
							},
							"name": "inputVMC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outPutReferentielVMC",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "extractYEAr"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tMaterial as string,\n\t\t{Description article} as string,\n\t\tVMC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'filename') ~> inputVMC\ninputVMC derive(year = regexExtract(filename , '(\\\\d+)',1)) ~> extractYEAr\nextractYEAr aggregate(groupBy(Material,\n\t\tyear),\n\tVMC = first(VMC)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SAUNIER DUVAL} as string,\n\t\t{208.0} as string,\n\t\t{Pièces détachées pour chauffage} as string,\n\t\t{05608600} as string,\n\t\t{5272.0} as string,\n\t\t{33.0} as string,\n\t\t{0.0} as string,\n\t\t{202008} as string,\n\t\t{2020} as string,\n\t\t{08} as string\n\t),\n\tpartitionFileNames:['referentiel_vmc.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_CHANTIER')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_OFFRE_CHANTIER_INPUT",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SUIVIE_OFFRE_CHANTIER",
								"type": "DatasetReference"
							},
							"name": "SUIVIEOFFRECHANTIER"
						},
						{
							"dataset": {
								"referenceName": "offre_et_baseCom_sans_matching",
								"type": "DatasetReference"
							},
							"name": "offreEtBaseComSansMatching"
						}
					],
					"transformations": [
						{
							"name": "aggregationOffre"
						},
						{
							"name": "offreNotNULLoffre"
						},
						{
							"name": "offreNotNullBase"
						},
						{
							"name": "aggregationBase"
						},
						{
							"name": "leftOffreBaseCom"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "dropColumnsInCommonleft"
						},
						{
							"name": "fullRightOffreBaseCom"
						},
						{
							"name": "rightOffreBaseCom"
						},
						{
							"name": "dropColumnsInCommonRight"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						}
					],
					"script": "source(output(\n\t\t{DateDébutValidité} as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{DateFinValidité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\t{Date de création} as string,\n\t\tNomSignataire1 as string,\n\t\tNomSignataire2 as string,\n\t\tDateSignataire1 as string,\n\t\tDateSignataire2 as string,\n\t\t{DateDérogation} as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nDerivedColumn2 aggregate(groupBy(Offre,\n\t\t{Référence},\n\t\tCanal),\n\t{Statut offre} = first({Statut offre}),\n\t\tResponsable = first(Responsable),\n\t\t{Numéro interne 1} = first({Numéro interne 1}),\n\t\t{Négoce} = first({Négoce}),\n\t\t{Numéro interne 2} = first({Numéro interne 2}),\n\t\t{Quantité de l'offre} = sum(toInteger({Quantité})),\n\t\t{Date fin validité} = max({DateFinValidité})) ~> aggregationOffre\nstgOffre filter(!isNull(Offre)) ~> offreNotNULLoffre\nbaseCommerciale filter(!isNull(no_offre) && canal_final==\"Chantier\") ~> offreNotNullBase\nDerivedColumn1 aggregate(groupBy({plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit},\n\t\tcanal_final),\n\t{qte consommée} = sum(toInteger(quantite) ),\n\t\t{dernière facturation année} = max(toInteger(year)),\n\t\t{dernière facturation mois} = max(toInteger(month))) ~> aggregationBase\naggregationOffre, aggregationBase join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> leftOffreBaseCom\nleftOffreBaseCom derive({Date de dernière facturation de l'offre} = toString({dernière facturation année})+\"-\"+toString({dernière facturation mois})) ~> yearmonth\nyearmonth select(mapColumn(\n\t\t{Num offre} = Offre,\n\t\tCanal,\n\t\tProduit = {Référence},\n\t\t{Quantité de l'offre},\n\t\t{Date fin validité},\n\t\t{Quantité consommée} = {qte consommée},\n\t\t{Date de dernière facturation de l'offre},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\t{Numéro interne 1},\n\t\t{Négoce},\n\t\t{Numéro interne 2}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonleft\naggregationOffre, aggregationBase join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'right',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> fullRightOffreBaseCom\nfullRightOffreBaseCom filter(isNull(Offre) || isNull({Référence})) ~> rightOffreBaseCom\nrightOffreBaseCom select(mapColumn(\n\t\t{plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit},\n\t\tcanal_final,\n\t\t{qte consommée},\n\t\t{dernière facturation année},\n\t\t{dernière facturation mois}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonRight\noffreNotNullBase derive({code produit} = iif(substring({code produit},1,2) == \"00\", substring({code produit},3,length({code produit})-2), {code produit}),\n\t\tno_offre = upper(no_offre)) ~> DerivedColumn1\noffreNotNULLoffre derive({DateFinValidité} = split({DateFinValidité}, \" \")[1]) ~> DerivedColumn2\ndropColumnsInCommonleft sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SUIVIE_OFFRE_CHANTIER.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SUIVIEOFFRECHANTIER\ndropColumnsInCommonRight sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['offre_et_baseCom_sans_matching.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> offreEtBaseComSansMatching"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_OFFRE_DIFFUS_INPUT",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "articleHierarchi"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OFFRE_SANS_MATCHING_DIFFUS",
								"type": "DatasetReference"
							},
							"name": "offreSansMatching"
						},
						{
							"dataset": {
								"referenceName": "SUIVI_OFFRE_DIFFUS",
								"type": "DatasetReference"
							},
							"name": "OUTputffreDiffus"
						}
					],
					"transformations": [
						{
							"name": "aggregationOffre"
						},
						{
							"name": "offreNotNULL"
						},
						{
							"name": "offreNotNullBase"
						},
						{
							"name": "aggregationBaseold"
						},
						{
							"name": "leftOffreBase"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "dropColumnsInCommonLeft"
						},
						{
							"name": "fullRightOffrebase"
						},
						{
							"name": "right"
						},
						{
							"name": "dropColumnsInCommonRight"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "endArticle"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Join2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "Aggregate2"
						}
					],
					"script": "source(output(\n\t\t{DateDébutValidité} as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{DateFinValidité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\t{Date de création} as string,\n\t\tNomSignataire1 as string,\n\t\tNomSignataire2 as string,\n\t\tDateSignataire1 as string,\n\t\tDateSignataire2 as string,\n\t\t{DateDérogation} as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleHierarchi\noffreNotNULL aggregate(groupBy(Offre,\n\t\t{Référence},\n\t\tCanal),\n\t{Statut offre} = last({Statut offre}),\n\t\t{Numéro interne 1} = first({Numéro interne 1}),\n\t\tResponsable = last(Responsable),\n\t\t{Négoce} = first({Négoce}),\n\t\t{Numéro interne 2} = first({Numéro interne 2}),\n\t\tCODE_CMI = first(CODE_CMI),\n\t\tNOM_CMI = first(NOM_CMI),\n\t\t{Date fin de validité} = max({DateFinValidité}),\n\t\t{Quantité de l'offre} = sum(toInteger({Quantité})),\n\t\tQuantite_P1N = first(PotentielP1N),\n\t\tQuantite_P2N = first(PotentielP2N),\n\t\tQuantite_P3N = first(PotentielP3N),\n\t\tQuantite_P4N = first(PotentielP4N),\n\t\tQuantite_P5N = first(PotentielP5N),\n\t\tQuantite_P6N = first(PotentielP6N)) ~> aggregationOffre\nDerivedColumn1 filter(!isNull(Offre)) ~> offreNotNULL\nbaseCommerciale filter(!isNull(no_offre) && canal_final==\"Diffus\") ~> offreNotNullBase\noffreNotNullBase aggregate(groupBy({plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit}),\n\t{Quantité consommée} = sum(toInteger(quantite)),\n\t\t{dernière facturation année} = max(toInteger(year)),\n\t\t{dernière facturation mois} = max(toInteger(month))) ~> aggregationBaseold\naggregationOffre, aggregationBaseold join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> leftOffreBase\nleftOffreBase derive({Date de dernière facturation de l'offre} = toString({dernière facturation année})+\"-\"+toString({dernière facturation mois}),\n\t\tCanal = \"Diffus\") ~> yearmonth\nyearmonth select(mapColumn(\n\t\tOffre,\n\t\t{Référence},\n\t\tCanal,\n\t\t{Date fin de validité},\n\t\t{Quantité de l'offre},\n\t\tQuantite_P1N,\n\t\tQuantite_P2N,\n\t\tQuantite_P3N,\n\t\tQuantite_P4N,\n\t\tQuantite_P5N,\n\t\tQuantite_P6N,\n\t\t{Quantité consommée},\n\t\t{Date de dernière facturation de l'offre},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\t{Numéro interne 1},\n\t\t{Négoce},\n\t\t{Numéro interne 2},\n\t\tCODE_CMI,\n\t\tNOM_CMI\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonLeft\naggregationOffre, aggregationBaseold join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> fullRightOffrebase\nfullRightOffrebase filter(isNull(Offre) || isNull({Référence})) ~> right\nright select(mapColumn(\n\t\tOffre,\n\t\t{Référence},\n\t\tCanal,\n\t\t{Statut offre},\n\t\tResponsable,\n\t\t{Numéro interne 1},\n\t\t{Négoce},\n\t\t{Numéro interne 2},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Date fin de validité},\n\t\t{Quantité de l'offre},\n\t\tQuantite_P1N,\n\t\tQuantite_P2N,\n\t\tQuantite_P3N,\n\t\tQuantite_P4N,\n\t\tQuantite_P5N,\n\t\tQuantite_P6N,\n\t\t{plateforme/vente directe},\n\t\t{Quantité consommée},\n\t\t{dernière facturation année},\n\t\t{dernière facturation mois}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonRight\nstgOffre derive({DateFinValidité} = split({DateFinValidité}, \" \")[1]) ~> DerivedColumn1\noffreNotNULL, endArticle join(iif(isInteger({Référence}), toString(toInteger({Référence})), {Référence}) == iif(isInteger(Article), toString(toInteger(Article)), Article),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join1\narticleHierarchi select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endArticle\nJoin1 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn2 aggregate(groupBy(Offre),\n\tPotentielP1N = sum(toInteger(PotentielP1N)),\n\t\tPotentielP2N = sum(toInteger(PotentielP2N)),\n\t\tPotentielP3N = sum(toInteger(PotentielP3N)),\n\t\tPotentielP4N = sum(toInteger(PotentielP4N)),\n\t\tPotentielP5N = sum(toInteger(PotentielP5N)),\n\t\tPotentielP6N = sum(toInteger(PotentielP6N)),\n\t\t{DateFinValidité} = max({DateFinValidité}),\n\t\tCODE_CMI = first(CODE_CMI),\n\t\tNOM_CMI = first(NOM_CMI),\n\t\tResponsable = last(Responsable),\n\t\t{Numéro interne 1} = last({Numéro interne 1}),\n\t\t{Numéro interne 2} = last({Numéro interne 2}),\n\t\t{Négoce} = last({Négoce}),\n\t\t{Statut offre} = last({Statut offre}),\n\t\tCodeATC = last(CodeATC)) ~> Aggregate1\nSelect1 derive(PotentielP1N = iif( {N1.locale}==\"FB\", coalesce(PotentielP1N , {Quantité}), \"\" ),\n\t\tPotentielP2N = iif( {N1.locale}==\"FA\", coalesce(PotentielP2N , {Quantité}), \"\" ),\n\t\tPotentielP3N = iif( {N2.locale}==\"FP1\", coalesce(PotentielP3N , {Quantité}), \"\" ),\n\t\tPotentielP4N = iif( {N2.locale}==\"FR1\", coalesce(PotentielP4N , {Quantité}), \"\" ),\n\t\tPotentielP5N = iif( {N3.locale}==\"FP41\", coalesce(PotentielP5N , {Quantité}), \"\" ),\n\t\tPotentielP6N = iif( {N3.locale}==\"FC21\", coalesce(PotentielP6N , {Quantité}), \"\" )) ~> DerivedColumn2\nAggregate1, Aggregate2 join(Offre == no_offre,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join2\nJoin2 derive(Canal = \"Diffus\",\n\t\t{date dernière facturation} = toString({dernière facturation année})+\"-\"+ toString({dernière facturation mois})) ~> DerivedColumn3\noffreNotNullBase derive(Realise_PotentielP1N = iif( N1locale==\"FB\",  quantite, \"\" ),\n\t\tRealise_PotentielP2N = iif( N1locale==\"FA\", quantite, \"\" ),\n\t\tRealise_PotentielP3N = iif( N2locale==\"FP1\", quantite, \"\" ),\n\t\tRealise_PotentielP4N = iif( N2locale==\"FR1\", quantite  , \"\" ),\n\t\tRealise_PotentielP5N = iif( N3locale==\"FP41\", quantite, \"\" ),\n\t\tRealise_PotentielP6N = iif( N3locale==\"FC21\", quantite, \"\" )) ~> DerivedColumn4\nDerivedColumn4 aggregate(groupBy(no_offre,\n\t\t{plateforme/vente directe}),\n\tRealise_PotentielP1N = sum(toInteger(Realise_PotentielP1N)),\n\t\tRealise_PotentielP2N = sum(toInteger(Realise_PotentielP2N)),\n\t\tRealise_PotentielP3N = sum(toInteger(Realise_PotentielP3N)),\n\t\tRealise_PotentielP4N = sum(toInteger(Realise_PotentielP4N)),\n\t\tRealise_PotentielP5N = sum(toInteger(Realise_PotentielP5N)),\n\t\tRealise_PotentielP6N = sum(toInteger(Realise_PotentielP6N)),\n\t\t{dernière facturation année} = max(toInteger(year)),\n\t\t{dernière facturation mois} = max(toInteger(month))) ~> Aggregate2\ndropColumnsInCommonRight sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string\n\t),\n\tpartitionFileNames:['offre_et_baseCom_sans_matching_diffus.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> offreSansMatching\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SUIVI_OFFRE_DIFFUS.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OUTputffreDiffus"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TEREVA_ECOULEMENT_INPUT",
								"type": "DatasetReference"
							},
							"name": "ECOULEMENT"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "TEREVAECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "outErrorFinding",
								"type": "DatasetReference"
							},
							"name": "TEREVAORGANISATIONNOTFOUND"
						},
						{
							"dataset": {
								"referenceName": "outErrorFinding",
								"type": "DatasetReference"
							},
							"name": "terevaQteNull"
						}
					],
					"transformations": [
						{
							"name": "flowlet1",
							"flowlet": {
								"referenceName": "decrementationVenteDirecte",
								"type": "DataFlowReference",
								"parameters": {}
							}
						},
						{
							"name": "yearmonthANDcanal"
						},
						{
							"name": "yearANDmonth"
						},
						{
							"name": "agenceCodeNotNull"
						},
						{
							"name": "posIDNotNull"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "rename"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerLeftVentesDirectes"
						},
						{
							"name": "dropColumnsInCommon1"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "marquename"
						},
						{
							"name": "fullLeftOrganisation"
						},
						{
							"name": "leftOnly"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "EndVentesDirectes"
						},
						{
							"name": "window1"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "idDecrementation"
						},
						{
							"name": "select2"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "join1"
						}
					],
					"script": "source(output(\n\t\tProp_0 as string,\n\t\tsociete as string,\n\t\tregion_lib as string,\n\t\tsgeo as string,\n\t\tsgeo_lib as string,\n\t\tagence as string,\n\t\tagence_lib as string,\n\t\tdep_ag as string,\n\t\tfrs as string,\n\t\tarticle as string,\n\t\tarticle_lib as string,\n\t\tdm as string,\n\t\tref_frs as string,\n\t\t{vva (m) n} as string,\n\t\t{vva (m) n-1} as string,\n\t\t{qte (m) n} as string,\n\t\t{qte (m) n-1} as string,\n\t\t{vva (c) n} as string,\n\t\t{vva (c) n-1} as string,\n\t\t{qte (c) n} as string,\n\t\t{qte (c) n-1} as string,\n\t\t{var. vva (m)} as string,\n\t\t{var. qte (m)} as string,\n\t\t{var. vva (c)} as string,\n\t\t{var. qte (c)} as string,\n\t\tpath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ECOULEMENT\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyear as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nderivedColumn2 compose(mapColumn(\n\t\tid = idDecrementation,\n\t\tPossAMid = POSSAMid,\n\t\treference,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_venteDirecte = {Qté vente direct}\n\t),\n\tcomposition: 'decrementationVenteDirecte') ~> flowlet1@(output1)\nrename derive(yearmonth = replace(split(split(path, \"/\")[3], \"_\")[1], \"-\", \"\"),\n\t\tcanal = split(split(path, \"/\")[3], \"_\")[2],\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonthANDcanal\nConditionalSplit1@qteNotNul derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> yearANDmonth\nyearANDmonth filter(!isNull(agence_code)) ~> agenceCodeNotNull\norganisation filter(!isNull(POSid)) ~> posIDNotNull\nagenceCodeNotNull, uniqueOrganisation join(agence_code == POSid,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> innerOrganisation\nposIDNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> uniqueOrganisation\nwindow1, EndVentesDirectes join(yearANDmonth@year == EndVentesDirectes@year\n\t&& ConditionalSplit1@qteNotNul@reference == EndVentesDirectes@reference\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> innerVentesDirectes\nECOULEMENT select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code = agence,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file = frs,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference = ref_frs,\n\t\tqte_ecoulement = {qte (m) n},\n\t\tpath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\ninnerOrganisation, EndVentesDirectes join(yearANDmonth@year == EndVentesDirectes@year\n\t&& coalesce(toString(toInteger(replace(ConditionalSplit1@qteNotNul@reference, \" \", \"\"))),replace(ConditionalSplit1@qteNotNul@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(EndVentesDirectes@reference, \" \", \"\"))),replace(EndVentesDirectes@reference, \" \", \"\"))\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(EndVentesDirectes@reference) || isNull(EndVentesDirectes@year) || isNull({Code client})) ~> outerLeftVentesDirectes\nderivedColumn1 select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tqte_ecoulement,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference,\n\t\tpath,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon1\nouterLeftVentesDirectes select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference = ConditionalSplit1@qteNotNul@reference,\n\t\tqte_ecoulement,\n\t\tpath,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear = yearANDmonth@year,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\ndropColumnsInCommon1, dropColumnsInCommon union(byName: true)~> fullLeftUnion\nmarquename select(mapColumn(\n\t\tdistributeur = societe,\n\t\tagence_code,\n\t\tmarque_file,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tHubSAPid,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tmarque_id = BrandID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nfullLeftUnion derive(marque_name = \"SaunierDuval\",\n\t\tmarque = \"1604\",\n\t\tmarque_num = \"1604\") ~> marquename\nagenceCodeNotNull, uniqueOrganisation join(agence_code == POSid,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> fullLeftOrganisation\nfullLeftOrganisation filter(isNull(POSid)) ~> leftOnly\nyearmonthANDcanal split(qte_ecoulement!=0,\n\tdisjoint: false) ~> ConditionalSplit1@(qteNotNul, qteNull)\nventesDirectes select(mapColumn(\n\t\tyear,\n\t\treference,\n\t\t{Code client},\n\t\t{Qté vente direct} = qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndVentesDirectes\ninnerOrganisation window(over(year,\n\t\tPOSSAMid,\n\t\treference),\n\tasc(month, true),\n\tqte_cumul = sum(qte_ecoulement)) ~> window1\ninnerVentesDirectes select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference = ConditionalSplit1@qteNotNul@reference,\n\t\tqte_ecoulement,\n\t\tpath,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear = yearANDmonth@year,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tqte_cumul,\n\t\treference = EndVentesDirectes@reference,\n\t\t{Code client},\n\t\t{Qté vente direct}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\njoin1 derive(qte_ecoulement = qt_final) ~> derivedColumn1\nselect1 keyGenerate(output(idDecrementation as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> idDecrementation\nidDecrementation select(mapColumn(\n\t\tidDecrementation,\n\t\tPOSSAMid,\n\t\treference,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\t{Qté vente direct}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nselect2 derive(month = toInteger(month),\n\t\tqte_ecoulement = toFloat(qte_ecoulement),\n\t\t{Qté vente direct} = toFloat({Qté vente direct})) ~> derivedColumn2\nidDecrementation, flowlet1@output1 join(idDecrementation == id,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['TEREVA_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> TEREVAECOULPREPARED\nleftOnly sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['TEREVA_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> TEREVAORGANISATIONNOTFOUND\nConditionalSplit1@qteNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['TEREVA_QteNull.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> terevaQteNull"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRAITEMENTECOULEMENT_AVOIR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "flux pour le retraitmenet des ecoulements du modele dsc-tereva",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecoulementUniformAz",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "avoir",
								"type": "DatasetReference"
							},
							"name": "avoir"
						},
						{
							"dataset": {
								"referenceName": "salerDsc",
								"type": "DatasetReference"
							},
							"name": "salerDSC"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "OrgaTerevas"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "outEccDscTereva"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "DTAvoirRetraiter"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "outEcoulementDScTereva"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "outputEcoulementPartedis"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "outputAvoirDSc"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "AvoirForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outErrorFinding",
								"type": "DatasetReference"
							},
							"name": "outputAvoirNotFound"
						}
					],
					"transformations": [
						{
							"name": "dropColumns"
						},
						{
							"name": "filterColumnsToUse"
						},
						{
							"name": "filterDistrubitor"
						},
						{
							"name": "AvoirAddToReplicate"
						},
						{
							"name": "EccAddToReplicate"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "unionDSCTereva"
						},
						{
							"name": "uniqueAgenceCode"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "DscTerevaJoinOrganisation"
						},
						{
							"name": "ReSelect"
						},
						{
							"name": "positiveQuantite"
						},
						{
							"name": "dd"
						},
						{
							"name": "ddToList"
						},
						{
							"name": "Window1"
						},
						{
							"name": "dd2"
						},
						{
							"name": "dd2ToList"
						},
						{
							"name": "Window2"
						},
						{
							"name": "dd3"
						},
						{
							"name": "Window3"
						},
						{
							"name": "dd3tolist"
						},
						{
							"name": "indexcols3"
						},
						{
							"name": "indexcols2"
						},
						{
							"name": "indexcols"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "dropdd"
						},
						{
							"name": "caEcoulement"
						},
						{
							"name": "caAvoir"
						},
						{
							"name": "JoinOrganisation"
						},
						{
							"name": "posidNULL"
						},
						{
							"name": "periode"
						},
						{
							"name": "columnChoicePrix"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\tmarque as string,\n\t\tClient as string,\n\t\t{code postal} as string,\n\t\tmarque_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Clé} as string,\n\t\tMarque as string,\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tDepot as string,\n\t\tNoFrs as string,\n\t\tFOUR2 as string,\n\t\tC_Four as string,\n\t\tLib_Four as string,\n\t\tCategorie as string,\n\t\tCanal as string,\n\t\tFinancement as string,\n\t\tNoOffre as string,\n\t\tDate_Debut as string,\n\t\tDate_Fin as string,\n\t\tNoArtDSC as string,\n\t\tLibArt as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\t{LIB AGENCE} as string,\n\t\t{Qté_Ini} as string,\n\t\tSolde_Qte as string,\n\t\tQte_Tot as string,\n\t\tQte_Retenue as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tNomCli as string,\n\t\tPRR as string,\n\t\tPRS_ligne_BL as string,\n\t\tPA_Ref as string,\n\t\tPA_D as string,\n\t\tPA_Valide_VGF as string,\n\t\tEcart as string,\n\t\tAide as string,\n\t\tAide_Retenue as string,\n\t\t{Aide_Validée_VGF} as string,\n\t\tDate_Num as string,\n\t\tP_Fact as string,\n\t\t{Clé_Offre_Article} as string,\n\t\tMotif_Commentaire as string,\n\t\t{Qté_Campagne} as string,\n\t\tPrix_Campagne as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tMontant_Avoir as string,\n\t\tNoDocRefac as string,\n\t\tNoLigneDocRefac as string,\n\t\t{Contrôle} as string,\n\t\tDate_Ctrl as string,\n\t\tCode_Motif_Refus as string,\n\t\tCompanyId as string,\n\t\t{ValidéPar} as string,\n\t\tDateAjout as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoir\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> salerDSC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrgaTerevas\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\necoulement select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal} = {code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\navoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filterColumnsToUse\nEccAddToReplicate split(in([\"dsc\",'tereva'],lower(distributeur)),\n\tdisjoint: false) ~> filterDistrubitor@(dscTereva, notDscTereva)\nfilterColumnsToUse derive(toreplicate = abs( toInteger( Qte_Validee_VGF ) )) ~> AvoirAddToReplicate\ndropColumns derive(toreplicate = abs(toInteger( qte_ecoulement )),\n\t\tagence_code = replace(agence_code, \".0\", \"\")) ~> EccAddToReplicate\nnewColumns split(in([\"2\",\"7\"], CompanyId),\n\tdisjoint: false) ~> ConditionalSplit1@(DscTerevaAvoir, NotDscTerevaAvoir)\nsalerDSC, OrgaTerevas union(byName: true)~> unionDSCTereva\nunionDSCTereva aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tHubSAPid = last(HubSAPid)) ~> uniqueAgenceCode\nAvoirAddToReplicate derive(ca_avoir = toFloat(PA_Valide_VGF),\n\t\tyearmonth = iif(toInteger(Mois)<10, {Année}+\"0\"+Mois  ,   {Année}+Mois  ),\n\t\tQte_Validee_VGF = toInteger( Qte_Validee_VGF )) ~> newColumns\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> DscTerevaJoinOrganisation\nConditionalSplit1@DscTerevaAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReSelect\nDscTerevaJoinOrganisation filter(toInteger(Qte_Validee_VGF) >0) ~> positiveQuantite\nfilterDistrubitor@dscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index),\n\t\trcount = 1) ~> dd\ndd foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tdd,\n\t\trcount\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ddToList\nddToList window(over(year,\n\t\tagence_code,\n\t\treference),\n\tasc(year, true),\n\tasc(agence_code, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window1\nfilterDistrubitor@notDscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index)) ~> dd2\ndd2 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> dd2ToList\ndd2ToList window(over(yearmonth,\n\t\tHubSAPid,\n\t\treference),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window2\npositiveQuantite derive(dd = mapLoop(abs(toInteger(Qte_Validee_VGF)), #index)) ~> dd3\ndd3tolist window(over(year = {Année},\n\t\tAgence,\n\t\tNoArtVGF),\n\tasc({Année}, true),\n\tasc(Agence, true),\n\tasc(NoArtVGF, true),\n\tindexcols2 = rowNumber()) ~> Window3\ndd3 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\t{Année},\n\t\tMois_Selection,\n\t\tMois,\n\t\tPA_Valide_VGF,\n\t\tyearmonth,\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tWholeSalerID,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> dd3tolist\nWindow3 derive(indexcols2 = {Année}+Agence+NoArtVGF+toString(indexcols2),\n\t\tqte_avoir = iif(toInteger(Qte_Validee_VGF) >0, 1, -1 )) ~> indexcols3\nWindow2 derive(indexcols2 = yearmonth+HubSAPid+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> indexcols2\ndropdd derive(indexcols2 = year+agence_code+reference+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> indexcols\nfilterDistrubitor@notDscTereva filter(lower(distributeur)==\"tereva\") ~> Filter1\nWindow1 select(mapColumn(\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\trcount,\n\t\tindexcols2,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropdd\nindexcols derive(ca_ecoulement = abs(toDouble(ca_ecoulement))*qte_ecc) ~> caEcoulement\nindexcols3 derive(ca_avoir = abs(ca_avoir)*qte_avoir) ~> caAvoir\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> JoinOrganisation\nJoinOrganisation filter(isNull(POSid)) ~> posidNULL\nprixParPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> periode\nperiode select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\nfilterDistrubitor@dscTereva sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['outEccDscTereva.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEccDscTereva\npositiveQuantite sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['DscAvoirTemp.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DTAvoirRetraiter\ncaEcoulement sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementDscTerevaWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEcoulementDScTereva\nindexcols2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementPartedislikeWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputEcoulementPartedis\ncaAvoir sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['AZ_AvoirWithIndexDSClike.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirDSc\nConditionalSplit1@NotDscTerevaAvoir sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['AvoirForVanMarkes.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> AvoirForVanMarkes\nposidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoir.organisationNotFound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirNotFound"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRAITEMENTECOULEMENT_AVOIR_PERIOD')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "flux pour le retraitmenet des ecoulements du modele dsc-tereva",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecoulementUniformAz",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "avoir",
								"type": "DatasetReference"
							},
							"name": "avoir"
						},
						{
							"dataset": {
								"referenceName": "salerDsc",
								"type": "DatasetReference"
							},
							"name": "salerDSC"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "OrgaTerevas"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "outEccDscTereva"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "DTAvoirRetraiter"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "outEcoulementDScTereva"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "outputEcoulementPartedis"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "outputAvoirDSc"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "AvoirForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outErrorFinding",
								"type": "DatasetReference"
							},
							"name": "outputAvoirNotFound"
						}
					],
					"transformations": [
						{
							"name": "dropColumns"
						},
						{
							"name": "filterColumnsToUse"
						},
						{
							"name": "filterDistrubitor"
						},
						{
							"name": "AvoirAddToReplicate"
						},
						{
							"name": "EccAddToReplicate"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "unionDSCTereva"
						},
						{
							"name": "uniqueAgenceCode"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "DscTerevaJoinOrganisation"
						},
						{
							"name": "ReSelect"
						},
						{
							"name": "positiveQuantite"
						},
						{
							"name": "dd"
						},
						{
							"name": "ddToList"
						},
						{
							"name": "Window1"
						},
						{
							"name": "dd2"
						},
						{
							"name": "dd2ToList"
						},
						{
							"name": "Window2"
						},
						{
							"name": "dd3"
						},
						{
							"name": "Window3"
						},
						{
							"name": "dd3tolist"
						},
						{
							"name": "indexcols3"
						},
						{
							"name": "indexcols2"
						},
						{
							"name": "indexcols"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "dropdd"
						},
						{
							"name": "caEcoulement"
						},
						{
							"name": "caAvoir"
						},
						{
							"name": "JoinOrganisation"
						},
						{
							"name": "posidNULL"
						},
						{
							"name": "periode"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "getPeriode"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "aggregate1"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\tmarque as string,\n\t\tClient as string,\n\t\t{code postal} as string,\n\t\tmarque_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Clé} as string,\n\t\tMarque as string,\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tDepot as string,\n\t\tNoFrs as string,\n\t\tFOUR2 as string,\n\t\tC_Four as string,\n\t\tLib_Four as string,\n\t\tCategorie as string,\n\t\tCanal as string,\n\t\tFinancement as string,\n\t\tNoOffre as string,\n\t\tDate_Debut as string,\n\t\tDate_Fin as string,\n\t\tNoArtDSC as string,\n\t\tLibArt as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\t{LIB AGENCE} as string,\n\t\t{Qté_Ini} as string,\n\t\tSolde_Qte as string,\n\t\tQte_Tot as string,\n\t\tQte_Retenue as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tNomCli as string,\n\t\tPRR as string,\n\t\tPRS_ligne_BL as string,\n\t\tPA_Ref as string,\n\t\tPA_D as string,\n\t\tPA_Valide_VGF as string,\n\t\tEcart as string,\n\t\tAide as string,\n\t\tAide_Retenue as string,\n\t\t{Aide_Validée_VGF} as string,\n\t\tDate_Num as string,\n\t\tP_Fact as string,\n\t\t{Clé_Offre_Article} as string,\n\t\tMotif_Commentaire as string,\n\t\t{Qté_Campagne} as string,\n\t\tPrix_Campagne as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tMontant_Avoir as string,\n\t\tNoDocRefac as string,\n\t\tNoLigneDocRefac as string,\n\t\t{Contrôle} as string,\n\t\tDate_Ctrl as string,\n\t\tCode_Motif_Refus as string,\n\t\tCompanyId as string,\n\t\t{ValidéPar} as string,\n\t\tDateAjout as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoir\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> salerDSC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrgaTerevas\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\necoulement select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal} = {code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\navoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filterColumnsToUse\nEccAddToReplicate split(in([\"dsc\",'tereva'],lower(distributeur)),\n\tdisjoint: false) ~> filterDistrubitor@(dscTereva, notDscTereva)\nfilterColumnsToUse derive(toreplicate = abs( toInteger( Qte_Validee_VGF ) )) ~> AvoirAddToReplicate\ndropColumns derive(toreplicate = abs(toInteger( qte_ecoulement )),\n\t\tagence_code = replace(agence_code, \".0\", \"\")) ~> EccAddToReplicate\nnewColumns split(in([\"2\",\"7\"], CompanyId),\n\tdisjoint: false) ~> ConditionalSplit1@(DscTerevaAvoir, NotDscTerevaAvoir)\nsalerDSC, OrgaTerevas union(byName: true)~> unionDSCTereva\nunionDSCTereva aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tHubSAPid = last(HubSAPid)) ~> uniqueAgenceCode\nAvoirAddToReplicate derive(ca_avoir = toFloat(PA_Valide_VGF),\n\t\tyearmonth = iif(toInteger(Mois)<10, {Année}+\"0\"+Mois  ,   {Année}+Mois  ),\n\t\tQte_Validee_VGF = toInteger( Qte_Validee_VGF )) ~> newColumns\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> DscTerevaJoinOrganisation\nConditionalSplit1@DscTerevaAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReSelect\nDscTerevaJoinOrganisation filter(toInteger(Qte_Validee_VGF) >0) ~> positiveQuantite\nfilterDistrubitor@dscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index),\n\t\trcount = 1) ~> dd\ndd foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tdd,\n\t\trcount\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ddToList\nddToList window(over(year,\n\t\tagence_code,\n\t\treference),\n\tasc(year, true),\n\tasc(agence_code, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window1\nfilterDistrubitor@notDscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index)) ~> dd2\nderivedColumn1 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = filterDistrubitor@notDscTereva@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = filterDistrubitor@notDscTereva@distributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> dd2ToList\nderivedColumn2 window(over(year,\n\t\t{Période},\n\t\tPOSSAMidString,\n\t\tref2),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window2\npositiveQuantite derive(dd = mapLoop(abs(toInteger(Qte_Validee_VGF)), #index)) ~> dd3\ndd3tolist window(over(year = {Année},\n\t\tAgence,\n\t\tNoArtVGF),\n\tasc({Année}, true),\n\tasc(Agence, true),\n\tasc(NoArtVGF, true),\n\tindexcols2 = rowNumber()) ~> Window3\ndd3 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\t{Année},\n\t\tMois_Selection,\n\t\tMois,\n\t\tPA_Valide_VGF,\n\t\tyearmonth,\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tWholeSalerID,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> dd3tolist\nWindow3 derive(indexcols2 = {Année}+Agence+NoArtVGF+toString(indexcols2),\n\t\tqte_avoir = iif(toInteger(Qte_Validee_VGF) >0, 1, -1 )) ~> indexcols3\nWindow2 derive(indexcols2 = year+\"-\"+{Période}+\"-\"+POSSAMidString+\"-\"+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+\"-\"+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) <=0, -1, 1 )) ~> indexcols2\ndropdd derive(indexcols2 = year+agence_code+reference+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> indexcols\nfilterDistrubitor@notDscTereva filter(lower(distributeur)==\"tereva\") ~> Filter1\nWindow1 select(mapColumn(\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\trcount,\n\t\tindexcols2,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropdd\nindexcols derive(ca_ecoulement = abs(toDouble(ca_ecoulement))*qte_ecc) ~> caEcoulement\nindexcols3 derive(ca_avoir = abs(ca_avoir)*qte_avoir) ~> caAvoir\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> JoinOrganisation\nJoinOrganisation filter(isNull(POSid)) ~> posidNULL\nprixParPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> periode\nperiode select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\ndd2, columnChoicePrix join(replace(lower( iif(filterDistrubitor@notDscTereva@distributeur==\"MABILLE\", \"sonac\", filterDistrubitor@notDscTereva@distributeur) ), \" \", \"\") == replace(lower(columnChoicePrix@Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger(filterDistrubitor@notDscTereva@month) == toInteger(columnChoicePrix@month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> getPeriode\ngetPeriode derive({Période} = coalesce( {Période}, \"00\" )) ~> derivedColumn1\ndd2ToList derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn2\nindexcols2 aggregate(qte_ecc = sum(qte_ecc)) ~> aggregate1\nfilterDistrubitor@dscTereva sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['outEccDscTereva.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEccDscTereva\npositiveQuantite sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['DscAvoirTemp.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DTAvoirRetraiter\ncaEcoulement sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementDscTerevaWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEcoulementDScTereva\nindexcols2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementPartedislikeWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputEcoulementPartedis\ncaAvoir sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['AZ_AvoirWithIndexDSClike.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirDSc\nConditionalSplit1@NotDscTerevaAvoir sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['AvoirForVanMarkes.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> AvoirForVanMarkes\nposidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoir.organisationNotFound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirNotFound"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UNIFORMISATION_OFFRE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ALL_OFFRE_DIFFUS",
								"type": "DatasetReference"
							},
							"name": "offreDiffusInput"
						},
						{
							"dataset": {
								"referenceName": "ALL_OFFRE_CHANTIER",
								"type": "DatasetReference"
							},
							"name": "offreChantierInput"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outStaging",
								"type": "DatasetReference"
							},
							"name": "stagingDiffus"
						},
						{
							"dataset": {
								"referenceName": "outStaging",
								"type": "DatasetReference"
							},
							"name": "stagingChantier"
						},
						{
							"dataset": {
								"referenceName": "outStaging",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "canalDiffus"
						},
						{
							"name": "columnsChoiceDiffus"
						},
						{
							"name": "typeCast",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "canalChantier"
						},
						{
							"name": "columnsChoiceChantier"
						},
						{
							"name": "typeCastChantier"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "cleanProduit"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "endChantier"
						},
						{
							"name": "endDiffus"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						}
					],
					"script": "source(output(\n\t\t{DateDébutValidité} as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{DateFinValidité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\t{Date de création} as string,\n\t\tNomSignataire1 as string,\n\t\tNomSignataire2 as string,\n\t\tDateSignataire1 as string,\n\t\tDateSignataire2 as string,\n\t\t{DateDérogation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offreDiffusInput\nsource(output(\n\t\t{DateDébutValidité} as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{DateFinValidité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\t{Date de création} as string,\n\t\tNomSignataire1 as string,\n\t\tNomSignataire2 as string,\n\t\tDateSignataire1 as string,\n\t\tDateSignataire2 as string,\n\t\t{DateDérogation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offreChantierInput\nFilter1 derive(Canal = \"Diffus\",\n\t\told_ref = {Référence},\n\t\t{Référence} = iif(substring({Référence},1,2) == \"00\", substring({Référence},3,length({Référence})-2), {Référence})) ~> canalDiffus\ncanalDiffus select(mapColumn(\n\t\tDateOffre = {DateDébutValidité},\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoiceDiffus\ncolumnsChoiceDiffus derive({Quantité} = toDouble({Quantité}),\n\t\tDateOffre = toDate(split( split(DateOffre, \" \")[1] , '/')[1] +\"/\"+ iif(length(split( split(DateOffre, \" \")[1] , '/')[2])==2, split( split(DateOffre, \" \")[1] , '/')[2], \"0\"+split( split(DateOffre, \" \")[1] , '/')[2])+\"/\"+split( split(DateOffre, \" \")[1] , '/')[3], \"dd/mm/yyyy\")) ~> typeCast\nFilter2 derive(Canal = \"Chantier\",\n\t\t{Référence} = iif(substring({Référence},1,2) == \"00\", substring({Référence},3,length({Référence})-2), {Référence})) ~> canalChantier\ncanalChantier select(mapColumn(\n\t\tDateOffre = {DateDébutValidité},\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoiceChantier\ncolumnsChoiceChantier derive(DateOffre = toDate(split(DateOffre, \" \")[1],\"dd/mm/yyyy\"),\n\t\t{Quantité} = toDouble({Quantité})) ~> typeCastChantier\ntypeCastChantier derive(Produit = replace(Produit, '\"', \"\")) ~> DerivedColumn1\nDerivedColumn1 derive(Produit = replace(Produit, \"'\", \" \")) ~> cleanProduit\noffreDiffusInput filter(!isNull(Offre)) ~> Filter1\noffreChantierInput filter(!isNull(Offre)) ~> Filter2\noffreChantierInput filter(Offre==\"ZADX6708\") ~> Filter3\nFilter3 derive({Référence} = iif(substring({Référence},1,2) == \"00\", substring({Référence},3,length({Référence})-2), {Référence})) ~> DerivedColumn3\ncleanProduit select(mapColumn(\n\t\tDateOffre,\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endChantier\ntypeCast select(mapColumn(\n\t\tDateOffre,\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDiffus\nendDiffus, endChantier union(byName: true)~> Union1\ncanalChantier select(mapColumn(\n\t\t{DateDébutValidité},\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ncanalDiffus select(mapColumn(\n\t\t{DateDébutValidité},\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal,\n\t\t{Référence} = old_ref\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['STG_OFFRE_DIFFUS.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> stagingDiffus\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['STG_OFFRE_CHANTIER.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> stagingChantier\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['stg_offre.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UNION_BASE_COMMERCIAL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputVenteDirect",
								"type": "DatasetReference"
							},
							"name": "venteDirecte"
						},
						{
							"dataset": {
								"referenceName": "dscModel",
								"type": "DatasetReference"
							},
							"name": "DSCModel"
						},
						{
							"dataset": {
								"referenceName": "ModelPartedisInput",
								"type": "DatasetReference"
							},
							"name": "PartedisModel"
						},
						{
							"dataset": {
								"referenceName": "OutpoutVanMarkes",
								"type": "DatasetReference"
							},
							"name": "VanMarkes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "OUnionBasecommercial"
						}
					],
					"transformations": [
						{
							"name": "oPartedis"
						},
						{
							"name": "endDSC"
						},
						{
							"name": "renameColumnsVenteDirecte"
						},
						{
							"name": "POSSAMidString"
						},
						{
							"name": "UnionDSCPartedis"
						},
						{
							"name": "UnionVenteDirecte"
						},
						{
							"name": "UnionVM"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "endVM"
						},
						{
							"name": "select3"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "aggregate1"
						}
					],
					"script": "source(output(\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tcanal_final as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tPOSSAMidString as string,\n\t\treference as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\tyearmonth as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\t{Agence commerciale} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC performance} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> venteDirecte\nsource(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tNoOffre as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tCompanyId as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tid_canal_final as string,\n\t\t{Canal final} as string,\n\t\t{ATC Performance} as string,\n\t\t{code postal} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tqt_plateforme_final as string,\n\t\tca_plateforme_final as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSCModel\nsource(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PartedisModel\nsource(output(\n\t\tmarque_id as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tPOSSAMidString as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tmonth as string,\n\t\t{CA facturé} as string,\n\t\t{Qté facturée} as string,\n\t\tno_offre as string,\n\t\tagence as string,\n\t\tcanal as string,\n\t\tcanal_final as string,\n\t\tdata_origin as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tMatricule as string,\n\t\tNomATC as string,\n\t\tATC as string,\n\t\tOffre as string,\n\t\t{ATC performance} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> VanMarkes\nPOSSAMidString select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final = {Canal distribution},\n\t\t{ATC Performance} = {ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> oPartedis\nDSCModel select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tno_offre = NoOffre,\n\t\tNoCli,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final = {Canal final},\n\t\t{ATC Performance},\n\t\t{Code postal} = {code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDSC\nventeDirecte select(mapColumn(\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tcanal_final,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tyearmonth,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\t{Agence commerciale corrigé} = {Agence commerciale},\n\t\t{ATC Corrigé},\n\t\t{ATC Performance} = {ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumnsVenteDirecte\nPartedisModel derive(POSSAMidString = coalesce(POSSAMidString , {Recept de march})) ~> POSSAMidString\nendDSC, oPartedis union(byName: true)~> UnionDSCPartedis\nUnionDSCPartedis, renameColumnsVenteDirecte union(byName: true)~> UnionVenteDirecte\nUnionVenteDirecte, endVM union(byName: true)~> UnionVM\nVanMarkes select(mapColumn(\n\t\tmarque_id,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tmarque_name,\n\t\tca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tno_offre,\n\t\tagence,\n\t\tcanal,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{Code postal},\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC,\n\t\tOffre,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nselect1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tagence_code = WholeSalerID,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tqt_final,\n\t\tca_final,\n\t\tno_offre,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tcanal,\n\t\t{ATC performance},\n\t\tATC,\n\t\tMatricule,\n\t\tNomATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nderivedColumn1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tdistributeur,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tno_offre,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tcanal,\n\t\t{ATC Performance} = {ATC performance},\n\t\tATC,\n\t\tMatricule,\n\t\tNomATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endVM\nUnionVM select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tno_offre,\n\t\tNoCli,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\t{Code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tagence_code,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Type de facture},\n\t\tcanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select3\nselect2 derive(distributeur = \"van markes\") ~> derivedColumn1\nselect3 aggregate(groupBy(distributeur),\n\tval = sum(1)) ~> aggregate1\nselect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['OUnionBasecommercial.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OUnionBasecommercial"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UNION_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VFCONFORT_PREPARED",
								"type": "DatasetReference"
							},
							"name": "vfconfortPrepared"
						},
						{
							"dataset": {
								"referenceName": "MABILE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "mabillePrepared"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_PREPARED",
								"type": "DatasetReference"
							},
							"name": "orcabPrepared"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_PREPARED",
								"type": "DatasetReference"
							},
							"name": "tereva"
						},
						{
							"dataset": {
								"referenceName": "DSC_PREPARED",
								"type": "DatasetReference"
							},
							"name": "DSC"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_PREPARED",
								"type": "DatasetReference"
							},
							"name": "maillard"
						},
						{
							"dataset": {
								"referenceName": "PartedisEcoulement",
								"type": "DatasetReference"
							},
							"name": "Partedis"
						},
						{
							"dataset": {
								"referenceName": "EntreeEHS",
								"type": "DatasetReference"
							},
							"name": "EHS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "allDistruUnioned"
						}
					],
					"transformations": [
						{
							"name": "Union1"
						},
						{
							"name": "Union2"
						},
						{
							"name": "sTereva"
						},
						{
							"name": "sDSC"
						},
						{
							"name": "sMaillard"
						},
						{
							"name": "sOrcab"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Union4"
						},
						{
							"name": "Union5"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "distributeurOrcab"
						},
						{
							"name": "sPartedis"
						},
						{
							"name": "distributeurPartedis"
						},
						{
							"name": "unionPartedis"
						},
						{
							"name": "distributeurDSC"
						},
						{
							"name": "UnionEHS"
						},
						{
							"name": "sEHS"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"script": "source(output(\n\t\tmarque_file as string,\n\t\tarticle as string,\n\t\tca_ecoulement as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tUnitID as string,\n\t\tCounty as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\t{Code point de vente} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> vfconfortPrepared\nsource(output(\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\tarticle as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tmonth as string,\n\t\tyear as string,\n\t\tHubSAPid as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubName as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> mabillePrepared\nsource(output(\n\t\tmarque_file as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tqte_ecoulement as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string,\n\t\tmarque_id as string,\n\t\tagence_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> orcabPrepared\nsource(output(\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque_file as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tcanal as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tHubSAPid as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tmarque_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false) ~> tereva\nsource(output(\n\t\tmarque_file as string,\n\t\tsous_famille as string,\n\t\treference as string,\n\t\tagence_code as string,\n\t\tdepartement_id as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSC\nsource(output(\n\t\tdistributeur as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\t{Code postal} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string,\n\t\tmarque_id as string,\n\t\tmarque_file as string,\n\t\tagence_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> maillard\nsource(output(\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\t{Code postal} as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tyear as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Partedis\nsource(output(\n\t\tmarque_file as string,\n\t\t{Nom Agence} as string,\n\t\tagence_code as string,\n\t\t{Référence Article} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\t{CP Coop.} as string,\n\t\tHubSAPid as string,\n\t\t{Nom Coopérative} as string,\n\t\tPOSSAMidString as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tqte_ecoulement as string,\n\t\t{Description Article} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EHS\nselect1, mabillePrepared union(byName: true)~> Union1\nUnion1, sOrcab union(byName: true)~> Union2\ntereva select(mapColumn(\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_file,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tHubSAPid,\n\t\tCounty,\n\t\tPOSSAMidString = POSSAMid,\n\t\tmarque_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sTereva\ndistributeurDSC select(mapColumn(\n\t\tmarque_file,\n\t\tsous_famille,\n\t\treference,\n\t\tagence_code,\n\t\tdepartement_id,\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tHubSAPid,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sDSC\nmaillard select(mapColumn(\n\t\tdistributeur,\n\t\treference,\n\t\tarticle,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code postal},\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString = POSSAMid,\n\t\tmarque_id,\n\t\tmarque_file,\n\t\tagence_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sMaillard\ndistributeurOrcab select(mapColumn(\n\t\tmarque_file,\n\t\treference,\n\t\tarticle,\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString = POSSAMid,\n\t\tmarque_id,\n\t\tdistributeur,\n\t\tagence_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sOrcab\nUnion2, sTereva union(byName: true)~> Union3\nUnion3, sDSC union(byName: true)~> Union4\nUnion4, sMaillard union(byName: true)~> Union5\nUnionEHS select(mapColumn(\n\t\t{Code postal},\n\t\tmarque_file,\n\t\tca_ecoulement,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\tagence_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\norcabPrepared derive(distributeur = \"orcab\") ~> distributeurOrcab\ndistributeurPartedis select(mapColumn(\n\t\tmarque_file,\n\t\tagence_code,\n\t\t{Code postal},\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tyear,\n\t\tmonth,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sPartedis\nPartedis derive(distributeur = \"partedis\") ~> distributeurPartedis\nUnion5, sPartedis union(byName: true)~> unionPartedis\nDSC derive(distributeur = \"DSC\") ~> distributeurDSC\nunionPartedis, sEHS union(byName: true)~> UnionEHS\nderivedColumn1 select(mapColumn(\n\t\tmarque_file,\n\t\tagence_code,\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sEHS\nEHS derive(marque_id = coalesce(iif (  instr(lower({marque_file}) , \"saunier\") >0  , \"1604\" , \"1621\" )   )) ~> derivedColumn1\nvfconfortPrepared select(mapColumn(\n\t\tmarque_file,\n\t\tarticle,\n\t\tca_ecoulement,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tUnitID,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\tagence_code = {Code point de vente}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\ndropColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['allDistruUnioned.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> allDistruUnioned"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENTES_DIRECTES_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "inputVDForEcoulement",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "VENTESDIRECTESPREPARATION"
						}
					],
					"transformations": [
						{
							"name": "Cleansing"
						},
						{
							"name": "SumQuantity"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "Uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "rename"
						}
					],
					"script": "source(output(\n\t\t{ Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\t{ vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qté vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nrename derive({Code client} = replace( {Code client}, \" \", \"\"),\n\t\t{Qté facturée} = toDouble({Qté facturée}),\n\t\tyearmonth = replace(yearmonth, \" \", \"\"),\n\t\tArticle = replace(reference, \" \", \"\")) ~> Cleansing\nCleansing aggregate(groupBy(year,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> SumQuantity\nSumQuantity select(mapColumn(\n\t\tyear,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\nAddcolumn select(mapColumn(\n\t\tyear,\n\t\treference = Article,\n\t\t{Code client},\n\t\tqte_ecoulement = {Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Uniformisation\nRenameColumn derive(canal = '',\n\t\tDept = '') ~> Addcolumn\nventesDirectes select(mapColumn(\n\t\t{ commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Code client} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{ vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\nUniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['VENTES_DIRECTES_PREPARATION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VENTESDIRECTESPREPARATION"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VF_CONFORT_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VFINPUT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "CONFORT_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CONFORT_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "outputQuantityNull"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "VFCONFORTECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "outErrorFinding",
								"type": "DatasetReference"
							},
							"name": "VFCONFORTORGANISATIONNOTFOUND"
						}
					],
					"transformations": [
						{
							"name": "fdecrementation",
							"flowlet": {
								"referenceName": "decrementationVenteDirecte",
								"type": "DataFlowReference",
								"parameters": {}
							}
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "yearAndMonth"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "rename"
						},
						{
							"name": "codePointVenteNotNull"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "posidNotNull"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "RenameVentesDirectes"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerleftVentesDirectes"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "posidNULL"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "select3"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "idDecrementation"
						},
						{
							"name": "select4"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "select5"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn3"
						}
					],
					"script": "source(output(\n\t\t{représentant} as string,\n\t\t{n° département} as string,\n\t\t{département} as string,\n\t\t{code point de vente} as string,\n\t\t{libellé point de vente} as string,\n\t\t{code depot source} as string,\n\t\t{code client} as string,\n\t\tclient as string,\n\t\t{n° siret} as string,\n\t\t{code postal} as string,\n\t\tville as string,\n\t\t{année livraison} as string,\n\t\t{mois livraison} as string,\n\t\t{code fournisseur} as string,\n\t\t{fournisseur principal} as string,\n\t\t{code produit} as string,\n\t\tproduit as string,\n\t\t{réference} as string,\n\t\t{qte en unité de vente} as string,\n\t\t{montant prv net} as string,\n\t\tpath as string,\n\t\t{numéro fournisseur} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyear as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nselect5 compose(mapColumn(\n\t\tid = idDecrementation,\n\t\tPossAMid = POSSAMidString,\n\t\treference = {Réference},\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_venteDirecte = {Qté ventes directes}\n\t),\n\tcomposition: 'decrementationVenteDirecte') ~> fdecrementation@(output1)\nrename derive(yearmonth = regexExtract(fileName , '(\\\\d+)'),\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonth\nyearmonth derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5 ,2)) ~> yearAndMonth\nyearAndMonth filter(isNull(qte_ecoulement)) ~> quantityNull\naggregate1 filter(!isNull(qte_ecoulement)) ~> quantityNotNull\necoulement select(mapColumn(\n\t\t{Code point de vente} = {code point de vente},\n\t\t{Code Depot source} = {code depot source},\n\t\t{Code client} = {code client},\n\t\tClient = client,\n\t\t{Code postal} = {code postal},\n\t\tVille = ville,\n\t\t{Mois livraison} = {mois livraison},\n\t\t{code fournisseur},\n\t\t{fournisseur principal},\n\t\t{Code produit} = {code produit},\n\t\tproduit,\n\t\t{Montant prv net} = {montant prv net},\n\t\t{Représentant} = {représentant},\n\t\t{N° Département} = {n° département},\n\t\t{Département} = {département},\n\t\t{Libellé point de vente} = {libellé point de vente},\n\t\t{N° Siret} = {n° siret},\n\t\t{Année livraison} = {année livraison},\n\t\t{Réference} = {réference},\n\t\tqte_ecoulement = {qte en unité de vente},\n\t\tfileName = path\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\nquantityNotNull filter(!isNull({Code point de vente})) ~> codePointVenteNotNull\norganisation derive(POSid = trim(POSid, \" \"),\n\t\tHubSAPid = trim(HubSAPid, \" \")) ~> cleansing\ncleansing filter(!isNull(POSid)) ~> posidNotNull\nposidNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> uniqueOrganisation\ncodePointVenteNotNull, uniqueOrganisation join({Code point de vente} == POSid,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> innerOrganisation\nventesDirectes select(mapColumn(\n\t\tyear,\n\t\tArticle = reference,\n\t\t{Code client_right} = {Code client},\n\t\t{Qté ventes directes} = qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameVentesDirectes\ninnerOrganisation, RenameVentesDirectes join(aggregate1@year == RenameVentesDirectes@year\n\t&& coalesce(toString(toInteger(replace({Réference}, \" \", \"\"))),replace({Réference}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMid == {Code client_right},\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerOrganisation, RenameVentesDirectes join(aggregate1@year == RenameVentesDirectes@year\n\t&& coalesce(toString(toInteger(replace({Réference}, \" \", \"\"))),replace({Réference}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMid == {Code client_right},\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> leftVentesDirectes\nselect2 filter(isNull(yearmonth) || isNull(Article) || isNull({Code client_right})) ~> outerleftVentesDirectes\nAddcolumn select(mapColumn(\n\t\tmarque_file = {fournisseur principal},\n\t\tarticle = produit,\n\t\tca_ecoulement = {Montant prv net},\n\t\treference = {Réference},\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tUnitID,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\t{Code point de vente}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nderivedColumn3, outerleftVentesDirectes union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(canal = '',\n\t\tdistributeur = \"vf_confort\") ~> Addcolumn\ncodePointVenteNotNull, uniqueOrganisation join({Code point de vente} == POSid,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull(POSid)) ~> posidNULL\ninnerVentesDirectes select(mapColumn(\n\t\t{Code point de vente},\n\t\t{Code Depot source},\n\t\t{Montant prv net},\n\t\t{Mois livraison},\n\t\t{code fournisseur},\n\t\t{fournisseur principal},\n\t\t{Code produit},\n\t\tproduit,\n\t\t{Libellé point de vente},\n\t\t{Année livraison},\n\t\t{Réference},\n\t\tqte_ecoulement,\n\t\tfileName,\n\t\tyearmonth,\n\t\tyear = aggregate1@year,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tArticle,\n\t\t{Code client_right},\n\t\t{Qté ventes directes}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nleftVentesDirectes select(mapColumn(\n\t\t{Code point de vente},\n\t\t{Code Depot source},\n\t\t{Mois livraison},\n\t\t{Montant prv net},\n\t\t{code fournisseur},\n\t\t{fournisseur principal},\n\t\t{Code produit},\n\t\tproduit,\n\t\t{Libellé point de vente},\n\t\t{Année livraison},\n\t\t{Réference},\n\t\tqte_ecoulement,\n\t\tfileName,\n\t\tyearmonth,\n\t\tyear = aggregate1@year,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tArticle,\n\t\t{Code client_right},\n\t\t{Qté ventes directes}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nidDecrementation select(mapColumn(\n\t\t{Code point de vente},\n\t\t{Code Depot source},\n\t\t{Montant prv net},\n\t\t{Mois livraison},\n\t\t{code fournisseur},\n\t\t{fournisseur principal},\n\t\t{Code produit},\n\t\tproduit,\n\t\t{Libellé point de vente},\n\t\t{Année livraison},\n\t\t{Réference},\n\t\tqte_ecoulement,\n\t\tfileName,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tArticle,\n\t\t{Code client_right},\n\t\t{Qté ventes directes},\n\t\tidDecrementation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select3\nyearAndMonth aggregate(groupBy({Code point de vente},\n\t\t{Code Depot source},\n\t\t{Mois livraison},\n\t\t{code fournisseur},\n\t\t{fournisseur principal},\n\t\t{Code produit},\n\t\tproduit,\n\t\t{Libellé point de vente},\n\t\t{Année livraison},\n\t\t{Réference},\n\t\tfileName,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth),\n\tqte_ecoulement = sum(qte_ecoulement),\n\t\t{Montant prv net} = sum(toDouble({Montant prv net}))) ~> aggregate1\nselect1 keyGenerate(output(idDecrementation as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> idDecrementation\nidDecrementation select(mapColumn(\n\t\tidDecrementation,\n\t\tPOSSAMidString,\n\t\t{Réference},\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\t{Qté ventes directes}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select4\nselect4 derive(month = toInteger(month),\n\t\tqte_ecoulement = toFloat(qte_ecoulement),\n\t\t{Qté ventes directes} = toFloat({Qté ventes directes})) ~> derivedColumn2\nderivedColumn2 select(mapColumn(\n\t\tidDecrementation,\n\t\tPOSSAMidString,\n\t\t{Réference},\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\t{Qté ventes directes}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select5\nfdecrementation@output1 select(mapColumn(\n\t\tid,\n\t\tqt_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\nselect3, endDecrementation join(idDecrementation == id,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\njoin1 derive(qte_ecoulement = qt_final) ~> derivedColumn3\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['VFCONFORT_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputQuantityNull\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['VFCONFORT_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VFCONFORTECOULPREPARED\nposidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['VFCONFORT_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VFCONFORTORGANISATIONNOTFOUND"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanMarkes_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AvoirForVanMarkesInput",
								"type": "DatasetReference"
							},
							"name": "Avoir"
						},
						{
							"dataset": {
								"referenceName": "In_FacturationVM",
								"type": "DatasetReference"
							},
							"name": "Facturation"
						},
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "ExtarctionSAP"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "REFATC"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "Offre"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "articleInput"
						},
						{
							"dataset": {
								"referenceName": "inepsv2",
								"type": "DatasetReference"
							},
							"name": "inputEPS"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "PrixPeriode"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "plateforme"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outErrorFinding",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "createIndexcolAvoir",
							"flowlet": {
								"referenceName": "createIdAvoir",
								"type": "DataFlowReference",
								"parameters": {}
							}
						},
						{
							"name": "createIndexYearFacturation",
							"flowlet": {
								"referenceName": "createIndexFacturation",
								"type": "DataFlowReference",
								"parameters": {}
							}
						},
						{
							"name": "selectAvoir"
						},
						{
							"name": "typeCast"
						},
						{
							"name": "month"
						},
						{
							"name": "Agregat"
						},
						{
							"name": "SelectcolonneATC"
						},
						{
							"name": "SelectColonneOffre"
						},
						{
							"name": "AgregatOffreCanalATC"
						},
						{
							"name": "SelectOffre"
						},
						{
							"name": "SelectSAP"
						},
						{
							"name": "filtreCompanyAndQte"
						},
						{
							"name": "Select1"
						},
						{
							"name": "endArticle"
						},
						{
							"name": "endEPS"
						},
						{
							"name": "derivedColumn100"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "filter1"
						},
						{
							"name": "surrogateKey1"
						},
						{
							"name": "inputForFonction"
						},
						{
							"name": "methadata"
						},
						{
							"name": "endIndex"
						},
						{
							"name": "join1"
						},
						{
							"name": "endxFacturation"
						},
						{
							"name": "endAvoir"
						},
						{
							"name": "derivedColumn101"
						},
						{
							"name": "join2"
						},
						{
							"name": "innerSelect"
						},
						{
							"name": "avoirResidus"
						},
						{
							"name": "inner"
						},
						{
							"name": "facturationleft"
						},
						{
							"name": "select2"
						},
						{
							"name": "select3"
						},
						{
							"name": "endInner"
						},
						{
							"name": "endFacturation"
						},
						{
							"name": "union1"
						},
						{
							"name": "select4"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "aggregate2"
						},
						{
							"name": "aggregate3"
						},
						{
							"name": "derivedColumn102"
						},
						{
							"name": "derivedColumn103"
						},
						{
							"name": "derivedColumn104"
						},
						{
							"name": "select5"
						},
						{
							"name": "join3"
						},
						{
							"name": "derivedColumn105"
						},
						{
							"name": "join4"
						},
						{
							"name": "select6"
						},
						{
							"name": "join5"
						},
						{
							"name": "join6"
						},
						{
							"name": "select7"
						}
					],
					"script": "source(output(\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as float,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Avoir\nsource(output(\n\t\t{ Org commerciale} as string,\n\t\t{Canal distribution} as integer,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Facturation\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtarctionSAP\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> REFATC\nsource(output(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{DateFinValidité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\t{Date de création} as string,\n\t\tNomSignataire1 as string,\n\t\tNomSignataire2 as string,\n\t\tDateSignataire1 as string,\n\t\tDateSignataire2 as string,\n\t\t{DateDérogation} as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Offre\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleInput\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputEPS\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PrixPeriode\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> plateforme\ntypeCast compose(mapColumn(\n\t\tmois_selection = Mois_Selection,\n\t\tno_offre = NoOffre,\n\t\treference,\n\t\tagence = Agence,\n\t\tqte_valide = Qte_Validee_VGF,\n\t\tno_cli = NoCli,\n\t\tpa_valide_vgf = PA_Valide_VGF,\n\t\tmonth = Mois,\n\t\tyear = {Année},\n\t\tcompanyid = CompanyId,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tHubSapID = HubSAPid\n\t),\n\tcomposition: 'createIdAvoir') ~> createIndexcolAvoir@(output1)\ninputForFonction compose(mapColumn(\n\t\ttemp_id = tempid,\n\t\tqte_facturer = {Qté facturée},\n\t\tyear,\n\t\thubsapid = HubSAPid,\n\t\treference,\n\t\t{CA facturé}\n\t),\n\tcomposition: 'createIndexFacturation') ~> createIndexYearFacturation@(output1)\nAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\treference = NoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectAvoir\nfiltreCompanyAndQte derive(Mois = toInteger(Mois),\n\t\t{Année} = toInteger({Année}),\n\t\tHubSAPid = \"16012633\") ~> typeCast\nFacturation derive(month = right(yearmonth, 2),\n\t\ttOrigin = \"facturation\",\n\t\t{CA facturé} = toFloat({CA facturé})/ toInteger({Qté facturée})) ~> month\nSelect1 aggregate(groupBy({Canal final},\n\t\tMarque,\n\t\tcode_postal_atc),\n\tMatricule = max(Matricule),\n\t\tNomATC = max(NomATC),\n\t\tATC = max(ATC)) ~> Agregat\nAgregat select(mapColumn(\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectcolonneATC\nOffre select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tATC = CodeATC,\n\t\tCanal,\n\t\tProduit,\n\t\t{Créateur offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColonneOffre\nSelectColonneOffre aggregate(groupBy(Offre,\n\t\tCanal,\n\t\tATC),\n\tDateOffre = first(DateOffre)) ~> AgregatOffreCanalATC\nAgregatOffreCanalATC select(mapColumn(\n\t\tOffre,\n\t\tcanal = Canal,\n\t\t{ATC performance} = ATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOffre\nExtarctionSAP select(mapColumn(\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal},\n\t\t{Téléphone 1},\n\t\t{Numéro de télécopie},\n\t\t{Org. commerciale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSAP\nselectAvoir filter(CompanyId==\"11\" && toDouble(Qte_Validee_VGF)>0) ~> filtreCompanyAndQte\nREFATC select(mapColumn(\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tATC,\n\t\tNomATC,\n\t\t{Plan primes},\n\t\tMatricule,\n\t\t{Canal final},\n\t\ttoreplicate,\n\t\tdd,\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\narticleInput select(mapColumn(\n\t\tmarque_id = OrgCm,\n\t\tarticle = Article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endArticle\ninputEPS select(mapColumn(\n\t\tclient = {Numéro du compte},\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEPS\nPrixPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> derivedColumn100\nderivedColumn100 select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\nplateforme filter(HubSAPid==\"16012633\") ~> filter1\nmonth keyGenerate(output(tempid as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> surrogateKey1\nsurrogateKey1 select(mapColumn(\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear,\n\t\treference,\n\t\tHubSAPid,\n\t\ttempid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> inputForFonction\nsurrogateKey1 select(mapColumn(\n\t\tmarque_id = { Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tmonth,\n\t\ttOrigin,\n\t\ttempid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> methadata\ncreateIndexYearFacturation@output1 select(mapColumn(\n\t\ttemp_id,\n\t\t{CA facturé},\n\t\tindexcols2,\n\t\t{Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endIndex\nmethadata, endIndex join(tempid == temp_id,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\njoin1 select(mapColumn(\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tmonth,\n\t\ttOrigin,\n\t\ttempid,\n\t\t{CA facturé},\n\t\tindexcols2,\n\t\t{Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endxFacturation\nderivedColumn101 select(mapColumn(\n\t\tmois_selection,\n\t\tno_offre,\n\t\treference,\n\t\tagence,\n\t\tqte_valide,\n\t\tno_cli,\n\t\tpa_valide_vgf,\n\t\tmonth,\n\t\tyear,\n\t\tcompanyid,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tHubSapID,\n\t\tdd,\n\t\tindexcols2,\n\t\tqte_avoir,\n\t\tcanal,\n\t\ttOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endAvoir\ncreateIndexcolAvoir@output1 derive(tOrigin = \"avoir\",\n\t\tcanal = iif(substring(no_offre,1,2)==\"FP\", \"FP\",     iif(substring(no_offre,1,2)==\"FS\", \"FS\", \"FC\"))) ~> derivedColumn101\nendAvoir, endxFacturation join(endAvoir@indexcols2 == endxFacturation@indexcols2,\n\tjoinType:'outer',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join2\ninner select(mapColumn(\n\t\tno_offre,\n\t\t{Recept de march} = agence,\n\t\tno_cli,\n\t\tyearmonth = endAvoir@yearmonth,\n\t\tqte_avoir,\n\t\tcanal,\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear = endxFacturation@year,\n\t\tyearmonth = endxFacturation@yearmonth,\n\t\treference = endxFacturation@reference,\n\t\tHubSAPid = endxFacturation@HubSAPid,\n\t\tmonth = endxFacturation@month,\n\t\t{CA facturé} = ca_avoir,\n\t\t{Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> innerSelect\njoin2 filter(isNull(endxFacturation@tOrigin)) ~> avoirResidus\njoin2 filter(!isNull(endAvoir@tOrigin) && !isNull(endxFacturation@tOrigin)) ~> inner\njoin2 filter(isNull(endAvoir@tOrigin)) ~> facturationleft\navoirResidus select(mapColumn(\n\t\tmois_selection,\n\t\tno_offre,\n\t\treference = endAvoir@reference,\n\t\tagence,\n\t\tqte_valide,\n\t\tno_cli,\n\t\tpa_valide_vgf,\n\t\tmonth = endAvoir@month,\n\t\tyear = endAvoir@year,\n\t\tcompanyid,\n\t\tca_avoir,\n\t\tyearmonth = endAvoir@yearmonth,\n\t\tHubSapID,\n\t\tdd,\n\t\tindexcols2 = endAvoir@indexcols2,\n\t\tqte_avoir,\n\t\tcanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nfacturationleft select(mapColumn(\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear = endxFacturation@year,\n\t\tyearmonth = endxFacturation@yearmonth,\n\t\treference = endxFacturation@reference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid = endxFacturation@HubSAPid,\n\t\tmonth = endxFacturation@month,\n\t\ttOrigin = endxFacturation@tOrigin,\n\t\ttempid,\n\t\t{CA facturé},\n\t\tindexcols2 = endxFacturation@indexcols2,\n\t\t{Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select3\nderivedColumn102 select(mapColumn(\n\t\tno_offre,\n\t\tagence = {Recept de march},\n\t\tno_cli,\n\t\tyearmonth,\n\t\tcanal,\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear,\n\t\treference,\n\t\tHubSAPid,\n\t\tmonth,\n\t\t{CA facturé},\n\t\t{Qté facturée} = qte_avoir,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endInner\nderivedColumn103 select(mapColumn(\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\tcanal,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tmonth,\n\t\ttempid,\n\t\t{CA facturé},\n\t\t{Qté facturée},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endFacturation\nendFacturation, endInner union(byName: true)~> union1\nderivedColumn104 select(mapColumn(\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString = {Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tmonth,\n\t\t{CA facturé},\n\t\t{Qté facturée},\n\t\tno_offre,\n\t\tagence,\n\t\tno_cli,\n\t\tcanal,\n\t\tcanal_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select4\nfiltreCompanyAndQte aggregate(column1 = sum(toInteger(Qte_Validee_VGF))) ~> aggregate1\nderivedColumn101 aggregate(column1 = sum(qte_avoir)) ~> aggregate2\nendIndex aggregate(column1 = sum({Qté facturée})) ~> aggregate3\ninnerSelect derive(data_origin = \"facturation avec matching\",\n\t\t{Canal distribution} = iif(canal==\"FP\", 45,     iif(canal==\"FS\", 51,     iif(canal==\"FC\", 43, 42)))) ~> derivedColumn102\nselect3 derive(data_origin = \"facturation\",\n\t\tcanal = iif({Canal distribution}==45, \"FP\",     iif({Canal distribution}==51,  \"FS\" ,     iif({Canal distribution}==43, \"FC\", \"FD\")))) ~> derivedColumn103\nselect5 derive(canal_final = iif({Canal distribution}==43, \"Chantier\",  \"Diffus\")) ~> derivedColumn104\nunion1 select(mapColumn(\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tmonth,\n\t\ttempid,\n\t\t{CA facturé},\n\t\t{Qté facturée},\n\t\tdata_origin,\n\t\tno_offre,\n\t\tagence,\n\t\tno_cli,\n\t\tcanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select5\nselect4, SelectSAP join(toInteger(POSSAMidString) == toInteger(Client)\n\t&& toInteger(marque_id) == toInteger({Org. commerciale}),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join3\njoin4 derive({Code postal} = coalesce(SelectSAP@{Code postal},endEPS@{Code postal}),\n\t\tmarque_name = iif(marque_id==\"1604\", 'SaunierDuval', 'Vaillant')) ~> derivedColumn105\njoin3, endEPS join(toInteger(POSSAMidString) == toInteger(endEPS@client),\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join4\nderivedColumn105 select(mapColumn(\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tmonth,\n\t\t{CA facturé},\n\t\t{Qté facturée},\n\t\tno_offre,\n\t\tagence,\n\t\tcanal,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{Agence commerciale},\n\t\t{Code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select6\nselect6, SelectcolonneATC join(canal_final == {Canal final}\n\t&& {Code postal} == code_postal_atc\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join5\njoin5, SelectOffre join(no_offre == Offre,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join6\njoin6 select(mapColumn(\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tmonth,\n\t\t{CA facturé},\n\t\t{Qté facturée},\n\t\tno_offre,\n\t\tagence,\n\t\tcanal = select6@canal,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC,\n\t\tOffre,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select7\nselect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['AvoirVMNotMapped.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nselect7 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['tempVM.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ventes derogees')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "FacturationForOther",
								"type": "DatasetReference"
							},
							"name": "FacturationForOther"
						},
						{
							"dataset": {
								"referenceName": "associationoffre",
								"type": "DatasetReference"
							},
							"name": "ArticulationSap"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "PrixPeriode"
						},
						{
							"dataset": {
								"referenceName": "ecouPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "ecoulmnt"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "endSinkOutput"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "sink4"
						},
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "sinkFact43"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "join3"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "torolltoList"
						},
						{
							"name": "derivedColumn4"
						},
						{
							"name": "createIndexPartedis"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "select1"
						},
						{
							"name": "select0"
						},
						{
							"name": "select3"
						},
						{
							"name": "Filtre43"
						},
						{
							"name": "join5"
						},
						{
							"name": "endArticulation"
						},
						{
							"name": "endOffre"
						},
						{
							"name": "derivedColumn8"
						},
						{
							"name": "Filtre5145"
						},
						{
							"name": "endEcoulement"
						},
						{
							"name": "split2"
						},
						{
							"name": "REcoulement43"
						},
						{
							"name": "select5"
						},
						{
							"name": "join7"
						},
						{
							"name": "select6"
						},
						{
							"name": "split3"
						},
						{
							"name": "REcoulement5145"
						},
						{
							"name": "filter3"
						},
						{
							"name": "filter4"
						},
						{
							"name": "torolltoList2"
						},
						{
							"name": "derivedColumn9"
						},
						{
							"name": "window1"
						},
						{
							"name": "ResteEcoulement"
						},
						{
							"name": "derivedColumn10"
						},
						{
							"name": "ddToList"
						},
						{
							"name": "window2"
						},
						{
							"name": "select7"
						},
						{
							"name": "derivedColumn11"
						},
						{
							"name": "caEcoulement"
						},
						{
							"name": "join8"
						},
						{
							"name": "select8"
						},
						{
							"name": "select9"
						},
						{
							"name": "split4"
						},
						{
							"name": "adddataOriginAvecMatchin"
						},
						{
							"name": "adddataOriginEccSansMatching"
						},
						{
							"name": "addDataOringFacturation"
						},
						{
							"name": "addDataOriginAvecMathcin4551"
						},
						{
							"name": "addDataOriginFSM"
						},
						{
							"name": "addDataOriginFM"
						},
						{
							"name": "derivedColumn14"
						},
						{
							"name": "clearColumnsAvecMatchig42"
						},
						{
							"name": "clearFacturationSansM"
						},
						{
							"name": "clearEcoulementSansMatch"
						},
						{
							"name": "clearColFacturationSM43"
						},
						{
							"name": "clearColAVM43"
						},
						{
							"name": "clearColumnAVM5145"
						},
						{
							"name": "clearColFSM4551"
						},
						{
							"name": "union1"
						},
						{
							"name": "unionFSM435145"
						},
						{
							"name": "union2"
						},
						{
							"name": "endFactSansMatching",
							"description": "search 1 col"
						},
						{
							"name": "union3"
						},
						{
							"name": "endAVM434551"
						},
						{
							"name": "union4"
						},
						{
							"name": "endFactAVM"
						},
						{
							"name": "derivedColumn15"
						},
						{
							"name": "endEcoulementSansMatcing"
						},
						{
							"name": "union5"
						},
						{
							"name": "select10"
						},
						{
							"name": "derivedColumn16"
						},
						{
							"name": "union6"
						},
						{
							"name": "endOffreATC"
						},
						{
							"name": "join9"
						},
						{
							"name": "derivedColumn17"
						},
						{
							"name": "derivedColumn18"
						},
						{
							"name": "select11"
						},
						{
							"name": "select12"
						},
						{
							"name": "ecoulementReste"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "derivedColumn19"
						},
						{
							"name": "derivedColumn20"
						},
						{
							"name": "select13"
						},
						{
							"name": "aggregate2"
						},
						{
							"name": "aggregate3"
						},
						{
							"name": "aggregate4"
						},
						{
							"name": "aggregate5"
						},
						{
							"name": "aggregate6"
						},
						{
							"name": "derivedColumn21"
						},
						{
							"name": "derivedColumn22"
						},
						{
							"name": "derivedColumn23"
						},
						{
							"name": "aggregate8"
						},
						{
							"name": "derivedColumn24"
						},
						{
							"name": "endATC"
						},
						{
							"name": "join10"
						},
						{
							"name": "select14"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "unionDecrementation"
						},
						{
							"name": "filter6"
						},
						{
							"name": "ftest"
						},
						{
							"name": "filter7"
						},
						{
							"name": "aggregate9"
						},
						{
							"name": "aggregate10"
						},
						{
							"name": "aggregate11"
						},
						{
							"name": "aggregate12"
						},
						{
							"name": "aggregate13"
						},
						{
							"name": "aggregate14"
						},
						{
							"name": "aggregate15"
						},
						{
							"name": "aggregate16"
						},
						{
							"name": "aggregate17"
						},
						{
							"name": "aggregate18"
						},
						{
							"name": "aggregate19"
						},
						{
							"name": "aggregate20"
						},
						{
							"name": "aggregate21"
						},
						{
							"name": "aggregate22"
						},
						{
							"name": "aggregate23"
						},
						{
							"name": "aggregate24"
						},
						{
							"name": "select15"
						},
						{
							"name": "aggregate25"
						},
						{
							"name": "aggregate26"
						},
						{
							"name": "derivedColumn25"
						}
					],
					"scriptLines": [
						"source(output(",
						"          { Org commerciale} as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activité} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {1ereDateLivrDdee} as string,",
						"          {Agence commerciale corrigé} as string,",
						"          {ATC Corrigé} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Année civile} as string,",
						"          {Motif commande} as string,",
						"          {Qté cdée} as string,",
						"          {CA cdé} as string,",
						"          {Qté livrée} as string,",
						"          {CA livré} as string,",
						"          {Qté facturée} as string,",
						"          {CA facturé} as string,",
						"          {Cout standard cdé} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livré} as string,",
						"          {Cout standard facturé} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_livr_e as string,",
						"          ca_livr_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          year_month as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          HubSAPid as string,",
						"          toreplicate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> FacturationForOther",
						"source(output(",
						"          Commande as string,",
						"          {Référence Offre BA} as string,",
						"          {Qté Cdée} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ArticulationSap",
						"source(output(",
						"          DateOffre as string,",
						"          {Date Prev Cde} as string,",
						"          {Code projet} as string,",
						"          Projet as string,",
						"          Type as string,",
						"          {CP projet} as string,",
						"          {Ville projet} as string,",
						"          NbLogement as string,",
						"          {Référence} as string,",
						"          Marque as string,",
						"          Famille as string,",
						"          Produit as string,",
						"          {Quantité} as string,",
						"          {Prix de base} as string,",
						"          {Prix DO} as string,",
						"          {Prix pro} as string,",
						"          {Prix total} as string,",
						"          {Numéro interne 1} as string,",
						"          Client as string,",
						"          {Ville client} as string,",
						"          {Type financement} as string,",
						"          {Numéro interne 2} as string,",
						"          {Négoce} as string,",
						"          {Ville négoce} as string,",
						"          {Statut offre} as string,",
						"          Responsable as string,",
						"          Groupe as string,",
						"          Offre as string,",
						"          {Date de maj statut} as string,",
						"          {Numéro avant vente} as string,",
						"          {Créateur offre} as string,",
						"          {Commentaire interne} as string,",
						"          {Offre dérogée} as string,",
						"          {Contrat cadre} as string,",
						"          {Offre nationale} as string,",
						"          {Année Tarif} as string,",
						"          PotentielP1N as string,",
						"          PotentielP2N as string,",
						"          PotentielP3N as string,",
						"          PotentielP4N as string,",
						"          PotentielP5N as string,",
						"          PotentielP6N as string,",
						"          {DateFinValidité} as string,",
						"          CODE_CMI as string,",
						"          NOM_CMI as string,",
						"          CodeATC as string,",
						"          DEEE as string,",
						"          OffreSupprimee as string,",
						"          {Date de création} as string,",
						"          NomSignataire1 as string,",
						"          NomSignataire2 as string,",
						"          DateSignataire1 as string,",
						"          DateSignataire2 as string,",
						"          {DateDérogation} as string,",
						"          Canal as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> stgOffre",
						"source(output(",
						"          Article as string,",
						"          Distributeur as string,",
						"          prix_unitaire as string,",
						"          {Durée_période} as string,",
						"          {Période} as string,",
						"          {Mois début} as string,",
						"          {Mois fin} as string,",
						"          mois1 as string,",
						"          annee1 as string,",
						"          mois2 as string,",
						"          annee2 as string,",
						"          dd as string,",
						"          month as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PrixPeriode",
						"source(output(",
						"          yearmonth as string,",
						"          year as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          ca_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          reference as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          toreplicate as string,",
						"          dd as string,",
						"          {Période} as string,",
						"          ref2 as string,",
						"          indexcols2 as string,",
						"          qte_ecc as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ecoulmnt",
						"source(output(",
						"          Marque as string,",
						"          {Code Postal début} as string,",
						"          {Code Postal fin} as string,",
						"          Utilisateur as string,",
						"          Fonction as string,",
						"          {Département} as string,",
						"          ATC as string,",
						"          NomATC as string,",
						"          {Plan primes} as string,",
						"          Matricule as string,",
						"          {Canal final} as string,",
						"          toreplicate as string,",
						"          dd as string,",
						"          DR as string,",
						"          {Code postal} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> refAtc",
						"derivedColumn8, endArticulation join({Document de vente} == Commande,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"derivedColumn19, endOffre join({Référence Offre BA} == Offre",
						"     && canal_final == Canal,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"PrixPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          Article,",
						"          Distributeur,",
						"          {Période},",
						"          annee2,",
						"          month",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> columnChoicePrix",
						"derivedColumn2, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")",
						"     && toInteger(year) == toInteger(annee2)",
						"     && toInteger({Mois calendrier}) == toInteger(month)",
						"     && coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join3",
						"select3 derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index),",
						"          tempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',\r",
						"  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva', \r",
						"   iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc', \r",
						"    iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \r",
						"     iif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',\r",
						"lower(WholeSalerID))))))) ~> derivedColumn2",
						"join3 derive({Période} = coalesce( {Période}, \"00\" )) ~> derivedColumn3",
						"filter3 foldDown(unroll(toroll, toroll),",
						"     mapColumn(",
						"          {Org commerciale} = { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin}",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> torolltoList",
						"torolltoList derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn4",
						"derivedColumn4 window(over(year,",
						"          {Période},",
						"          POSSAMidString,",
						"          ref2),",
						"     asc(yearmonth, true),",
						"     asc(POSSAMidString, true),",
						"     asc(ref2, true),",
						"     indexcols2 = rowNumber()) ~> createIndexPartedis",
						"createIndexPartedis derive(indexcols2 = year+\"-\"+{Période}+\"-\"+POSSAMidString+\"-\"+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+\"-\"+toString(indexcols2),",
						"          {Qté facturée} = iif(toDouble({Qté facturée})<=0, -1, 1)) ~> derivedColumn5",
						"stgOffre select(mapColumn(",
						"          Offre,",
						"          Canal,",
						"          {Numéro interne 2}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"ecoulmnt select(mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          ca_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPidEcoul = HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          dd,",
						"          indexcols2,",
						"          qte_ecc",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select0",
						"join2 select(mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {1ereDateLivrDdee},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          ca_livr_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          toreplicate,",
						"          Commande,",
						"          {Référence Offre BA},",
						"          Offre,",
						"          POSSAMidString = {Numéro interne 2},",
						"          {Facturation origin},",
						"          {Articulation Origin},",
						"          {Offre origin}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: false) ~> select3",
						"derivedColumn5 filter({Canal distribution}==\"43\") ~> Filtre43",
						"Filtre43, endEcoulement join(derivedColumn5@indexcols2 == select0@indexcols2,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join5",
						"ArticulationSap derive({Articulation Origin} = \"Articulation Origin\") ~> endArticulation",
						"aggregate9 derive({Offre origin} = \"Offre origin\") ~> endOffre",
						"FacturationForOther derive({Facturation origin} = \"Facturation origin\") ~> derivedColumn8",
						"derivedColumn5 filter({Canal distribution}==\"51\" ||  {Canal distribution}==\"45\") ~> Filtre5145",
						"select0 derive({Ecoulement origin} = \"Ecoulement origin\") ~> endEcoulement",
						"select5 split(!isNull({Ecoulement origin}) && !isNull({Facturation origin}),",
						"     isNull({Facturation origin}),",
						"     disjoint: false) ~> split2@(avecMatching43, rigthEcoulement43, residu43)",
						"split2@rigthEcoulement43 select(mapColumn(",
						"          yearmonth = yearmonthEcoul,",
						"          year = yearEcoul,",
						"          month,",
						"          qte_ecoulement = ca_ecoulement,",
						"          POSSAMidStringEcoul,",
						"          HubSAPid,",
						"          reference = referenceEcoul,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate = toreplicateEcoul,",
						"          dd,",
						"          indexcols2Ecoul,",
						"          qte_ecc,",
						"          {Ecoulement origin},",
						"          ca_ecoulement",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: true) ~> REcoulement43",
						"join5 select(mapColumn(",
						"          {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          yearFact = torolltoList@year,",
						"          yearmonthFact = torolltoList@yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          referenceFact = torolltoList@reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid_Fact = HubSAPid,",
						"          POSSAMidStringFact = torolltoList@POSSAMidString,",
						"          toreplicateFact = torolltoList@toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2,",
						"          indexcols2Fact = derivedColumn5@indexcols2,",
						"          yearmonthEcoul = select0@yearmonth,",
						"          yearEcoul = select0@year,",
						"          month,",
						"          qte_ecoulement,",
						"          ca_ecoulement,",
						"          POSSAMidStringEcoul = select0@POSSAMidString,",
						"          HubSAPid = HubSAPidEcoul,",
						"          referenceEcoul = select0@reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicateEcoul = select0@toreplicate,",
						"          dd,",
						"          indexcols2Ecoul = select0@indexcols2,",
						"          qte_ecc,",
						"          {Ecoulement origin}",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: true) ~> select5",
						"Filtre5145, REcoulement43 join(indexcols2 == indexcols2Ecoul,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join7",
						"join7 select(mapColumn(",
						"          {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          yearFact = torolltoList@year,",
						"          yearmonthFact = torolltoList@yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          referenceFact = torolltoList@reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPidFact = torolltoList@HubSAPid,",
						"          POSSAMidString,",
						"          toreplicateFact = torolltoList@toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2,",
						"          indexcols2,",
						"          yearmonthEcoul = REcoulement43@yearmonth,",
						"          yearEcoul = REcoulement43@year,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidStringEcoul,",
						"          HubSAPidEcoul = REcoulement43@HubSAPid,",
						"          referenceEcoul = REcoulement43@reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicateEcoul = REcoulement43@toreplicate,",
						"          dd,",
						"          indexcols2Ecoul,",
						"          qte_ecc,",
						"          {Ecoulement origin},",
						"          ca_ecoulement",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: true) ~> select6",
						"select6 split(!isNull({Ecoulement origin}) && !isNull({Facturation origin}),",
						"     isNull({Facturation origin}),",
						"     disjoint: false) ~> split3@(avecMatching5145, rigthEcoulement5154, residu5145)",
						"split3@rigthEcoulement5154 select(mapColumn(",
						"          yearmonth = yearmonthEcoul,",
						"          year = yearEcoul,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString = POSSAMidStringEcoul,",
						"          HubSAPid = HubSAPidEcoul,",
						"          reference = referenceEcoul,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate = toreplicateEcoul,",
						"          dd,",
						"          indexcols2 = indexcols2Ecoul,",
						"          qte_ecc,",
						"          {Ecoulement origin},",
						"          ca_ecoulement",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> REcoulement5145",
						"derivedColumn3 filter(({Canal distribution} !=\"42\" ) &&  (!isNull(POSSAMidString) && !isNull({Articulation Origin}) && !isNull({Offre origin}))) ~> filter3",
						"derivedColumn3 filter({Canal distribution} ==\"42\" || (isNull(POSSAMidString) || isNull({Articulation Origin}) || isNull({Offre origin}))) ~> filter4",
						"filter4 foldDown(unroll(toroll, toroll),",
						"     mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          { Org comqtmerciale} = qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin}",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> torolltoList2",
						"torolltoList2 derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn9",
						"derivedColumn9 window(over(year,",
						"          {Période},",
						"          HubSAPid,",
						"          ref2),",
						"     asc(yearmonth, true),",
						"     asc(HubSAPid, true),",
						"     asc(reference, true),",
						"     indexcol2 = rowNumber()) ~> window1",
						"derivedColumn17 aggregate(groupBy(yearmonth,",
						"          year,",
						"          month,",
						"          periode,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          dd,",
						"          {Ecoulement origin}),",
						"     qte_ecc = sum(toFloat(qte_ecc)),",
						"          ca_ecoulement = min(toFloat(ca_ecoulement))) ~> ResteEcoulement",
						"ResteEcoulement derive(dd = mapLoop(abs(toInteger(qte_ecc)), #index),",
						"          ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn10",
						"derivedColumn10 foldDown(unroll(dd, dd),",
						"     mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          periode,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          dd,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          ref2",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> ddToList",
						"ddToList window(over(year,",
						"          periode,",
						"          HubSAPid,",
						"          ref2),",
						"     asc(year, true),",
						"     asc(HubSAPid, true),",
						"     asc(ref2, true),",
						"     indexcol2 = rowNumber()) ~> window2",
						"window2 select(mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          indexcol2,",
						"          ca_ecoulement,",
						"          periode,",
						"          ref2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select7",
						"select7 derive(indexcols2 = year+\"-\"+periode+\"-\"+HubSAPid+\"-\"+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+\"-\"+toString(indexcol2),",
						"          qte_ecc = iif(toInteger(qte_ecc) >0, 1, -1 )) ~> derivedColumn11",
						"select11 derive(ca_ecoulement = abs(toDouble(ca_ecoulement))*qte_ecc) ~> caEcoulement",
						"select12, ecoulementReste join(select12@indexcols2 == ecoulementReste@indexcols2,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join8",
						"window1 select(mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          { Org comqtmerciale},",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2,",
						"          indexcol2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select8",
						"join8 select(mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          F_reference = select12@reference,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          F_HubSAPid = select12@HubSAPid,",
						"          F_POSSAMidString = select12@POSSAMidString,",
						"          toreplicate = select12@toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2 = ecoulementReste@ref2,",
						"          E_yearmonth,",
						"          E_year,",
						"          E_month,",
						"          qte_ecoulement,",
						"          POSSAMidString = ecoulementReste@POSSAMidString,",
						"          HubSAPid = ecoulementReste@HubSAPid,",
						"          E_reference = ecoulementReste@reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select9",
						"select9 split(!isNull({Ecoulement origin}) && !isNull({Facturation origin}),",
						"     isNull({Facturation origin}),",
						"     disjoint: false) ~> split4@(avecMatich, rightEcoulement, leftFacturation)",
						"split4@avecMatich derive(data_origin = \"facturation avec matching\") ~> adddataOriginAvecMatchin",
						"split4@rightEcoulement derive(data_origin = \"écoulement sans matching\") ~> adddataOriginEccSansMatching",
						"split4@leftFacturation derive(data_origin = \"facturation sans matching\",",
						"          {Qté facturée} = toInteger({Qté facturée})) ~> addDataOringFacturation",
						"split3@avecMatching5145 derive(data_origin = \"facturation avec matching\") ~> addDataOriginAvecMathcin4551",
						"split3@residu5145 derive(data_origin = \"facturation sans matching\") ~> addDataOriginFSM",
						"split2@avecMatching43 derive(data_origin = \"facturation avec matching\") ~> addDataOriginFM",
						"split2@residu43 derive(data_origin = \"facturation sans matching\") ~> derivedColumn14",
						"adddataOriginAvecMatchin select(mapColumn(",
						"          Org_commerciale = { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          reference = F_reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference = E_reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColumnsAvecMatchig42",
						"addDataOringFacturation select(mapColumn(",
						"          Org_commerciale = { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference = F_reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid = F_HubSAPid,",
						"          POSSAMidString = F_POSSAMidString,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearFacturationSansM",
						"adddataOriginEccSansMatching select(mapColumn(",
						"          yearmonth = E_yearmonth,",
						"          year = E_year,",
						"          month = E_month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference = E_reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearEcoulementSansMatch",
						"derivedColumn14 select(mapColumn(",
						"          {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year = yearFact,",
						"          yearmonth = yearmonthFact,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference = referenceFact,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid = HubSAPid_Fact,",
						"          POSSAMidString = POSSAMidStringFact,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColFacturationSM43",
						"addDataOriginFM select(mapColumn(",
						"          Org_commerciale = {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          POSSAMidString = POSSAMidStringFact,",
						"          {Période},",
						"          Offre,",
						"          yearmonth = yearmonthFact,",
						"          year = yearFact,",
						"          month,",
						"          qte_ecoulement,",
						"          ca_ecoulement,",
						"          HubSAPid,",
						"          reference = referenceEcoul,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColAVM43",
						"addDataOriginAvecMathcin4551 select(mapColumn(",
						"          Org_commerciale = {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          yearmonth = yearmonthFact,",
						"          year = yearFact,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString = POSSAMidStringEcoul,",
						"          HubSAPid = HubSAPidEcoul,",
						"          reference = referenceEcoul,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColumnAVM5145",
						"addDataOriginFSM select(mapColumn(",
						"          {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year = yearFact,",
						"          month,",
						"          yearmonth = yearmonthFact,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference = referenceFact,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid = HubSAPidFact,",
						"          POSSAMidString,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColFSM4551",
						"clearColFSM4551, clearColFacturationSM43 union(byName: true)~> union1",
						"union1 select(mapColumn(",
						"          Org_commerciale = {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> unionFSM435145",
						"clearFacturationSansM, unionFSM435145 union(byName: true)~> union2",
						"union2 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endFactSansMatching",
						"clearColumnAVM5145, clearColAVM43 union(byName: true)~> union3",
						"derivedColumn15 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endAVM434551",
						"clearColumnsAvecMatchig42, endAVM434551 union(byName: true)~> union4",
						"union4 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin,",
						"          Org_commerciale",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endFactAVM",
						"union3 derive(ca_ecoulement = toDouble(ca_ecoulement),",
						"          qte_ecc = toInteger(qte_ecc),",
						"          {Qté facturée} = toInteger({Qté facturée})) ~> derivedColumn15",
						"clearEcoulementSansMatch select(mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endEcoulementSansMatcing",
						"derivedColumn16, endFactSansMatching union(byName: true)~> union5",
						"union5 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin,",
						"          year_month",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select10",
						"endFactAVM derive({Qté facturée} = toInteger({Qté facturée})) ~> derivedColumn16",
						"select10, endEcoulementSansMatcing union(byName: true)~> union6",
						"aggregate1 select(mapColumn(",
						"          Offre,",
						"          {ATC performance} = CodeATC,",
						"          Canal",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endOffreATC",
						"derivedColumn20, endOffreATC join(unionDecrementation@Offre == endOffreATC@Offre",
						"     && canal_final == Canal,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join9",
						"REcoulement5145 derive(periode = split(indexcols2,'-')[2]) ~> derivedColumn17",
						"select8 derive(indexcols2 = year+\"-\"+{Période}+\"-\"+HubSAPid+\"-\"+ref2+\"-\"+toString(indexcol2),",
						"          {Qté facturée} = iif(toDouble({Qté facturée})<=0, -1, 1)) ~> derivedColumn18",
						"derivedColumn11 select(mapColumn(",
						"          E_yearmonth = yearmonth,",
						"          E_year = year,",
						"          E_month = month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          periode,",
						"          ref2,",
						"          indexcols2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select11",
						"derivedColumn18 select(mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          { Org comqtmerciale},",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2,",
						"          indexcols2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select12",
						"caEcoulement select(mapColumn(",
						"          E_yearmonth,",
						"          E_year,",
						"          E_month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          periode,",
						"          ref2,",
						"          indexcols2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ecoulementReste",
						"stgOffre aggregate(groupBy(Offre,",
						"          Canal),",
						"     CodeATC = last(CodeATC)) ~> aggregate1",
						"join1 derive(canal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" )) ~> derivedColumn19",
						"unionDecrementation derive(canal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" ),",
						"          month = coalesce(month, right(yearmonth,2) )) ~> derivedColumn20",
						"join9 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre = unionDecrementation@Offre,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin,",
						"          {Ecoulement origin},",
						"          canal_final,",
						"          Offre = endOffreATC@Offre,",
						"          {ATC performance},",
						"          Canal",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select13",
						"filter4 aggregate({Qté facturée} = sum( toInteger({Qté facturée}) )) ~> aggregate2",
						"derivedColumn18 aggregate({Qté facturée} = sum(toInteger({Qté facturée})),",
						"          column1 = sum(1)) ~> aggregate3",
						"adddataOriginAvecMatchin aggregate(col1 = sum(1)) ~> aggregate4",
						"derivedColumn2 aggregate(totalQteFactuter = sum(toInteger({Qté facturée}))) ~> aggregate5",
						"filter3 aggregate(qte4251 = sum(toInteger({Qté facturée}))) ~> aggregate6",
						"select13 derive(distributeur = coalesce(lower(distributeur),iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis', iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva', iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc', iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', iif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',lower(WholeSalerID))))))),",
						"          marque_id = iif(data_origin == \"écoulement sans matching\",marque,Org_commerciale)) ~> derivedColumn21",
						"derivedColumn21 derive(marque_name = iif(marque_id=='1604', \"SaunierDuval\", iif(marque_id=='1621', \"Vaillant\", \"\")),",
						"          {Canal distribution} = iif(data_origin == \"écoulement sans matching\",\"42\",{Canal distribution}),",
						"          ca_final = iif( in([\"écoulement sans matching\",'decrementation ecoulement sans matching'], data_origin),toString(ca_ecoulement),toString({CA facturé})),",
						"          qt_final = iif( in([\"écoulement sans matching\",'decrementation ecoulement sans matching'], data_origin) ,toString(qte_ecc),toString({Qté facturée}))) ~> derivedColumn22",
						"derivedColumn22 derive(canal_final = iif({Canal distribution} ==\"43\",\"Chantier\",\"Diffus\")) ~> derivedColumn23",
						"refAtc aggregate(groupBy(Marque,",
						"          {Canal final},",
						"          {Code postal}),",
						"     ATC = max(ATC),",
						"          NomATC = max(NomATC),",
						"          Matricule = max(Matricule)) ~> aggregate8",
						"aggregate8 derive({Code postal} = toInteger({Code postal})) ~> derivedColumn24",
						"derivedColumn24 select(mapColumn(",
						"          Marque,",
						"          {Canal final},",
						"          {Code postal},",
						"          ATC,",
						"          NomATC,",
						"          Matricule",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endATC",
						"derivedColumn23, endATC join(marque_name == endATC@Marque",
						"     && canal_final == {Canal final}",
						"     && iif(data_origin==\"decrementation ecoulement sans matching\", -5, toInteger(select13@{Code postal})) == endATC@{Code postal},",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join10",
						"join10 select(mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          ca_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque_id,",
						"          {Code postal} = select13@{Code postal},",
						"          marque_name,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type poste Facture},",
						"          {Motif commande},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          no_offre = Offre,",
						"          ca_final,",
						"          qt_final,",
						"          data_origin,",
						"          canal_final,",
						"          {ATC performance},",
						"          ATC,",
						"          NomATC,",
						"          Matricule",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select14",
						"endEcoulementSansMatcing derive(POSSAMidString = HubSAPid,",
						"          qte_ecc = -1*toDouble(qte_ecc),",
						"          ca_ecoulement = -1*toDouble(ca_ecoulement),",
						"          data_origin = \"decrementation ecoulement sans matching\") ~> endDecrementation",
						"union6, endDecrementation union(byName: true)~> unionDecrementation",
						"derivedColumn3 filter(POSSAMidString==\"16001050\" && reference ==\"0010021498\" && year=='2021') ~> filter6",
						"derivedColumn2 filter(POSSAMidString==\"16001050\" && reference==\"0010021498\" && year=='2021') ~> ftest",
						"createIndexPartedis filter(POSSAMidString==\"16001050\" && ref2==\"10021498\" && year=='2021') ~> filter7",
						"select1 aggregate(groupBy(Offre,",
						"          Canal),",
						"     {Numéro interne 2} = max({Numéro interne 2})) ~> aggregate9",
						"ecoulementReste aggregate(qte_ecc = sum(toFloat(qte_ecc))) ~> aggregate10",
						"REcoulement5145 aggregate(qte_ecc = sum(toFloat(qte_ecc))) ~> aggregate11",
						"ResteEcoulement aggregate(qte_ecc = sum(toFloat(qte_ecc))) ~> aggregate12",
						"derivedColumn11 aggregate(qte_ecc = sum(toFloat(qte_ecc))) ~> aggregate13",
						"select3 aggregate(Qt = sum(toFloat({Qté facturée}))) ~> aggregate14",
						"FacturationForOther aggregate(groupBy(WholeSalerID),",
						"     {Qté facturée} = sum(toFloat({Qté facturée}))) ~> aggregate15",
						"derivedColumn5 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate16",
						"Filtre5145 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate17",
						"Filtre43 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate18",
						"select5 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate19",
						"addDataOriginFM aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate20",
						"clearColFacturationSM43 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate21",
						"join7 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate22",
						"addDataOriginAvecMathcin4551 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate23",
						"addDataOriginFSM aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate24",
						"aggregate13 select(mapColumn(",
						"          qte_ecc",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select15",
						"derivedColumn15 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate25",
						"unionFSM435145 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate26",
						"select14 derive({ATC performance} = {ATC performance}) ~> derivedColumn25",
						"select13 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Org_commerciale as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activit�} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {Agence commerciale corrig�} as string,",
						"          {ATC Corrig�} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Ann�e civile} as string,",
						"          {Motif commande} as string,",
						"          {CA cd�} as string,",
						"          {Qt� livr�e} as string,",
						"          {CA livr�} as string,",
						"          {Qt� factur�e} as string,",
						"          {CA factur�} as string,",
						"          {Cout standard cd�} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livr�} as string,",
						"          {Cout standard factur�} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          {P�riode} as string,",
						"          Offre as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          qte_ecc as string,",
						"          ca_ecoulement as string,",
						"          data_origin as string,",
						"          {Ecoulement origin} as string,",
						"          canal_final as string,",
						"          {ATC performance} as string,",
						"          Canal as string",
						"     ),",
						"     partitionFileNames:['tempVenteDeroge.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> endSinkOutput",
						"clearColFacturationSM43 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Org_commerciale as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activit�} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {Agence commerciale corrig�} as string,",
						"          {ATC Corrig�} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Ann�e civile} as string,",
						"          {Motif commande} as string,",
						"          {CA cd�} as string,",
						"          {Qt� livr�e} as string,",
						"          {CA livr�} as string,",
						"          {Qt� factur�e} as string,",
						"          {CA factur�} as string,",
						"          {Cout standard cd�} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livr�} as string,",
						"          {Cout standard factur�} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          {P�riode} as string,",
						"          Offre as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          qte_ecc as string,",
						"          ca_ecoulement as string,",
						"          data_origin as string,",
						"          {Ecoulement origin} as string,",
						"          canal_final as string,",
						"          {ATC performance} as string,",
						"          Canal as string",
						"     ),",
						"     partitionFileNames:['ventederogeAnalysis.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1",
						"clearColAVM43 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Org_commerciale as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activit�} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {Agence commerciale corrig�} as string,",
						"          {ATC Corrig�} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Ann�e civile} as string,",
						"          {Motif commande} as string,",
						"          {CA cd�} as string,",
						"          {Qt� livr�e} as string,",
						"          {CA livr�} as string,",
						"          {Qt� factur�e} as string,",
						"          {CA factur�} as string,",
						"          {Cout standard cd�} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livr�} as string,",
						"          {Cout standard factur�} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          {P�riode} as string,",
						"          Offre as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          qte_ecc as string,",
						"          ca_ecoulement as string,",
						"          data_origin as string,",
						"          {Ecoulement origin} as string,",
						"          canal_final as string,",
						"          {ATC performance} as string,",
						"          Canal as string",
						"     ),",
						"     partitionFileNames:['factorationAVM43.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink2",
						"unionFSM435145 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Org_commerciale as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activit�} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {Agence commerciale corrig�} as string,",
						"          {ATC Corrig�} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Ann�e civile} as string,",
						"          {Motif commande} as string,",
						"          {CA cd�} as string,",
						"          {Qt� livr�e} as string,",
						"          {CA livr�} as string,",
						"          {Qt� factur�e} as string,",
						"          {CA factur�} as string,",
						"          {Cout standard cd�} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livr�} as string,",
						"          {Cout standard factur�} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          {P�riode} as string,",
						"          Offre as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          qte_ecc as string,",
						"          ca_ecoulement as string,",
						"          data_origin as string,",
						"          {Ecoulement origin} as string,",
						"          canal_final as string,",
						"          {ATC performance} as string,",
						"          Canal as string",
						"     ),",
						"     partitionFileNames:['factorationAVM435145.vdb'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink3",
						"derivedColumn25 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Org_commerciale as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activit�} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {Agence commerciale corrig�} as string,",
						"          {ATC Corrig�} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Ann�e civile} as string,",
						"          {Motif commande} as string,",
						"          {CA cd�} as string,",
						"          {Qt� livr�e} as string,",
						"          {CA livr�} as string,",
						"          {Qt� factur�e} as string,",
						"          {CA factur�} as string,",
						"          {Cout standard cd�} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livr�} as string,",
						"          {Cout standard factur�} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          {P�riode} as string,",
						"          Offre as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          qte_ecc as string,",
						"          ca_ecoulement as string,",
						"          data_origin as string,",
						"          {Ecoulement origin} as string,",
						"          canal_final as string,",
						"          {ATC performance} as string,",
						"          Canal as string",
						"     ),",
						"     partitionFileNames:['OModelPartedis.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink4",
						"Filtre43 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Org_commerciale as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activit�} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {Agence commerciale corrig�} as string,",
						"          {ATC Corrig�} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Ann�e civile} as string,",
						"          {Motif commande} as string,",
						"          {CA cd�} as string,",
						"          {Qt� livr�e} as string,",
						"          {CA livr�} as string,",
						"          {Qt� factur�e} as string,",
						"          {CA factur�} as string,",
						"          {Cout standard cd�} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livr�} as string,",
						"          {Cout standard factur�} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          {P�riode} as string,",
						"          Offre as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          qte_ecc as string,",
						"          ca_ecoulement as string,",
						"          data_origin as string,",
						"          {Ecoulement origin} as string,",
						"          canal_final as string,",
						"          {ATC performance} as string,",
						"          Canal as string",
						"     ),",
						"     partitionFileNames:['TestFacturation43.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkFact43"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/check_base_com')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outtest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "filter1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "aggregate4"
						},
						{
							"name": "derivedColumn6"
						},
						{
							"name": "filter3"
						},
						{
							"name": "filter4"
						},
						{
							"name": "derivedColumn7"
						},
						{
							"name": "filter5"
						},
						{
							"name": "aggregate5"
						},
						{
							"name": "derivedColumn8"
						},
						{
							"name": "filter6"
						},
						{
							"name": "aggregate6"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {affecte/non_affecte} as string,",
						"          {plateforme/vente directe} as string,",
						"          {origine de la ligne} as string,",
						"          year as string,",
						"          month as string,",
						"          {Code client livré} as string,",
						"          {code client plateforme livree} as string,",
						"          {code produit} as string,",
						"          quantite as string,",
						"          ca as string,",
						"          {Code postal} as string,",
						"          marque as string,",
						"          marque_code as string,",
						"          canal_distribution_final as string,",
						"          {nom du canal} as string,",
						"          canal_final as string,",
						"          document_vente as string,",
						"          {Agence commerciale corrigé (vente directe)} as string,",
						"          {Donneur d'ordre (vente directe)} as string,",
						"          {Facture (vente directe)} as string,",
						"          {Type poste Facture (vente directe)} as string,",
						"          no_offre as string,",
						"          {ATC offre} as string,",
						"          {ATC livré} as string,",
						"          {ATC Performance} as string,",
						"          NomATC as string,",
						"          DR as string,",
						"          Matricule as string,",
						"          {Motif commande} as string,",
						"          {Type de facture} as string,",
						"          Description as string,",
						"          N1groupe as string,",
						"          N2groupe as string,",
						"          N3groupe as string,",
						"          N4groupe as string,",
						"          N5groupe as string,",
						"          N6groupe as string,",
						"          N7groupe as string,",
						"          N1groupedesignation as string,",
						"          N2groupedesignation as string,",
						"          N3groupedesignation as string,",
						"          N4groupedesignation as string,",
						"          N5groupedesignation as string,",
						"          N6groupedesignation as string,",
						"          N7groupedesignation as string,",
						"          N1localedesignation as string,",
						"          N2localedesignation as string,",
						"          N3localedesignation as string,",
						"          N4localedesignation as string,",
						"          N5localedesignation as string,",
						"          N6localedesignation as string,",
						"          N7localedesignation as string,",
						"          N1locale as string,",
						"          N2locale as string,",
						"          N3locale as string,",
						"          N4locale as string,",
						"          N5locale as string,",
						"          N6locale as string,",
						"          N7locale as string,",
						"          {Hiérarchgroupe} as string,",
						"          {Hiérarchlocale} as string,",
						"          {Numéro du compte} as string,",
						"          {EPS_Nom du compte} as string,",
						"          {EPS_Groupe cible/Typologie générale} as string,",
						"          {EPS_Sous groupe cible/Typologie détaillée} as string,",
						"          {EPS_Compte principal: Numéro du compte} as string,",
						"          {EPS_Compte principal: Nom du compte} as string,",
						"          Client as string,",
						"          {Numéro client indirect} as string,",
						"          CODE_CMI as string,",
						"          NOM_CMI as string,",
						"          {Nom du compte} as string,",
						"          {Client Indirect_ Groupe cible/Typologie générale} as string,",
						"          {Client Indirect_ Sous groupe cible/Typologie détaillée} as string,",
						"          {Client Indirect_  Compte principal: Numéro du compte} as string,",
						"          {Client Indirect_  Compte principal: Nom du compte} as string,",
						"          {Client Direct - Hiérarchie N1 SAP } as string,",
						"          {Client Direct - Hiérarchie N2 SAP } as string,",
						"          {Client Indirect - Hiérarchie N1 SAP} as string,",
						"          {Client Indirect - Hiérarchie N2 SAP} as string,",
						"          yearmonth as string,",
						"          {ATC Corrigé} as string,",
						"          {Client_direct_Nom du compte} as string,",
						"          {Client direct_Groupe cible/Typologie générale} as string,",
						"          {Client direct_Sous groupe cible/Typologie détaillée} as string,",
						"          {Client direct_Compte principal: Numéro du compte} as string,",
						"          {Client direct_Compte principal: Nom du compte} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(ca = toDouble(replace(ca,\",\",\".\")),",
						"          quantite = toInteger(quantite),",
						"          column1 = 1) ~> derivedColumn1",
						"filter4 aggregate(groupBy({plateforme/vente directe}),",
						"     ca = sum(toDouble(ca)),",
						"          quantite = sum(toInteger(quantite))) ~> aggregate1",
						"aggregate1 derive(ca = replace(toString(ca),\".\",\",\"),",
						"          quantite = replace(toString(quantite),\".\",\",\")) ~> derivedColumn5",
						"source1 filter(year==\"2021\" && {plateforme/vente directe}==\"plateforme vf\") ~> filter1",
						"filter1 filter({origine de la ligne}==\"facturation sans ecoulement\" || {origine de la ligne}==\"facturation avec matching\") ~> filter2",
						"derivedColumn6 aggregate(groupBy({code produit}),",
						"     nombre = count({code produit})) ~> aggregate4",
						"filter2 derive({code produit} = coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\"))) ~> derivedColumn6",
						"derivedColumn1 filter(year==\"2021\") ~> filter3",
						"filter3 filter(in([\"facturation sans ecoulement\",\"facturation avec matching\"],{origine de la ligne})) ~> filter4",
						"source1 derive(ca = toDouble(replace(ca,\",\",\".\")),",
						"          quantite = toInteger(quantite),",
						"          column1 = 1) ~> derivedColumn7",
						"derivedColumn7 filter(year == '2021') ~> filter5",
						"filter6 aggregate(groupBy({plateforme/vente directe},",
						"          {origine de la ligne}),",
						"     ca = sum(toDouble(ca)),",
						"          quantite = sum(toInteger(quantite))) ~> aggregate5",
						"aggregate5 derive(ca = replace(toString(ca),\".\",\",\"),",
						"          quantite = replace(toString(quantite),\".\",\",\")) ~> derivedColumn8",
						"filter5 filter(in([\"decrementation ecoulement sans matching\",\"ecoulement sans matching\",\"facturation sans ecoulement\",\"facturation avec matching\"],{origine de la ligne})) ~> filter6",
						"source1 aggregate(groupBy({plateforme/vente directe}),",
						"     vam = sum(1)) ~> aggregate6",
						"aggregate4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string",
						"     ),",
						"     partitionFileNames:['test_contratDist.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cleaning')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "cleaning process after join",
				"folder": {
					"name": "REFERENTIEL/ATC"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "atc_lower",
								"type": "DatasetReference"
							},
							"name": "atcJoined"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outDatawarehouse",
								"type": "DatasetReference"
							},
							"name": "AtcprepareForReplicate"
						},
						{
							"dataset": {
								"referenceName": "outDatawarehouse",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "renamle"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "filtreCodePostal"
						},
						{
							"name": "dd"
						},
						{
							"name": "Flatten1"
						},
						{
							"name": "dd1"
						},
						{
							"name": "codePostalUpdate"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Filter4"
						},
						{
							"name": "Filter5"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Filter6"
						}
					],
					"script": "source(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as integer,\n\t\t{Code Postal fin} as integer,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\t{ID SAP} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{Plan prime} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> atcJoined\nDerivedColumn1 select(mapColumn(\n\t\t{Clé Référentiel},\n\t\t{Recherche Clé EPS},\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tATC = {ID SAP},\n\t\tNomATC = Utilisateur,\n\t\t{Plan primes} = {Plan prime},\n\t\tMatricule = {ID SAP},\n\t\tDR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renamle\nrenamle derive({Canal final} = iif( in([\"Vaillant diffus\",\"SD diffus\",'Diffus'], {Plan primes}), \"Diffus\" ,\"Chantier\" ),\n\t\ttoreplicate = {Code Postal fin}-{Code Postal début}+1) ~> canalFinal\ncanalFinal filter({Code Postal début}<= {Code Postal fin}) ~> filtreCodePostal\nfiltreCodePostal derive(dd = mapLoop(abs(toInteger(toreplicate)), #index)) ~> dd\ndd foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tATC,\n\t\tNomATC = Utilisateur,\n\t\t{Plan primes},\n\t\tMatricule = ATC,\n\t\t{Canal final},\n\t\ttoreplicate,\n\t\tdd,\n\t\tDR\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 derive(dd = toInteger(dd) -1) ~> dd1\ndd1 derive({Code postal} = {Code Postal début}+dd) ~> codePostalUpdate\natcJoined derive({ID SAP} = toInteger({ID SAP})) ~> DerivedColumn1\ncanalFinal filter(ATC==16400015) ~> Filter1\nrenamle filter(ATC==16400015) ~> Filter3\ncodePostalUpdate filter(in(['Attaché commercial prescription','Attaché commercial réseau 2','Attaché commercial réseau' ], Fonction)) ~> Filter4\ncodePostalUpdate filter(in(['Conseiller Technique Thermodynamique' ,'Conseiller technique régional'], Fonction)) ~> Filter5\nFilter5 select(mapColumn(\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tIDSAP = ATC,\n\t\tNom = NomATC,\n\t\t{Plan primes},\n\t\tMatricule,\n\t\t{Canal final},\n\t\ttoreplicate,\n\t\tdd,\n\t\tDR,\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFilter4 filter(!isNull(ATC)) ~> Filter6\nFilter6 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\t{Code postal} as string\n\t),\n\tpartitionFileNames:['referentiel_atc.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> AtcprepareForReplicate\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\t{Code postal} as string\n\t),\n\tpartitionFileNames:['referentiel_CTRCTT.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cout')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "o\tPour le cout\n\tPrendre la facturation « brute » en sortie de SAP/BW\n\tFiltrer les lignes ou le donneur d’ordre est un CTT\n•\tQuestion 2bis (cf plus haut) : il semblerait que nous ayons besoin ID du CTT ?\n\tFiltrer certaines raisons de commandes et de types de document\n•\tQuestion 3 : pouvez-vous nous transmettre le détail des filtres svp ?\n\tLa colonne de cout en sortie sera le « cout standard » présent dans la facturation \n\tAjouter l’information de VMC (en euros) en faisant la jointure en avec le nouveau référentiel VMC (info non dispo dans l’extract à date BW)\n\tAjouter les méta données produits, client, CTT, comme dans la base commerciale\n",
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "inputFacturation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outMarketingCout",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputFacturation\ninputFacturation select(mapColumn(\n\t\t{Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MarketingCout.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bctest",
								"type": "DatasetReference"
							},
							"name": "baseComDansDW"
						},
						{
							"dataset": {
								"referenceName": "basecomTemp",
								"type": "DatasetReference"
							},
							"name": "baseComDansTemp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "filter3"
						},
						{
							"name": "filter4"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {affecte/non_affecte} as string,",
						"          {plateforme/vente directe} as string,",
						"          {origine de la ligne} as string,",
						"          year as string,",
						"          month as string,",
						"          {Code client livré} as string,",
						"          {code client plateforme livree} as string,",
						"          {code produit} as string,",
						"          quantite as string,",
						"          ca as string,",
						"          {Code postal du client livré} as string,",
						"          marque as string,",
						"          {ID marque} as string,",
						"          {ID canal de distribution} as string,",
						"          {Nom du canal} as string,",
						"          {Diffus/Chantier} as string,",
						"          {document_vente (vente directe)} as string,",
						"          {Agence commerciale corrigé (vente directe)} as string,",
						"          {Donneur d'ordre (vente directe)} as string,",
						"          {Facture (vente directe)} as string,",
						"          {Type poste Facture (vente directe)} as string,",
						"          {Numéro offre} as string,",
						"          {ATC Corrigé (vente directe)} as string,",
						"          {ATC offre} as string,",
						"          {ATC livré} as string,",
						"          {DR (ATC Performance)} as string,",
						"          {ATC Performance} as string,",
						"          NomATC as string,",
						"          {Motif commande (vente directe)} as string,",
						"          {Type de facture (vente directe)} as string,",
						"          Description as string,",
						"          N1groupe as string,",
						"          N2groupe as string,",
						"          N3groupe as string,",
						"          N4groupe as string,",
						"          N5groupe as string,",
						"          N6groupe as string,",
						"          N7groupe as string,",
						"          N1groupedesignation as string,",
						"          N2groupedesignation as string,",
						"          N3groupedesignation as string,",
						"          N4groupedesignation as string,",
						"          N5groupedesignation as string,",
						"          N6groupedesignation as string,",
						"          N7groupedesignation as string,",
						"          N1localedesignation as string,",
						"          N2localedesignation as string,",
						"          N3localedesignation as string,",
						"          N4localedesignation as string,",
						"          N5localedesignation as string,",
						"          N6localedesignation as string,",
						"          N7localedesignation as string,",
						"          N1locale as string,",
						"          N2locale as string,",
						"          N3locale as string,",
						"          N4locale as string,",
						"          N5locale as string,",
						"          N6locale as string,",
						"          N7locale as string,",
						"          {Hiérarchgroupe} as string,",
						"          {Hiérarchlocale} as string,",
						"          {Client_direct_Nom du compte} as string,",
						"          {Client direct_Groupe cible/Typologie générale} as string,",
						"          {Client direct_Sous groupe cible/Typologie détaillée} as string,",
						"          {Client direct_Compte principal: Numéro du compte} as string,",
						"          {Client direct_Compte principal: Nom du compte} as string,",
						"          Client as string,",
						"          {Numéro client indirect} as string,",
						"          CODE_CMI as string,",
						"          NOM_CMI as string,",
						"          {Nom du compte} as string,",
						"          {Client Indirect_ Groupe cible/Typologie générale} as string,",
						"          {Client Indirect_ Sous groupe cible/Typologie détaillée} as string,",
						"          {Client Indirect_  Compte principal: Numéro du compte} as string,",
						"          {Client Indirect_  Compte principal: Nom du compte} as string,",
						"          {Client Direct - Hiérarchie N1 SAP } as string,",
						"          {Client Direct - Hiérarchie N2 SAP } as string,",
						"          {Client Indirect - Hiérarchie N1 SAP} as string,",
						"          {Client Indirect - Hiérarchie N2 SAP} as string,",
						"          {Période} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> baseComDansDW",
						"source(output(",
						"          {affecte/non_affecte} as string,",
						"          {plateforme/vente directe} as string,",
						"          {origine de la ligne} as string,",
						"          year as string,",
						"          month as string,",
						"          {Code client livré} as string,",
						"          {code client plateforme livree} as string,",
						"          {code produit} as string,",
						"          quantite as string,",
						"          ca as string,",
						"          {Code postal du client livré} as string,",
						"          marque as string,",
						"          {ID marque} as string,",
						"          {ID canal de distribution} as string,",
						"          {Nom du canal} as string,",
						"          {Diffus/Chantier} as string,",
						"          {document_vente (vente directe)} as string,",
						"          {Agence commerciale corrigé (vente directe)} as string,",
						"          {Donneur d'ordre (vente directe)} as string,",
						"          {Facture (vente directe)} as string,",
						"          {Type poste Facture (vente directe)} as string,",
						"          {Numéro offre} as string,",
						"          {ATC Corrigé (vente directe)} as string,",
						"          {ATC offre} as string,",
						"          {ATC livré} as string,",
						"          {ATC Performance} as string,",
						"          NomATC as string,",
						"          Matricule as string,",
						"          {Motif commande (vente directe)} as string,",
						"          {Type de facture (vente directe)} as string,",
						"          Description as string,",
						"          N1groupe as string,",
						"          N2groupe as string,",
						"          N3groupe as string,",
						"          N4groupe as string,",
						"          N5groupe as string,",
						"          N6groupe as string,",
						"          N7groupe as string,",
						"          N1groupedesignation as string,",
						"          N2groupedesignation as string,",
						"          N3groupedesignation as string,",
						"          N4groupedesignation as string,",
						"          N5groupedesignation as string,",
						"          N6groupedesignation as string,",
						"          N7groupedesignation as string,",
						"          N1localedesignation as string,",
						"          N2localedesignation as string,",
						"          N3localedesignation as string,",
						"          N4localedesignation as string,",
						"          N5localedesignation as string,",
						"          N6localedesignation as string,",
						"          N7localedesignation as string,",
						"          N1locale as string,",
						"          N2locale as string,",
						"          N3locale as string,",
						"          N4locale as string,",
						"          N5locale as string,",
						"          N6locale as string,",
						"          N7locale as string,",
						"          {Hiérarchgroupe} as string,",
						"          {Hiérarchlocale} as string,",
						"          {Numéro du compte} as string,",
						"          {EPS_Nom du compte} as string,",
						"          {EPS_Groupe cible/Typologie générale} as string,",
						"          {EPS_Sous groupe cible/Typologie détaillée} as string,",
						"          {EPS_Compte principal: Numéro du compte} as string,",
						"          {EPS_Compte principal: Nom du compte} as string,",
						"          Client as string,",
						"          {Numéro client indirect} as string,",
						"          CODE_CMI as string,",
						"          NOM_CMI as string,",
						"          {Nom du compte} as string,",
						"          {Client Indirect_ Groupe cible/Typologie générale} as string,",
						"          {Client Indirect_ Sous groupe cible/Typologie détaillée} as string,",
						"          {Client Indirect_  Compte principal: Numéro du compte} as string,",
						"          {Client Indirect_  Compte principal: Nom du compte} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> baseComDansTemp",
						"baseComDansDW filter(in(['16009659',\"16009650\",\"16012261\"] ,{Code client livré})) ~> filter1",
						"baseComDansDW aggregate(groupBy({plateforme/vente directe}),",
						"     val = sum(1)) ~> aggregate1",
						"baseComDansDW filter(instr({plateforme/vente directe} , \"van\") >0) ~> filter2",
						"baseComDansTemp filter(instr({plateforme/vente directe}, \"van\")>0) ~> filter3",
						"filter2 filter(instr({plateforme/vente directe} , \"match\") >0) ~> filter4",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Org_commerciale as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activit�} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {Agence commerciale corrig�} as string,",
						"          {ATC Corrig�} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Ann�e civile} as string,",
						"          {Motif commande} as string,",
						"          {CA cd�} as string,",
						"          {Qt� livr�e} as string,",
						"          {CA livr�} as string,",
						"          {Qt� factur�e} as string,",
						"          {CA factur�} as string,",
						"          {Cout standard cd�} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livr�} as string,",
						"          {Cout standard factur�} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          {P�riode} as string,",
						"          Offre as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          qte_ecc as string,",
						"          ca_ecoulement as string,",
						"          data_origin as string,",
						"          {Ecoulement origin} as string,",
						"          canal_final as string,",
						"          {ATC performance} as string,",
						"          Canal as string",
						"     ),",
						"     partitionFileNames:['testTereva'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lower_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL/ATC"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ref_affectation",
								"type": "DatasetReference"
							},
							"name": "refaffectation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outTempData",
								"type": "DatasetReference"
							},
							"name": "atcAffectationLower"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "filteredcolumnsrefrefaffectation"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Filter3"
						}
					],
					"script": "source(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\t{ID SAP} as string,\n\t\t{Lancement Maj Affectation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refaffectation\nSelect2 derive(Utilisateur = Utilisateur) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\t{Clé Référentiel},\n\t\t{Recherche Clé EPS},\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tDR,\n\t\t{ID SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filteredcolumnsrefrefaffectation\nfilteredcolumnsrefrefaffectation derive({Plan prime} = iif( Fonction== \"Attaché commercial réseau\" || Fonction == \"Attaché commercial réseau 2\" , \"Diffus\", iif( Fonction == \"Attaché commercial prescription\"  , \"Chantier\", \"\"  )  )) ~> DerivedColumn3\nFilter2 select(mapColumn(\n\t\t{Clé Référentiel},\n\t\t{Recherche Clé EPS},\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tDR,\n\t\t{ID SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nrefaffectation filter(in(['Attaché commercial prescription','Attaché commercial réseau 2','Attaché commercial réseau' ,'Conseiller Technique Thermodynamique' ,'Conseiller technique régional'], Fonction)) ~> Filter2\nFilter2 filter({ID SAP}==\"16400015\") ~> Filter3\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tOrg_commerciale as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Ann�e civile} as string,\n\t\t{Motif commande} as string,\n\t\t{CA cd�} as string,\n\t\t{Qt� livr�e} as string,\n\t\t{CA livr�} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\t{Cout standard cd�} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livr�} as string,\n\t\t{Cout standard factur�} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\t{P�riode} as string,\n\t\tOffre as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tqte_ecc as string,\n\t\tca_ecoulement as string,\n\t\tdata_origin as string,\n\t\t{Ecoulement origin} as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['atc_affectation_lower.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> atcAffectationLower"
				}
			},
			"dependsOn": []
		}
	]
}