{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-VAILLANT"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/tVerifBaseComm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tecouunion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "allDistruUnioned.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tempAvoirReplicatedOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/terevaQteNull')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/TEREVA"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tunionSap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionAllModel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OUnionBasecommercial",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "canal distru",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "right_marque",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionEcoulement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccoulement_union.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "marque_num",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionSapEhsIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "unionClientSapEHS",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/venteDirectePrepared')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wholesalerOrgat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_wholesaler_orgat.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 5,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ATC_PERFORMANCE_ET_CLIENT_SAP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BASE_AVANT_TRAITEMENT_ATC",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "SECTEUR_FICTIF",
								"type": "DatasetReference"
							},
							"name": "secteurFictif"
						},
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "ExtractionSAP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "baseCommercialOut",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "atcOffreINNER"
						},
						{
							"name": "atcOffreFULLLEFT"
						},
						{
							"name": "atcOffreOUTERLEFT"
						},
						{
							"name": "updateATCOffre"
						},
						{
							"name": "nullToEmpty"
						},
						{
							"name": "atcOffreTraite"
						},
						{
							"name": "atcCorrigeINNER"
						},
						{
							"name": "atcCorrigeFULLLEFT"
						},
						{
							"name": "atcCorrigeOUTERLEFT"
						},
						{
							"name": "deleteSecteurColumn"
						},
						{
							"name": "updateATCCorrige"
						},
						{
							"name": "atcCorrigetraite"
						},
						{
							"name": "deleteSecteurColumn2"
						},
						{
							"name": "atcPerformance"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "JoinClientDirect"
						},
						{
							"name": "RenameSAP"
						},
						{
							"name": "JoinClientIndirect"
						},
						{
							"name": "MapDrifted2",
							"description": "Crée un mappage explicite pour chaque colonne dérivée"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "AgregateClient"
						},
						{
							"name": "RenameClientDirect"
						},
						{
							"name": "RenameClientIndirect"
						},
						{
							"name": "columnDPT2"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal du client livré} as string,\n\t\tmarque as string,\n\t\t{ID marque} as string,\n\t\t{ID canal de distribution} as string,\n\t\t{Nom du canal} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{document_vente (vente directe)} as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\t{Numéro offre} as string,\n\t\t{ATC Corrigé (vente directe)} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande (vente directe)} as string,\n\t\t{Type de facture (vente directe)} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\tNoATC as string,\n\t\tATC as string,\n\t\tDRCde as string,\n\t\tFirstName as string,\n\t\tLastName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> secteurFictif\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionSAP\nnullToEmpty, secteurFictif join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcOffreINNER\nbaseCommerciale, secteurFictif join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcOffreFULLLEFT\natcOffreFULLLEFT filter(isNull(NoATC)) ~> atcOffreOUTERLEFT\natcOffreINNER derive({ATC fictif} = 1) ~> updateATCOffre\nbaseCommerciale derive({ATC offre} = iif(isNull({ATC offre}), \"\", {ATC offre}),\n\t\t{ATC Corrigé (vente directe)} = iif(isNull({ATC Corrigé (vente directe)}), \"\", {ATC Corrigé (vente directe)})) ~> nullToEmpty\nupdateATCOffre, atcOffreOUTERLEFT union(byName: true)~> atcOffreTraite\ndeleteSecteurColumn, secteurFictif join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcCorrigeINNER\ndeleteSecteurColumn, secteurFictif join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcCorrigeFULLLEFT\natcCorrigeFULLLEFT filter(isNull(NoATC)) ~> atcCorrigeOUTERLEFT\natcOffreTraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC fictif},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn\natcCorrigeINNER derive({ATC fictif} = 1) ~> updateATCCorrige\natcCorrigeOUTERLEFT, updateATCCorrige union(byName: true)~> atcCorrigetraite\nSelect1 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{ATC fictif},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn2\ndeleteSecteurColumn2 derive({ATC Performance} = iif(!isNull({ATC Corrigé (vente directe)}) && {ATC fictif}!=1, {ATC Corrigé (vente directe)}, iif(!isNull({ATC offre}) && {ATC fictif}!=1, {ATC offre}, {ATC livré}))) ~> atcPerformance\natcCorrigetraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\natcPerformance select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2, RenameClientDirect join({Code client livré} == {Client Direct},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinClientDirect\nMapDrifted2 select(mapColumn(\n\t\t{Client Direct} = Client,\n\t\t{Client Direct - Hiérarchie N1 SAP } = {_c4},\n\t\t{Client Direct - Hiérarchie N2 SAP } = {_c6}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameSAP\nSelect3, RenameClientIndirect join({Numéro client indirect} == {Client Indirect},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinClientIndirect\nExtractionSAP derive({_c2} = toString(byName('_c2')),\n\t\t{_c4} = toString(byName('_c4')),\n\t\t{_c6} = toString(byName('_c6')),\n\t\t{_c8} = toString(byName('_c8')),\n\t\t{_c10} = toString(byName('_c10')),\n\t\t{_c18} = toString(byName('_c18')),\n\t\t{_c22} = toString(byName('_c22')),\n\t\t{_c24} = toString(byName('_c24')),\n\t\t{_c26} = toString(byName('_c26')),\n\t\t{_c28} = toString(byName('_c28')),\n\t\t{_c30} = toString(byName('_c30')),\n\t\t{_c32} = toString(byName('_c32')),\n\t\t{_c34} = toString(byName('_c34')),\n\t\t{_c36} = toString(byName('_c36')),\n\t\t{_c39} = toString(byName('_c39')),\n\t\t{_c41} = toString(byName('_c41')),\n\t\t{_c43} = toString(byName('_c43'))) ~> MapDrifted2\nJoinClientDirect select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nJoinClientIndirect select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nRenameSAP aggregate(groupBy({Client Direct}),\n\t{Client Direct - Hiérarchie N1 SAP } = first({Client Direct - Hiérarchie N1 SAP }),\n\t\t{Client Direct - Hiérarchie N2 SAP } = first({Client Direct - Hiérarchie N2 SAP })) ~> AgregateClient\nAgregateClient select(mapColumn(\n\t\t{Client Direct},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameClientDirect\nAgregateClient select(mapColumn(\n\t\t{Client Indirect} = {Client Direct},\n\t\t{Client Indirect - Hiérarchie N1 SAP} = {Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Indirect - Hiérarchie N2 SAP} = {Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameClientIndirect\nSelect4 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal} = {Code postal du client livré},\n\t\tmarque,\n\t\tmarque_code = {ID marque},\n\t\tcanal_distribution_final = {ID canal de distribution},\n\t\t{nom du canal} = {Nom du canal},\n\t\tcanal_final = {Diffus/Chantier},\n\t\tdocument_vente = {document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\tno_offre = {Numéro offre},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Corrigé} = {ATC Performance},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande} = {Motif commande (vente directe)},\n\t\t{Type de facture} = {Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnDPT2\ncolumnDPT2 derive(yearmonth = year+month) ~> DerivedColumn1\nSelect4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\t{Code postal} as string\n\t),\n\tpartitionFileNames:['base commerciale.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['BaseCommercialeDTP2.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_REMUNERATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_REMUNERATION",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "Select1"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Union1"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "quantite"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "Union2"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\t{Canal distribution} as string,\n\t\t{nom du canal} as string,\n\t\tcanal_distribution_final as string,\n\t\tcanal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tqt_ecc_enrichi as string,\n\t\tca_ecc_enrichi as string,\n\t\tqte_ecoulement as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tsource_atc as string,\n\t\tSuccessor as string,\n\t\tCDis as string,\n\t\tPredecessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Deb val} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tca_ecoulement as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Nom du compte} as string,\n\t\t{Numero Interne_ Groupe cible/Typologie générale} as string,\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Numero Interne_ Compte principal: Numéro du compte} as string,\n\t\t{Numero Interne_ Compte principal: Nom du compte} as string,\n\t\t{Jour calendaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, calculRem join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(Canal, \"<> \", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque)) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\nSelect1 foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\narticle aggregate(groupBy(Article,\n\t\t{Hiérarch.locale}),\n\tcount = count(Article)) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu, uniqueReferenceArticle join(code_produit == Article,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ngetHierarchieLocale derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\nFlattenFamilleExclu filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> Filter1\nFlattenFamilleExclu filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> Filter2\nFilter1, Filter2 union(byName: true)~> Union1\nUnion1 derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\nFlattenPOS, baseColumnChoice join(code_produit == {code produit},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\ninnerBaseCommerciale select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nbaseCommerciale select(mapColumn(\n\t\tyear,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> DerivedColumn1\nDerivedColumn1 filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif(Canal=={nom du canal}, 1, 0)) ~> DerivedColumn2\nDerivedColumn2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca))) ~> Aggregate1\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite))) ~> Aggregate2\nAggregate1, Aggregate2 union(byName: true)~> Union2\nUnion2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_REMUNERATION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_SEUIL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "LEVIER_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "levier"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "Select1"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Union1"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "quantite"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "Union2"
						},
						{
							"name": "innerTemplateContrat"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "innerTemplateRemuneration"
						},
						{
							"name": "Select3"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string,\n\t\t{Seuil min} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levier\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\t{Canal distribution} as string,\n\t\t{nom du canal} as string,\n\t\tcanal_distribution_final as string,\n\t\tcanal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tqt_ecc_enrichi as string,\n\t\tca_ecc_enrichi as string,\n\t\tqte_ecoulement as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tsource_atc as string,\n\t\tSuccessor as string,\n\t\tCDis as string,\n\t\tPredecessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Deb val} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tca_ecoulement as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Nom du compte} as string,\n\t\t{Numero Interne_ Groupe cible/Typologie générale} as string,\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Numero Interne_ Compte principal: Numéro du compte} as string,\n\t\t{Numero Interne_ Compte principal: Nom du compte} as string,\n\t\t{Jour calendaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, levier join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(Canal, \"<> \", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque)) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\nSelect1 foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\narticle aggregate(groupBy(Article,\n\t\t{Hiérarch.locale}),\n\tcount = count(Article)) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu, uniqueReferenceArticle join(code_produit == Article,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ngetHierarchieLocale derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\nFlattenFamilleExclu filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> Filter1\nFlattenFamilleExclu filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> Filter2\nFilter1, Filter2 union(byName: true)~> Union1\nUnion1 derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\nFlattenPOS, baseColumnChoice join(code_produit == {code produit},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\ninnerBaseCommerciale select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nbaseCommerciale select(mapColumn(\n\t\tyear,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> DerivedColumn1\nDerivedColumn1 filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif(Canal=={nom du canal}, 1, 0)) ~> DerivedColumn2\nDerivedColumn2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca))) ~> Aggregate1\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite))) ~> Aggregate2\nAggregate1, Aggregate2 union(byName: true)~> Union2\nUnion2, templateContrat join(Union2@{ID contrat cadre} == templateContrat@{ID contrat cadre}\n\t&& Union2@{ID contrat} == templateContrat@{ID contrat}\n\t&& Union2@{ID levier} == templateContrat@{ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateContrat\ninnerTemplateContrat select(mapColumn(\n\t\t{ID contrat cadre} = Union2@{ID contrat cadre},\n\t\t{ID contrat} = Union2@{ID contrat},\n\t\t{ID levier} = Union2@{ID levier},\n\t\tyear,\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité},\n\t\t{ID Seuil},\n\t\t{Objectif (avec règles de validation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 filter({Réalisé}>=toDouble({Objectif (avec règles de validation)})) ~> Filter3\nFilter3 aggregate(groupBy(year,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Max ID Seuil} = max(toInteger({ID Seuil}))) ~> Aggregate3\nAggregate3, calculRem join(Aggregate3@{ID levier} == calculRem@{ID levier}\n\t&& toInteger({Max ID Seuil}) == toInteger({ID seuil}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateRemuneration\ninnerTemplateRemuneration select(mapColumn(\n\t\tyear,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier} = Aggregate3@{ID levier},\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_SEUIL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CLEANING_POST_UNION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tecouunion",
								"type": "DatasetReference"
							},
							"name": "unionEccoulement"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "articlehierarchi"
						},
						{
							"dataset": {
								"referenceName": "unionSapEhsIn",
								"type": "DatasetReference"
							},
							"name": "unionsapehs"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "pricelisteReplicated"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "allECoulementPrepared",
								"type": "DatasetReference"
							},
							"name": "outputPreparationEcoulement"
						},
						{
							"dataset": {
								"referenceName": "tunionSap",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "articlDropdupl"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "setPostalCode"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "pricelisteTojoin"
						},
						{
							"name": "Join3"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Join4"
						},
						{
							"name": "Filter3"
						}
					],
					"script": "source(output(\n\t\t{Code postal} as string,\n\t\tmarque_file as string,\n\t\tca_ecoulement as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionEccoulement\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> articlehierarchi\nsource(output(\n\t\tClient as integer,\n\t\t{Code postal} as string,\n\t\t{Org# commerciale} as short,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionsapehs\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> pricelisteReplicated\nunionEccoulement derive(marque_id = iif (  instr(lower({marque_file}) , \"saunier\") >0  , 1604 , 1621 )) ~> DerivedColumn1\narticlehierarchi select(mapColumn(\n\t\tmarque = OrgCm,\n\t\treference = Article,\n\t\tCDis\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(marque,\n\t\treference),\n\tCDis = max(CDis)) ~> articlDropdupl\nDerivedColumn1, articlDropdupl join(unionEccoulement@reference == articlDropdupl@reference\n\t&& toString(marque_id) == marque,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nSelect3, unionsapehs join(POSSAMidString == toString(Client)\n\t&& toInteger(marque_id) == {Org# commerciale},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tEcc_Code_postal = Select3@{Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{Sap_Code postal} = unionsapehs@{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = unionEccoulement@reference,\n\t\t{Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect2 derive({code postal} = iif( !isNull({Sap_Code postal}) , {Sap_Code postal} , Ecc_Code_postal),\n\t\tmarque_name = iif(marque==\"1604\",  \"SaunierDuval\", \"Vaillant\"),\n\t\tdistributeur = upper(distributeur)) ~> setPostalCode\nSelect5 derive(month = toInteger(mois1)+ toInteger(order),\n\t\tDistributeur = lower(Distributeur)) ~> DerivedColumn2\nAggregate1 derive(distributeur = iif(  instr(Distributeur ,'sonac' ) >0 , upper('mabille') , upper(Distributeur)  )) ~> pricelisteTojoin\nsetPostalCode, pricelisteTojoin join(upper(setPostalCode@distributeur) == upper(pricelisteTojoin@distributeur)\n\t&& toDouble(Select2@month) == toDouble(Aggregate1@month)\n\t&& toDouble(year) == toDouble(annee1)\n\t&& toDouble(reference) == toDouble(Article),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(ca_ecoulement = iif( !isNull(prix_unitaire) , prix_unitaire, \"0\" )) ~> DerivedColumn3\nDerivedColumn3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = Select2@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = setPostalCode@distributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\npricelisteReplicated select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\torder = dd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nDerivedColumn2 aggregate(groupBy(Distributeur,\n\t\tArticle,\n\t\tmonth,\n\t\tannee1),\n\tprix_unitaire = max(prix_unitaire)) ~> Aggregate1\nsetPostalCode filter(upper(distributeur)==upper('MAILLARD')) ~> Filter1\npricelisteTojoin filter(upper(pricelisteTojoin@distributeur)==\"MAILLARD\") ~> Filter2\nFilter1, Filter2 join(upper(setPostalCode@distributeur) == upper(pricelisteTojoin@distributeur)\n\t&& toInteger(reference) == toInteger(Article)\n\t&& year == annee1\n\t&& toDouble(Select2@month) == toDouble(Aggregate1@month),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join4\nFilter2 filter(toInteger(Article)==toInteger(\"0020082651\")) ~> Filter3\nSelect4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFournisseur as string,\n\t\t{Coopérative} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\tMois as string,\n\t\tpath as string,\n\t\tqte_ecoulement as string,\n\t\tREFFOURNISSEUR as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\t{Nom Coopérative} as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string\n\t),\n\tpartitionFileNames:['eccoulementUniforme.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputPreparationEcoulement\nunionsapehs sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string\n\t),\n\tpartitionFileNames:['tunionSap'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tecouunion')]",
				"[concat(variables('factoryId'), '/datasets/unionSapEhsIn')]",
				"[concat(variables('factoryId'), '/datasets/tunionSap')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CLIENT_SAP_EHS_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "clientEHS"
						},
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "sap"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "extrationSapOut",
								"type": "DatasetReference"
							},
							"name": "sapUnionEHS"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Union1"
						},
						{
							"name": "renamecols"
						}
					],
					"script": "source(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> clientEHS\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sap\nsap select(mapColumn(\n\t\tClient,\n\t\t{Code postal},\n\t\t{Org# commerciale} = {Org. commerciale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, renamecols union(byName: true)~> Union1\nclientEHS select(mapColumn(\n\t\tClient,\n\t\t{Org# commerciale} = BrandID,\n\t\t{Code postal} = {Code Postal},\n\t\tNom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renamecols\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['unionClientSapEHS'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sapUnionEHS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT_DISTRIBUTION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "seuil"
						},
						{
							"dataset": {
								"referenceName": "CALCUL_REMUNERATION",
								"type": "DatasetReference"
							},
							"name": "remuneration"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CONTRAT_DISTRIBUTION",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "innerJoin"
						},
						{
							"name": "remunerationColumn"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tyear as string,\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{Max ID Seuil} as string,\n\t\t{Contrepartie seuil} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> seuil\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\tyear as string,\n\t\tca as string,\n\t\t{Réalisé} as string,\n\t\t{Somme quantité} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> remuneration\nseuil, remuneration join(seuil@{ID contrat cadre} == remuneration@{ID contrat cadre}\n\t&& seuil@{ID contrat} == remuneration@{ID contrat}\n\t&& seuil@{ID levier} == remuneration@{ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerJoin\nSelect1 derive({Rémunération} = toDouble({Réalisé})*toDouble({Contrepartie seuil})) ~> remunerationColumn\ninnerJoin select(mapColumn(\n\t\tyear = seuil@year,\n\t\t{ID contrat cadre} = seuil@{ID contrat cadre},\n\t\t{ID contrat} = seuil@{ID contrat},\n\t\t{ID levier} = seuil@{ID levier},\n\t\t{ID Seuil} = {Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nremunerationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CONTRAT_DISTRIBUTION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "VERIFICATION/bkp"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecoulementReplicated",
								"type": "DatasetReference"
							},
							"name": "ecoulementReplicated"
						},
						{
							"dataset": {
								"referenceName": "avoirReplicated",
								"type": "DatasetReference"
							},
							"name": "avoirReplicated"
						},
						{
							"dataset": {
								"referenceName": "facturationDSCTEREVA",
								"type": "DatasetReference"
							},
							"name": "facturationDSCTEREVA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tempAvoirReplicatedOut",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ecoulemetTocreateIndex",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "computation"
						},
						{
							"name": "createIndex"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn3"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tcanal as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as integer,\n\t\tca_ecoulement as float,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tsous_famille as string,\n\t\tarticle as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\torder as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementReplicated\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\torder as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirReplicated\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationDSCTEREVA\nDerivedColumn1 aggregate(groupBy(Article,\n\t\tyearmonth,\n\t\t{Canal distribution},\n\t\t{Org. commerciale},\n\t\t{Récept. de march.}),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_)) ~> Aggregate1\nfacturationDSCTEREVA derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toFloat(ca_cd_),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tca_livr_ = toFloat(ca_livr_),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_factur_ = toFloat(ca_factur_)) ~> DerivedColumn1\necoulementReplicated derive(qte = iif( qte_ecoulement<=0 , -1, 1)) ~> computation\ncomputation derive(ca_ecoulement = qte*ca_ecoulement,\n\t\tindexcol1 = agence_code+\"-\"+reference,\n\t\trcount = 1) ~> createIndex\navoirReplicated select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\torder,\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(Qte_Validee_VGF = iif(toInteger(Qte_Validee_VGF)<0, -1, 1),\n\t\tindexcols1 = Agence+\"-\"+NoArtVGF,\n\t\trcount = 1) ~> DerivedColumn3\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['avoirTocreateindex'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\ncreateIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['ecoulementToCreateindex'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tempAvoirReplicatedOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InEcoulementWithIndexDSC",
								"type": "DatasetReference"
							},
							"name": "ecoulementwithIndex"
						},
						{
							"dataset": {
								"referenceName": "In_avoirwithIndex",
								"type": "DatasetReference"
							},
							"name": "avoirwithIndex"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "referentielATC"
						},
						{
							"dataset": {
								"referenceName": "inFacturationDSC",
								"type": "DatasetReference"
							},
							"name": "facturation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outdsctereva2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "avoirUnMappedutput",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "fullLeft"
						},
						{
							"name": "caFinal"
						},
						{
							"name": "RenameLeft"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "columnChoiceEcoulement"
						},
						{
							"name": "renameAvoir"
						},
						{
							"name": "inner"
						},
						{
							"name": "canal"
						},
						{
							"name": "idCanal"
						},
						{
							"name": "idCanalFinal"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueOffre"
						},
						{
							"name": "fullLeftOffre"
						},
						{
							"name": "EndInner",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "Union1"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "keepColumns"
						},
						{
							"name": "atcKeepingColumn"
						},
						{
							"name": "atcNotNull"
						},
						{
							"name": "uniqueATC"
						},
						{
							"name": "fullLeftATC"
						},
						{
							"name": "renameColumn"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "aggFacturation"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "innerFacturation"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "leftFacturation"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "facturationOnly"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "EndunJoinedFacturation"
						},
						{
							"name": "endInerEcouFact"
						},
						{
							"name": "Union2"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Select5"
						},
						{
							"name": "DerivedColumn5"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Aggregate4"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Aggregate5"
						},
						{
							"name": "Filter4"
						},
						{
							"name": "DerivedColumn6"
						},
						{
							"name": "Aggregate6"
						},
						{
							"name": "facturationColFilter"
						},
						{
							"name": "Aggregate7"
						},
						{
							"name": "DerivedColumn7"
						},
						{
							"name": "Join1"
						},
						{
							"name": "ecoulementOnlt"
						},
						{
							"name": "Select7"
						},
						{
							"name": "DerivedColumn8"
						},
						{
							"name": "endunJoinedEcoulement"
						},
						{
							"name": "Union4"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Filter6"
						},
						{
							"name": "Select8"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tNbLogement as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Créateur offre} as string,\n\t\tSource as string,\n\t\tUserLowerCase as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{Cl� R�f�rentiel} as string,\n\t\t{Recherche Cl� EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal d�but} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{D�partement} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inner\ninner derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\"))) ~> canal\ncanal derive(id_canal_final = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(canal_final = iif(id_canal_final==43, \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement_retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\nSelect2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> Union1\nUnion1 derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\nSelect3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement = qte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id = marque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\natcKeepingColumn filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nkeepColumns, uniqueATC join({Code postal} == code_postal_atc\n\t&& canal_final == {Canal final}\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftATC\nSelect4 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumn\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_)) ~> typeCaste\ntypeCaste aggregate(groupBy(reference,\n\t\tHubSAPid,\n\t\tyearmonth),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_),\n\t\t{Canal distribution} = first({Canal distribution}),\n\t\t{Org commerciale} = first({Org commerciale}),\n\t\t{recept de march} = first({recept de march})) ~> Aggregate2\nDerivedColumn2 select(mapColumn(\n\t\tarticle = reference,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e = qt_cd_e,\n\t\tSum_ca_cd_ = ca_cd_,\n\t\tSum_qt_livr_e = qt_livr_e,\n\t\tSum_ca_livr_ = ca_livr_,\n\t\tSum_qt_factur_e = qt_factur_e,\n\t\tSum_ca_factur_ = ca_factur_,\n\t\ttempOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> aggFacturation\nkeepColumns aggregate(groupBy(yearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tdistributeur),\n\tSum_ca_ecoulement = sum(toDouble(ca_ecoulement)),\n\t\tSum_qte_ecoulement = sum(toDouble(qte_ecoulement))) ~> Aggregate3\nAggregate3, aggFacturation join(reference == article\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerFacturation\nfullLeftOffre select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nfullLeftATC select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nDerivedColumn3, aggFacturation join(reference == article\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> leftFacturation\ninnerFacturation derive(qt_plateforme_final = toDouble(Sum_qt_factur_e) - toDouble(Sum_qte_ecoulement),\n\t\tca_plateforme_final = Sum_ca_factur_ -  Sum_ca_ecoulement,\n\t\tdata_origin = \"facturation decrementé\") ~> DerivedColumn1\nAggregate2 derive(tempOrigin = \"facturation\",\n\t\t{Canal distribution} = 42) ~> DerivedColumn2\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> DerivedColumn3\nleftFacturation filter(isNull(DerivedColumn3@tempOrigin)) ~> facturationOnly\nfacturationColFilter derive(qt_plateforme_final = toDouble(Sum_qt_factur_e),\n\t\tca_plateforme_final = Sum_ca_factur_,\n\t\tdata_origin = \"facturation\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\")) ~> DerivedColumn4\nDerivedColumn4 select(mapColumn(\n\t\treference = article,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code = {Org commerciale},\n\t\tmarque_name,\n\t\tPOSSAMidString = {recept de march},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndunJoinedFacturation\nDerivedColumn1 select(mapColumn(\n\t\tyearmonth = Aggregate3@yearmonth,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tid_canal_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\ttempOrigin,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endInerEcouFact\nEndunJoinedFacturation, endInerEcouFact union(byName: true)~> Union2\nDerivedColumn6 select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code,\n\t\tmarque_name,\n\t\tPOSSAMidString,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tmarque_id = marque_code,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\nrenameColumn, endDecrementation union(byName: true)~> Union3\nDerivedColumn5 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\t{Canal final},\n\t\t{ATC Performance},\n\t\t{code postal} = DerivedColumn5@{code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nUnion3 derive(marque_id = coalesce(marque_id , marque_code),\n\t\tid_canal_final = coalesce(id_canal_final ),\n\t\t{Canal final} = coalesce({Canal final} , canal_final),\n\t\t{code postal} = coalesce(code_postal_atc , {Code postal})) ~> DerivedColumn5\naggFacturation filter(toInteger({recept de march})==16012598 && toInteger(article)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter2\nFilter2 aggregate(sq = sum(Sum_qt_factur_e)) ~> Aggregate4\nendDecrementation filter(toInteger(HubSAPid)==16012598 && toInteger(reference)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter3\nFilter3 aggregate(sqte = sum(toDouble(qt_plateforme_final))) ~> Aggregate5\nEndunJoinedFacturation filter(toInteger(HubSAPid)==16012598 && toInteger(reference)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter4\nUnion4 derive(id_canal_final = toInteger(id_canal_final)) ~> DerivedColumn6\nFilter4 aggregate(column1 = sum( qt_plateforme_final )) ~> Aggregate6\nfacturationOnly select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\ttempOrigin = DerivedColumn3@tempOrigin,\n\t\tarticle,\n\t\tHubSAPid = aggFacturation@HubSAPid,\n\t\tyearmonth = aggFacturation@yearmonth,\n\t\tid_canal_final,\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e,\n\t\tSum_ca_cd_,\n\t\tSum_qt_livr_e,\n\t\tSum_ca_livr_,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> facturationColFilter\nendInerEcouFact aggregate(cons = sum(qt_plateforme_final)) ~> Aggregate7\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> DerivedColumn7\nDerivedColumn7, aggFacturation join(reference == article\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(isNull(aggFacturation@tempOrigin)) ~> ecoulementOnlt\necoulementOnlt select(mapColumn(\n\t\tyearmonth = Aggregate3@yearmonth,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tdistributeur,\n\t\tca_plateforme_final = Sum_ca_ecoulement,\n\t\tqt_plateforme_final = Sum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nSelect7 derive(data_origin = \"decrementation ecoulement sans matching\",\n\t\tca_plateforme_final = -1*toDouble(ca_plateforme_final),\n\t\tqt_plateforme_final = -toDouble(qt_plateforme_final)) ~> DerivedColumn8\nDerivedColumn8 select(mapColumn(\n\t\tyearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\tca_plateforme_final,\n\t\tqt_plateforme_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endunJoinedEcoulement\nUnion2, endunJoinedEcoulement union(byName: true)~> Union4\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join2\nJoin2 filter(isNull(columnChoiceEcoulement@indexcols2)) ~> Filter6\nFilter6 select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select8\nSelect5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelDSC'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nSelect8 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoirUnMapped.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA2_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InEcoulementWithIndexDSC",
								"type": "DatasetReference"
							},
							"name": "ecoulementwithIndex"
						},
						{
							"dataset": {
								"referenceName": "In_avoirwithIndex",
								"type": "DatasetReference"
							},
							"name": "avoirwithIndex"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "referentielATC"
						},
						{
							"dataset": {
								"referenceName": "inFacturationDSC",
								"type": "DatasetReference"
							},
							"name": "facturation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outdsctereva2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "FacturationDecrementer",
								"type": "DatasetReference"
							},
							"name": "FacturationDecrementer"
						}
					],
					"transformations": [
						{
							"name": "fullLeft"
						},
						{
							"name": "caFinal"
						},
						{
							"name": "RenameLeft"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "columnChoiceEcoulement"
						},
						{
							"name": "renameAvoir"
						},
						{
							"name": "inner"
						},
						{
							"name": "canal"
						},
						{
							"name": "idCanal"
						},
						{
							"name": "idCanalFinal"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueOffre"
						},
						{
							"name": "fullLeftOffre"
						},
						{
							"name": "EndInner",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "Union1"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "keepColumns"
						},
						{
							"name": "atcKeepingColumn"
						},
						{
							"name": "atcNotNull"
						},
						{
							"name": "uniqueATC"
						},
						{
							"name": "fullLeftATC"
						},
						{
							"name": "renameColumn"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "aggFacturation"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "innerFacturation"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "leftFacturation"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "endFacturationDecrementer1"
						},
						{
							"name": "endFacturationDecrementer2"
						},
						{
							"name": "Union2"
						},
						{
							"name": "endFacturationDecrementer3"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Select5"
						},
						{
							"name": "DerivedColumn5"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tNbLogement as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Créateur offre} as string,\n\t\tSource as string,\n\t\tUserLowerCase as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{Cl� R�f�rentiel} as string,\n\t\t{Recherche Cl� EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal d�but} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{D�partement} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inner\ninner derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\"))) ~> canal\ncanal derive(id_canal = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(id_canal_final = id_canal,\n\t\tcanal_final = iif(canal==\"43\", \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement_retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\nSelect2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tid_canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final = id_canal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> Union1\nUnion1 derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\nSelect3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement = qte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id = marque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tid_canal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\natcKeepingColumn filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nkeepColumns, uniqueATC join({Code postal} == code_postal_atc\n\t&& canal_final == {Canal final}\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftATC\nSelect4 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tid_canal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumn\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_)) ~> typeCaste\ntypeCaste aggregate(groupBy(reference,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\t{Canal distribution},\n\t\t{Org commerciale},\n\t\t{recept de march}),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_)) ~> Aggregate2\nDerivedColumn2 select(mapColumn(\n\t\tarticle = reference,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e = qt_cd_e,\n\t\tSum_ca_cd_ = ca_cd_,\n\t\tSum_qt_livr_e = qt_livr_e,\n\t\tSum_ca_livr_ = ca_livr_,\n\t\tSum_qt_factur_e = qt_factur_e,\n\t\tSum_ca_factur_ = ca_factur_,\n\t\ttempOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> aggFacturation\nkeepColumns aggregate(groupBy(yearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_name,\n\t\tmarque_id,\n\t\tid_canal_final,\n\t\tdistributeur),\n\tSum_ca_ecoulement = sum(toDouble(ca_ecoulement)),\n\t\tSum_qte_ecoulement = sum(toDouble(qte_ecoulement))) ~> Aggregate3\nAggregate3, aggFacturation join(reference == article\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerFacturation\nfullLeftOffre select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tid_canal = id_canal_final,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tid_canal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nfullLeftATC select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tid_canal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nDerivedColumn3, aggFacturation join(reference == article\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> leftFacturation\ninnerFacturation derive(qt_plateforme_final = Sum_qt_factur_e - Sum_qte_ecoulement,\n\t\tca_plateforme_final = Sum_ca_factur_ -  Sum_ca_ecoulement,\n\t\tdata_origin = \"facturation decrementé\") ~> DerivedColumn1\nAggregate2 derive(tempOrigin = \"facturation\") ~> DerivedColumn2\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> DerivedColumn3\nleftFacturation filter(isNull(DerivedColumn3@tempOrigin)) ~> Filter1\nFilter1 derive(qt_plateforme_final = Sum_qt_factur_e,\n\t\tca_plateforme_final = Sum_ca_factur_,\n\t\tdata_origin = \"facturation\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\"),\n\t\tid_canal_final = toInteger(aggFacturation@id_canal_final)) ~> DerivedColumn4\nDerivedColumn4 select(mapColumn(\n\t\treference = article,\n\t\tdistributeur,\n\t\tHubSAPid = aggFacturation@HubSAPid,\n\t\tyearmonth = aggFacturation@yearmonth,\n\t\tid_canal_final,\n\t\tmarque_code = {Org commerciale},\n\t\tmarque_name,\n\t\tPOSSAMidString = {recept de march},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endFacturationDecrementer1\nDerivedColumn1 select(mapColumn(\n\t\tyearmonth = Aggregate3@yearmonth,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tid_canal_final = Aggregate3@id_canal_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\ttempOrigin,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endFacturationDecrementer2\nendFacturationDecrementer1, endFacturationDecrementer2 union(byName: true)~> Union2\nUnion2 select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code,\n\t\tmarque_name,\n\t\tPOSSAMidString,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tmarque_id,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endFacturationDecrementer3\nrenameColumn, endFacturationDecrementer3 union(byName: true)~> Union3\nDerivedColumn5 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\t{Canal final},\n\t\t{ATC Performance},\n\t\t{code postal} = DerivedColumn5@{code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nUnion3 derive(marque_id = coalesce(marque_id , marque_code),\n\t\tid_canal_final = coalesce(id_canal_final , id_canal),\n\t\t{Canal final} = coalesce({Canal final} , canal_final),\n\t\t{code postal} = coalesce(code_postal_atc , {Code postal})) ~> DerivedColumn5\nSelect5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelDSC.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nendFacturationDecrementer3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['FacturationDecrementer.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> FacturationDecrementer"
				}
			},
			"dependsOn": []
		}
	]
}