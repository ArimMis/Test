{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-VAILLANT"
		},
		"AzureFunctionPremium_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunctionPremium'"
		},
		"AKVVAILLANT_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://KVNVAILLANT.vault.azure.net/"
		},
		"AzureFunctionPremium_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://fa-datatransfoprem.azurewebsites.net"
		},
		"PREPROD_VAILLANT_ARCHITECTURE_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sk-dspreprodvaillant"
		},
		"VAILLANT_ARCHITECTURE_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sk-dsvaillantfr"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FICHIER_BW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Facturation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FacturationBW",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AC": {},
									"AP": {},
									"SortieFacturationBW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Commande",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CommandeBW",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AC": {},
									"AP": {},
									"SortieCommandeBW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Expedition",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ExpeditionBW",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AC": {},
									"AP": {},
									"SortieExpeditionBW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FacturationBW')]",
				"[concat(variables('factoryId'), '/dataflows/CommandeBW')]",
				"[concat(variables('factoryId'), '/dataflows/ExpeditionBW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLASH_VENTE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Call durable function for flash vente\n",
				"activities": [
					{
						"name": "FlashVenteDurable",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "orchestrators/FVOrchestrator",
							"method": "POST",
							"headers": {},
							"body": {
								"inputContainer": "data-input",
								"facturationAPInput": "FacturationBW/FacturationBW_AP.csv",
								"facturationACInput": "FacturationBW/FacturationBW_AC.xlsx",
								"resteALivrerInput": "Flash_Vente/Input_daily_Reste_à_livrer.xls",
								"n3excludeInput": "Flash_Vente/Input_Filter_RAL&BW_N3_to_exclude.xlsx",
								"ssgrExcludeInput": "Flash_Vente/Input_Filter_RAL_SGCR_to_exclude.xlsx",
								"productHierachyInput": "ReferentielArticle/Articles_avec_hiérarchie_Articles_groupe_et_locale.xlsx",
								"productHierarchyLabeInput": "ReferentielArticle/Libellés_hiérarchies_articles_groupe_et_locale.xlsx",
								"motifCommandExclude": "Flash_Vente/Input_Filter_BW_Motif_commande_to_exclude.xlsx",
								"n1ToKeepInput": "Flash_Vente/Input_Filter_BW_N1_to_keep.xlsx",
								"objectifsInput": "Flash_Vente/Input_annual_objectives_v2.xlsx",
								"calendrier": "Flash_Vente/Input_Annual_Calendrier.xls",
								"commandeAcInput": "FacturationBW/CommandeBW_AC.xlsx",
								"previsions": "Flash_Vente/Input_daily_FlashForecast4Azure.xlsx",
								"productHierarchy": "ReferentielArticle/Articles_avec_hiérarchie_Articles_groupe_et_locale.xlsx",
								"budget_ex": "Flash_Vente/Input_annual_FlashBudget4Azure_v2.xlsx",
								"outputContainer": "data-mart",
								"bddFlashventeOutput": "Flash_Vente/Output_BDD Flash vente.csv",
								"graphChaudiereOutput": "Flash_Vente/Output_graph_Chaudiere_SD.xlsx",
								"graphPACSDOutput": "Flash_Vente/Output_graph_PAC_SD.xlsx",
								"graphChaudiereVAillantOuput": "Flash_Vente/Output_graph_Chaudiere_Vaillant.xlsx",
								"graphPacVaillantOutput": "Flash_Vente/Output_graph_PAC_Vaillant.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "waitUntilFinish",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "FlashVenteDurable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(or(equals(activity('CheckStatus').output.runtimeStatus, 'Pending'), equals(activity('CheckStatus').output.runtimeStatus, 'Running')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 30
									}
								},
								{
									"name": "CheckStatus",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('FlashVenteDurable').output.statusQueryGetUri",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-27T14:17:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunctionPremium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/INPUT_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "prepare azure function load",
				"activities": [
					{
						"name": "importDataMabille",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "importDataVF_confort",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_MABILE",
							"method": "POST",
							"headers": {},
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/Mabile",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/MABILE_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataPartedis",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "importDataVF_confort",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_PARTEDIS",
							"method": "POST",
							"headers": {},
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/Partedis",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/PARTEDIS_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataVF_confort",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_VFCONFORT",
							"method": "POST",
							"headers": {},
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/VF Confort",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/CONFORT_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataOrcab",
						"description": "import data from orcab",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "importDataEHS",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_ORCAB",
							"method": "POST",
							"headers": {},
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/ORCAB",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/ORCAB_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataTereva",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "importDataOrcab",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "importDataPartedis",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "importDataMabille",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_TEREVA",
							"method": "POST",
							"headers": {},
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/Téréva",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/TEREVA_ECOULEMENT.csv"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataEHS",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_EHS",
							"method": "POST",
							"headers": {},
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/Engie_Home_Services",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/EHS_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-27T14:17:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunctionPremium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MAIN_PREPARATION_ECOULEMENT",
						"description": "PL Input_Load\nPL_MABILLE\nPL_ORCAB\nPL_VF_CONFORT\nPL_TEREVA\nPL_PARTEDIS\nPL_TRAITEMENT_DSC\nDF_UNION_ECOULEMENT\nPL_POST_UNION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MAIN_REFERENTIEL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PREPARATION_FACTURATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_PREPARATION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MAIN_BASE_COMMERCIAL",
						"description": "PL main for : \nPREPARATION_ECC_AVOIR\nDSCTEREVA2\nModel_PARTEDIS2\nVanMarkes\nModelVenteDirecte\nUNION_BASE_COMMERCIAL\nPOST_UNION_FINISH\nATC_PERFORMANCE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MAIN_PREPARATION_ECOULEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAIN_BASE_COMMERCIALE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MAIN_REFERENTIEL",
						"description": "PL_GET_ARTICLE_DESIGNATION\nPL_OFFRE\nPL_REFERENTIEL_ATC\nPL_REFERENTIEL_PRIX",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_REFERENTIEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MAIN_LOGISTIQUE",
						"description": "NomenclatureProduit\nNomenclatureClient\nTDataSD",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MAIN_REFERENTIEL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_LOGISTIQUE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CONTRAT DISTRIBUTION",
						"description": "CALCUL SEUIL\nCALCUL REMUNERATION\nCONTRAT DISTRIBUTION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CONTRAT_DISTRIBUTION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_SUIVIE_OFFRE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SUIVIE_OFFRE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SORTIE MARKETING",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SORTIE MARKETING",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MAIN_RH",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAIN_RH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PREPARATION_FACTURATION",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PREPARATION_FACTURATION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:34:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MAIN_PREPARATION')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MAIN_BASE_COMMERCIALE')]",
				"[concat(variables('factoryId'), '/pipelines/MAIN_REFERENTIEL')]",
				"[concat(variables('factoryId'), '/pipelines/MAIN_LOGISTIQUE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CONTRAT_DISTRIBUTION')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SUIVIE_OFFRE')]",
				"[concat(variables('factoryId'), '/pipelines/SORTIE MARKETING')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MAIN_RH')]",
				"[concat(variables('factoryId'), '/pipelines/PREPARATION_FACTURATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN_LOGISTIQUE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NomenclatureProduit",
						"description": "Input : \nHIERARCHI_ARTICLE\nOutput : \nNOMENCLATURE_PRODUIT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NOMENCLATURE_PRODUIT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"hierarchieArticle": {},
									"nomenclatureProduit": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "NomenclatureClient",
						"description": "Input : \nEXtractionSAP\nReferentielAtc4\nOutput : \nSortieNomenclatureClient",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NOMENCLATURE_CLIENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EXtractionSAP": {},
									"ReferentielAtc4": {},
									"SortieNomenclatureClient": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FICHIER_BW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FICHIER_BW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/NOMENCLATURE_PRODUIT')]",
				"[concat(variables('factoryId'), '/dataflows/NOMENCLATURE_CLIENT')]",
				"[concat(variables('factoryId'), '/pipelines/FICHIER_BW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_POST_UNION",
						"description": "prix_moyen\nunionSAP_EHS\nCleaninPostUnion",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UNION_ECOULEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_POST_UNION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MABILE",
						"description": "Input : \n-MabilleSaunierDuvale\n-OrganisationMabilleSonac\n-ventesDirectes\nOutput : \n-MabileQteNull\n-organisationNotFound\n-MABILE_ECOULEMENT_OUTPUT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MABILE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_ORCAB",
						"description": "Input : \n-ORCAB_ECOULEMENT_INPUT\n-ORCAB_ORGANISATION\n-ventesDirectes\nOutput : \n-ORCAB_QTE_NULL\n-organisationNotFound\n-ORCAB_ECOULEMENT_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORCAB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TRAITEMENT_DSC",
						"description": "Input : \nDSCINPUT\norganisation\nventesDirectes\nOutput : \noutputNullQuantity\norgaNotFound\npreparedDSC\nDSCPieceDetache",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DSC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_VF_CONFORT",
						"description": "Input : \n-ecoulement\n-CONFORT_ORGANISATION\n-ventesDirectes\nOutput : \n-outputQuantityNull\n-VFCONFORT_ECOULEMENT_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_VF_CONFORT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TEREVA",
						"description": "Input : \necoulement\nTEREVA_ORGANISATION\nventesDirectes\nOutput : \nTEREVA_EC_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TEREVA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UNION_ECOULEMENT",
						"description": "Inupt : \nvfconfortPrepared\nmabillePrepared\norcabPrepared\ntereva\nDSC\nmaillard\nPartedis\nEHS\nOutput : \nallUnionedDistributor",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PL_PARTEDIS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_EHS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_MAILLARD",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_TEREVA",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_TRAITEMENT_DSC",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_ORCAB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_MABILE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_VF_CONFORT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNION_ECOULEMENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vfconfortPrepared": {},
									"mabillePrepared": {},
									"orcabPrepared": {},
									"tereva": {},
									"DSC": {},
									"maillard": {},
									"Partedis": {},
									"EHS": {},
									"allDistruUnioned": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PL_PARTEDIS",
						"description": "Input : \necoulement\nPARTEDIS_ORGANISATION\nventesDirectes\npartedisPrixStd\nprixParPeriode\nOutput : \norganisationNotFound\nquantityNullOutput\nPARTEDIS_ECOUL_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PARTEDIS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MAILLARD",
						"description": "Input : \necoulement\norganisation\nventesDirectes\nOutput : \norgaNotFound\nMAILLARD_ECOUL_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAILLARD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_EHS",
						"description": "Input : \nEHS\norganisation\nventesDirectes\nOutput : \norgaNotFound\nSoriteEHS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EHS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "InputLoad",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "INPUT_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-21T11:37:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_POST_UNION')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MABILE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORCAB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DSC')]",
				"[concat(variables('factoryId'), '/pipelines/PL_VF_CONFORT')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TEREVA')]",
				"[concat(variables('factoryId'), '/dataflows/UNION_ECOULEMENT')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PARTEDIS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MAILLARD')]",
				"[concat(variables('factoryId'), '/pipelines/PL_EHS')]",
				"[concat(variables('factoryId'), '/pipelines/INPUT_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN_REFERENTIEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_GET_ARTICLE_DESIGNATION",
						"description": "Input : \narticleHierarchie\ndetailArticleHierarchie\nOutput : \nsortieArticleDesignation\n\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GET_ARTICLE_DESIGNATION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_OFFRE",
						"description": "\nPREPARATION\nFINITION",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_OFFRE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_REFERENTIEL_ATC",
						"description": "Input : \noffreInDiffus\nchantier\nOutput : \nstg_offre\n\n\nlower_data\ncomputing\nfuzzyjoinATC\nAF : fuzzy join: atc 2020 2021 and  atc affectation",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_REFERENTIEL_ATC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_GET_ARTICLE_DESIGNATION')]",
				"[concat(variables('factoryId'), '/pipelines/PL_OFFRE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_REFERENTIEL_ATC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_CLIENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NomenclatureClient",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NOMENCLATURE_CLIENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EXtractionSAP": {},
									"ReferentielAtc4": {},
									"SortieNomenclatureClient": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/NOMENCLATURE_CLIENT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_PRODUIT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NomenclatureProduit",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NOMENCLATURE_PRODUIT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"hierarchieArticle": {},
									"nomenclatureProduit": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/NOMENCLATURE_PRODUIT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CALCUL_REM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CALCUL REMUNERATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CALCUL_REMUNERATION_WITH_DATE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contratCadre": {},
									"contrat": {},
									"article": {},
									"baseCommerciale": {},
									"templateContrat": {},
									"calculRem": {},
									"CALCULREMUNERATION": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CALCUL_REMUNERATION_WITH_DATE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CALCUL_SEUIL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CALCUL SEUIL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CALCUL_SEUIL_WITH_DATE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contratCadre": {},
									"contrat": {},
									"levier": {},
									"article": {},
									"baseCommerciale": {},
									"templateContrat": {},
									"calculRem": {},
									"CALCULSEUIL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CALCUL_SEUIL_WITH_DATE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CONTRAT_DISTRIBUTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CALCUL SEUIL",
						"description": "Input : \ncontratCadre\ncontrat\nlevier\narticle\nbaseCommerciale\ntemplateContrat\ncalculRem\nOutput : \nOUTPUT_CALCUL_SEUIL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CALCUL_SEUIL_WITH_DATE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contratCadre": {},
									"contrat": {},
									"levier": {},
									"article": {},
									"baseCommerciale": {},
									"templateContrat": {},
									"calculRem": {},
									"CALCULSEUIL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CALCUL REMUNERATION",
						"description": "Input : \ncontratCadre\ncontrat\narticle\nbaseCommerciale\ntemplateContrat\ncalculRem\nOutput : \nOUTPUT_CALCUL_REMUNERATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CALCUL_REMUNERATION_WITH_DATE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contratCadre": {},
									"contrat": {},
									"article": {},
									"baseCommerciale": {},
									"templateContrat": {},
									"calculRem": {},
									"CALCULREMUNERATION": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CONTRAT DISTRIBUTION",
						"description": "Input : \nseuil\nremuneration\nOutput : \nCONTRAT_DISTRIBUTION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CALCUL SEUIL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CALCUL REMUNERATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CONTRAT_DISTRIBUTION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"seuil": {},
									"remuneration": {},
									"CONTRATDISTRIBUTION": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CALCUL_SEUIL_WITH_DATE')]",
				"[concat(variables('factoryId'), '/dataflows/CALCUL_REMUNERATION_WITH_DATE')]",
				"[concat(variables('factoryId'), '/dataflows/CONTRAT_DISTRIBUTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DSC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DSC_PREPARATION",
						"description": "Input : \nDSCINPUT\norganisation\nventesDirectes\nOutput : \noutputNullQuantity\norgaNotFound\npreparedDSC\nDSCPieceDetache",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "importDataDSC",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DSC_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DSCINPUT": {},
									"organisation": {},
									"ventesDirectes": {},
									"DSCPieceDetache": {},
									"outputNullQuantity": {},
									"preparedDSC": {},
									"orgaNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "importDataDSC",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_DSC ",
							"method": "POST",
							"headers": {},
							"body": {
								"inputContainer": "data-input",
								"inputFolderPath": "Ecoulement/DSC",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/DSC_ECOULEMENT.csv"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DSC_PREPARATION')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunctionPremium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EHS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EHS",
						"description": "Input : \nEHS\norganisation\nventesDirectes\nOutput : \norgaNotFound\nSoriteEHS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EHS_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EHS": {},
									"OrganisationEHS": {},
									"VenteDirecte": {},
									"SoriteEHS": {},
									"EHSOrganisationNotfound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EHS_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GET_ARTICLE_DESIGNATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "article_designation",
						"description": "Input : \narticleHierarchie\ndetailArticleHierarchie\nOutput : \nsortieArticleDesignation\n",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "REFERENTIEL_ARTICLE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"articleHierarchie": {},
									"detailArticleHierarchie": {},
									"sortieArticleDesignation": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/REFERENTIEL_ARTICLE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LEVIER RH",
						"description": "Input : \ndataCommerciale\nPLATEFORMES\nlevierPerformance\nOutput : \nTEMP_LEVIER_RH\nTEMP_LEVIER_PERFORMANCE\n",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LEVIER_RH",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dataCommerciale": {},
									"PLATEFORMES": {},
									"levierPerformance": {},
									"filtre": {},
									"sink2": {},
									"REFERENTIELPYTHON": {},
									"sortieFiltre": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "AF CALCUL LEVIER RH",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "LEVIER RH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_CALCUL_LEVIER_RH",
							"method": "POST",
							"headers": {},
							"body": {
								"levierContainer": "data-warehouse",
								"levierRHpath": "Temp/TEMP_LEVIER_RH.csv",
								"levierPerformancePath": "Temp/TEMP_LEVIER_PERFORMANCE.csv",
								"atc_container": "data-warehouse",
								"atc_path": "referentiel_atc.csv",
								"output_container": "data-warehouse",
								"output_path": "Temp/LEVIER_RH.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RH"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/LEVIER_RH')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunctionPremium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MABILE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MABILE_PREPARATION",
						"description": "Input : \n-MabilleSaunierDuvale\n-OrganisationMabilleSonac\n-ventesDirectes\nOutput : \n-MabileQteNull\n-organisationNotFound\n-MABILE_ECOULEMENT_OUTPUT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MABILE_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MabilleSaunierDuvale": {},
									"OrganisationMabilleSonac": {},
									"ventesDirectes": {},
									"MABILLEECOULPREPARED": {},
									"MabileQteNull": {},
									"organisationNotFound": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MABILE_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAILLARD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MAILLARD_PREPARATION",
						"description": "Input : \necoulement\norganisation\nventesDirectes\nOutput : \norgaNotFound\nMAILLARD_ECOUL_PREPARED",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MAILLARD_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"organisation": {},
									"ventesDirectes": {},
									"MAILLARDECOULPREPARED": {},
									"organisationNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MAILLARD_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_BASE_COMMERCIALE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION_ECC_AVOIR",
						"description": "Input : \necoulement\navoir\nsalerDSC\nOrgaTerevas\nOutput : \nAZ_OecoulementDscTerevaWithIndex\noutEccDscTereva\nAZ_OecoulementPartedislikeWithIndex\noutEccNotDSCTEREVA\nAZ_AvoirWithIndexDSClike\nDTAvoirRetraiter\nAvoirForVanMarkes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TRAITEMENTECOULEMENT_AVOIR_PERIOD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"avoir": {},
									"salerDSC": {},
									"OrgaTerevas": {},
									"prixParPeriode": {},
									"outEccDscTereva": {},
									"DTAvoirRetraiter": {},
									"outEcoulementDScTereva": {},
									"outputEcoulementPartedis": {},
									"outputAvoirDSc": {},
									"AvoirForVanMarkes": {},
									"outputAvoirNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ModelVenteDirecte",
						"description": "Input : \nventedirecte\ncomptesap\nrefAtc\nassociationoffre\noffre\nOutput : \noVenteDirect",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ModelVenteDirecte",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ventedirecte": {},
									"comptesap": {},
									"refAtc": {},
									"associationoffre": {},
									"offre": {},
									"OVenteDirectePrepared": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DSCTEREVA2",
						"description": "Input : \necoulementwithIndex\navoirwithIndex\nstgOffre\nreferentielATC\nfacturation\nOutput : \navoirUnMappedutput\noutdsctereva2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_ECC_AVOIR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DSCTEREVA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulementwithIndex": {},
									"avoirwithIndex": {},
									"stgOffre": {},
									"referentielATC": {},
									"facturation": {},
									"OModelDSC": {},
									"avoirUnMapped": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "UNION_BASE_COMMERCIAL",
						"description": "Input : \nventeDirect\nDSCModel\nPartedisModel\nVanMarkes\nOutput : \nOunionBaseCommercialt",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DSCTEREVA2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ModelVenteDirecte",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "VanMarkes",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PartedisLikeventeDeroge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNION_BASE_COMMERCIAL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"venteDirecte": {},
									"DSCModel": {},
									"PartedisModel": {},
									"VanMarkes": {},
									"OUnionBasecommercial": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "POST_UNION_FINISH",
						"description": "Input : \nBCUnion\nArticleHierarchi\nPlateformes\nExtractionCompte\nClientEHS\nInputManuel\nStgOffreUnique\nOutput : \nDataCommercialNotFOund\nTEMP_baseCommercialOut\nOutputBaseAllDistru\nDataCommercialDT2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "UNION_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BaseCommercialePOSTUnion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BCUnion": {},
									"ArticleHierarchi": {},
									"Plateformes": {},
									"ExtractionCompte": {},
									"ClientEHS": {},
									"StgOffreUnique": {},
									"DataCommercialNotFOund": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "VanMarkes",
						"description": "Input : \norganisaation\nAvoir\nFacturation\nExtarctionSAP\nREFATC\nOffre\nOutput : \nrenameNoOffre\nOutputVanMarkes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_ECC_AVOIR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "VanMarkes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"organisaation": {},
									"Avoir": {},
									"Facturation": {},
									"ExtarctionSAP": {},
									"REFATC": {},
									"Offre": {},
									"articleInput": {},
									"inputEPS": {},
									"SinkVanMarkes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ATC_PERFORMANCE_ET_CLIENT_SAP",
						"description": "Input : \nBASE_AVANT_TRAITEMENT_ATC\nsecteurFictif\nOutput : \nbaseCommercialOut",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "POST_UNION_FINISH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ATC_PERFORMANCE_ET_CLIENT_SAP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"baseCommerciale": {},
									"secteurFictif": {},
									"ExtractionSAP": {},
									"refAtcinput": {},
									"inputManuel": {},
									"outFinale": {},
									"outDTP2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PartedisLikeventeDeroge",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_ECC_AVOIR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Ventes derogees",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FacturationForOther": {},
									"ArticulationSap": {},
									"stgOffre": {},
									"PrixPeriode": {},
									"ecoulmnt": {},
									"refAtc": {},
									"endSinkOutput": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {},
									"sinkFact43": {},
									"sinkAfterArticulatioOffreJoin": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T15:23:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TRAITEMENTECOULEMENT_AVOIR_PERIOD')]",
				"[concat(variables('factoryId'), '/dataflows/ModelVenteDirecte')]",
				"[concat(variables('factoryId'), '/dataflows/DSCTEREVA')]",
				"[concat(variables('factoryId'), '/dataflows/UNION_BASE_COMMERCIAL')]",
				"[concat(variables('factoryId'), '/dataflows/BaseCommercialePOSTUnion')]",
				"[concat(variables('factoryId'), '/dataflows/VanMarkes')]",
				"[concat(variables('factoryId'), '/dataflows/ATC_PERFORMANCE_ET_CLIENT_SAP')]",
				"[concat(variables('factoryId'), '/dataflows/Ventes derogees')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_RH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LEVIER RH",
						"description": "Input : \ndataCommerciale\nPLATEFORMES\nlevierPerformance\nOutput : \nTEMP_LEVIER_RH\nTEMP_LEVIER_PERFORMANCE\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LEVIER_RH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PREPARATION OBJECTIF RH",
						"description": "Input : \nobjectif\nlevierPerformance\nOutput : \nPREPARATION_OBJECTIF_RH\nTEMP_LEVIER_PERFORMANCE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LEVIER RH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_OBJECTIF_RH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OBJECTIF RH",
						"description": "Objectif RH ",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "PREPARATION OBJECTIF RH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_OBJECTIF_RH",
							"method": "POST",
							"headers": {},
							"body": {
								"objectif_container": "data-warehouse",
								"objectif_path": "Temp/OBJECTIF_RH_PREPARED.xlsx",
								"levier_container": "data-warehouse",
								"levier_path": "Temp/LEVIER_RH.xlsx",
								"output_container": "data-mart",
								"output_path": "RH/OBJECTIFS.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RH"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LEVIER_RH')]",
				"[concat(variables('factoryId'), '/pipelines/PL_OBJECTIF_RH')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunctionPremium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_OBJECTIF_RH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION OBJECTIF",
						"description": "Input : \nobjectif\nlevierPerformance\nOutput : \nPREPARATION_OBJECTIF_RH\nTEMP_LEVIER_PERFORMANCE",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PREPARATION_OBJECTIF_RH",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"objectif": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "AF PREPARATION OBJECTIF",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "PREPARATION OBJECTIF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_PREPARATION_OBJECTIF_RH",
							"method": "POST",
							"headers": {},
							"body": {
								"data1_container": "data-warehouse",
								"data1_path": "Temp/PREPARATION_OBJECTIF_RH.csv",
								"data2_container": "data-warehouse",
								"data2_path": "Temp/TEMP_LEVIER_PERFORMANCE.csv",
								"filtre_container": "data-warehouse",
								"filtre_path": "Temp/FILTRE_OBJECTIF_SORTIE.csv",
								"atc_container": "data-warehouse",
								"atc_path": "referentiel_atc.csv",
								"output_container": "data-warehouse",
								"output_path": "Temp/OBJECTIF_RH_PREPARED.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RH"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PREPARATION_OBJECTIF_RH')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunctionPremium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_OFFRE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UNIFORMISATION OFFRE",
						"description": "Input : \noffreDiffusInput\noffreChantierInput\nreferentielATCinput\nOutput : \noffreDiffusTemp\nStg_offre_diffus\noffreChantierTemp\nstagingChantier\noffreAtcTemp\n",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNIFORMISATION_OFFRE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"offreDiffusInput": {},
									"offreChantierInput": {},
									"stagingDiffus": {},
									"stagingChantier": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UNIFORMISATION_OFFRE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORCAB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ORCAB_PREPARATION",
						"description": "Input : \n-ORCAB_ECOULEMENT_INPUT\n-ORCAB_ORGANISATION\n-ventesDirectes\nOutput : \n-ORCAB_QTE_NULL\n-organisationNotFound\n-ORCAB_ECOULEMENT_PREPARED",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ORCAB_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"organisation": {},
									"ORCABECOULPREPARED": {},
									"quantityNullOutput": {},
									"organisationNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ORCAB_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PARTEDIS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"description": "Input : \necoulement\nPARTEDIS_ORGANISATION\nventesDirectes\npartedisPrixStd\nprixParPeriode\nOutput : \norganisationNotFound\nquantityNullOutput\nPARTEDIS_ECOUL_PREPARED",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PARTEDIS_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"organisation": {},
									"venteDirecte": {},
									"organisationNotFound": {},
									"quantityNullOutput": {},
									"PARTEDISECOULPREPARED": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PARTEDIS_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_POST_UNION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CleaninPostUnion",
						"description": "Input : \nunionEccoulement\narticlehierarchi\nunionsapehs\npricelisteReplicated\nOutput : \ntunionSap\noutputPreparationEcoulement",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EPS_CLEANING_POST_UNION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unionEccoulement": {},
									"articlehierarchi": {},
									"unionsapehs": {},
									"pricelisteReplicated": {},
									"EHS": {},
									"EPS": {},
									"outputPreparationEcoulement": {},
									"sink2": {},
									"sink3": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EPS_CLEANING_POST_UNION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_REFERENTIEL_ATC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lower_data",
						"description": "Input: \nrefaffectation\nref2021\nOutpout :\natcAffectationLower\natcC2021Lower",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "lower_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"refaffectation": {},
									"atcAffectationLower": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "cleaning",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "lower_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "cleaning",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"atcJoined": {},
									"AtcprepareForReplicate": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/lower_data')]",
				"[concat(variables('factoryId'), '/dataflows/cleaning')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_REFERENTIEL_PRIX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DUREE PERIODE",
						"description": "Input: \nfacturation\nplateforme\nOutpout :\ndureePeriodeOutput",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "REFERENTIEL_PRIX_MOYEN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"facturationAC": {},
									"plateforme": {},
									"facturationAP": {},
									"dureePeriodeOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CALCUL PERIODE",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "DUREE PERIODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_CALCUL_PERIODE",
							"method": "POST",
							"headers": {},
							"body": {
								"inputcontainer": "data-warehouse",
								"inputpath": "Temp/TEMP_PRIX_PAR_PERIODE.csv",
								"outputcontainer": "data-warehouse",
								"outputpath": "referentielPrix.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "prix_moyen",
						"description": "Input : \nREFERENTIEL_PRIX\nOutput : \nprixMoyenSplited",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CALCUL PERIODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PRIX_MOYEN_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"prixmoyen": {},
									"prixsplit": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/REFERENTIEL_PRIX_MOYEN')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunctionPremium')]",
				"[concat(variables('factoryId'), '/dataflows/PRIX_MOYEN_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SUIVIE_OFFRE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIFFUS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SUIVIE_OFFRE_DIFFUS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stgOffre": {},
									"baseCommerciale": {},
									"articleHierarchi": {},
									"offreSansMatching": {},
									"OUTputffreDiffus": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CHANTIER",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SUIVIE_OFFRE_CHANTIER",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stgOffre": {},
									"baseCommerciale": {},
									"SUIVIEOFFRECHANTIER": {},
									"offreEtBaseComSansMatching": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SUIVI DES OFFRES"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SUIVIE_OFFRE_DIFFUS')]",
				"[concat(variables('factoryId'), '/dataflows/SUIVIE_OFFRE_CHANTIER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TEREVA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"description": "Input : \necoulement\nTEREVA_ORGANISATION\nventesDirectes\nOutput : \nTEREVA_EC_PREPARED\nTEREVA_qtenull\nTEREVA orga notfound",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TEREVA_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ECOULEMENT": {},
									"organisation": {},
									"ventesDirectes": {},
									"TEREVAECOULPREPARED": {},
									"TEREVAORGANISATIONNOTFOUND": {},
									"terevaQteNull": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TEREVA_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_VENTES_DIRECTES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "VENTES_DIRECTES_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ventesDirectes": {},
									"VENTESDIRECTESPREPARATION": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/VENTES_DIRECTES_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_VF_CONFORT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "VF_CONFORT_PREPARATION",
						"description": "Input : \n-ecoulement\n-CONFORT_ORGANISATION\n-ventesDirectes\nOutput : \n-outputQuantityNull\n-VFCONFORT_ECOULEMENT_PREPARED",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "VF_CONFORT_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"organisation": {},
									"ventesDirectes": {},
									"outputQuantityNull": {},
									"VFCONFORTECOULPREPARED": {},
									"VFCONFORTORGANISATIONNOTFOUND": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/VF_CONFORT_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/POST_UNION_BC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IMPORT DATA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "fileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "basecommercialUnion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "basecommercialUnion",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "IMPORT DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BaseCommercialePOSTUnion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BCUnion": {},
									"ArticleHierarchi": {},
									"Plateformes": {},
									"ExtractionCompte": {},
									"ClientEHS": {},
									"StgOffreUnique": {},
									"DataCommercialNotFOund": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/basecommercialUnion')]",
				"[concat(variables('factoryId'), '/datasets/OutputBaseAllDistru')]",
				"[concat(variables('factoryId'), '/dataflows/BaseCommercialePOSTUnion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_FACTURATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION_FACTURATION",
						"description": "Input : -facturationbw\n          -PLATEFORMES\ntraitement : -join facturationbw & Plateformes\n                 -join facturationbw & other plateformes\n                 -join facturationbw & filtre DSC\nOutput : -venteDirect\n-AZ_OFacturactionPartedisLikeWithIndex\n-facturationForOtherPlateform\n-facturationForDSCTEREVA\n-facturationForVanMarkes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PL_REFERENTIEL_PRIX",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PREPARATION_FACTURATION_PERIOD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"facturationAC": {},
									"PLATEFORMES": {},
									"facturationAP": {},
									"prixParPeriode": {},
									"facturationForDSCTEREVA": {},
									"facturationForOtherPlateform": {},
									"notDSCTerevaPlateform": {},
									"facturationForVanMarkes": {},
									"venteDirecteForModel": {},
									"OFacturactionPartedisLikeWithIndex": {},
									"sink1": {},
									"VenteDirectForDecrementation": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PL_VENTES_DIRECTES",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PREPARATION_FACTURATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_VENTES_DIRECTES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_REFERENTIEL_PRIX",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_REFERENTIEL_PRIX",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PREPARATION_FACTURATION_PERIOD')]",
				"[concat(variables('factoryId'), '/pipelines/PL_VENTES_DIRECTES')]",
				"[concat(variables('factoryId'), '/pipelines/PL_REFERENTIEL_PRIX')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SORTIE MARKETING')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Marketing",
						"description": "Input : \nBASE_COMMERCIALE\nHierarchieMKTSD\nHerarchieMKTVA\nStgOffreChantier\nArticleHierarchi\nOutput : \nSORTIE_MARKETING",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "REFERENTIEL VMC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Marketing",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"InputBaseCom": {},
									"HierarchieMKTSD": {},
									"HerarchieMKTVA": {},
									"StgOffreChantier": {},
									"ArticleHierarchi": {},
									"typologieEPS": {},
									"vmc": {},
									"Smarketing": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "REFERENTIEL VMC",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "REFERENTIEL_VMC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"inputVMC": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE_MARKETING"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-06T12:25:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Marketing')]",
				"[concat(variables('factoryId'), '/dataflows/REFERENTIEL_VMC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION_ECC_AVOIR",
						"description": "Input : \necoulement\navoir\nsalerDSC\nOrgaTerevas\nOutput : \nAZ_OecoulementDscTerevaWithIndex\noutEccDscTereva\nAZ_OecoulementPartedislikeWithIndex\noutEccNotDSCTEREVA\nAZ_AvoirWithIndexDSClike\nDTAvoirRetraiter\nAvoirForVanMarkes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TRAITEMENTECOULEMENT_AVOIR_PERIOD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"avoir": {},
									"salerDSC": {},
									"OrgaTerevas": {},
									"prixParPeriode": {},
									"outEccDscTereva": {},
									"DTAvoirRetraiter": {},
									"outEcoulementDScTereva": {},
									"outputEcoulementPartedis": {},
									"outputAvoirDSc": {},
									"AvoirForVanMarkes": {},
									"outputAvoirNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TRAITEMENTECOULEMENT_AVOIR_PERIOD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "venteDeroge",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_ECC_AVOIR",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PREPARATION_FACTURATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Ventes derogees",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FacturationForOther": {},
									"ArticulationSap": {},
									"stgOffre": {},
									"PrixPeriode": {},
									"ecoulmnt": {},
									"refAtc": {},
									"endSinkOutput": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {},
									"sinkFact43": {},
									"sinkAfterArticulatioOffreJoin": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PREPARATION_ECC_AVOIR",
						"description": "Input : \necoulement\navoir\nsalerDSC\nOrgaTerevas\nOutput : \nAZ_OecoulementDscTerevaWithIndex\noutEccDscTereva\nAZ_OecoulementPartedislikeWithIndex\noutEccNotDSCTEREVA\nAZ_AvoirWithIndexDSClike\nDTAvoirRetraiter\nAvoirForVanMarkes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TRAITEMENTECOULEMENT_AVOIR_PERIOD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"avoir": {},
									"salerDSC": {},
									"OrgaTerevas": {},
									"prixParPeriode": {},
									"outEccDscTereva": {},
									"DTAvoirRetraiter": {},
									"outEcoulementDScTereva": {},
									"outputEcoulementPartedis": {},
									"outputAvoirDSc": {},
									"AvoirForVanMarkes": {},
									"outputAvoirNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PREPARATION_FACTURATION",
						"description": "Input : -facturationbw\n          -PLATEFORMES\ntraitement : -join facturationbw & Plateformes\n                 -join facturationbw & other plateformes\n                 -join facturationbw & filtre DSC\nOutput : -venteDirect\n-AZ_OFacturactionPartedisLikeWithIndex\n-facturationForOtherPlateform\n-facturationForDSCTEREVA\n-facturationForVanMarkes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PREPARATION_FACTURATION_PERIOD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"facturationAC": {},
									"PLATEFORMES": {},
									"facturationAP": {},
									"prixParPeriode": {},
									"facturationForDSCTEREVA": {},
									"facturationForOtherPlateform": {},
									"notDSCTerevaPlateform": {},
									"facturationForVanMarkes": {},
									"venteDirecteForModel": {},
									"OFacturactionPartedisLikeWithIndex": {},
									"sink1": {},
									"VenteDirectForDecrementation": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Ventes derogees')]",
				"[concat(variables('factoryId'), '/dataflows/TRAITEMENTECOULEMENT_AVOIR_PERIOD')]",
				"[concat(variables('factoryId'), '/dataflows/PREPARATION_FACTURATION_PERIOD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "venteDeroge",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Ventes derogees",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FacturationForOther": {},
									"ArticulationSap": {},
									"stgOffre": {},
									"PrixPeriode": {},
									"ecoulmnt": {},
									"refAtc": {},
									"endSinkOutput": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {},
									"sinkFact43": {},
									"sinkAfterArticulatioOffreJoin": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Ventes derogees')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/smalportionoftheBase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION_FACTURATION",
						"description": "Input : -facturationbw\n          -PLATEFORMES\ntraitement : -join facturationbw & Plateformes\n                 -join facturationbw & other plateformes\n                 -join facturationbw & filtre DSC\nOutput : -venteDirect\n-AZ_OFacturactionPartedisLikeWithIndex\n-facturationForOtherPlateform\n-facturationForDSCTEREVA\n-facturationForVanMarkes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PREPARATION_FACTURATION_PERIOD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"facturationAC": {},
									"PLATEFORMES": {},
									"facturationAP": {},
									"prixParPeriode": {},
									"facturationForDSCTEREVA": {},
									"facturationForOtherPlateform": {},
									"notDSCTerevaPlateform": {},
									"facturationForVanMarkes": {},
									"venteDirecteForModel": {},
									"OFacturactionPartedisLikeWithIndex": {},
									"sink1": {},
									"VenteDirectForDecrementation": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "TRAITEMENTECOULEMENT_AVOIR_PERIOD",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TRAITEMENTECOULEMENT_AVOIR_PERIOD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"avoir": {},
									"salerDSC": {},
									"OrgaTerevas": {},
									"prixParPeriode": {},
									"outEccDscTereva": {},
									"DTAvoirRetraiter": {},
									"outEcoulementDScTereva": {},
									"outputEcoulementPartedis": {},
									"outputAvoirDSc": {},
									"AvoirForVanMarkes": {},
									"outputAvoirNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "UNION_BASE_COMMERCIAL",
						"description": "Input : \nventeDirect\nDSCModel\nPartedisModel\nVanMarkes\nOutput : \nOunionBaseCommercialt",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "POST_UNION_FINISH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNION_BASE_COMMERCIAL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"venteDirecte": {},
									"DSCModel": {},
									"PartedisModel": {},
									"VanMarkes": {},
									"OUnionBasecommercial": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "POST_UNION_FINISH",
						"description": "Input : \nBCUnion\nArticleHierarchi\nPlateformes\nExtractionCompte\nClientEHS\nInputManuel\nStgOffreUnique\nOutput : \nDataCommercialNotFOund\nTEMP_baseCommercialOut\nOutputBaseAllDistru\nDataCommercialDT2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Model_PARTEDIS2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BaseCommercialePOSTUnion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BCUnion": {},
									"ArticleHierarchi": {},
									"Plateformes": {},
									"ExtractionCompte": {},
									"ClientEHS": {},
									"StgOffreUnique": {},
									"DataCommercialNotFOund": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Model_PARTEDIS2",
						"description": "Input : \necoulement\nassociation\nstgOffre\nfacturation\nrefAtc\nOutput : \nsortiePardedis",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_FACTURATION",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "TRAITEMENTECOULEMENT_AVOIR_PERIOD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Model_PARTEDIS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulmnt": {},
									"facturation": {},
									"association": {},
									"offre": {},
									"refAtc": {},
									"OModelPartedis": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ATC_PERFORMANCE_ET_CLIENT_SAP",
						"description": "Input : \nBASE_AVANT_TRAITEMENT_ATC\nsecteurFictif\nOutput : \nbaseCommercialOut",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "UNION_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ATC_PERFORMANCE_ET_CLIENT_SAP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"baseCommerciale": {},
									"secteurFictif": {},
									"ExtractionSAP": {},
									"refAtcinput": {},
									"inputManuel": {},
									"outFinale": {},
									"outDTP2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PREPARATION_FACTURATION_PERIOD')]",
				"[concat(variables('factoryId'), '/dataflows/TRAITEMENTECOULEMENT_AVOIR_PERIOD')]",
				"[concat(variables('factoryId'), '/dataflows/UNION_BASE_COMMERCIAL')]",
				"[concat(variables('factoryId'), '/dataflows/BaseCommercialePOSTUnion')]",
				"[concat(variables('factoryId'), '/dataflows/Model_PARTEDIS')]",
				"[concat(variables('factoryId'), '/dataflows/ATC_PERFORMANCE_ET_CLIENT_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ALL_OFFRE_CHANTIER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ExportDet2Ans.csv",
						"folderPath": "Offre/Chantier",
						"container": "data-input"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateDébutValidité",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix DO",
						"type": "String"
					},
					{
						"name": "Prix pro",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Offre nationale",
						"type": "String"
					},
					{
						"name": "Année Tarif",
						"type": "String"
					},
					{
						"name": "PotentielP1N",
						"type": "String"
					},
					{
						"name": "PotentielP2N",
						"type": "String"
					},
					{
						"name": "PotentielP3N",
						"type": "String"
					},
					{
						"name": "PotentielP4N",
						"type": "String"
					},
					{
						"name": "PotentielP5N",
						"type": "String"
					},
					{
						"name": "PotentielP6N",
						"type": "String"
					},
					{
						"name": "DateFinValidité",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Date de création",
						"type": "String"
					},
					{
						"name": "NomSignataire1",
						"type": "String"
					},
					{
						"name": "NomSignataire2",
						"type": "String"
					},
					{
						"name": "DateSignataire1",
						"type": "String"
					},
					{
						"name": "DateSignataire2",
						"type": "String"
					},
					{
						"name": "DateDérogation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ALL_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "all offre diffus 2ans",
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ExportDet2Ans.csv",
						"folderPath": "Offre/Diffus",
						"container": "data-input"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateDébutValidité",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix DO",
						"type": "String"
					},
					{
						"name": "Prix pro",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Offre nationale",
						"type": "String"
					},
					{
						"name": "Année Tarif",
						"type": "String"
					},
					{
						"name": "PotentielP1N",
						"type": "String"
					},
					{
						"name": "PotentielP2N",
						"type": "String"
					},
					{
						"name": "PotentielP3N",
						"type": "String"
					},
					{
						"name": "PotentielP4N",
						"type": "String"
					},
					{
						"name": "PotentielP5N",
						"type": "String"
					},
					{
						"name": "PotentielP6N",
						"type": "String"
					},
					{
						"name": "DateFinValidité",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Date de création",
						"type": "String"
					},
					{
						"name": "NomSignataire1",
						"type": "String"
					},
					{
						"name": "NomSignataire2",
						"type": "String"
					},
					{
						"name": "DateSignataire1",
						"type": "String"
					},
					{
						"name": "DateSignataire2",
						"type": "String"
					},
					{
						"name": "DateDérogation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARTICLE_HIERARCHIE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL ARTICLE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Articles_avec_hiérarchie_Articles_groupe_et_locale.xlsx",
						"folderPath": "ReferentielArticle",
						"container": "data-input"
					},
					"sheetIndex": 0,
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_AvoirWithIndexDSClike')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_OFacturactionPartedisLikeWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": "|",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_OecoulementDscTerevaWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_OecoulementPartedislikeWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArctileHierarchi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HIERARCHIE_ARTICLE",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					},
					{
						"name": "N1.groupe",
						"type": "String"
					},
					{
						"name": "N2.groupe",
						"type": "String"
					},
					{
						"name": "N3.groupe",
						"type": "String"
					},
					{
						"name": "N4.groupe",
						"type": "String"
					},
					{
						"name": "N5.groupe",
						"type": "String"
					},
					{
						"name": "N6.groupe",
						"type": "String"
					},
					{
						"name": "N7.groupe",
						"type": "String"
					},
					{
						"name": "N1.locale",
						"type": "String"
					},
					{
						"name": "N2.locale",
						"type": "String"
					},
					{
						"name": "N3.locale",
						"type": "String"
					},
					{
						"name": "N4.locale",
						"type": "String"
					},
					{
						"name": "N5.locale",
						"type": "String"
					},
					{
						"name": "N6.locale",
						"type": "String"
					},
					{
						"name": "N7.locale",
						"type": "String"
					},
					{
						"name": "N1.groupe.designation",
						"type": "String"
					},
					{
						"name": "N2.groupe.designation",
						"type": "String"
					},
					{
						"name": "N3.groupe.designation",
						"type": "String"
					},
					{
						"name": "N4.groupe.designation",
						"type": "String"
					},
					{
						"name": "N5.groupe.designation",
						"type": "String"
					},
					{
						"name": "N6.groupe.designation",
						"type": "String"
					},
					{
						"name": "N7.groupe.designation",
						"type": "String"
					},
					{
						"name": "N1.locale.designation",
						"type": "String"
					},
					{
						"name": "N2.locale.designation",
						"type": "String"
					},
					{
						"name": "N3.locale.designation",
						"type": "String"
					},
					{
						"name": "N4.locale.designation",
						"type": "String"
					},
					{
						"name": "N5.locale.designation",
						"type": "String"
					},
					{
						"name": "N6.locale.designation",
						"type": "String"
					},
					{
						"name": "N7.locale.designation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AvoirForVanMarkes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VANMARKES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AvoirForVanMarkesInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VANMARKES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AvoirForVanMarkes.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "Code_depot",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "ca_avoir",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BASE_AVANT_TRAITEMENT_ATC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "base commerciale.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal du client livré",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "ID marque",
						"type": "String"
					},
					{
						"name": "ID canal de distribution",
						"type": "String"
					},
					{
						"name": "Nom du canal",
						"type": "String"
					},
					{
						"name": "Diffus/Chantier",
						"type": "String"
					},
					{
						"name": "document_vente (vente directe)",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre (vente directe)",
						"type": "String"
					},
					{
						"name": "Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Type poste Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Numéro offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Motif commande (vente directe)",
						"type": "String"
					},
					{
						"name": "Type de facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Nom du compte",
						"type": "String"
					},
					{
						"name": "EPS_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "EPS_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Nom du compte",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_REMUNERATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CALCUL_REMUNERATION.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "ID contrat",
						"type": "String"
					},
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Réalisé",
						"type": "String"
					},
					{
						"name": "Somme quantité",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_SEUIL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CALCUL_SEUIL.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Max ID Seuil",
						"type": "String"
					},
					{
						"name": "Contrepartie seuil",
						"type": "String"
					},
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "ID contrat",
						"type": "String"
					},
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONFORT_ECOULEMENT_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONFORT_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_VFC.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONFORT_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_93667242-96d5-452f-a1d7-8067052b7662_dae5acec-5029-4dee-949c-75ac3396ac4c.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Repr�sentant",
						"type": "String"
					},
					{
						"name": "N� D�partement",
						"type": "String"
					},
					{
						"name": "D�partement",
						"type": "String"
					},
					{
						"name": "Code point de vente",
						"type": "String"
					},
					{
						"name": "Libell� point de vente",
						"type": "String"
					},
					{
						"name": "Code Depot source",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "N� Siret",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Ville",
						"type": "String"
					},
					{
						"name": "Ann�e livraison",
						"type": "String"
					},
					{
						"name": "Mois livraison",
						"type": "String"
					},
					{
						"name": "code fournisseur",
						"type": "String"
					},
					{
						"name": "fournisseur principal",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "produit",
						"type": "String"
					},
					{
						"name": "R�ference",
						"type": "String"
					},
					{
						"name": "Qte en unit� de vente",
						"type": "String"
					},
					{
						"name": "Montant prv net",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONFORT_QTE_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Contrat",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Liste_contrats_distribution.xlsx",
						"folderPath": "Contrat_distribution",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID contrat (unique)",
						"type": "String"
					},
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "Liste des POS participants",
						"type": "String"
					},
					{
						"name": "Liste des ATC référents du contrat (pour la visualisation)",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT_CADRE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Contrat cadre",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Liste_contrats_distribution.xlsx",
						"folderPath": "Contrat_distribution",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "Leviers",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT_DISTRIBUTION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Contrat_distribution",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ClientEHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC/UnionSAP_EHS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sectorisation",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Client_EHS.xlsx",
						"folderPath": "Client",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "Code Postal",
						"type": "String"
					},
					{
						"name": "Nom",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DETAIL_ARTICLE_HIERARCHIE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL ARTICLE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Libellés_hiérarchies_articles_groupe_et_locale.xlsx",
						"folderPath": "ReferentielArticle",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Hiérarch.produits",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ECOUL_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_DSC.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PIECE_DETACHEE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DSC_ECOUL_PREPARED.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_QTE_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DSC_ECOULEMENT.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DV_SAUNC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dvSAUNC.csv",
						"folderPath": "Ecoulement/Maillard",
						"container": "data-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Soci�t�",
						"type": "String"
					},
					{
						"name": "D�pot",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Code GTAC",
						"type": "String"
					},
					{
						"name": "R�f�rence",
						"type": "String"
					},
					{
						"name": "D�signation",
						"type": "String"
					},
					{
						"name": "Quantit�",
						"type": "String"
					},
					{
						"name": "Valeur",
						"type": "String"
					},
					{
						"name": "Quantit� n-1",
						"type": "String"
					},
					{
						"name": "Valeur n-1",
						"type": "String"
					},
					{
						"name": "CP D�p�t",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCommercialNotfound')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_offre.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix DO",
						"type": "String"
					},
					{
						"name": "Prix pro",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Offre nationale",
						"type": "String"
					},
					{
						"name": "Année Tarif",
						"type": "String"
					},
					{
						"name": "PotentielP1N",
						"type": "String"
					},
					{
						"name": "PotentielP2N",
						"type": "String"
					},
					{
						"name": "PotentielP3N",
						"type": "String"
					},
					{
						"name": "PotentielP4N",
						"type": "String"
					},
					{
						"name": "PotentielP5N",
						"type": "String"
					},
					{
						"name": "PotentielP6N",
						"type": "String"
					},
					{
						"name": "DateFinValidité",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Date de création",
						"type": "String"
					},
					{
						"name": "NomSignataire1",
						"type": "String"
					},
					{
						"name": "NomSignataire2",
						"type": "String"
					},
					{
						"name": "DateSignataire1",
						"type": "String"
					},
					{
						"name": "DateSignataire2",
						"type": "String"
					},
					{
						"name": "DateDérogation",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_price_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_PRIX"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0",
						"type": "String"
					},
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1",
						"type": "String"
					},
					{
						"name": "SaunierDuval",
						"type": "String"
					},
					{
						"name": "01000",
						"type": "String"
					},
					{
						"name": "01999",
						"type": "String"
					},
					{
						"name": "nicolas hernandez",
						"type": "String"
					},
					{
						"name": "Conseiller Technique Thermodynamique",
						"type": "String"
					},
					{
						"name": "01",
						"type": "String"
					},
					{
						"name": "1647-Rhône-Alpes Auvergne",
						"type": "String"
					},
					{
						"name": "16400092",
						"type": "String"
					},
					{
						"name": "nicolas julien",
						"type": "String"
					},
					{
						"name": "SD diffus",
						"type": "String"
					},
					{
						"name": "NICOLAS Julien",
						"type": "String"
					},
					{
						"name": "16566798",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECOULEEMENT_UNIFORME')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "uniformee_ecoulement_prix_moy.xlsx",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "cp1",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "marque_num",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "cp2",
						"type": "String"
					},
					{
						"name": "Org# commerciale",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EHS_ECOULEMENT.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Marques",
						"type": "String"
					},
					{
						"name": "Région",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "CIA",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "Référence Article",
						"type": "String"
					},
					{
						"name": "Description Article",
						"type": "String"
					},
					{
						"name": "Catégorie Achat",
						"type": "String"
					},
					{
						"name": "Quantitées livrées",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Marques/ Constructeur",
						"type": "String"
					},
					{
						"name": "Gestion entrepôt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EHSOrganiationNotfound')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EVENEMENTS_COMMERCIAUX_BW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ÉvènementsCommerciauxBW.xlsx",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EVanMarkes1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VANMARKES"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuille1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EntreVanMarkes1.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "F5",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EVanMarkes2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VANMARKES"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuille1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EntreVanMarkes2.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "Code_depot",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EntreeEHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SortieEcoulementEHS.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "Région",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "Référence Article",
						"type": "String"
					},
					{
						"name": "Description Article",
						"type": "String"
					},
					{
						"name": "Catégorie Achat",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "str_mois",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Gestion entrepôt",
						"type": "String"
					},
					{
						"name": "Marques/ Constructeur",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "CP Coop.",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "Nom Coopérative",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "Qté vente directe",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Data",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "févr 2020_Mensuel_SAUNIER DUVAL - SDECC00484.xlsx",
						"folderPath": "Ecoulement/DSC",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractionComptesEPSTypologieSousTypoComptePrincipal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "report1623684783907",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Extraction comptes EPS_Typologie_Sous Typo_Compte Principal.xlsx",
						"folderPath": "Client",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Compte principal: Nom du compte",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACTURATION_DSC_TEREVA_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForDSCTEREVA",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FILTRE_OBJECTIF_RH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FILTRE_CALCUL_OBJECTIF.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "Mois début",
						"type": "String"
					},
					{
						"name": "Mois fin",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FILTRE_OBJECTIF_SORTIE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "ATC performance",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FOLDER_ECOULEMENT_MABILE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Détails",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Ecoulement/Mabille",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Activité",
						"type": "String"
					},
					{
						"name": "Fournisseur Groupe",
						"type": "String"
					},
					{
						"name": "Société",
						"type": "String"
					},
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence du client",
						"type": "String"
					},
					{
						"name": "Code article",
						"type": "String"
					},
					{
						"name": "Libellé article",
						"type": "String"
					},
					{
						"name": "Ref fournisseur",
						"type": "String"
					},
					{
						"name": "Qté Mois A-1",
						"type": "String"
					},
					{
						"name": "Qté Cumul A-1",
						"type": "String"
					},
					{
						"name": "CA Mois A-1",
						"type": "String"
					},
					{
						"name": "CA Cumul A-1",
						"type": "String"
					},
					{
						"name": "MB Mois A-1",
						"type": "String"
					},
					{
						"name": "MB Cumul A-1",
						"type": "String"
					},
					{
						"name": "VVA Mois A-1",
						"type": "String"
					},
					{
						"name": "VVA Cumul A-1",
						"type": "String"
					},
					{
						"name": "Qté Mois A",
						"type": "String"
					},
					{
						"name": "Qté Cumul A",
						"type": "String"
					},
					{
						"name": "CA Mois A",
						"type": "String"
					},
					{
						"name": "CA Cumul A",
						"type": "String"
					},
					{
						"name": "MB Mois A",
						"type": "String"
					},
					{
						"name": "MB Cumul A",
						"type": "String"
					},
					{
						"name": "VVA Mois A",
						"type": "String"
					},
					{
						"name": "VVA Cumul A",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FOLDER_ECOULEMENT_ORCAB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Ecoulement/ORCAB",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte 2020",
						"type": "String"
					},
					{
						"name": "Qte 2019",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FOLDER_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "ExportOffreDet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Offre/OffresBAD&BAC/Diffus",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationAP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FacturationBW_AP.csv",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "1ereDateLivrDdee",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationBW_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "xTract",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FacturationBW.xlsx",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationDecrementer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationForOther')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForOther.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": " Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "1ereDateLivrDdee",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIERARCHIE_ARTICLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL ARTICLE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIERARCHIE_ARTICLE_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL ARTICLE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HIERARCHIE_ARTICLE.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					},
					{
						"name": "N1.groupe",
						"type": "String"
					},
					{
						"name": "N2.groupe",
						"type": "String"
					},
					{
						"name": "N3.groupe",
						"type": "String"
					},
					{
						"name": "N4.groupe",
						"type": "String"
					},
					{
						"name": "N5.groupe",
						"type": "String"
					},
					{
						"name": "N6.groupe",
						"type": "String"
					},
					{
						"name": "N7.groupe",
						"type": "String"
					},
					{
						"name": "N1.locale",
						"type": "String"
					},
					{
						"name": "N2.locale",
						"type": "String"
					},
					{
						"name": "N3.locale",
						"type": "String"
					},
					{
						"name": "N4.locale",
						"type": "String"
					},
					{
						"name": "N5.locale",
						"type": "String"
					},
					{
						"name": "N6.locale",
						"type": "String"
					},
					{
						"name": "N7.locale",
						"type": "String"
					},
					{
						"name": "N1.groupe.designation",
						"type": "String"
					},
					{
						"name": "N2.groupe.designation",
						"type": "String"
					},
					{
						"name": "N3.groupe.designation",
						"type": "String"
					},
					{
						"name": "N4.groupe.designation",
						"type": "String"
					},
					{
						"name": "N5.groupe.designation",
						"type": "String"
					},
					{
						"name": "N6.groupe.designation",
						"type": "String"
					},
					{
						"name": "N7.groupe.designation",
						"type": "String"
					},
					{
						"name": "N1.locale.designation",
						"type": "String"
					},
					{
						"name": "N2.locale.designation",
						"type": "String"
					},
					{
						"name": "N3.locale.designation",
						"type": "String"
					},
					{
						"name": "N4.locale.designation",
						"type": "String"
					},
					{
						"name": "N5.locale.designation",
						"type": "String"
					},
					{
						"name": "N6.locale.designation",
						"type": "String"
					},
					{
						"name": "N7.locale.designation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIERARCHI_ARTICLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HIERARCHIE_ARTICLE.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					},
					{
						"name": "N1.groupe",
						"type": "String"
					},
					{
						"name": "N2.groupe",
						"type": "String"
					},
					{
						"name": "N3.groupe",
						"type": "String"
					},
					{
						"name": "N4.groupe",
						"type": "String"
					},
					{
						"name": "N5.groupe",
						"type": "String"
					},
					{
						"name": "N6.groupe",
						"type": "String"
					},
					{
						"name": "N7.groupe",
						"type": "String"
					},
					{
						"name": "N1.locale",
						"type": "String"
					},
					{
						"name": "N2.locale",
						"type": "String"
					},
					{
						"name": "N3.locale",
						"type": "String"
					},
					{
						"name": "N4.locale",
						"type": "String"
					},
					{
						"name": "N5.locale",
						"type": "String"
					},
					{
						"name": "N6.locale",
						"type": "String"
					},
					{
						"name": "N7.locale",
						"type": "String"
					},
					{
						"name": "N1.groupe.designation",
						"type": "String"
					},
					{
						"name": "N2.groupe.designation",
						"type": "String"
					},
					{
						"name": "N3.groupe.designation",
						"type": "String"
					},
					{
						"name": "N4.groupe.designation",
						"type": "String"
					},
					{
						"name": "N5.groupe.designation",
						"type": "String"
					},
					{
						"name": "N6.groupe.designation",
						"type": "String"
					},
					{
						"name": "N7.groupe.designation",
						"type": "String"
					},
					{
						"name": "N1.locale.designation",
						"type": "String"
					},
					{
						"name": "N2.locale.designation",
						"type": "String"
					},
					{
						"name": "N3.locale.designation",
						"type": "String"
					},
					{
						"name": "N4.locale.designation",
						"type": "String"
					},
					{
						"name": "N5.locale.designation",
						"type": "String"
					},
					{
						"name": "N6.locale.designation",
						"type": "String"
					},
					{
						"name": "N7.locale.designation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HierarchieMKT_SD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SD",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Hiérarchie MKT_SD&VA.xlsx",
						"folderPath": "ReferentielArticle",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Référence article",
						"type": "String"
					},
					{
						"name": "Grande famille",
						"type": "String"
					},
					{
						"name": "Sous-famille",
						"type": "String"
					},
					{
						"name": "eShop level 1 - CATALOG - désignation",
						"type": "String"
					},
					{
						"name": "eShop level 2 - RANGE - désignation",
						"type": "String"
					},
					{
						"name": "eShop level 3 - FAMILY - désignation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HierarchieMKT_VA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "VA",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Hiérarchie MKT_SD&VA.xlsx",
						"folderPath": "ReferentielArticle",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Référence article active",
						"type": "String"
					},
					{
						"name": "Grande famille",
						"type": "String"
					},
					{
						"name": "Sous-famille",
						"type": "String"
					},
					{
						"name": "eShop level 1",
						"type": "String"
					},
					{
						"name": "eShop level 2",
						"type": "String"
					},
					{
						"name": "eShop level 3",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InEcoulementWithIndexDSC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_OecoulementDscTerevaWithIndex.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InFacturationForVenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForVenteDirect.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": " Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": " vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "fact_filter",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InPartedisEcoulementReplicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccPartedislike_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InPrixMoyenSplited')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "prixmoyensplit.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Distributeur",
						"type": "String"
					},
					{
						"name": "prix_unitaire",
						"type": "String"
					},
					{
						"name": "Durée_période",
						"type": "String"
					},
					{
						"name": "Période",
						"type": "String"
					},
					{
						"name": "Mois début",
						"type": "String"
					},
					{
						"name": "Mois fin",
						"type": "String"
					},
					{
						"name": "mois1",
						"type": "String"
					},
					{
						"name": "annee1",
						"type": "String"
					},
					{
						"name": "mois2",
						"type": "String"
					},
					{
						"name": "annee2",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InUnionBasecommercial')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OUnionBasecommercial.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Agence commerciale",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "qt_plateforme_final",
						"type": "String"
					},
					{
						"name": "ca_plateforme_final",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/In_FacturationVM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForVanMarkes",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "1ereDateLivrDdee",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": " vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "fact_filter",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/In_avoirwithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_AvoirWithIndexDSClike.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "ca_avoir",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_avoir",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InallDistruUnionNed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "allDistruUnioned",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inbasecommercial')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "base commerciale.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "nom du canal",
						"type": "String"
					},
					{
						"name": "canal_distribution_final",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "qt_ecc_enrichi",
						"type": "String"
					},
					{
						"name": "ca_ecc_enrichi",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "source_atc",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Deb val",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Nom du compte",
						"type": "String"
					},
					{
						"name": "EPS_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "EPS_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputBaseCommercialMarketing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BaseCommercialeDTP2.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "canal_distribution_final",
						"type": "String"
					},
					{
						"name": "nom du canal",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre (vente directe)",
						"type": "String"
					},
					{
						"name": "Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Type poste Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Nom du compte",
						"type": "String"
					},
					{
						"name": "EPS_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "EPS_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N1 SAP ",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N2 SAP ",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N1 SAP",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N2 SAP",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Client_direct_Nom du compte",
						"type": "String"
					},
					{
						"name": "Client direct_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client direct_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client direct_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client direct_Compte principal: Nom du compte",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputFacturationDecrementer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FacturationDecrementer",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "qt_plateforme_final",
						"type": "String"
					},
					{
						"name": "ca_plateforme_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputVenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OVenteDirectePrepared.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Agence commerciale",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "ATC performance",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LEVIER_CONTRAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Leviers",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Liste_contrats_distribution.xlsx",
						"folderPath": "Contrat_distribution",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "Code produits exclus",
						"type": "String"
					},
					{
						"name": "Famille produit",
						"type": "String"
					},
					{
						"name": "Famille produit exclus",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Date de début",
						"type": "String"
					},
					{
						"name": "Date de fin",
						"type": "String"
					},
					{
						"name": "Type de seuil",
						"type": "String"
					},
					{
						"name": "ID seuil",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Seuil min",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_ECOULEMENT_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MABILE_ECOULEMENT.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Activité",
						"type": "String"
					},
					{
						"name": "Fournisseur Groupe",
						"type": "String"
					},
					{
						"name": "Société",
						"type": "String"
					},
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence du client",
						"type": "String"
					},
					{
						"name": "Code article",
						"type": "String"
					},
					{
						"name": "Libellé article",
						"type": "String"
					},
					{
						"name": "Ref fournisseur",
						"type": "String"
					},
					{
						"name": "Qté Mois A-1",
						"type": "String"
					},
					{
						"name": "Qté Cumul A-1",
						"type": "String"
					},
					{
						"name": "CA Mois A-1",
						"type": "String"
					},
					{
						"name": "CA Cumul A-1",
						"type": "String"
					},
					{
						"name": "MB Mois A-1",
						"type": "String"
					},
					{
						"name": "MB Cumul A-1",
						"type": "String"
					},
					{
						"name": "VVA Mois A-1",
						"type": "String"
					},
					{
						"name": "VVA Cumul A-1",
						"type": "String"
					},
					{
						"name": "Qté Mois A",
						"type": "String"
					},
					{
						"name": "Qté Cumul A",
						"type": "String"
					},
					{
						"name": "CA Mois A",
						"type": "String"
					},
					{
						"name": "CA Cumul A",
						"type": "String"
					},
					{
						"name": "MB Mois A",
						"type": "String"
					},
					{
						"name": "MB Cumul A",
						"type": "String"
					},
					{
						"name": "VVA Mois A",
						"type": "String"
					},
					{
						"name": "VVA Cumul A",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_ECOULEMENT_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "N° Département",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "Code point de vente",
						"type": "String"
					},
					{
						"name": "Libellé point de vente",
						"type": "String"
					},
					{
						"name": "Code Depot source",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "N° Siret",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Ville",
						"type": "String"
					},
					{
						"name": "Année livraison",
						"type": "String"
					},
					{
						"name": "Mois livraison",
						"type": "String"
					},
					{
						"name": "code fournisseur",
						"type": "String"
					},
					{
						"name": "fournisseur principal",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "produit",
						"type": "String"
					},
					{
						"name": "Réference",
						"type": "String"
					},
					{
						"name": "Qte en unité de vente",
						"type": "String"
					},
					{
						"name": "Montant prv net",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_Mabille_Sonac.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					},
					{
						"name": "Commentaire",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MABILLE_ECOUL_PREPARED.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_QTE_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILLE_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MABILE_ECOULEMENT.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Activité",
						"type": "String"
					},
					{
						"name": "Fournisseur Groupe",
						"type": "String"
					},
					{
						"name": "Société",
						"type": "String"
					},
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence du client",
						"type": "String"
					},
					{
						"name": "Code article",
						"type": "String"
					},
					{
						"name": "Libellé article",
						"type": "String"
					},
					{
						"name": "Ref fournisseur",
						"type": "String"
					},
					{
						"name": "Qté Mois A-1",
						"type": "String"
					},
					{
						"name": "Qté Cumul A-1",
						"type": "String"
					},
					{
						"name": "CA Mois A-1",
						"type": "String"
					},
					{
						"name": "CA Cumul A-1",
						"type": "String"
					},
					{
						"name": "MB Mois A-1",
						"type": "String"
					},
					{
						"name": "MB Cumul A-1",
						"type": "String"
					},
					{
						"name": "VVA Mois A-1",
						"type": "String"
					},
					{
						"name": "VVA Cumul A-1",
						"type": "String"
					},
					{
						"name": "Qté Mois A",
						"type": "String"
					},
					{
						"name": "Qté Cumul A",
						"type": "String"
					},
					{
						"name": "CA Mois A",
						"type": "String"
					},
					{
						"name": "CA Cumul A",
						"type": "String"
					},
					{
						"name": "MB Mois A",
						"type": "String"
					},
					{
						"name": "MB Cumul A",
						"type": "String"
					},
					{
						"name": "VVA Mois A",
						"type": "String"
					},
					{
						"name": "VVA Cumul A",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dvSAUNC.csv",
						"folderPath": "Ecoulement/Maillard",
						"container": "data-input"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Société",
						"type": "String"
					},
					{
						"name": "Dépot",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Code GTAC",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Valeur",
						"type": "String"
					},
					{
						"name": "Quantité n-1",
						"type": "String"
					},
					{
						"name": "Valeur n-1",
						"type": "String"
					},
					{
						"name": "CP Dépôt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_ECOUL_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0",
						"type": "String"
					},
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1",
						"type": "String"
					},
					{
						"name": "SaunierDuval",
						"type": "String"
					},
					{
						"name": "01000",
						"type": "String"
					},
					{
						"name": "01999",
						"type": "String"
					},
					{
						"name": "nicolas hernandez",
						"type": "String"
					},
					{
						"name": "Conseiller Technique Thermodynamique",
						"type": "String"
					},
					{
						"name": "01",
						"type": "String"
					},
					{
						"name": "1647-Rhône-Alpes Auvergne",
						"type": "String"
					},
					{
						"name": "16400092",
						"type": "String"
					},
					{
						"name": "nicolas julien",
						"type": "String"
					},
					{
						"name": "SD diffus",
						"type": "String"
					},
					{
						"name": "NICOLAS Julien",
						"type": "String"
					},
					{
						"name": "16566798",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Organisation",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_Maillard.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Nom Agence (Code)",
						"type": "String"
					},
					{
						"name": "CP Agence",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MAILLARD_ECOUL_PREPARED.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ModelPartedisInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OModelPartedis.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "ATC performance",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_PRODUIT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Logistique",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OBJECTIFS_RH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OBJECTIF RH"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Objectifs",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "objectifs.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Num Org",
						"type": "String"
					},
					{
						"name": "Nom Org",
						"type": "String"
					},
					{
						"name": "Nom DR",
						"type": "String"
					},
					{
						"name": "Num DR",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "ATC (ATC- DR)",
						"type": "String"
					},
					{
						"name": "ATC (DR-ATC)",
						"type": "String"
					},
					{
						"name": "Num ATC",
						"type": "String"
					},
					{
						"name": "Nom ATC",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "Canal Dist",
						"type": "String"
					},
					{
						"name": "Nom Canal",
						"type": "String"
					},
					{
						"name": "Flux text",
						"type": "String"
					},
					{
						"name": "HubSAPiD",
						"type": "String"
					},
					{
						"name": "Activité",
						"type": "String"
					},
					{
						"name": "Nom Activité",
						"type": "String"
					},
					{
						"name": "Art Niv 1",
						"type": "String"
					},
					{
						"name": "Nom Niv 1",
						"type": "String"
					},
					{
						"name": "Art Niv 2",
						"type": "String"
					},
					{
						"name": "Nom Niv 2",
						"type": "String"
					},
					{
						"name": "Art Niv 3",
						"type": "String"
					},
					{
						"name": "Nom Niv 3",
						"type": "String"
					},
					{
						"name": "Art Niv 4",
						"type": "String"
					},
					{
						"name": "Nom Niv 4",
						"type": "String"
					},
					{
						"name": "Art Niv 5",
						"type": "String"
					},
					{
						"name": "Nom Niv 5",
						"type": "String"
					},
					{
						"name": "Nom Niv Combiné",
						"type": "String"
					},
					{
						"name": "PMV An",
						"type": "String"
					},
					{
						"name": "Qté Obj An",
						"type": "String"
					},
					{
						"name": "CA Obj An",
						"type": "String"
					},
					{
						"name": "Qté Mois 01",
						"type": "String"
					},
					{
						"name": "Qté Mois 02",
						"type": "String"
					},
					{
						"name": "Qté Mois 03",
						"type": "String"
					},
					{
						"name": "Qté Mois 04",
						"type": "String"
					},
					{
						"name": "Qté Mois 05",
						"type": "String"
					},
					{
						"name": "Qté Mois 06",
						"type": "String"
					},
					{
						"name": "Qté Mois 07",
						"type": "String"
					},
					{
						"name": "Qté Mois 08",
						"type": "String"
					},
					{
						"name": "Qté Mois 09",
						"type": "String"
					},
					{
						"name": "Qté Mois 10",
						"type": "String"
					},
					{
						"name": "Qté Mois 11",
						"type": "String"
					},
					{
						"name": "Qté Mois 12",
						"type": "String"
					},
					{
						"name": "CA Mois 01",
						"type": "String"
					},
					{
						"name": "CA Mois 02",
						"type": "String"
					},
					{
						"name": "CA Mois 03",
						"type": "String"
					},
					{
						"name": "CA Mois 04",
						"type": "String"
					},
					{
						"name": "CA Mois 05",
						"type": "String"
					},
					{
						"name": "CA Mois 06",
						"type": "String"
					},
					{
						"name": "CA Mois 07",
						"type": "String"
					},
					{
						"name": "CA Mois 08",
						"type": "String"
					},
					{
						"name": "CA Mois 09",
						"type": "String"
					},
					{
						"name": "CA Mois 10",
						"type": "String"
					},
					{
						"name": "CA Mois 11",
						"type": "String"
					},
					{
						"name": "CA Mois 12",
						"type": "String"
					},
					{
						"name": "Qté Trim 1",
						"type": "String"
					},
					{
						"name": "Qté Trim 2",
						"type": "String"
					},
					{
						"name": "Qté Trim 3",
						"type": "String"
					},
					{
						"name": "Qté Trim 4",
						"type": "String"
					},
					{
						"name": "CA Trim 1",
						"type": "String"
					},
					{
						"name": "CA Trim 2",
						"type": "String"
					},
					{
						"name": "CA Trim 3",
						"type": "String"
					},
					{
						"name": "CA Trim 4",
						"type": "String"
					},
					{
						"name": "Qté Cumul 01",
						"type": "String"
					},
					{
						"name": "Qté Cumul 02",
						"type": "String"
					},
					{
						"name": "Qté Cumul 03",
						"type": "String"
					},
					{
						"name": "Qté Cumul 04",
						"type": "String"
					},
					{
						"name": "Qté Cumul 05",
						"type": "String"
					},
					{
						"name": "Qté Cumul 06",
						"type": "String"
					},
					{
						"name": "Qté Cumul 07",
						"type": "String"
					},
					{
						"name": "Qté Cumul 08",
						"type": "String"
					},
					{
						"name": "Qté Cumul 09",
						"type": "String"
					},
					{
						"name": "Qté Cumul 10",
						"type": "String"
					},
					{
						"name": "Qté Cumul 11",
						"type": "String"
					},
					{
						"name": "Qté Cumul 12",
						"type": "String"
					},
					{
						"name": "CA Cumul 01",
						"type": "String"
					},
					{
						"name": "CA Cumul 02",
						"type": "String"
					},
					{
						"name": "CA Cumul 03",
						"type": "String"
					},
					{
						"name": "CA Cumul 04",
						"type": "String"
					},
					{
						"name": "CA Cumul 05",
						"type": "String"
					},
					{
						"name": "CA Cumul 06",
						"type": "String"
					},
					{
						"name": "CA Cumul 07",
						"type": "String"
					},
					{
						"name": "CA Cumul 08",
						"type": "String"
					},
					{
						"name": "CA Cumul 09",
						"type": "String"
					},
					{
						"name": "CA Cumul 10",
						"type": "String"
					},
					{
						"name": "CA Cumul 11",
						"type": "String"
					},
					{
						"name": "CA Cumul 12",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OFFRE_SANS_MATCHING_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_4ff7fba4-15c0-4a45-bb38-971aaa6bfaaa_985cc61b-ecb2-41f3-9b06-2f13a0c784d4.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte 2020",
						"type": "String"
					},
					{
						"name": "Qte 2019",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ECOULEMENT_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORCAB_ECOULEMENT.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte 2020",
						"type": "String"
					},
					{
						"name": "Qte 2019",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "REFFOURNISSEUR",
						"type": "String"
					},
					{
						"name": "Qte Livrée 2020",
						"type": "String"
					},
					{
						"name": "Qte Livrée 2019",
						"type": "String"
					},
					{
						"name": "Code Dispo Cde",
						"type": "String"
					},
					{
						"name": "Code SAPAIG",
						"type": "String"
					},
					{
						"name": "CA sans Marge",
						"type": "String"
					},
					{
						"name": "CA sans Marge A-1",
						"type": "String"
					},
					{
						"name": "Evol. CA A/A-1",
						"type": "String"
					},
					{
						"name": "Qte Livrée",
						"type": "String"
					},
					{
						"name": "Qte Livrée A-1",
						"type": "String"
					},
					{
						"name": "Evol. Qte A/A-1",
						"type": "String"
					},
					{
						"name": "Qté Livrée 2020",
						"type": "String"
					},
					{
						"name": "Qté Livrée 2019",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ECOULEMENT_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ECOULEMENT_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecoulements PF VAILLANT DECEMBRE 2020.xlsx",
						"folderPath": "Ecoulement/ORCAB",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "REFFOURNISSEUR",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte Livrée 2020",
						"type": "String"
					},
					{
						"name": "Qte Livrée 2019",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sectorisation",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_Orcab.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Nom Coopérative",
						"type": "String"
					},
					{
						"name": "CP Coop.",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORCAB_ECOUL_PREPARED.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_QTE_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OUTPUT_CALCUL_REMUNERATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "NoCanalDist",
						"type": "String"
					},
					{
						"name": "NoArt",
						"type": "String"
					},
					{
						"name": "NoNiv1",
						"type": "String"
					},
					{
						"name": "NoNiv2",
						"type": "String"
					},
					{
						"name": "NoNiv3",
						"type": "String"
					},
					{
						"name": "NoNiv4",
						"type": "String"
					},
					{
						"name": "NoNiv5",
						"type": "String"
					},
					{
						"name": "NoNiv6",
						"type": "String"
					},
					{
						"name": "NoNiv7",
						"type": "String"
					},
					{
						"name": "Niv1",
						"type": "String"
					},
					{
						"name": "Niv2",
						"type": "String"
					},
					{
						"name": "Niv3",
						"type": "String"
					},
					{
						"name": "Niv4",
						"type": "String"
					},
					{
						"name": "Niv6",
						"type": "String"
					},
					{
						"name": "Niv7",
						"type": "String"
					},
					{
						"name": "CanalDist",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OUTPUT_CALCUL_SEUIL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "NoCanalDist",
						"type": "String"
					},
					{
						"name": "NoArt",
						"type": "String"
					},
					{
						"name": "NoNiv1",
						"type": "String"
					},
					{
						"name": "NoNiv2",
						"type": "String"
					},
					{
						"name": "NoNiv3",
						"type": "String"
					},
					{
						"name": "NoNiv4",
						"type": "String"
					},
					{
						"name": "NoNiv5",
						"type": "String"
					},
					{
						"name": "NoNiv6",
						"type": "String"
					},
					{
						"name": "NoNiv7",
						"type": "String"
					},
					{
						"name": "Niv1",
						"type": "String"
					},
					{
						"name": "Niv2",
						"type": "String"
					},
					{
						"name": "Niv3",
						"type": "String"
					},
					{
						"name": "Niv4",
						"type": "String"
					},
					{
						"name": "Niv6",
						"type": "String"
					},
					{
						"name": "Niv7",
						"type": "String"
					},
					{
						"name": "CanalDist",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrganisationEHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sectorisation",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_EHS.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Nom Coopérative",
						"type": "String"
					},
					{
						"name": "CP Coop.",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "Code Postal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OunionBaseCommercial')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutpoutVanMarkes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VANMARKES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SinkVanMarkes",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "Donneur d ordre",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Agence commerciale",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Téléphone 1",
						"type": "String"
					},
					{
						"name": "Numéro de télécopie",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutpuVanMarkes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VANMARKES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputBaseAllDistru')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PARTEDIS_ECOULEMENT.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Nom Fournisseur Principal",
						"type": "String"
					},
					{
						"name": "Clients",
						"type": "String"
					},
					{
						"name": "Code Agence",
						"type": "String"
					},
					{
						"name": "Libellé Agence",
						"type": "String"
					},
					{
						"name": "Code postal agence",
						"type": "String"
					},
					{
						"name": "Ag Siret",
						"type": "String"
					},
					{
						"name": "Siren",
						"type": "String"
					},
					{
						"name": "MKT1",
						"type": "String"
					},
					{
						"name": "MKT2",
						"type": "String"
					},
					{
						"name": "MKT3",
						"type": "String"
					},
					{
						"name": "Reference Fournisseur",
						"type": "String"
					},
					{
						"name": "Libelle",
						"type": "String"
					},
					{
						"name": "Qté Livré Mois A",
						"type": "String"
					},
					{
						"name": "Qté Livré Mois A-1",
						"type": "String"
					},
					{
						"name": "Qté Livré Cumul A",
						"type": "String"
					},
					{
						"name": "Qté Livré Cumul A-1",
						"type": "String"
					},
					{
						"name": "VVA MOIS",
						"type": "String"
					},
					{
						"name": "VVA MOIS N-1",
						"type": "String"
					},
					{
						"name": "VVA CUMUL EXERCICE",
						"type": "String"
					},
					{
						"name": "VVA CUMUL EXERCICE N-1",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_ECOUL_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organization_Partedis.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_PRIX_STD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Px Std 2020",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Partedis.xlsx",
						"folderPath": "PriceList",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Prix Unitaire Std",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLATEFORMES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Plateformes.xlsx",
						"folderPath": "Plateformes",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SAUNIER DUVAL",
						"type": "String"
					},
					{
						"name": "208.0",
						"type": "String"
					},
					{
						"name": "Pièces détachées pour chauffage",
						"type": "String"
					},
					{
						"name": "05608600",
						"type": "String"
					},
					{
						"name": "5272.0",
						"type": "String"
					},
					{
						"name": "33.0",
						"type": "String"
					},
					{
						"name": "0.0",
						"type": "String"
					},
					{
						"name": "202008",
						"type": "String"
					},
					{
						"name": "2020",
						"type": "String"
					},
					{
						"name": "08",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_OBJECTIF_RH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OBJECTIF RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PartedisEcoulement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PARTEDIS_ECOUL_PREPARED.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Partedis_qte_null')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PriceListeStg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_PRIX"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_price_list_article.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "date_upload",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_ATC4_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "referentiel_atc_4.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "User_lowerCase",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "Right_DR",
						"type": "String"
					},
					{
						"name": "Right_User_lowerCase",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Référentiel - Leviers performance RH.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "Documentation",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Cible",
						"type": "String"
					},
					{
						"name": "Périmètre",
						"type": "String"
					},
					{
						"name": "Levier",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Hiérarchie inclues",
						"type": "String"
					},
					{
						"name": "Hiérarchies exclues",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Valeur Annuelle",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_PRIX')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "referentielPrix.xlsx",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "prix_unitaire",
						"type": "String"
					},
					{
						"name": "Durée_période",
						"type": "String"
					},
					{
						"name": "Période",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SECTEUR_FICTIF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Secteur Fictif",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Exception Sectorisation.xlsx",
						"folderPath": "ATC",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "NoATC",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "DRCde",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SORTIE_MARKETING')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Marketing",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_OFFRE_CHANTIER_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "STG_OFFRE_CHANTIER.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateDébutValidité",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix DO",
						"type": "String"
					},
					{
						"name": "Prix pro",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Offre nationale",
						"type": "String"
					},
					{
						"name": "Année Tarif",
						"type": "String"
					},
					{
						"name": "PotentielP1N",
						"type": "String"
					},
					{
						"name": "PotentielP2N",
						"type": "String"
					},
					{
						"name": "PotentielP3N",
						"type": "String"
					},
					{
						"name": "PotentielP4N",
						"type": "String"
					},
					{
						"name": "PotentielP5N",
						"type": "String"
					},
					{
						"name": "PotentielP6N",
						"type": "String"
					},
					{
						"name": "DateFinValidité",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Date de création",
						"type": "String"
					},
					{
						"name": "NomSignataire1",
						"type": "String"
					},
					{
						"name": "NomSignataire2",
						"type": "String"
					},
					{
						"name": "DateSignataire1",
						"type": "String"
					},
					{
						"name": "DateSignataire2",
						"type": "String"
					},
					{
						"name": "DateDérogation",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_OFFRE_DIFFUS_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "STG_OFFRE_DIFFUS.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateDébutValidité",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix DO",
						"type": "String"
					},
					{
						"name": "Prix pro",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Offre nationale",
						"type": "String"
					},
					{
						"name": "Année Tarif",
						"type": "String"
					},
					{
						"name": "PotentielP1N",
						"type": "String"
					},
					{
						"name": "PotentielP2N",
						"type": "String"
					},
					{
						"name": "PotentielP3N",
						"type": "String"
					},
					{
						"name": "PotentielP4N",
						"type": "String"
					},
					{
						"name": "PotentielP5N",
						"type": "String"
					},
					{
						"name": "PotentielP6N",
						"type": "String"
					},
					{
						"name": "DateFinValidité",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Date de création",
						"type": "String"
					},
					{
						"name": "NomSignataire1",
						"type": "String"
					},
					{
						"name": "NomSignataire2",
						"type": "String"
					},
					{
						"name": "DateSignataire1",
						"type": "String"
					},
					{
						"name": "DateSignataire2",
						"type": "String"
					},
					{
						"name": "DateDérogation",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_OFFRE_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_offre.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix DO",
						"type": "String"
					},
					{
						"name": "Prix pro",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Offre nationale",
						"type": "String"
					},
					{
						"name": "Année Tarif",
						"type": "String"
					},
					{
						"name": "PotentielP1N",
						"type": "String"
					},
					{
						"name": "PotentielP2N",
						"type": "String"
					},
					{
						"name": "PotentielP3N",
						"type": "String"
					},
					{
						"name": "PotentielP4N",
						"type": "String"
					},
					{
						"name": "PotentielP5N",
						"type": "String"
					},
					{
						"name": "PotentielP6N",
						"type": "String"
					},
					{
						"name": "DateFinValidité",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Date de création",
						"type": "String"
					},
					{
						"name": "NomSignataire1",
						"type": "String"
					},
					{
						"name": "NomSignataire2",
						"type": "String"
					},
					{
						"name": "DateSignataire1",
						"type": "String"
					},
					{
						"name": "DateSignataire2",
						"type": "String"
					},
					{
						"name": "DateDérogation",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_CHANTIER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Suivi Offre",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVI_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Suivi Offre",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SVanMarkes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VANMARKES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SessionDataSet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Ecoulements PF VAILLANT Novembre 2020.xlsx",
						"folderPath": "Ecoulement/ORCAB",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte 2020",
						"type": "String"
					},
					{
						"name": "Qte 2019",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkAvntJoinVenteDeroge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth;reference;Code client;qte_ecoulement",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkVanMarkes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VANMARKES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sinktemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal du client livr�;marque;ID marque;ID canal de distribution;Nom du canal;Diffus/Chantier;document_vente (vente directe);Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);Num�ro offre;ATC Corrig� (vente directe);ATC offre;ATC livr�;ATC Performance;NomATC;Matricule;Motif commande (vente directe);Type de facture (vente directe);N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Num�ro du compte;EPS_Nom du compte;EPS_Groupe cible/Typologie g�n�rale;EPS_Sous groupe cible/Typologie d�taill�e;EPS_Compte principal: Num�ro du compte;EPS_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieCommandeBW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Logistique",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieEHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieExpeditionBW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Logistique",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieFacturationBW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Logistique",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieMarketing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieNomenclatureClient')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Logistique",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgOffreChantier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "STG_OFFRE_CHANTIER.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix client",
						"type": "String"
					},
					{
						"name": "Prix négoce",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Typologie projet",
						"type": "String"
					},
					{
						"name": "DateValidite",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgOffreUniq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_offre_unique.xlsx",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Right_Produit",
						"type": "String"
					},
					{
						"name": "Right_Quantité",
						"type": "String"
					},
					{
						"name": "Right_Numéro interne 1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_offre_chantier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_offre_diffus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMPLATE_CALCUL_REM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "calcul de rem",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Liste_contrats_distribution.xlsx",
						"folderPath": "Contrat_distribution",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "Code produits exclus",
						"type": "String"
					},
					{
						"name": "Famille produit",
						"type": "String"
					},
					{
						"name": "Famille produit exclus",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Date de début",
						"type": "String"
					},
					{
						"name": "Date de fin",
						"type": "String"
					},
					{
						"name": "Type de seuil",
						"type": "String"
					},
					{
						"name": "Contrepartie seuil",
						"type": "String"
					},
					{
						"name": "ID seuil",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMPLATE_CONTRAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Vue contrat",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Liste_contrats_distribution.xlsx",
						"folderPath": "Contrat_distribution",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "ID contrat",
						"type": "String"
					},
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "ID Seuil",
						"type": "String"
					},
					{
						"name": "Objectif (avec règles de validation)",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMP_LEVIER_PERFORMANCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMP_LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMP_LEVIER_RH_new')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SAUNIER DUVAL",
						"type": "String"
					},
					{
						"name": "208.0",
						"type": "String"
					},
					{
						"name": "Pièces détachées pour chauffage",
						"type": "String"
					},
					{
						"name": "05608600",
						"type": "String"
					},
					{
						"name": "5272.0",
						"type": "String"
					},
					{
						"name": "33.0",
						"type": "String"
					},
					{
						"name": "0.0",
						"type": "String"
					},
					{
						"name": "202008",
						"type": "String"
					},
					{
						"name": "2020",
						"type": "String"
					},
					{
						"name": "08",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMP_PRIX_PAR_PERIODE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_PRIX"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMP_baseCommercialOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth,year,month,qte_ecoulement,ca_ecoulement,POSSAMidString,HubSAPid,reference,distributeur,agence_code,marque,Code postal,marque_name,toreplicate,dd,rcount,indexcols2,qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_ECOULEMENT_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "import ecoulement for tereva",
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TEREVA_ECOULEMENT.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "societe",
						"type": "String"
					},
					{
						"name": "region_lib",
						"type": "String"
					},
					{
						"name": "sgeo",
						"type": "String"
					},
					{
						"name": "sgeo_lib",
						"type": "String"
					},
					{
						"name": "agence",
						"type": "String"
					},
					{
						"name": "agence_lib",
						"type": "String"
					},
					{
						"name": "dep_ag",
						"type": "String"
					},
					{
						"name": "frs",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "article_lib",
						"type": "String"
					},
					{
						"name": "dm",
						"type": "String"
					},
					{
						"name": "ref_frs",
						"type": "String"
					},
					{
						"name": "vva (m) n",
						"type": "String"
					},
					{
						"name": "vva (m) n-1",
						"type": "String"
					},
					{
						"name": "qte (m) n",
						"type": "String"
					},
					{
						"name": "qte (m) n-1",
						"type": "String"
					},
					{
						"name": "vva (c) n",
						"type": "String"
					},
					{
						"name": "vva (c) n-1",
						"type": "String"
					},
					{
						"name": "qte (c) n",
						"type": "String"
					},
					{
						"name": "qte (c) n-1",
						"type": "String"
					},
					{
						"name": "var. vva (m)",
						"type": "String"
					},
					{
						"name": "var. qte (m)",
						"type": "String"
					},
					{
						"name": "var. vva (c)",
						"type": "String"
					},
					{
						"name": "var. qte (c)",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_EC_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/TEREVA"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/TEREVA"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_tereva.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/TEREVA"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TEREVA_ECOUL_PREPARED.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "base commerciale.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal du client livré",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "ID marque",
						"type": "String"
					},
					{
						"name": "ID canal de distribution",
						"type": "String"
					},
					{
						"name": "Nom du canal",
						"type": "String"
					},
					{
						"name": "Diffus/Chantier",
						"type": "String"
					},
					{
						"name": "document_vente (vente directe)",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre (vente directe)",
						"type": "String"
					},
					{
						"name": "Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Type poste Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Numéro offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Motif commande (vente directe)",
						"type": "String"
					},
					{
						"name": "Type de facture (vente directe)",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Nom du compte",
						"type": "String"
					},
					{
						"name": "EPS_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "EPS_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N1 SAP ",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N2 SAP ",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N1 SAP",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N2 SAP",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TYPOLOGIE_EPS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "report1623684783907",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Extraction comptes EPS_Typologie_Sous Typo_Compte Principal.xlsx",
						"folderPath": "Client",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Compte principal: Nom du compte",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TerevaOrgaNotFound')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Error finding organisation not found",
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/TEREVA"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestAfterArticulationOffreJoin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org_commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Ann�e civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "CA cd�",
						"type": "String"
					},
					{
						"name": "Qt� livr�e",
						"type": "String"
					},
					{
						"name": "CA livr�",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Cout standard cd�",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livr�",
						"type": "String"
					},
					{
						"name": "Cout standard factur�",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "P�riode",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "Ecoulement origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "ATC performance",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestFacturation43')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org_commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Ann�e civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "CA cd�",
						"type": "String"
					},
					{
						"name": "Qt� livr�e",
						"type": "String"
					},
					{
						"name": "CA livr�",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Cout standard cd�",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livr�",
						"type": "String"
					},
					{
						"name": "Cout standard factur�",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "P�riode",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "Ecoulement origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "ATC performance",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENTES_DIRECTES_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTES DIRECTES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENTES_DIRECTES_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTES DIRECTES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VENTES_DIRECTES_PREPARATION.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFCONFORT_ECOULEMENT_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFCONFORT_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFCONFORT_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VFCONFORT_ECOUL_PREPARED.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "ReprÃ©sentant",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFINPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CONFORT_ECOULEMENT.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "N° Département",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "Code point de vente",
						"type": "String"
					},
					{
						"name": "Libellé point de vente",
						"type": "String"
					},
					{
						"name": "Code Depot source",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "N° Siret",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Ville",
						"type": "String"
					},
					{
						"name": "Année livraison",
						"type": "String"
					},
					{
						"name": "Mois livraison",
						"type": "String"
					},
					{
						"name": "code fournisseur",
						"type": "String"
					},
					{
						"name": "fournisseur principal",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "produit",
						"type": "String"
					},
					{
						"name": "Réference",
						"type": "String"
					},
					{
						"name": "Qte en unité de vente",
						"type": "String"
					},
					{
						"name": "Montant prv net",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					},
					{
						"name": "Libellé Point de Vente",
						"type": "String"
					},
					{
						"name": "Code Depot Source",
						"type": "String"
					},
					{
						"name": "Code Client",
						"type": "String"
					},
					{
						"name": "N° SIRET",
						"type": "String"
					},
					{
						"name": "Code Postal",
						"type": "String"
					},
					{
						"name": "Numéro Fournisseur",
						"type": "String"
					},
					{
						"name": "Année Livraison",
						"type": "String"
					},
					{
						"name": "Mois Livraison",
						"type": "String"
					},
					{
						"name": "Code Fournisseur",
						"type": "String"
					},
					{
						"name": "Fournisseur Principal",
						"type": "String"
					},
					{
						"name": "Code Produit",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Code Point de Vente",
						"type": "String"
					},
					{
						"name": "Qte en Unité de Vente",
						"type": "String"
					},
					{
						"name": "Montant PRV Net",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ventedirectTemp.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/afctationflows')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "atc_affectation_lower",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/allECoulementPrepared')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "REFFOURNISSEUR",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "Nom Coopérative",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/allUnionedDistributor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/article_hierarchi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HIERARCHIE_ARTICLE.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					},
					{
						"name": "N1.groupe",
						"type": "String"
					},
					{
						"name": "N2.groupe",
						"type": "String"
					},
					{
						"name": "N3.groupe",
						"type": "String"
					},
					{
						"name": "N4.groupe",
						"type": "String"
					},
					{
						"name": "N5.groupe",
						"type": "String"
					},
					{
						"name": "N6.groupe",
						"type": "String"
					},
					{
						"name": "N7.groupe",
						"type": "String"
					},
					{
						"name": "N1.locale",
						"type": "String"
					},
					{
						"name": "N2.locale",
						"type": "String"
					},
					{
						"name": "N3.locale",
						"type": "String"
					},
					{
						"name": "N4.locale",
						"type": "String"
					},
					{
						"name": "N5.locale",
						"type": "String"
					},
					{
						"name": "N6.locale",
						"type": "String"
					},
					{
						"name": "N7.locale",
						"type": "String"
					},
					{
						"name": "N1.groupe.designation",
						"type": "String"
					},
					{
						"name": "N2.groupe.designation",
						"type": "String"
					},
					{
						"name": "N3.groupe.designation",
						"type": "String"
					},
					{
						"name": "N4.groupe.designation",
						"type": "String"
					},
					{
						"name": "N5.groupe.designation",
						"type": "String"
					},
					{
						"name": "N6.groupe.designation",
						"type": "String"
					},
					{
						"name": "N7.groupe.designation",
						"type": "String"
					},
					{
						"name": "N1.locale.designation",
						"type": "String"
					},
					{
						"name": "N2.locale.designation",
						"type": "String"
					},
					{
						"name": "N3.locale.designation",
						"type": "String"
					},
					{
						"name": "N4.locale.designation",
						"type": "String"
					},
					{
						"name": "N5.locale.designation",
						"type": "String"
					},
					{
						"name": "N6.locale.designation",
						"type": "String"
					},
					{
						"name": "N7.locale.designation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/associationoffre')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ArticulationSap.xlsx",
						"folderPath": "Offre",
						"container": "data-input"
					},
					"sheetIndex": 0,
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "Référence Offre BA",
						"type": "String"
					},
					{
						"name": "Qté Cdée",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atc_affectation_lower')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atc_c2021_lower')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atc_joined')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "atc_fuzzyjoined.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR_x",
						"type": "String"
					},
					{
						"name": "matches",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR_y",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atc_lower')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "atc_affectation_lower.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "ID SAP",
						"type": "String"
					},
					{
						"name": "Diffus/Chantier",
						"type": "String"
					},
					{
						"name": "Plan prime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atc_replicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "atc_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR_x",
						"type": "String"
					},
					{
						"name": "matches",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR_y",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atcc2021')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "atc_c2021_lower",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avoir')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "T_DSC",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Avoirs.xlsx",
						"folderPath": "Avoir",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "Code_depot",
						"type": "String"
					},
					{
						"name": "Depot",
						"type": "String"
					},
					{
						"name": "NoFrs",
						"type": "String"
					},
					{
						"name": "FOUR2",
						"type": "String"
					},
					{
						"name": "C_Four",
						"type": "String"
					},
					{
						"name": "Lib_Four",
						"type": "String"
					},
					{
						"name": "Categorie",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Financement",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "Date_Debut",
						"type": "String"
					},
					{
						"name": "Date_Fin",
						"type": "String"
					},
					{
						"name": "NoArtDSC",
						"type": "String"
					},
					{
						"name": "LibArt",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "LIB AGENCE",
						"type": "String"
					},
					{
						"name": "Qté_Ini",
						"type": "String"
					},
					{
						"name": "Solde_Qte",
						"type": "String"
					},
					{
						"name": "Qte_Tot",
						"type": "String"
					},
					{
						"name": "Qte_Retenue",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "NomCli",
						"type": "String"
					},
					{
						"name": "PRR",
						"type": "String"
					},
					{
						"name": "PRS_ligne_BL",
						"type": "String"
					},
					{
						"name": "PA_Ref",
						"type": "String"
					},
					{
						"name": "PA_D",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Ecart",
						"type": "String"
					},
					{
						"name": "Aide",
						"type": "String"
					},
					{
						"name": "Aide_Retenue",
						"type": "String"
					},
					{
						"name": "Aide_Validée_VGF",
						"type": "String"
					},
					{
						"name": "Date_Num",
						"type": "String"
					},
					{
						"name": "P_Fact",
						"type": "String"
					},
					{
						"name": "Clé_Offre_Article",
						"type": "String"
					},
					{
						"name": "Motif_Commentaire",
						"type": "String"
					},
					{
						"name": "Qté_Campagne",
						"type": "String"
					},
					{
						"name": "Prix_Campagne",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "Montant_Avoir",
						"type": "String"
					},
					{
						"name": "NoDocRefac",
						"type": "String"
					},
					{
						"name": "NoLigneDocRefac",
						"type": "String"
					},
					{
						"name": "Contrôle",
						"type": "String"
					},
					{
						"name": "Date_Ctrl",
						"type": "String"
					},
					{
						"name": "Code_Motif_Refus",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "ValidéPar",
						"type": "String"
					},
					{
						"name": "DateAjout",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avoirReplicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "avoir_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "ca_avoir",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avoirToReplicate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avoirUnMappedutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/baseComInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "base commerciale.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal du client livré",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "ID marque",
						"type": "String"
					},
					{
						"name": "ID canal de distribution",
						"type": "String"
					},
					{
						"name": "Nom du canal",
						"type": "String"
					},
					{
						"name": "Diffus/Chantier",
						"type": "String"
					},
					{
						"name": "document_vente (vente directe)",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre (vente directe)",
						"type": "String"
					},
					{
						"name": "Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Type poste Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Numéro offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "DR (ATC Performance)",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Motif commande (vente directe)",
						"type": "String"
					},
					{
						"name": "Type de facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Client_direct_Nom du compte",
						"type": "String"
					},
					{
						"name": "Client direct_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client direct_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client direct_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client direct_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N1 SAP ",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N2 SAP ",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N1 SAP",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N2 SAP",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/baseCommercialOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR_x",
						"type": "String"
					},
					{
						"name": "matches",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR_y",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/basecommercialUnion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "basecommercialUnion .csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/clientehsOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/commandeBW_AC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CommandeBW_AC.xlsx",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "1ereDateLivrDdee",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/commandeBW_AP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil2",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CommandeBW_AP.xlsx",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "1ereDateLivrDdee",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/compteSap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Extraction compte SAP - F.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"range": "",
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Agence commerciale",
						"type": "String"
					},
					{
						"name": "ATC Client",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 1",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 2",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 3",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Rue",
						"type": "String"
					},
					{
						"name": "Dép",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Localité",
						"type": "String"
					},
					{
						"name": "Téléphone 1",
						"type": "String"
					},
					{
						"name": "Numéro de télécopie",
						"type": "String"
					},
					{
						"name": "Attribut 2",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "SIRET",
						"type": "String"
					},
					{
						"name": "Niveau 4",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Groupe de clients",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Groupe de clients 5",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Attribut 1",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Attribut 3",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Payeur",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Témoin suppr. Tous domaines",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_commercial_DTP2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dscModel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OModelDSC.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "code postal",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "qt_plateforme_final",
						"type": "String"
					},
					{
						"name": "ca_plateforme_final",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsc_orga')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_DSC.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eccToReplicate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eccoulementUniforme')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecouPartedisLikeWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_OecoulementPartedislikeWithIndex.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "Période",
						"type": "String"
					},
					{
						"name": "ref2",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulementArticleNotFound')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulementOther')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "outEccNotDscTereva",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulementReplicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccDscTereva_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulementUniformAz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccoulementUniforme.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulemetTocreateIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulmnt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecoulementPartedisWithIndex.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					},
					{
						"name": "indexcols",
						"type": "String"
					},
					{
						"name": "cumcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/expeditionBW_AC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ExpéditionBW_AC.xlsx",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "1ereDateLivrDdee",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/expeditionBW_AP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil2",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ExpéditionBW_AP.xlsx",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "1ereDateLivrDdee",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/extractionSap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC/UnionSAP_EHS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Extraction compte SAP - FR - SDECCF - Liste clients avec Hiérarchie et adresse.xls",
						"folderPath": "Client",
						"container": "data-input"
					},
					"range": "A27:AR31641",
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Agence commerciale",
						"type": "String"
					},
					{
						"name": "ATC Client",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 1",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 2",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 3",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Rue",
						"type": "String"
					},
					{
						"name": "Dép",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Localité",
						"type": "String"
					},
					{
						"name": "Téléphone 1",
						"type": "String"
					},
					{
						"name": "Numéro de télécopie",
						"type": "String"
					},
					{
						"name": "Attribut 2",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "SIRET",
						"type": "String"
					},
					{
						"name": "Niveau 4",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Groupe de clients",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Groupe de clients 5",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Attribut 1",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Attribut 3",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Payeur",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Témoin suppr. Tous domaines",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/extrationSapOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/factorationAVM43')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PREPROD_VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal du client livr�;marque;ID marque;ID canal de distribution;Nom du canal;Diffus/Chantier;document_vente (vente directe);Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);Num�ro offre;ATC Corrig� (vente directe);ATC offre;ATC livr�;DR (ATC Performance);ATC Performance;NomATC;Motif commande (vente directe);Type de facture (vente directe);Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Client_direct_Nom du compte;Client direct_Groupe cible/Typologie g�n�rale;Client direct_Sous groupe cible/Typologie d�taill�e;Client direct_Compte principal: Num�ro du compte;Client direct_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PREPROD_VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturatemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationReplicatedPartedisWithIndex.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": " Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					},
					{
						"name": "indexcols",
						"type": "String"
					},
					{
						"name": "cumcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationBW_AC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FacturationBW_AC.xlsx",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"sheetIndex": 0,
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "1ereDateLivrDdee",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationBW_AP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FacturationBW_AP.xlsx",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "1ereDateLivrDdee",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationDSCTEREVA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForDSCTEREVA",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "fact_filter",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationForDSCTEREVA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationForOtherPlateform')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationForVanMarkes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationForVenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForVenteDirect.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": " Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": " vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "fact_filter",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationOther')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForOther",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "fact_filter",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "date_upload",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationReplicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForOther_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": " Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationReplicatedPartedis')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationVF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FACTURATION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth;reference;Code client;qte_ecoulement",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_OFacturactionPartedisLikeWithIndex.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": "|",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": " Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "toroll",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inFacturationDSC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_facturationDescTEREVA.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inepsv2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "report1635506729086",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Répertoire comptes actifs-inactifs_V2.xlsx",
						"folderPath": "Client",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Ville",
						"type": "String"
					},
					{
						"name": "Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Sous groupe cible/Typologie détaillée",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputRefVMC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "datawarehouse/referentielVMC",
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "referentiel_vmc.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Material",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "VMC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/input_manuel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "input_manuel.xlsx",
						"folderPath": "Ajout Manuel",
						"container": "data-input"
					},
					"sheetIndex": 0,
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal du client livré",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "ID marque",
						"type": "String"
					},
					{
						"name": "ID canal de distribution",
						"type": "String"
					},
					{
						"name": "Nom du canal",
						"type": "String"
					},
					{
						"name": "Diffus/Chantier",
						"type": "String"
					},
					{
						"name": "document_vente (vente directe)",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre (vente directe)",
						"type": "String"
					},
					{
						"name": "Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Type poste Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Numéro offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "DR (ATC Performance)",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Motif commande (vente directe)",
						"type": "String"
					},
					{
						"name": "Type de facture (vente directe)",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Client_direct_Nom du compte",
						"type": "String"
					},
					{
						"name": "Client direct_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client direct_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client direct_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client direct_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N1 SAP ",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N2 SAP ",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N1 SAP",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N2 SAP",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mabilleBefoDecrementation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal;marque;marque_code;canal_distribution_final;nom du canal;canal_final;document_vente;Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);no_offre;ATC offre;ATC livr�;ATC Performance;NomATC;DR;Matricule;Motif commande;Type de facture;Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Num�ro du compte;EPS_Nom du compte;EPS_Groupe cible/Typologie g�n�rale;EPS_Sous groupe cible/Typologie d�taill�e;EPS_Compte principal: Num�ro du compte;EPS_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP;yearmonth;ATC Corrig�",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/marketingInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SORTIE_MARKETING.csv",
						"folderPath": "Marketing",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code article",
						"type": "String"
					},
					{
						"name": "Description article",
						"type": "String"
					},
					{
						"name": "eShop level 1 - CATALOG - désignation",
						"type": "String"
					},
					{
						"name": "eShop level 2 - RANGE - désignation",
						"type": "String"
					},
					{
						"name": "eShop level 3 - FAMILY - désignation",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "CA net",
						"type": "String"
					},
					{
						"name": "Typologie client direct",
						"type": "String"
					},
					{
						"name": "Typologie client indirect",
						"type": "String"
					},
					{
						"name": "Canal de distribution",
						"type": "String"
					},
					{
						"name": "Typologie offre si diffus",
						"type": "String"
					},
					{
						"name": "Typologie projet",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "code article \"groupe\"",
						"type": "String"
					},
					{
						"name": "Prix de vente unitaire",
						"type": "String"
					},
					{
						"name": "VMC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/modelPartedisOutPrepared')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/notDSCTerevaPlateform')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ofactbw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offre')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_offre.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Right_Produit",
						"type": "String"
					},
					{
						"name": "Right_Quantité",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreAtcTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreChantierTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"rowDelimiter": "\n",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreDiffusTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreInChantier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "offreChantierTemp.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "UserLowerCase",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreInDiffus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "offreDiffusTemp.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offre_et_baseCom_sans_matching')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outAvoirNotFound')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outEccNotDSCTEREVA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outFacturation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SAUNIER DUVAL",
						"type": "String"
					},
					{
						"name": "208.0",
						"type": "String"
					},
					{
						"name": "Pièces détachées pour chauffage",
						"type": "String"
					},
					{
						"name": "05608600",
						"type": "String"
					},
					{
						"name": "5272.0",
						"type": "String"
					},
					{
						"name": "33.0",
						"type": "String"
					},
					{
						"name": "0.0",
						"type": "String"
					},
					{
						"name": "202008",
						"type": "String"
					},
					{
						"name": "2020",
						"type": "String"
					},
					{
						"name": "08",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outFacturationForVenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outMarketingCout')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Marketing",
						"container": "data-mart"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outPutReferentielVMC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SAUNIER DUVAL",
						"type": "String"
					},
					{
						"name": "208.0",
						"type": "String"
					},
					{
						"name": "Pièces détachées pour chauffage",
						"type": "String"
					},
					{
						"name": "05608600",
						"type": "String"
					},
					{
						"name": "5272.0",
						"type": "String"
					},
					{
						"name": "33.0",
						"type": "String"
					},
					{
						"name": "0.0",
						"type": "String"
					},
					{
						"name": "202008",
						"type": "String"
					},
					{
						"name": "2020",
						"type": "String"
					},
					{
						"name": "08",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outReferentielATC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outReferentielCTRCTT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "output referentiel CTT&Cttr",
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SAUNIER DUVAL",
						"type": "String"
					},
					{
						"name": "208.0",
						"type": "String"
					},
					{
						"name": "Pièces détachées pour chauffage",
						"type": "String"
					},
					{
						"name": "05608600",
						"type": "String"
					},
					{
						"name": "5272.0",
						"type": "String"
					},
					{
						"name": "33.0",
						"type": "String"
					},
					{
						"name": "0.0",
						"type": "String"
					},
					{
						"name": "202008",
						"type": "String"
					},
					{
						"name": "2020",
						"type": "String"
					},
					{
						"name": "08",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outVenteDeroge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outdsctereva2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outfactDescTereva')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outtest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/partedislile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth;reference;Code client;qte_ecoulement",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/platforme')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Plateformes.xlsx",
						"folderPath": "Plateformes",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pricelist_replicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "prix_moyen_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Distributeur",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "Prix standard",
						"type": "String"
					},
					{
						"name": "N° Période",
						"type": "String"
					},
					{
						"name": "Mois début",
						"type": "String"
					},
					{
						"name": "Mois fin",
						"type": "String"
					},
					{
						"name": "mois1",
						"type": "String"
					},
					{
						"name": "annee1",
						"type": "String"
					},
					{
						"name": "mois2",
						"type": "String"
					},
					{
						"name": "annee2",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prixMoyenSplited')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prixSplitedInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "prixmoyensplit.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prix_moyen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "prix_par_périodeV3.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Distributeur",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "Prix standard",
						"type": "String"
					},
					{
						"name": "N° Période",
						"type": "String"
					},
					{
						"name": "Mois début",
						"type": "String"
					},
					{
						"name": "Mois fin",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ref_affectation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "data",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Référentiel_Affectation Roles Utilisateurs par Code postaux.xlsx",
						"folderPath": "ATC",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "ID SAP",
						"type": "String"
					},
					{
						"name": "Lancement Maj Affectation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ref_atc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "referentiel_atc.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ref_atc_2021')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Bareme",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Copie de referentiel ATC 2021 2020.xlsx",
						"folderPath": "ATC",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/referentielPrix')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "referentielPrix",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "prix_unitaire",
						"type": "String"
					},
					{
						"name": "Durée_période",
						"type": "String"
					},
					{
						"name": "Période",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/responsable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "responsableMappingfuzzy.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "matches",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/responsableOffreChantier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/salerDsc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_wholesaler_orgat.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sortiePardedis')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stg_offre')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix client",
						"type": "String"
					},
					{
						"name": "Prix négoce",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Typologie projet",
						"type": "String"
					},
					{
						"name": "DateValidite",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tVerifBaseComm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tecouunion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "allDistruUnioned.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tempAggregatedAFF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "ATC performance",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tempAvoirReplicatedOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tempFacturactionSM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PREPROD_VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal du client livr�;marque;ID marque;ID canal de distribution;Nom du canal;Diffus/Chantier;document_vente (vente directe);Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);Num�ro offre;ATC Corrig� (vente directe);ATC offre;ATC livr�;DR (ATC Performance);ATC Performance;NomATC;Motif commande (vente directe);Type de facture (vente directe);Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Client_direct_Nom du compte;Client direct_Groupe cible/Typologie g�n�rale;Client direct_Sous groupe cible/Typologie d�taill�e;Client direct_Compte principal: Num�ro du compte;Client direct_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PREPROD_VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tempOffreArticle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "ATC performance",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tempVD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal;marque;marque_code;canal_distribution_final;nom du canal;canal_final;document_vente;Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);no_offre;ATC offre;ATC livr�;ATC Performance;NomATC;DR;Matricule;Motif commande;Type de facture;Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Num�ro du compte;EPS_Nom du compte;EPS_Groupe cible/Typologie g�n�rale;EPS_Sous groupe cible/Typologie d�taill�e;EPS_Compte principal: Num�ro du compte;EPS_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP;yearmonth;ATC Corrig�",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/terevaQteNull')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/TEREVA"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tunionSap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionAllModel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OUnionBasecommercial",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "canal distru",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "right_marque",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionEcoulement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccoulement_union.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "marque_num",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionSapEhsIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "unionClientSapEHS",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/venteDirectePrepared')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vmcinput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "VMC",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Material",
						"type": "String"
					},
					{
						"name": "Description article",
						"type": "String"
					},
					{
						"name": "VMC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wholesalerOrgat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_wholesaler_orgat.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AKVVAILLANT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AKVVAILLANT_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunctionPremium')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Premium plan ressource for azure function",
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunctionPremium_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunctionPremium_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPROD_VAILLANT_ARCHITECTURE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AKVVAILLANT",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('PREPROD_VAILLANT_ARCHITECTURE_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AKVVAILLANT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VAILLANT_ARCHITECTURE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AKVVAILLANT",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('VAILLANT_ARCHITECTURE_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AKVVAILLANT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_sq4')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 12000,
					"startTime": "2021-08-23T12:50:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 5,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ATC_PERFORMANCE_ET_CLIENT_SAP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BASE_AVANT_TRAITEMENT_ATC",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "SECTEUR_FICTIF",
								"type": "DatasetReference"
							},
							"name": "secteurFictif"
						},
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "ExtractionSAP"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtcinput"
						},
						{
							"dataset": {
								"referenceName": "input_manuel",
								"type": "DatasetReference"
							},
							"name": "inputManuel"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "baseCommercialOut",
								"type": "DatasetReference"
							},
							"name": "outFinale"
						},
						{
							"dataset": {
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference"
							},
							"name": "outDTP2"
						}
					],
					"transformations": [
						{
							"name": "atcOffreINNER"
						},
						{
							"name": "atcOffreFULLLEFT"
						},
						{
							"name": "atcOffreOUTERLEFT"
						},
						{
							"name": "updateATCOffre"
						},
						{
							"name": "nullToEmpty"
						},
						{
							"name": "atcOffreTraite"
						},
						{
							"name": "atcCorrigeINNER"
						},
						{
							"name": "atcCorrigeFULLLEFT"
						},
						{
							"name": "atcCorrigeOUTERLEFT"
						},
						{
							"name": "deleteSecteurColumn"
						},
						{
							"name": "updateATCCorrige"
						},
						{
							"name": "atcCorrigetraite"
						},
						{
							"name": "deleteSecteurColumn2"
						},
						{
							"name": "atcPerformance"
						},
						{
							"name": "deleteColumns"
						},
						{
							"name": "placerATCperformance"
						},
						{
							"name": "JoinClientDirect"
						},
						{
							"name": "RenameSAP"
						},
						{
							"name": "JoinClientIndirect"
						},
						{
							"name": "MapDrifted2",
							"description": "Crée un mappage explicite pour chaque colonne dérivée"
						},
						{
							"name": "deleteColumns2"
						},
						{
							"name": "deleteColumns3"
						},
						{
							"name": "AgregateClient"
						},
						{
							"name": "RenameClientDirect"
						},
						{
							"name": "RenameClientIndirect"
						},
						{
							"name": "columnDPT2"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "diffusChantier"
						},
						{
							"name": "endSecteurFictifs"
						},
						{
							"name": "uniqueNoATC"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "endAtc"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "Select2"
						},
						{
							"name": "JoinATCDR"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select5"
						},
						{
							"name": "atcPerformancecast"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Aggregate4"
						},
						{
							"name": "inputManualVerfiaction"
						},
						{
							"name": "renameToDTP2"
						},
						{
							"name": "unionAjoutManuel"
						},
						{
							"name": "yearmonthManuel"
						},
						{
							"name": "origineDeLaLigne"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal du client livré} as string,\n\t\tmarque as string,\n\t\t{ID marque} as string,\n\t\t{ID canal de distribution} as string,\n\t\t{Nom du canal} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{document_vente (vente directe)} as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\t{Numéro offre} as string,\n\t\t{ATC Corrigé (vente directe)} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande (vente directe)} as string,\n\t\t{Type de facture (vente directe)} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\tNoATC as string,\n\t\tATC as string,\n\t\tDRCde as string,\n\t\tFirstName as string,\n\t\tLastName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> secteurFictif\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionSAP\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refAtcinput\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal du client livré} as string,\n\t\tmarque as string,\n\t\t{ID marque} as string,\n\t\t{ID canal de distribution} as string,\n\t\t{Nom du canal} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{document_vente (vente directe)} as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\t{Numéro offre} as string,\n\t\t{ATC Corrigé (vente directe)} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{DR (ATC Performance)} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\t{Motif commande (vente directe)} as string,\n\t\t{Type de facture (vente directe)} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputManuel\nnullToEmpty, endSecteurFictifs join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcOffreINNER\nbaseCommerciale, endSecteurFictifs join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcOffreFULLLEFT\nDerivedColumn1 filter(isNull(NoATC)) ~> atcOffreOUTERLEFT\natcOffreINNER derive({ATC fictif offre} = 1) ~> updateATCOffre\nbaseCommerciale derive({ATC offre} = iif(isNull({ATC offre}), \"\", {ATC offre}),\n\t\t{ATC Corrigé (vente directe)} = iif(isNull({ATC Corrigé (vente directe)}), \"\", {ATC Corrigé (vente directe)})) ~> nullToEmpty\nupdateATCOffre, atcOffreOUTERLEFT union(byName: true)~> atcOffreTraite\ndeleteSecteurColumn, endSecteurFictifs join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcCorrigeINNER\ndeleteSecteurColumn, endSecteurFictifs join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcCorrigeFULLLEFT\natcCorrigeFULLLEFT filter(isNull(NoATC)) ~> atcCorrigeOUTERLEFT\nSelect5 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn\natcCorrigeINNER derive({ATC fictif Corrigé} = 1) ~> updateATCCorrige\nSelect4, updateATCCorrige union(byName: true)~> atcCorrigetraite\ndeleteColumns select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{ATC fictif Corrigé},\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn2\ndeleteSecteurColumn2 derive({ATC Performance} = iif(!isNull({ATC offre} ) && {ATC fictif offre}!=1, {ATC offre}, {ATC livré})) ~> atcPerformance\nSelect3 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif Corrigé},\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteColumns\natcPerformance select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> placerATCperformance\nplacerATCperformance, RenameClientDirect join({Code client livré} == {Client Direct},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinClientDirect\nMapDrifted2 select(mapColumn(\n\t\t{Client Direct} = Client,\n\t\t{Client Direct - Hiérarchie N1 SAP } = {_c4},\n\t\t{Client Direct - Hiérarchie N2 SAP } = {_c6}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameSAP\ndeleteColumns2, RenameClientIndirect join({Numéro client indirect} == {Client Indirect},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinClientIndirect\nExtractionSAP derive({_c2} = toString(byName('_c2')),\n\t\t{_c4} = toString(byName('_c4')),\n\t\t{_c6} = toString(byName('_c6')),\n\t\t{_c8} = toString(byName('_c8')),\n\t\t{_c10} = toString(byName('_c10')),\n\t\t{_c18} = toString(byName('_c18')),\n\t\t{_c22} = toString(byName('_c22')),\n\t\t{_c24} = toString(byName('_c24')),\n\t\t{_c26} = toString(byName('_c26')),\n\t\t{_c28} = toString(byName('_c28')),\n\t\t{_c30} = toString(byName('_c30')),\n\t\t{_c32} = toString(byName('_c32')),\n\t\t{_c34} = toString(byName('_c34')),\n\t\t{_c36} = toString(byName('_c36')),\n\t\t{_c39} = toString(byName('_c39')),\n\t\t{_c41} = toString(byName('_c41')),\n\t\t{_c43} = toString(byName('_c43'))) ~> MapDrifted2\nJoinClientDirect select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteColumns2\nJoinATCDR select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tDR,\n\t\tNomATC = endAtc@NomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteColumns3\nRenameSAP aggregate(groupBy({Client Direct}),\n\t{Client Direct - Hiérarchie N1 SAP } = first({Client Direct - Hiérarchie N1 SAP }),\n\t\t{Client Direct - Hiérarchie N2 SAP } = first({Client Direct - Hiérarchie N2 SAP })) ~> AgregateClient\nAgregateClient select(mapColumn(\n\t\t{Client Direct},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameClientDirect\nAgregateClient select(mapColumn(\n\t\t{Client Indirect} = {Client Direct},\n\t\t{Client Indirect - Hiérarchie N1 SAP} = {Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Indirect - Hiérarchie N2 SAP} = {Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameClientIndirect\ndeleteColumns3 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal} = {Code postal du client livré},\n\t\tmarque,\n\t\tmarque_code = {ID marque},\n\t\tcanal_distribution_final = {ID canal de distribution},\n\t\t{nom du canal} = {Nom du canal},\n\t\tcanal_final = {Diffus/Chantier},\n\t\tdocument_vente = {document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\tno_offre = {Numéro offre},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tDR,\n\t\tMatricule,\n\t\t{Motif commande} = {Motif commande (vente directe)},\n\t\t{Type de facture} = {Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnDPT2\ncolumnDPT2 derive(yearmonth = year+month,\n\t\t{ATC Corrigé} = {ATC Performance}) ~> newColumns\nJoinClientIndirect derive({Diffus/Chantier} = iif({ID canal de distribution}==\"43\", \"Chantier\", \"Diffus\")) ~> diffusChantier\nuniqueNoATC select(mapColumn(\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endSecteurFictifs\nsecteurFictif aggregate(groupBy(NoATC),\n\tATC = last(ATC),\n\t\tDRCde = last(DRCde),\n\t\tFirstName = last(FirstName),\n\t\tLastName = last(LastName)) ~> uniqueNoATC\nnewColumns filter(isNull({ATC offre}) && isNull({ATC livré}) && isNull({ATC Corrigé})) ~> Filter1\nFilter1 aggregate(groupBy({plateforme/vente directe}),\n\tcount = count({plateforme/vente directe})) ~> Aggregate2\nAggregate3 select(mapColumn(\n\t\tATC,\n\t\tNomATC,\n\t\tDR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endAtc\nrefAtcinput select(mapColumn(\n\t\tATC,\n\t\tDR,\n\t\tNomATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(ATC),\n\tDR = first(DR),\n\t\tNomATC = first(NomATC)) ~> Aggregate3\ndeleteColumns3 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{DR (ATC Performance)} = DR,\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Client_direct_Nom du compte} = {EPS_Nom du compte},\n\t\t{Client direct_Groupe cible/Typologie générale} = {EPS_Groupe cible/Typologie générale},\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} = {EPS_Sous groupe cible/Typologie détaillée},\n\t\t{Client direct_Compte principal: Numéro du compte} = {EPS_Compte principal: Numéro du compte},\n\t\t{Client direct_Compte principal: Nom du compte} = {EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ndiffusChantier, endAtc join(toInteger({ATC Performance}) == toInteger(ATC),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinATCDR\nupdateATCOffre filter(isNull({ATC fictif offre})) ~> Filter2\nupdateATCCorrige filter(isNull({ATC fictif Corrigé})) ~> Filter3\natcCorrigetraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif offre},\n\t\t{ATC fictif Corrigé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\natcCorrigeOUTERLEFT select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\natcOffreFULLLEFT derive({ATC fictif offre} = 0) ~> DerivedColumn1\natcOffreTraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect2 derive({ATC Performance} = toString(toInteger({ATC Performance}))) ~> atcPerformancecast\natcPerformancecast, inputManualVerfiaction union(byName: true)~> Union1\nUnion1 aggregate(groupBy({plateforme/vente directe},\n\t\tyear,\n\t\t{affecte/non_affecte}),\n\tquantite = sum(toInteger(quantite))) ~> Aggregate4\norigineDeLaLigne select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{DR (ATC Performance)},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Client_direct_Nom du compte},\n\t\t{Client direct_Groupe cible/Typologie générale},\n\t\t{Client direct_Sous groupe cible/Typologie détaillée},\n\t\t{Client direct_Compte principal: Numéro du compte},\n\t\t{Client direct_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> inputManualVerfiaction\nyearmonthManuel select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal} = {Code postal du client livré},\n\t\tmarque,\n\t\tmarque_code = {ID marque},\n\t\tcanal_distribution_final = {ID canal de distribution},\n\t\t{nom du canal} = {Nom du canal},\n\t\tcanal_final = {Diffus/Chantier},\n\t\tdocument_vente = {document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\tno_offre = {Numéro offre},\n\t\t{ATC Corrigé} = {ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\tDR = {DR (ATC Performance)},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\t{Motif commande} = {Motif commande (vente directe)},\n\t\t{Type de facture} = {Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Client_direct_Nom du compte},\n\t\t{Client direct_Groupe cible/Typologie générale},\n\t\t{Client direct_Sous groupe cible/Typologie détaillée},\n\t\t{Client direct_Compte principal: Numéro du compte},\n\t\t{Client direct_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP},\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToDTP2\nnewColumns, renameToDTP2 union(byName: true)~> unionAjoutManuel\ninputManualVerfiaction derive(yearmonth = year+iif(length(month)==1, \"0\"+month, month)) ~> yearmonthManuel\ninputManuel derive({origine de la ligne} = \"Ajout manuel\") ~> origineDeLaLigne\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\t{Code postal} as string\n\t),\n\tpartitionFileNames:['base commerciale.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outFinale\nunionAjoutManuel sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['BaseCommercialeDTP2.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outDTP2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BASE_AVANT_TRAITEMENT_ATC')]",
				"[concat(variables('factoryId'), '/datasets/SECTEUR_FICTIF')]",
				"[concat(variables('factoryId'), '/datasets/extractionSap')]",
				"[concat(variables('factoryId'), '/datasets/ref_atc')]",
				"[concat(variables('factoryId'), '/datasets/input_manuel')]",
				"[concat(variables('factoryId'), '/datasets/baseCommercialOut')]",
				"[concat(variables('factoryId'), '/datasets/OutputBaseAllDistru')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BaseCommercialePOSTUnion')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "base commercial après UNion",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InUnionBasecommercial",
								"type": "DatasetReference"
							},
							"name": "BCUnion"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "ArticleHierarchi"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "Plateformes"
						},
						{
							"dataset": {
								"referenceName": "ExtractionComptesEPSTypologieSousTypoComptePrincipal",
								"type": "DatasetReference"
							},
							"name": "ExtractionCompte"
						},
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "ClientEHS"
						},
						{
							"dataset": {
								"referenceName": "StgOffreUniq",
								"type": "DatasetReference"
							},
							"name": "StgOffreUnique"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCommercialNotfound",
								"type": "DatasetReference"
							},
							"name": "DataCommercialNotFOund"
						},
						{
							"dataset": {
								"referenceName": "TEMP_baseCommercialOut",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Cleansing"
						},
						{
							"name": "AtcSOurceATC"
						},
						{
							"name": "MarqueID"
						},
						{
							"name": "renameReference"
						},
						{
							"name": "UniqueReferenc"
						},
						{
							"name": "JoinArticle"
						},
						{
							"name": "LeftJoinArticle"
						},
						{
							"name": "QtFinalCaFinalCanalDistributin"
						},
						{
							"name": "toDoubleCA"
						},
						{
							"name": "ExtractYearandMonth"
						},
						{
							"name": "Distributeur"
						},
						{
							"name": "distributeurr"
						},
						{
							"name": "RenameDistributeur"
						},
						{
							"name": "JoinPlateforme"
						},
						{
							"name": "CDistributeur"
						},
						{
							"name": "PossmidString"
						},
						{
							"name": "UnionClientEHSandExtractionCompte"
						},
						{
							"name": "AgregatNumeroCompte"
						},
						{
							"name": "SelectNomClient"
						},
						{
							"name": "JoinCompte"
						},
						{
							"name": "affecteNonaffecte"
						},
						{
							"name": "IdMarque"
						},
						{
							"name": "NomDuCanal"
						},
						{
							"name": "RenameDistrib"
						},
						{
							"name": "FiltrerN1Locale"
						},
						{
							"name": "RenameCaFinal"
						},
						{
							"name": "FiltreReferenceNull"
						},
						{
							"name": "renameColumns"
						},
						{
							"name": "JoinStgOffreUnique"
						},
						{
							"name": "EPSData",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "RenameNUmeroInterne"
						},
						{
							"name": "joinEPS"
						},
						{
							"name": "renameAndRepositionColumns"
						},
						{
							"name": "choiceColumns"
						},
						{
							"name": "columnsChoice"
						},
						{
							"name": "typeParseQuantity"
						},
						{
							"name": "renameColumns1"
						},
						{
							"name": "pointToComme"
						},
						{
							"name": "FilterDSC"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "uniqueCanalAndOffre"
						}
					],
					"script": "source(output(\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tcanal_final as string,\n\t\tid_canal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPOSSAMidString as string,\n\t\treference as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\tyearmonth as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\t{Agence commerciale} as string,\n\t\t{ATC Corrigé} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tHubSAPid as string,\n\t\tNoCli as string,\n\t\t{ATC Performance} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tqt_plateforme_final as string,\n\t\tca_plateforme_final as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tagence_code as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> BCUnion\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ArticleHierarchi\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Plateformes\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionCompte\nsource(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ClientEHS\nsource(output(\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\tRight_Produit as string,\n\t\t{Right_Quantité} as string,\n\t\t{Right_Numéro interne 1} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> StgOffreUnique\nrenameAndRepositionColumns derive({ATC 2} = iif(isNull({ATC 2}),'',{ATC 2}),\n\t\t{ATC 1} = iif(isNull({ATC 1}),'',{ATC 1})) ~> Cleansing\nCleansing derive(ATC = iif(distributeur!='vente directe', \r\n iif({ATC 2}!='', {ATC 2}, {ATC 1}),\r\n  iif({ATC Corrigé}!='', {ATC Corrigé}, iif({ATC 2}!='', {ATC 2}, {ATC 1}))),\n\t\tsource_atc = iif(isNull({ATC 2})||{ATC 2}!='0','[ATC 2]','[ATC 1]')) ~> AtcSOurceATC\nAtcSOurceATC derive(marque_id = marque_id) ~> MarqueID\nArticleHierarchi select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\treference = Article,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\tN1groupe = {N1.groupe},\n\t\tN2groupe = {N2.groupe},\n\t\tN3groupe = {N3.groupe},\n\t\tN4groupe = {N4.groupe},\n\t\tN5groupe = {N5.groupe},\n\t\tN6groupe = {N6.groupe},\n\t\tN7groupe = {N7.groupe},\n\t\tN1locale = {N1.locale},\n\t\tN2locale = {N2.locale},\n\t\tN3locale = {N3.locale},\n\t\tN4locale = {N4.locale},\n\t\tN5locale = {N5.locale},\n\t\tN6locale = {N6.locale},\n\t\tN7locale = {N7.locale},\n\t\tN1groupedesignation = {N1.groupe.designation},\n\t\tN2groupedesignation = {N2.groupe.designation},\n\t\tN3groupedesignation = {N3.groupe.designation},\n\t\tN4groupedesignation = {N4.groupe.designation},\n\t\tN5groupedesignation = {N5.groupe.designation},\n\t\tN6groupedesignation = {N6.groupe.designation},\n\t\tN7groupedesignation = {N7.groupe.designation},\n\t\tN1localedesignation = {N1.locale.designation},\n\t\tN2localedesignation = {N2.locale.designation},\n\t\tN3localedesignation = {N3.locale.designation},\n\t\tN4localedesignation = {N4.locale.designation},\n\t\tN5localedesignation = {N5.locale.designation},\n\t\tN6localedesignation = {N6.locale.designation},\n\t\tN7localedesignation = {N7.locale.designation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameReference\nrenameReference aggregate(groupBy(reference,\n\t\tDescription),\n\tSuccessor = max(Successor),\n\t\tCDis = max(CDis),\n\t\tOrgCm = max(OrgCm),\n\t\tPredecessor = max(Predecessor),\n\t\tSt = max(St),\n\t\t{Désignation Statut} = max({Désignation Statut}),\n\t\t{Deb val} = max({Déb. val.}),\n\t\tN1groupe = max(N1groupe),\n\t\tN2groupe = max(N2groupe),\n\t\tN3groupe = max(N3groupe),\n\t\tN4groupe = max(N4groupe),\n\t\tN5groupe = max(N5groupe),\n\t\tN6groupe = max(N6groupe),\n\t\tN7groupe = max(N7groupe),\n\t\tN1groupedesignation = max(N1groupedesignation),\n\t\tN2groupedesignation = max(N2groupedesignation),\n\t\tN3groupedesignation = max(N3groupedesignation),\n\t\tN4groupedesignation = max(N4groupedesignation),\n\t\tN5groupedesignation = max(N5groupedesignation),\n\t\tN6groupedesignation = max(N6groupedesignation),\n\t\tN7groupedesignation = max(N7groupedesignation),\n\t\tN1localedesignation = max(N1localedesignation),\n\t\tN2localedesignation = max(N2localedesignation),\n\t\tN3localedesignation = max(N3localedesignation),\n\t\tN4localedesignation = max(N4localedesignation),\n\t\tN5localedesignation = max(N5localedesignation),\n\t\tN6localedesignation = max(N6localedesignation),\n\t\tN7localedesignation = max(N7localedesignation),\n\t\tN1locale = max(N1locale),\n\t\tN2locale = max(N2locale),\n\t\tN3locale = max(N3locale),\n\t\tN4locale = max(N4locale),\n\t\tN5locale = max(N5locale),\n\t\tN6locale = max(N6locale),\n\t\tN7locale = max(N7locale),\n\t\t{Hiérarchgroupe} = max({Hiérarch.groupe}),\n\t\t{Hiérarchlocale} = max({Hiérarch.locale})) ~> UniqueReferenc\nMarqueID, UniqueReferenc join(coalesce(toString(toInteger(replace(renameAndRepositionColumns@reference, \" \", \"\"))),replace(renameAndRepositionColumns@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(UniqueReferenc@reference, \" \", \"\"))),replace(UniqueReferenc@reference, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinArticle\nMarqueID, UniqueReferenc join(coalesce(toString(toInteger(replace(renameAndRepositionColumns@reference, \" \", \"\"))),replace(renameAndRepositionColumns@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(UniqueReferenc@reference, \" \", \"\"))),replace(UniqueReferenc@reference, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinArticle\ntoDoubleCA derive(qt_final = coalesce(qt_ecc_enrichi ,{qte plateforme final}  ),\n\t\tca_final = coalesce( ca_ecc_enrichi, {ca plateforme final} ),\n\t\tcanal_distribution_final = id_canal_final) ~> QtFinalCaFinalCanalDistributin\nRenameCaFinal derive(ca_ecc_enrichi = toDouble(ca_ecc_enrichi),\n\t\t{ca plateforme final} = toDouble({ca plateforme final})) ~> toDoubleCA\nQtFinalCaFinalCanalDistributin derive(year = substring(yearmonth,1,4),\n\t\tmonth = substring(yearmonth,5,2)) ~> ExtractYearandMonth\nPlateformes derive(Distributeur = lower(WholeSalerID),\n\t\tDist = lower(WholeSalerID)) ~> Distributeur\nDistributeur derive(Distributeur = iif(Distributeur=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(Distributeur, 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(Distributeur, 'dsc')>0, 'dsc', \r\n    iif(instr(Distributeur, 'vf' )>0, 'vf', \r\n     iif(instr(Distributeur, 'sonac' )>0, 'sonac',\r\nDist)))))) ~> distributeurr\ndistributeurr select(mapColumn(\n\t\tHubSAPid,\n\t\tt_distrubuteur = Distributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistributeur\nExtractYearandMonth, RenameDistributeur join(RenameCaFinal@HubSAPid == RenameDistributeur@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinPlateforme\nJoinPlateforme derive(distributeur = iif(isNull(RenameDistributeur@HubSAPid),distributeur, 'plateforme '+t_distrubuteur)) ~> CDistributeur\nCDistributeur derive(POSSAMidString = coalesce(POSSAMidString , RenameCaFinal@HubSAPid)) ~> PossmidString\nExtractionCompte, SelectNomClient union(byName: true)~> UnionClientEHSandExtractionCompte\nUnionClientEHSandExtractionCompte aggregate(groupBy({Numéro du compte}),\n\t{Nom du compte} = max({Nom du compte}),\n\t\t{Groupe cible/Typologie générale} = max({Groupe cible/Typologie générale}),\n\t\t{Sous groupe cible/Typologie détaillée} = max({Sous groupe cible/Typologie détaillée}),\n\t\t{Compte principal: Numéro du compte} = max({Compte principal: Numéro du compte}),\n\t\t{Compte principal: Nom du compte} = max({Compte principal: Nom du compte})) ~> AgregatNumeroCompte\nClientEHS select(mapColumn(\n\t\t{Numéro du compte} = Client,\n\t\t{Nom du compte} = Nom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNomClient\nPossmidString, EPSData join(toInteger(POSSAMidString) == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCompte\nchoiceColumns derive({affecte/non_affecte} = iif(  ( data_origin ==\"vente directe\") , \"affecté\" , \r\n   iif(  ( data_origin == \"facturation decrementé\"  || data_origin==\"facturation sans ecoulement\" || data_origin==\"decrementation ecoulement sans matching\") ,\r\n    \"non affecté\" ,\r\n      iif( ( (distributeur == \"plateforme dsc\" || distributeur == \"plateforme tereva\") && data_origin == \"facturation\" ), \"non affecté\", \"affecté\")\r\n    )  \r\n)) ~> affecteNonaffecte\naffecteNonaffecte derive({id marque} = marque_id) ~> IdMarque\nIdMarque derive({nom du canal} = iif(canal_distribution_final=='45', 'FP', \r\n iif(canal_distribution_final=='51', 'FS', \r\n  iif(canal_distribution_final=='43', 'FC', 'FD')))) ~> NomDuCanal\nNomDuCanal select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré} = POSSAMidString,\n\t\t{code client plateforme livree} = HubSAPid,\n\t\t{code produit} = reference,\n\t\t{plateforme/vente directe} = distributeur,\n\t\t{Code postal},\n\t\tmarque = marque_name,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Canal distribution} = id_canal_final,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite = qt_final,\n\t\tca = ca_final,\n\t\t{origine de la ligne} = data_origin,\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC offre} = {ATC 2},\n\t\t{ATC livré} = {ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_code = marque_id,\n\t\t{Document de vente} = document_vente,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tmarque_id,\n\t\t{ATC Performance} = ATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistrib\nRenameDistrib filter(N1locale==\"FA\"||\r\nN1locale==\"FB\"||\r\nN1locale==\"FC\"||\r\nN1locale==\"FD\"||\r\nN1locale==\"FE\"||\r\nN1locale==\"FG\"||\r\nN1locale==\"FH\"||\r\nN1locale==\"FL\"||\r\nN1locale==\"FM\"||\r\nN1locale==\"FP\"||\r\nN1locale==\"FR\"||\r\nN1locale==\"FV\") ~> FiltrerN1Locale\nJoinArticle select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = renameAndRepositionColumns@reference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\t{Secteur d'activité},\n\t\tdocument_vente = {Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_ecc_enrichi = ca_final,\n\t\tqt_ecc_enrichi = qt_final,\n\t\t{qte plateforme final} = qt_plateforme_final,\n\t\t{ca plateforme final} = ca_plateforme_final,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\t{ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameCaFinal\nLeftJoinArticle filter(isNull(UniqueReferenc@reference)) ~> FiltreReferenceNull\nFiltrerN1Locale select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\t{plateforme/vente directe},\n\t\t{Code postal},\n\t\tmarque,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite,\n\t\tca,\n\t\t{origine de la ligne},\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_code,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\t{ATC Performance},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrenameColumns, RenameNUmeroInterne join(canal_final == canal\n\t&& no_offre == Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStgOffreUnique\nAgregatNumeroCompte derive({Numéro du compte} = toInteger({Numéro du compte})) ~> EPSData\nuniqueCanalAndOffre select(mapColumn(\n\t\tMarque,\n\t\t{Quantité},\n\t\t{Numéro client indirect} = {Numéro interne 1},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tATC,\n\t\tcanal,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\tRight_Produit,\n\t\t{Right_Quantité},\n\t\t{Right_Numéro interne 1}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameNUmeroInterne\nJoinStgOffreUnique, EPSData join(toInteger({Numéro client indirect}) == EPSData@{Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinEPS\nBCUnion select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Agence commerciale},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2} = {ATC Performance},\n\t\t{ATC 1} = ATC,\n\t\t{ATC Corrigé},\n\t\tNomATC,\n\t\tMatricule,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_qte_ecoulement,\n\t\tSum_ca_ecoulement,\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAndRepositionColumns\nJoinCompte select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = RenameCaFinal@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_ecc_enrichi,\n\t\tqt_ecc_enrichi,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\t{ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tHubSAPid = RenameDistributeur@HubSAPid,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> choiceColumns\njoinEPS select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal},\n\t\tmarque = renameColumns@marque,\n\t\tmarque_code,\n\t\t{Canal distribution},\n\t\t{nom du canal},\n\t\tcanal_distribution_final,\n\t\tcanal_final,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\tno_offre,\n\t\t{ATC Corrigé},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tqte_ecoulement,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\t{Motif commande},\n\t\t{Type de facture},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte} = renameColumns@{Numéro du compte},\n\t\t{EPS_Nom du compte} = renameColumns@{Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale} = renameColumns@{Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée} = renameColumns@{Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte} = renameColumns@{Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte} = renameColumns@{Compte principal: Nom du compte},\n\t\tca_ecoulement,\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tATC,\n\t\tcanal,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\t{Numéro du compte} = EPSData@{Numéro du compte},\n\t\t{Nom du compte} = AgregatNumeroCompte@{Nom du compte},\n\t\t{Numero Interne_ Groupe cible/Typologie générale} = AgregatNumeroCompte@{Groupe cible/Typologie générale},\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} = AgregatNumeroCompte@{Sous groupe cible/Typologie détaillée},\n\t\t{Numero Interne_ Compte principal: Numéro du compte} = AgregatNumeroCompte@{Compte principal: Numéro du compte},\n\t\t{Numero Interne_ Compte principal: Nom du compte} = AgregatNumeroCompte@{Compte principal: Nom du compte},\n\t\t{Jour calendaire}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoice\ncolumnsChoice derive(quantite = toInteger(quantite),\n\t\tmarque = iif(marque_code=='1604', \"SaunierDuval\", iif(marque_code=='1621', \"Vaillant\", \"\"))) ~> typeParseQuantity\ntypeParseQuantity select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré} = {Code postal},\n\t\tmarque,\n\t\t{ID marque} = marque_code,\n\t\t{ID canal de distribution} = {Canal distribution},\n\t\t{Nom du canal} = {nom du canal},\n\t\t{Diffus/Chantier} = canal_final,\n\t\t{document_vente (vente directe)} = document_vente,\n\t\t{Agence commerciale corrigé (vente directe)} = {Agence commerciale corrigé},\n\t\t{Donneur d'ordre (vente directe)} = {Donneur d'ordre},\n\t\t{Facture (vente directe)} = Facture,\n\t\t{Type poste Facture (vente directe)} = {Type poste Facture},\n\t\t{Numéro offre} = no_offre,\n\t\t{ATC Corrigé (vente directe)} = {ATC Corrigé},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)} = {Motif commande},\n\t\t{Type de facture (vente directe)} = {Type de facture},\n\t\tDescription,\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale} = {Numero Interne_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} = {Numero Interne_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte} = {Numero Interne_ Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte} = {Numero Interne_ Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns1\nrenameColumns1 derive(ca = replace(toString(ca), \".\", \",\")) ~> pointToComme\nJoinCompte filter(instr(distributeur, \"dsc\")>0 && (year==\"2020\")&&  instr(data_origin, \"retr\")>0) ~> FilterDSC\nFilterDSC aggregate(column1 = sum(toDouble(qt_final))) ~> Aggregate1\nStgOffreUnique aggregate(groupBy(canal,\n\t\tOffre),\n\tMarque = last(Marque),\n\t\t{Quantité} = last({Quantité}),\n\t\t{Numéro interne 1} = last( {Numéro interne 1}),\n\t\tClient = last(Client),\n\t\tResponsable = last(Responsable),\n\t\tCODE_CMI = last(CODE_CMI),\n\t\tNOM_CMI = last(NOM_CMI),\n\t\tATC = last(ATC),\n\t\tProduit = last(Produit),\n\t\t{Numéro interne 2} = last({Numéro interne 2}),\n\t\tRight_Produit = last(Right_Produit),\n\t\t{Right_Quantité} = last({Right_Quantité}),\n\t\t{Right_Numéro interne 1} = last({Right_Numéro interne 1})) ~> uniqueCanalAndOffre\nFiltreReferenceNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['BaseCommercialArticle.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DataCommercialNotFOund\npointToComme sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{yearmonth,year,month,qte_ecoulement,ca_ecoulement,POSSAMidString,HubSAPid,reference,distributeur,agence_code,marque,Code postal,marque_name,toreplicate,dd,rcount,indexcols2,qte_ecc} as string\n\t),\n\tpartitionFileNames:['base commerciale.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InUnionBasecommercial')]",
				"[concat(variables('factoryId'), '/datasets/article_hierarchi')]",
				"[concat(variables('factoryId'), '/datasets/PLATEFORMES')]",
				"[concat(variables('factoryId'), '/datasets/ExtractionComptesEPSTypologieSousTypoComptePrincipal')]",
				"[concat(variables('factoryId'), '/datasets/ClientEHS')]",
				"[concat(variables('factoryId'), '/datasets/StgOffreUniq')]",
				"[concat(variables('factoryId'), '/datasets/DataCommercialNotfound')]",
				"[concat(variables('factoryId'), '/datasets/TEMP_baseCommercialOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_REMUNERATION_WITH_DATE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_REMUNERATION",
								"type": "DatasetReference"
							},
							"name": "CALCULREMUNERATION"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "dropArticleList"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "toKeep1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "toKeep"
						},
						{
							"name": "UniontoKeep"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "toDelete"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "toDelete2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "uniqueForCA"
						},
						{
							"name": "quantite"
						},
						{
							"name": "uniqueForQuantity"
						},
						{
							"name": "UnionCAQuantity"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "verificationDateDebutDateFin"
						},
						{
							"name": "filtreDate"
						},
						{
							"name": "filtreMarque"
						},
						{
							"name": "filter1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "hierarchieLocaleNonVide"
						},
						{
							"name": "coalesceArticle"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as date 'yyyy-MM-dd',\n\t\t{Date de fin} as date 'yyyy-MM-dd',\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, calculRem join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(replace(Canal, \" \", \"\"), \"<>\", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque)) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\ndropArticleList foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\ncoalesceArticle aggregate(groupBy(Article),\n\thierarchieLocale = first({Hiérarch.locale})) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropArticleList\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu, uniqueReferenceArticle join(coalesce(toString(toInteger(replace(code_produit, \" \", \"\"))),replace(code_produit, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ngetHierarchieLocale derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale} = hierarchieLocale,\n\t\tcount = hierarchieLocale,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\nFlattenFamilleExclu filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> toKeep1\nFlattenFamilleExclu filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> toKeep\ntoKeep1, toKeep union(byName: true)~> UniontoKeep\nUniontoKeep derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\nFlattenPOS, baseColumnChoice join(coalesce(toString(toInteger(replace(code_produit, \" \", \"\"))),replace(code_produit, \" \", \"\")) == coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\nfiltreDate select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque = FlattenPOS@Marque,\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nDerivedColumn1 select(mapColumn(\n\t\tyear,\n\t\tyearmonth,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> toDelete\ntoDelete filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif( !isNull(Canal) && Canal=={nom du canal} , 1, 0)) ~> toDelete2\ntoDelete2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca))) ~> uniqueForCA\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite))) ~> uniqueForQuantity\nuniqueForCA, uniqueForQuantity union(byName: true)~> UnionCAQuantity\nbaseCommerciale derive(ca = replace(ca, \",\", \".\")) ~> DerivedColumn1\nfiltreMarque derive(betweenDate = between(toDate(year+\"-\"+substring(yearmonth, 5, 2)+\"-01\"), {Date de début}, {Date de fin})) ~> verificationDateDebutDateFin\nverificationDateDebutDateFin filter(betweenDate==true()) ~> filtreDate\ninnerBaseCommerciale filter(lower(replace(FlattenPOS@Marque,\" \",\"\")) == lower(replace(baseColumnChoice@marque,\" \",\"\"))) ~> filtreMarque\nbaseColumnChoice filter({Code client livré}==\"16000761\" || {Code client livré}==\"16000475\" || {Code client livré}==\"\") ~> filter1\nfilter1 filter(year==\"2021\" && {nom du canal} != \"FC\" && marque==\"Vaillant\") ~> filter2\nfilter2 aggregate(groupBy(year),\n\tca = sum(toDouble(ca))) ~> aggregate1\narticle filter(!isNull({Hiérarch.locale})) ~> hierarchieLocaleNonVide\nhierarchieLocaleNonVide derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> coalesceArticle\nUnionCAQuantity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_REMUNERATION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> CALCULREMUNERATION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CONTRAT_CADRE')]",
				"[concat(variables('factoryId'), '/datasets/CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHIE_ARTICLE_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/InputBaseCommercialMarketing')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CALCUL_REM')]",
				"[concat(variables('factoryId'), '/datasets/OUTPUT_CALCUL_REMUNERATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_SEUIL_DEBUG')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "LEVIER_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "levier"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "CALCULSEUIL"
						},
						{
							"dataset": {
								"referenceName": "outtest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "dropArticleList"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "toKeep1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "toKeep"
						},
						{
							"name": "UniontoKeep"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "toDelete"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "uniqueForCA"
						},
						{
							"name": "quantite"
						},
						{
							"name": "uniqueForQuantity"
						},
						{
							"name": "UnionCAQuantity"
						},
						{
							"name": "innerTemplateContrat"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "Realise"
						},
						{
							"name": "unique"
						},
						{
							"name": "innerTemplateRemuneration"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueYear"
						},
						{
							"name": "columnToJoin"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "addAllYear"
						},
						{
							"name": "verificationDateDebutDateFin"
						},
						{
							"name": "filtreDate"
						},
						{
							"name": "filtreMarque"
						},
						{
							"name": "filter2"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "hierarchieNull"
						},
						{
							"name": "aggregate3"
						},
						{
							"name": "deleteSpace"
						},
						{
							"name": "derivedCol"
						},
						{
							"name": "derivedColum"
						},
						{
							"name": "coalesceArticle"
						},
						{
							"name": "aggregate5"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "filter3"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derive"
						},
						{
							"name": "aggregate6"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as date 'yyyy-MM-dd',\n\t\t{Date de fin} as date 'yyyy-MM-dd',\n\t\t{Type de seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string,\n\t\t{Seuil min} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levier\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, levier join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(replace(Canal, \" \", \"\"), \"<>\", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque)) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\ndropArticleList foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\ndeleteSpace aggregate(groupBy(Article),\n\thierarchieLocale = first({Hiérarch.locale})) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropArticleList\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\ngetHierarchieLocale filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring(hierarchieLocale,1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> toKeep1\ngetHierarchieLocale filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring(hierarchieLocale,1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> toKeep\ntoKeep1, toKeep union(byName: true)~> UniontoKeep\nUniontoKeep derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale} = hierarchieLocale,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\ncoalesceArticle, baseColumnChoice join(coalesce(toString(toInteger(Article)),Article) == coalesce(toString(toInteger({code produit})),{code produit}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\nfiltreDate select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque = FlattenPOS@Marque,\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nDerivedColumn3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> toDelete\ntoDelete filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif( !isNull(Canal) && Canal=={nom du canal} , 1, 0)) ~> DerivedColumn2\nDerivedColumn2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca))) ~> uniqueForCA\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite))) ~> uniqueForQuantity\nuniqueForCA, uniqueForQuantity union(byName: true)~> UnionCAQuantity\nUnionCAQuantity, templateContrat join(UnionCAQuantity@{ID contrat cadre} == templateContrat@{ID contrat cadre}\n\t&& UnionCAQuantity@{ID contrat} == templateContrat@{ID contrat}\n\t&& UnionCAQuantity@{ID levier} == templateContrat@{ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateContrat\ninnerTemplateContrat select(mapColumn(\n\t\t{ID contrat cadre} = UnionCAQuantity@{ID contrat cadre},\n\t\t{ID contrat} = UnionCAQuantity@{ID contrat},\n\t\t{ID levier} = UnionCAQuantity@{ID levier},\n\t\tyear,\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité},\n\t\t{ID Seuil},\n\t\t{Objectif (avec règles de validation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\ndropColumns filter({Réalisé}>=toDouble({Objectif (avec règles de validation)})) ~> Realise\nRealise aggregate(groupBy(year,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Max ID Seuil} = max(toInteger({ID Seuil}))) ~> unique\nunique, calculRem join(unique@{ID levier} == calculRem@{ID levier}\n\t&& toInteger({Max ID Seuil}) == toInteger({ID seuil}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateRemuneration\ninnerTemplateRemuneration select(mapColumn(\n\t\tyear,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier} = unique@{ID levier},\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nbaseCommerciale derive(ca = replace(ca, \",\", \".\"),\n\t\t{code produit} = replace({code produit}, \" \", \"\")) ~> DerivedColumn3\ndropColumnsInCommon, addAllYear join(dropColumnsInCommon@{ID contrat cadre} == dropArticleList@{ID contrat cadre}\n\t&& dropColumnsInCommon@{ID contrat} == dropArticleList@{ID contrat}\n\t&& dropColumnsInCommon@{ID levier} == dropArticleList@{ID levier}\n\t&& dropColumnsInCommon@year == uniqueYear@year,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\t{ID contrat cadre} = dropArticleList@{ID contrat cadre},\n\t\t{ID contrat} = dropArticleList@{ID contrat},\n\t\t{ID levier} = dropArticleList@{ID levier},\n\t\tyear = uniqueYear@year\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\ndropColumnsInCommon aggregate(groupBy(year),\n\tjoin = max({ID contrat cadre})) ~> uniqueYear\nuniqueYear derive(join = 1) ~> columnToJoin\ndropArticleList derive(join = 1) ~> DerivedColumn4\nDerivedColumn4, columnToJoin join(DerivedColumn4@join == columnToJoin@join,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> addAllYear\nfiltreMarque derive(betweenDate = between(toDate(year+\"-\"+substring(yearmonth, 5, 2)+\"-01\"), {Date de début}, {Date de fin})) ~> verificationDateDebutDateFin\nverificationDateDebutDateFin filter(betweenDate==true()) ~> filtreDate\ninnerBaseCommerciale filter(lower(replace(FlattenPOS@Marque,\" \",\"\")) == lower(replace(baseColumnChoice@marque,\" \",\"\"))) ~> filtreMarque\nfiltreCanal filter({ID levier}==\"20211621110\") ~> filter2\nderivedColumn1 aggregate(groupBy({ID levier}),\n\tca = sum(toDouble(ca))) ~> aggregate1\narticle filter(!isNull({Hiérarch.locale})) ~> hierarchieNull\nuniqueReferenceArticle aggregate(groupBy(Article),\n\t{Nombre base} = count(Article)) ~> aggregate3\nhierarchieNull derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> deleteSpace\nbaseColumnChoice derive({code produit} = coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\"))) ~> derivedCol\ninnerBaseCommerciale derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> derivedColum\nFlattenPOS derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> coalesceArticle\nFlattenCodeProduitExclu aggregate(groupBy(code_produit),\n\tcount = count(code_produit)) ~> aggregate5\nFlattenFamilleExclu, uniqueReferenceArticle join(coalesce(toString(toInteger(replace(code_produit, \" \", \"\"))),replace(code_produit, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ntoKeep filter({ID levier}==\"20211621122\") ~> filter3\nfilter2 derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> derivedColumn1\ndeleteCodeProduitExclu derive(code_produit = coalesce(toString(toInteger(replace({code_produit}, \" \", \"\"))),replace({code_produit}, \" \", \"\"))) ~> derive\nderive aggregate(groupBy(code_produit),\n\tnomb = count(code_produit)) ~> aggregate6\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_SEUIL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> CALCULSEUIL\naggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string\n\t),\n\tpartitionFileNames:['seuil.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CONTRAT_CADRE')]",
				"[concat(variables('factoryId'), '/datasets/CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/LEVIER_CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHIE_ARTICLE_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/InputBaseCommercialMarketing')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CALCUL_REM')]",
				"[concat(variables('factoryId'), '/datasets/OUTPUT_CALCUL_SEUIL')]",
				"[concat(variables('factoryId'), '/datasets/outtest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_SEUIL_WITH_DATE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "LEVIER_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "levier"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "CALCULSEUIL"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "dropArticleList"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "toKeep1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "toKeep"
						},
						{
							"name": "UniontoKeep"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "toDelete"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "uniqueForCA"
						},
						{
							"name": "quantite"
						},
						{
							"name": "uniqueForQuantity"
						},
						{
							"name": "UnionCAQuantity"
						},
						{
							"name": "innerTemplateContrat"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "Realise"
						},
						{
							"name": "unique"
						},
						{
							"name": "innerTemplateRemuneration"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueYear"
						},
						{
							"name": "columnToJoin"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "addAllYear"
						},
						{
							"name": "verificationDateDebutDateFin"
						},
						{
							"name": "filtreDate"
						},
						{
							"name": "filtreMarque"
						},
						{
							"name": "hierarchieNull"
						},
						{
							"name": "aggregate3"
						},
						{
							"name": "deleteSpace"
						},
						{
							"name": "derivedCol"
						},
						{
							"name": "coalesceArticle"
						},
						{
							"name": "seuilMin"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as date 'yyyy-MM-dd',\n\t\t{Date de fin} as date 'yyyy-MM-dd',\n\t\t{Type de seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string,\n\t\t{Seuil min} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levier\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, seuilMin join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(replace(Canal, \" \", \"\"), \"<>\", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque),\n\t\t{Seuil min} = min({Seuil min})) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\ndropArticleList foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\ndeleteSpace aggregate(groupBy(Article),\n\thierarchieLocale = first({Hiérarch.locale})) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropArticleList\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu, uniqueReferenceArticle join(coalesce(toString(toInteger(replace(code_produit, \" \", \"\"))),replace(code_produit, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ngetHierarchieLocale derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale} = hierarchieLocale,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\nFlattenFamilleExclu filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> toKeep1\nFlattenFamilleExclu filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> toKeep\ntoKeep1, toKeep union(byName: true)~> UniontoKeep\nUniontoKeep derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\ncoalesceArticle, baseColumnChoice join(coalesce(toString(toInteger(Article)),Article) == coalesce(toString(toInteger({code produit})),{code produit}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\nfiltreDate select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque = FlattenPOS@Marque,\n\t\t{Seuil min},\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nDerivedColumn3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> toDelete\ntoDelete filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif( !isNull(Canal) && Canal=={nom du canal} , 1, 0)) ~> DerivedColumn2\nDerivedColumn2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca)),\n\t\t{Seuil min} = min({Seuil min})) ~> uniqueForCA\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite)),\n\t\t{Seuil min} = min({Seuil min})) ~> uniqueForQuantity\nuniqueForCA, uniqueForQuantity union(byName: true)~> UnionCAQuantity\nUnionCAQuantity, templateContrat join(UnionCAQuantity@{ID contrat cadre} == templateContrat@{ID contrat cadre}\n\t&& UnionCAQuantity@{ID contrat} == templateContrat@{ID contrat}\n\t&& UnionCAQuantity@{ID levier} == templateContrat@{ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateContrat\ninnerTemplateContrat select(mapColumn(\n\t\t{ID contrat cadre} = UnionCAQuantity@{ID contrat cadre},\n\t\t{ID contrat} = UnionCAQuantity@{ID contrat},\n\t\t{ID levier} = UnionCAQuantity@{ID levier},\n\t\tyear,\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité},\n\t\t{ID Seuil},\n\t\t{Objectif (avec règles de validation)},\n\t\t{Seuil min}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\ndropColumns filter({Réalisé}>=toDouble({Objectif (avec règles de validation)}) && {Réalisé}>={Seuil min}) ~> Realise\nRealise aggregate(groupBy(year,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Max ID Seuil} = max(toInteger({ID Seuil}))) ~> unique\nunique, calculRem join(unique@{ID levier} == calculRem@{ID levier}\n\t&& toInteger({Max ID Seuil}) == toInteger({ID seuil}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateRemuneration\ninnerTemplateRemuneration select(mapColumn(\n\t\tyear,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier} = unique@{ID levier},\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nbaseCommerciale derive(ca = replace(ca, \",\", \".\"),\n\t\t{code produit} = replace({code produit}, \" \", \"\")) ~> DerivedColumn3\ndropColumnsInCommon, addAllYear join(dropColumnsInCommon@{ID contrat cadre} == dropArticleList@{ID contrat cadre}\n\t&& dropColumnsInCommon@{ID contrat} == dropArticleList@{ID contrat}\n\t&& dropColumnsInCommon@{ID levier} == dropArticleList@{ID levier}\n\t&& dropColumnsInCommon@year == uniqueYear@year,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\t{ID contrat cadre} = dropArticleList@{ID contrat cadre},\n\t\t{ID contrat} = dropArticleList@{ID contrat},\n\t\t{ID levier} = dropArticleList@{ID levier},\n\t\tyear = uniqueYear@year\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\ndropColumnsInCommon aggregate(groupBy(year),\n\tjoin = max({ID contrat cadre})) ~> uniqueYear\nuniqueYear derive(join = 1) ~> columnToJoin\ndropArticleList derive(join = 1) ~> DerivedColumn4\nDerivedColumn4, columnToJoin join(DerivedColumn4@join == columnToJoin@join,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> addAllYear\nfiltreMarque derive(betweenDate = between(toDate(year+\"-\"+substring(yearmonth, 5, 2)+\"-01\"), {Date de début}, {Date de fin})) ~> verificationDateDebutDateFin\nverificationDateDebutDateFin filter(betweenDate==true()) ~> filtreDate\ninnerBaseCommerciale filter(lower(replace(FlattenPOS@Marque,\" \",\"\")) == lower(replace(baseColumnChoice@marque,\" \",\"\"))) ~> filtreMarque\narticle filter(!isNull({Hiérarch.locale})) ~> hierarchieNull\nderivedCol aggregate({Nombre base} = count({code produit})) ~> aggregate3\nhierarchieNull derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> deleteSpace\nbaseColumnChoice derive({code produit} = coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\"))) ~> derivedCol\nFlattenPOS derive(Article = coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))) ~> coalesceArticle\nlevier derive({Seuil min} = iif(isNull({Seuil min}), 0, toInteger({Seuil min}))) ~> seuilMin\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_SEUIL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> CALCULSEUIL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CONTRAT_CADRE')]",
				"[concat(variables('factoryId'), '/datasets/CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/LEVIER_CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHIE_ARTICLE_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/InputBaseCommercialMarketing')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CALCUL_REM')]",
				"[concat(variables('factoryId'), '/datasets/OUTPUT_CALCUL_SEUIL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT_DISTRIBUTION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "seuil"
						},
						{
							"dataset": {
								"referenceName": "CALCUL_REMUNERATION",
								"type": "DatasetReference"
							},
							"name": "remuneration"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CONTRAT_DISTRIBUTION",
								"type": "DatasetReference"
							},
							"name": "CONTRATDISTRIBUTION"
						}
					],
					"transformations": [
						{
							"name": "innerJoin"
						},
						{
							"name": "remunerationColumn"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "fullLeftJoin"
						},
						{
							"name": "dropInner"
						},
						{
							"name": "dropColumnsLeft"
						},
						{
							"name": "Union"
						},
						{
							"name": "formatDecimal"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{Max ID Seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\tyear as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> seuil\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\tyear as string,\n\t\tca as string,\n\t\t{Réalisé} as string,\n\t\t{Somme quantité} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> remuneration\nseuil, remuneration join(seuil@{ID contrat cadre} == remuneration@{ID contrat cadre}\n\t&& seuil@{ID contrat} == remuneration@{ID contrat}\n\t&& seuil@{ID levier} == remuneration@{ID levier}\n\t&& seuil@year == remuneration@year,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerJoin\nUnion derive({Rémunération} = toDouble({Réalisé})*toDouble({Contrepartie seuil})) ~> remunerationColumn\ninnerJoin select(mapColumn(\n\t\tyear = seuil@year,\n\t\t{ID contrat cadre} = seuil@{ID contrat cadre},\n\t\t{ID contrat} = seuil@{ID contrat},\n\t\t{ID levier} = seuil@{ID levier},\n\t\t{ID Seuil} = {Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\tca,\n\t\t{quantité} = {Somme quantité},\n\t\t{Réalisé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nseuil, remuneration join(seuil@{ID contrat cadre} == remuneration@{ID contrat cadre}\n\t&& seuil@{ID contrat} == remuneration@{ID contrat}\n\t&& seuil@{ID levier} == remuneration@{ID levier}\n\t&& seuil@year == remuneration@year,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftJoin\nfullLeftJoin filter(isNull(remuneration@{ID contrat cadre}) && isNull(remuneration@{ID contrat}) && isNull(remuneration@{ID levier}) && isNull(remuneration@year)) ~> dropInner\ndropInner select(mapColumn(\n\t\tyear = seuil@year,\n\t\t{ID contrat cadre} = seuil@{ID contrat cadre},\n\t\t{ID contrat} = seuil@{ID contrat},\n\t\t{ID levier} = seuil@{ID levier},\n\t\t{ID Seuil} = {Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsLeft\ndropColumns, dropColumnsLeft union(byName: true)~> Union\nremunerationColumn derive({Contrepartie seuil} = replace({Contrepartie seuil}, \".\", \",\"),\n\t\tca = replace(ca, \".\", \",\"),\n\t\t{Réalisé} = replace({Réalisé}, \".\", \",\"),\n\t\t{Rémunération} = replace(toString({Rémunération}), \".\", \",\"),\n\t\t{ID contrat} = \"'\"+{ID contrat}) ~> formatDecimal\nformatDecimal select(mapColumn(\n\t\tyear,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{ID Seuil},\n\t\t{Contrepartie seuil},\n\t\tca,\n\t\t{quantité},\n\t\t{Réalisé},\n\t\t{Rémunération}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CONTRAT_DISTRIBUTION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> CONTRATDISTRIBUTION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CALCUL_SEUIL')]",
				"[concat(variables('factoryId'), '/datasets/CALCUL_REMUNERATION')]",
				"[concat(variables('factoryId'), '/datasets/CONTRAT_DISTRIBUTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CommandeBW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "commandeBW_AC",
								"type": "DatasetReference"
							},
							"name": "AC"
						},
						{
							"dataset": {
								"referenceName": "commandeBW_AP",
								"type": "DatasetReference"
							},
							"name": "AP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieCommandeBW",
								"type": "DatasetReference"
							},
							"name": "SortieCommandeBW"
						}
					],
					"transformations": [
						{
							"name": "RecordID"
						},
						{
							"name": "DateExtDocVteLongDateCRE"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "formatDecimal"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AC\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AP\nUnion1 keyGenerate(output(CleDataSD as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nRecordID derive(DateExt = \"\",\n\t\tDocVte_Long = \"\",\n\t\tDateCRE = \"\",\n\t\t{ATC Corrigé} = iif(  instr({ATC Corrigé}, \"#\")>0, \"\", {ATC Corrigé}),\n\t\t{Agence commerciale corrigé} = iif(  instr({Agence commerciale corrigé}, \"#\")>0, \"\", {Agence commerciale corrigé})) ~> DateExtDocVteLongDateCRE\nDateExtDocVteLongDateCRE select(mapColumn(\n\t\tOrgCial = {Org. commerciale},\n\t\tCanalDist = {Canal distribution},\n\t\tSectAct = {Secteur d'activité},\n\t\tDocVte = {Document de vente},\n\t\tPoste,\n\t\tDate = {Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\tDRCde = {Agence commerciale corrigé},\n\t\tATCCde = {ATC Corrigé},\n\t\tCliCde = {Donneur d'ordre},\n\t\tCliLiv = {Récept. de march.},\n\t\tCliFac = {Destinataire facture},\n\t\tNoArt = Article,\n\t\tTypDocVte = {Type doc. vente},\n\t\tTypPoste = {Type de poste},\n\t\tNoLiv = Livraison,\n\t\tTypLiv = {Type de livraison},\n\t\tTypPostLiv = {Type poste Livraison},\n\t\tNoFac = Facture,\n\t\tTypFac = {Type de facture},\n\t\tTypPostFac = {Type poste Facture},\n\t\tMois = {Mois calendrier},\n\t\tAn = {Année civile},\n\t\tRaiCde = {Motif commande},\n\t\tQtCde = {Qté cdée},\n\t\tValNet = {CA cdé},\n\t\tQtLiv = {Qté livrée},\n\t\tValLiv = {CA livré},\n\t\tQtFac = {Qté facturée},\n\t\tValFac = {CA facturé},\n\t\tStdCost = {Cout standard cdé},\n\t\tFabCost = {Cout fabrication},\n\t\tStdCostLiv = {Cout standard livré},\n\t\tStdCostFac = {Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nAC, AP union(byName: true)~> Union1\nRename derive(ValNet = replace(ValNet, \".\", \",\"),\n\t\tValLiv = replace(ValLiv, \".\", \",\"),\n\t\tValFac = replace(ValFac, \".\", \",\"),\n\t\tStdCost = replace(StdCost, \".\", \",\"),\n\t\tStdCostLiv = replace(StdCostLiv, \".\", \",\"),\n\t\tStdCostFac = replace(StdCostFac, \".\", \",\")) ~> formatDecimal\nformatDecimal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['CommandeBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieCommandeBW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/commandeBW_AC')]",
				"[concat(variables('factoryId'), '/datasets/commandeBW_AP')]",
				"[concat(variables('factoryId'), '/datasets/SortieCommandeBW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InEcoulementWithIndexDSC",
								"type": "DatasetReference"
							},
							"name": "ecoulementwithIndex"
						},
						{
							"dataset": {
								"referenceName": "In_avoirwithIndex",
								"type": "DatasetReference"
							},
							"name": "avoirwithIndex"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "referentielATC"
						},
						{
							"dataset": {
								"referenceName": "inFacturationDSC",
								"type": "DatasetReference"
							},
							"name": "facturation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outdsctereva2",
								"type": "DatasetReference"
							},
							"name": "OModelDSC"
						},
						{
							"dataset": {
								"referenceName": "avoirUnMappedutput",
								"type": "DatasetReference"
							},
							"name": "avoirUnMapped"
						}
					],
					"transformations": [
						{
							"name": "fullLeft"
						},
						{
							"name": "caFinal"
						},
						{
							"name": "RenameLeft"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "columnChoiceEcoulement"
						},
						{
							"name": "renameAvoir"
						},
						{
							"name": "innerAvoir"
						},
						{
							"name": "canal"
						},
						{
							"name": "idCanal"
						},
						{
							"name": "idCanalFinal"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueOffre"
						},
						{
							"name": "fullLeftOffre"
						},
						{
							"name": "EndInner",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "keepColumns"
						},
						{
							"name": "atcKeepingColumn"
						},
						{
							"name": "atcNotNull"
						},
						{
							"name": "uniqueATC"
						},
						{
							"name": "fullLeftATC"
						},
						{
							"name": "renameColumn"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "aggFacturation"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "innerFacturation"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "dropColumns1"
						},
						{
							"name": "leftFacturation"
						},
						{
							"name": "newColumns1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "tempOrigin2"
						},
						{
							"name": "facturationOnly"
						},
						{
							"name": "newColumns2"
						},
						{
							"name": "EndunJoinedFacturation"
						},
						{
							"name": "endInerEcouFact"
						},
						{
							"name": "UnionendInerEcouFact"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "UnionEndDecrementation"
						},
						{
							"name": "dropColumns3"
						},
						{
							"name": "getNotNullValue"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Aggregate4"
						},
						{
							"name": "idCanalFinal1"
						},
						{
							"name": "facturationColFilter"
						},
						{
							"name": "tempOrigin"
						},
						{
							"name": "JoinFacturation"
						},
						{
							"name": "ecoulementOnlt"
						},
						{
							"name": "dropColumns2"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "endunJoinedEcoulement"
						},
						{
							"name": "UnionendunJoinedEcoulement"
						},
						{
							"name": "JoinAvoir"
						},
						{
							"name": "FilterIndexCols2"
						},
						{
							"name": "columnsChoice"
						},
						{
							"name": "Filter8"
						},
						{
							"name": "Filter9"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "Select2"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerAvoir\ninnerAvoir derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\")),\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tyear = {Année},\n\t\tmonth = Mois) ~> canal\ncanal derive(id_canal_final = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(canal_final = iif(id_canal_final==43, \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement_retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\ndropColumns select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement = qte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id = marque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\nDerivedColumn4 filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nDerivedColumn3, uniqueATC join({Code postal} == code_postal_atc\n\t&& canal_final == {Canal final}\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftATC\ndropColumns1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumn\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_)) ~> typeCaste\ntypeCaste aggregate(groupBy(reference,\n\t\tHubSAPid,\n\t\tyearmonth),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_),\n\t\t{Canal distribution} = first({Canal distribution}),\n\t\t{Org commerciale} = first({Org commerciale}),\n\t\t{recept de march} = first({recept de march})) ~> Aggregate2\nDerivedColumn2 select(mapColumn(\n\t\tarticle = reference,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e = qt_cd_e,\n\t\tSum_ca_cd_ = ca_cd_,\n\t\tSum_qt_livr_e = qt_livr_e,\n\t\tSum_ca_livr_ = ca_livr_,\n\t\tSum_qt_factur_e = qt_factur_e,\n\t\tSum_ca_factur_ = ca_factur_,\n\t\ttempOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> aggFacturation\nkeepColumns aggregate(groupBy(yearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tdistributeur),\n\tSum_ca_ecoulement = sum(toDouble(ca_ecoulement)),\n\t\tSum_qte_ecoulement = sum(toDouble(qte_ecoulement)),\n\t\tmarque_id = first(marque_id),\n\t\tid_canal_final = first(id_canal_final),\n\t\tcanal_final = first(canal_final)) ~> Aggregate3\nAggregate3, aggFacturation join(coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(article, \" \", \"\"))),replace(article, \" \", \"\"))\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerFacturation\nfullLeftOffre select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nfullLeftATC select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns1\ntempOrigin2, aggFacturation join(coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(article, \" \", \"\"))),replace(article, \" \", \"\"))\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> leftFacturation\ninnerFacturation derive(qt_plateforme_final = toDouble(Sum_qt_factur_e) - toDouble(Sum_qte_ecoulement),\n\t\tca_plateforme_final = Sum_ca_factur_ -  Sum_ca_ecoulement,\n\t\tdata_origin = \"facturation decrementé\",\n\t\tmarque_id = {Org commerciale},\n\t\t{Canal final} = aggFacturation@id_canal_final) ~> newColumns1\nAggregate2 derive(tempOrigin = \"facturation\",\n\t\t{Canal distribution} = 42) ~> DerivedColumn2\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> tempOrigin2\nleftFacturation filter(isNull(tempOrigin2@tempOrigin)) ~> facturationOnly\nfacturationColFilter derive(qt_plateforme_final = toDouble(Sum_qt_factur_e),\n\t\tca_plateforme_final = Sum_ca_factur_,\n\t\tdata_origin = \"facturation\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\")) ~> newColumns2\nnewColumns2 select(mapColumn(\n\t\treference = article,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code = {Org commerciale},\n\t\tmarque_name,\n\t\tPOSSAMidString = {recept de march},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndunJoinedFacturation\nSelect2 select(mapColumn(\n\t\tyearmonth,\n\t\treference,\n\t\tmarque_id,\n\t\tHubSAPid = {recept de march},\n\t\tid_canal_final = {Canal final},\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\ttempOrigin,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endInerEcouFact\nEndunJoinedFacturation, endInerEcouFact union(byName: true)~> UnionendInerEcouFact\nidCanalFinal1 select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tPOSSAMidString,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tmarque_id = marque_code,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\nrenameColumn, endDecrementation union(byName: true)~> UnionEndDecrementation\ngetNotNullValue select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\t{Canal final},\n\t\t{ATC Performance},\n\t\t{code postal} = getNotNullValue@{code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns3\nUnionEndDecrementation derive(marque_id = coalesce(marque_id , marque_code),\n\t\tid_canal_final = coalesce(id_canal_final ),\n\t\t{Canal final} = coalesce({Canal final} , canal_final),\n\t\t{code postal} = coalesce(code_postal_atc , {Code postal})) ~> getNotNullValue\naggFacturation filter(toInteger({recept de march})==16012598 && toInteger(article)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter2\nFilter2 aggregate(sq = sum(Sum_qt_factur_e)) ~> Aggregate4\nUnionendunJoinedEcoulement derive(id_canal_final = toInteger(id_canal_final)) ~> idCanalFinal1\nfacturationOnly select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\ttempOrigin = tempOrigin2@tempOrigin,\n\t\tarticle,\n\t\tHubSAPid = aggFacturation@HubSAPid,\n\t\tyearmonth = aggFacturation@yearmonth,\n\t\tid_canal_final = aggFacturation@id_canal_final,\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e,\n\t\tSum_ca_cd_,\n\t\tSum_qt_livr_e,\n\t\tSum_ca_livr_,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> facturationColFilter\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> tempOrigin\ntempOrigin, aggFacturation join(coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(article, \" \", \"\"))),replace(article, \" \", \"\"))\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinFacturation\nJoinFacturation filter(isNull(aggFacturation@tempOrigin)) ~> ecoulementOnlt\necoulementOnlt select(mapColumn(\n\t\tyearmonth = Aggregate3@yearmonth,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tdistributeur,\n\t\tca_plateforme_final = Sum_ca_ecoulement,\n\t\tqt_plateforme_final = Sum_qte_ecoulement,\n\t\tmarque_id,\n\t\tid_canal_final = Aggregate3@id_canal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\ndropColumns2 derive(data_origin = \"decrementation ecoulement sans matching\",\n\t\tca_plateforme_final = -1*toDouble(ca_plateforme_final),\n\t\tqt_plateforme_final = -toDouble(qt_plateforme_final)) ~> newColumns\nnewColumns select(mapColumn(\n\t\tyearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\tca_plateforme_final,\n\t\tqt_plateforme_final,\n\t\tdata_origin,\n\t\tmarque_id,\n\t\tid_canal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endunJoinedEcoulement\nUnionendInerEcouFact, endunJoinedEcoulement union(byName: true)~> UnionendunJoinedEcoulement\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> JoinAvoir\nJoinAvoir filter(isNull(columnChoiceEcoulement@indexcols2)) ~> FilterIndexCols2\nFilterIndexCols2 select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoice\nuniqueATC filter(code_postal_atc==3300) ~> Filter8\nfullLeftATC filter({Code postal}==3300) ~> Filter9\nkeepColumns derive({Code postal} = toInteger({Code postal})) ~> DerivedColumn3\natcKeepingColumn derive(code_postal_atc = toInteger(code_postal_atc)) ~> DerivedColumn4\nnewColumns1 select(mapColumn(\n\t\tyearmonth = Aggregate3@yearmonth,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tdistributeur,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_id,\n\t\tid_canal_final = Aggregate3@id_canal_final,\n\t\tcanal_final,\n\t\tarticle,\n\t\tHubSAPid = aggFacturation@HubSAPid,\n\t\tyearmonth = aggFacturation@yearmonth,\n\t\tid_canal_final = aggFacturation@id_canal_final,\n\t\tmarque_id = {Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e,\n\t\tSum_ca_cd_,\n\t\tSum_qt_livr_e,\n\t\tSum_ca_livr_,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\ttempOrigin,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\t{Canal final}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ndropColumns3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelDSC.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OModelDSC\ncolumnsChoice sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoirUnMapped.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> avoirUnMapped"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InEcoulementWithIndexDSC')]",
				"[concat(variables('factoryId'), '/datasets/In_avoirwithIndex')]",
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/ref_atc')]",
				"[concat(variables('factoryId'), '/datasets/inFacturationDSC')]",
				"[concat(variables('factoryId'), '/datasets/outdsctereva2')]",
				"[concat(variables('factoryId'), '/datasets/avoirUnMappedutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DSC_input",
								"type": "DatasetReference"
							},
							"name": "DSCINPUT"
						},
						{
							"dataset": {
								"referenceName": "dsc_orga",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DSC_PIECE_DETACHEE",
								"type": "DatasetReference"
							},
							"name": "DSCPieceDetache"
						},
						{
							"dataset": {
								"referenceName": "DSC_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "outputNullQuantity"
						},
						{
							"dataset": {
								"referenceName": "DSC_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "preparedDSC"
						},
						{
							"dataset": {
								"referenceName": "DSC_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "orgaNotFound"
						}
					],
					"transformations": [
						{
							"name": "KeepImportantColumn"
						},
						{
							"name": "notNullQuantity"
						},
						{
							"name": "columnFormat",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "pieceDetache"
						},
						{
							"name": "nullQuantity"
						},
						{
							"name": "notPieceDetache"
						},
						{
							"name": "agenceCodeNotNull"
						},
						{
							"name": "posidNotNull"
						},
						{
							"name": "innerJoinWithOrga"
						},
						{
							"name": "fullLeftJoin"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "InnerVentesDirecte"
						},
						{
							"name": "fullLeftVentesDirectes"
						},
						{
							"name": "removeQuantityVenteDirecte"
						},
						{
							"name": "dropColumns2"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "uniquePOSid"
						},
						{
							"name": "fullLeftUnion"
						}
					],
					"script": "source(output(\n\t\tProp_0 as string,\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as integer,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSCINPUT\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as integer,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nDSCINPUT select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> KeepImportantColumn\ncolumnFormat filter({Quantité en UV BL}!=0) ~> notNullQuantity\nKeepImportantColumn derive({Quantité en UV BL} = toDouble({Quantité en UV BL}),\n\t\t{Marque Code} = toDouble({Marque Code}),\n\t\tyear = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> columnFormat\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})>0) ~> pieceDetache\ncolumnFormat filter({Quantité en UV BL}==0) ~> nullQuantity\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})==0) ~> notPieceDetache\nnotPieceDetache filter(!isNull({Agence Code})) ~> agenceCodeNotNull\nuniquePOSid filter(!isNull(POSid)) ~> posidNotNull\nagenceCodeNotNull, posidNotNull join(toFloat({Agence Code}) == toFloat(POSid),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerJoinWithOrga\nagenceCodeNotNull, posidNotNull join({Agence Code} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftJoin\nfullLeftJoin filter(isNull(POSid)) ~> leftOuter\nventesDirectes select(mapColumn(\n\t\tyearmonth_right = yearmonth,\n\t\tArticle_right = reference,\n\t\t{Code client_right} = {Code client},\n\t\t{Qté vente directe} = qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\ninnerJoinWithOrga, RenameColumn join(yearmonth == yearmonth_right\n\t&& coalesce(toString(toInteger(replace({Référence Article Fournisseur}, \" \", \"\"))),replace({Référence Article Fournisseur}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article_right, \" \", \"\"))),replace(Article_right, \" \", \"\"))\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerVentesDirecte\ninnerJoinWithOrga, RenameColumn join(yearmonth == yearmonth_right\n\t&& coalesce(toString(toInteger(replace({Référence Article Fournisseur}, \" \", \"\"))),replace({Référence Article Fournisseur}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article_right, \" \", \"\"))),replace(Article_right, \" \", \"\"))\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftVentesDirectes\nInnerVentesDirecte derive({Quantité en UV BL} = iif({Quantité en UV BL}-toDouble({Qté vente directe}) > 0 , {Quantité en UV BL}-toDouble({Qté vente directe}) , toDouble(0))) ~> removeQuantityVenteDirecte\nremoveQuantityVenteDirecte select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\tBrandID,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\nfullLeftVentesDirectes filter(isNull(yearmonth_right) || isNull(Article_right) || isNull({Code client_right})) ~> outerLeft\nouterLeft select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nfullLeftUnion select(mapColumn(\n\t\tmarque_file = {Marque DESC},\n\t\tsous_famille = {Sous Famille},\n\t\treference = {Référence Article Fournisseur},\n\t\tagence_code = {Agence Code},\n\t\tdepartement_id = {Département ID},\n\t\tqte_ecoulement = {Quantité en UV BL},\n\t\tyearmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\ndropColumns2 derive(departement_id = toDouble(''),\n\t\tprix_unitaire_std = toDouble(''),\n\t\tdistributeur = \"DSC\") ~> Addcolumn\norganisation aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tPOSSAMidString = first(POSSAMidString),\n\t\tHubSAPid = first(HubSAPid),\n\t\tBrandID = first(BrandID)) ~> uniquePOSid\nAddcolumn, dropColumns union(byName: true)~> fullLeftUnion\npieceDetache sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_PIECE_DETACHEE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DSCPieceDetache\nnullQuantity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputNullQuantity\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string\n\t),\n\tpartitionFileNames:['DSC_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> preparedDSC\nleftOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> orgaNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DSC_input')]",
				"[concat(variables('factoryId'), '/datasets/dsc_orga')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/DSC_PIECE_DETACHEE')]",
				"[concat(variables('factoryId'), '/datasets/DSC_QTE_NULL')]",
				"[concat(variables('factoryId'), '/datasets/DSC_ECOUL_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/DSC_ORGANISATION_NOTFOUND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EHS_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EHS",
								"type": "DatasetReference"
							},
							"name": "EHS"
						},
						{
							"dataset": {
								"referenceName": "OrganisationEHS",
								"type": "DatasetReference"
							},
							"name": "OrganisationEHS"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "VenteDirecte"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieEHS",
								"type": "DatasetReference"
							},
							"name": "SoriteEHS"
						},
						{
							"dataset": {
								"referenceName": "EHSOrganiationNotfound",
								"type": "DatasetReference"
							},
							"name": "EHSOrganisationNotfound"
						}
					],
					"transformations": [
						{
							"name": "ExtractMonthYear"
						},
						{
							"name": "FiltrerCIA"
						},
						{
							"name": "FiltreCPCoop"
						},
						{
							"name": "UniqueCpCoopHubsApid"
						},
						{
							"name": "InnerJoinCIACPCoop"
						},
						{
							"name": "JoinLeftCIACPCoop"
						},
						{
							"name": "JoinVenteDirect"
						},
						{
							"name": "QuantiteesLivres"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Reference"
						},
						{
							"name": "distributeur"
						},
						{
							"name": "RenamePOSSAMIDstring"
						},
						{
							"name": "RenameMarqueFile"
						},
						{
							"name": "dropDuplicatedColumn"
						}
					],
					"script": "source(output(\n\t\tMarques as string,\n\t\t{Région} as string,\n\t\t{Nom Agence} as string,\n\t\tCIA as string,\n\t\t{Département} as string,\n\t\t{Référence Article} as string,\n\t\t{Description Article} as string,\n\t\t{Catégorie Achat} as string,\n\t\t{Quantitées livrées} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Marques/ Constructeur} as string,\n\t\t{Gestion entrepôt} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EHS\nsource(output(\n\t\t{Nom Coopérative} as string,\n\t\t{CP Coop.} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string,\n\t\tDept as string,\n\t\t{Code Postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrganisationEHS\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> VenteDirecte\nEHS derive(yearmonth = year+month,\n\t\tMarques = iif(!isNull(Marques), upper(Marques), upper({Marques/ Constructeur}))) ~> ExtractMonthYear\ndropDuplicatedColumn filter(!isNull(CIA)) ~> FiltrerCIA\nOrganisationEHS filter(!isNull({CP Coop.})) ~> FiltreCPCoop\nFiltreCPCoop aggregate(groupBy({CP Coop.},\n\t\tHubSAPid),\n\t{Nom Coopérative} = max({Nom Coopérative}),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tBrandID = max(BrandID),\n\t\tDept = max(Dept),\n\t\t{Code Postal} = max({Code Postal})) ~> UniqueCpCoopHubsApid\nFiltrerCIA, UniqueCpCoopHubsApid join(CIA == {CP Coop.},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoinCIACPCoop\nFiltrerCIA, UniqueCpCoopHubsApid join(CIA == {CP Coop.},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLeftCIACPCoop\nInnerJoinCIACPCoop, Rename join(coalesce(toString(toInteger(replace({Référence Article}, \" \", \"\"))),replace({Référence Article}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& dropDuplicatedColumn@yearmonth == Rename@yearmonth\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinVenteDirect\nJoinVenteDirect derive({Quantitées livrées} = iif(toDouble({Quantitées livrées}) - coalesce(toDouble({Qté vente directe}) , 0) >0, toDouble({Quantitées livrées}) - coalesce(toDouble({Qté vente directe}) , 0), toDouble(0))) ~> QuantiteesLivres\nVenteDirecte select(mapColumn(\n\t\tyearmonth,\n\t\tArticle = reference,\n\t\t{Code client},\n\t\t{Qté vente directe} = qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nQuantiteesLivres derive(reference = replace({Référence Article}, 'SDU', '')) ~> Reference\nReference derive(distributeur = \"EHS\",\n\t\tMarques = coalesce(Marques , {Marques/ Constructeur})) ~> distributeur\ndistributeur select(mapColumn(\n\t\tmarque_str = Marques,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tagence_code = CIA,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\tqte_ecoulement = {Quantitées livrées},\n\t\tyear,\n\t\t{Gestion entrepôt},\n\t\tmonth,\n\t\tyearmonth = dropDuplicatedColumn@yearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMidString = POSSAMid,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code postal} = {Code Postal},\n\t\tyearmonth = Rename@yearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe},\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenamePOSSAMIDstring\nRenamePOSSAMIDstring select(mapColumn(\n\t\tmarque_file = marque_str,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tagence_code,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\tqte_ecoulement,\n\t\tyear,\n\t\t{Gestion entrepôt},\n\t\tmonth,\n\t\tyearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMidString,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code postal},\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe},\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameMarqueFile\nExtractMonthYear select(mapColumn(\n\t\tMarques,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tCIA,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\t{Quantitées livrées},\n\t\tyear,\n\t\tmonth,\n\t\t{Gestion entrepôt},\n\t\t{Marques/ Constructeur},\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropDuplicatedColumn\nRenameMarqueFile sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SortieEcoulementEHS.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SoriteEHS\nJoinLeftCIACPCoop sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['EHSOrganisationNotfound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> EHSOrganisationNotfound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EHS')]",
				"[concat(variables('factoryId'), '/datasets/OrganisationEHS')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/SortieEHS')]",
				"[concat(variables('factoryId'), '/datasets/EHSOrganiationNotfound')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EPS_CLEANING_POST_UNION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tecouunion",
								"type": "DatasetReference"
							},
							"name": "unionEccoulement"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "articlehierarchi"
						},
						{
							"dataset": {
								"referenceName": "unionSapEhsIn",
								"type": "DatasetReference"
							},
							"name": "unionsapehs"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "pricelisteReplicated"
						},
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "EHS"
						},
						{
							"dataset": {
								"referenceName": "inepsv2",
								"type": "DatasetReference"
							},
							"name": "EPS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "allECoulementPrepared",
								"type": "DatasetReference"
							},
							"name": "outputPreparationEcoulement"
						},
						{
							"dataset": {
								"referenceName": "tunionSap",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "ecoulementArticleNotFound",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "articlDropdupl"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "setPostalCode"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "pricelisteTojoin"
						},
						{
							"name": "Join3"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Join4"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "endEPS"
						},
						{
							"name": "endEHS"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "endEhsEPS"
						},
						{
							"name": "leftarticle"
						},
						{
							"name": "addIdentifier"
						},
						{
							"name": "fnullarticle"
						}
					],
					"script": "source(output(\n\t\t{Code postal} as string,\n\t\tmarque_file as string,\n\t\tca_ecoulement as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionEccoulement\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> articlehierarchi\nsource(output(\n\t\tClient as integer,\n\t\t{Code postal} as string,\n\t\t{Org# commerciale} as short,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionsapehs\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> pricelisteReplicated\nsource(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EHS\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EPS\nunionEccoulement derive(marque_id = iif (  instr(lower({marque_file}) , \"saunier\") >0  , 1604 , 1621 )) ~> DerivedColumn1\narticlehierarchi select(mapColumn(\n\t\tmarque = OrgCm,\n\t\treference = Article,\n\t\tCDis\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(marque,\n\t\treference),\n\tCDis = max(CDis)) ~> articlDropdupl\nDerivedColumn1, articlDropdupl join(coalesce(toString(toInteger(replace(unionEccoulement@reference, \" \", \"\"))),replace(unionEccoulement@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(articlDropdupl@reference, \" \", \"\"))),replace(articlDropdupl@reference, \" \", \"\"))\n\t&& toString(marque_id) == marque,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nSelect3, endEhsEPS join(POSSAMidString == toString(Client),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tEcc_Code_postal = {Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{Sap_Code postal} = {client Code postal }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = unionEccoulement@reference,\n\t\t{Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect2 derive({code postal} = iif( !isNull({Sap_Code postal}) , {Sap_Code postal} , Ecc_Code_postal),\n\t\tmarque_name = iif(marque==\"1604\",  \"SaunierDuval\", \"Vaillant\"),\n\t\tdistributeur = upper(distributeur)) ~> setPostalCode\nSelect5 derive(month = toInteger(mois1)+ toInteger(order),\n\t\tDistributeur = lower(Distributeur)) ~> DerivedColumn2\nAggregate1 derive(distributeur = iif(  instr(Distributeur ,'sonac' ) >0 , upper('mabille') , upper(Distributeur)  )) ~> pricelisteTojoin\nsetPostalCode, pricelisteTojoin join(upper(setPostalCode@distributeur) == upper(pricelisteTojoin@distributeur)\n\t&& toDouble(Select2@month) == toDouble(Aggregate1@month)\n\t&& toDouble(year) == toDouble(annee1)\n\t&& toDouble(reference) == toDouble(Article),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(ca_ecoulement = iif( !isNull(prix_unitaire) , prix_unitaire, \"0\" )) ~> DerivedColumn3\nDerivedColumn3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = Select2@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = setPostalCode@distributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\npricelisteReplicated select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\torder = dd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nDerivedColumn2 aggregate(groupBy(Distributeur,\n\t\tArticle,\n\t\tmonth,\n\t\tannee1),\n\tprix_unitaire = max(prix_unitaire)) ~> Aggregate1\nsetPostalCode filter(upper(distributeur)==upper('MAILLARD')) ~> Filter1\npricelisteTojoin filter(upper(pricelisteTojoin@distributeur)==\"MAILLARD\") ~> Filter2\nFilter1, Filter2 join(upper(setPostalCode@distributeur) == upper(pricelisteTojoin@distributeur)\n\t&& toInteger(reference) == toInteger(Article)\n\t&& year == annee1\n\t&& toDouble(Select2@month) == toDouble(Aggregate1@month),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join4\nFilter2 filter(toInteger(Article)==toInteger(\"0020082651\")) ~> Filter3\nEPS select(mapColumn(\n\t\tClient = {Numéro du compte},\n\t\tNom = {Nom du compte},\n\t\t{Code postal } = {Code postal},\n\t\tVille\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEPS\nEHS select(mapColumn(\n\t\tClient,\n\t\t{Code postal } = {Code Postal},\n\t\tNom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEHS\nendEHS, endEPS union(byName: true)~> Union1\nDerivedColumn4 aggregate(groupBy(Client,\n\t\t{Code postal },\n\t\tNom,\n\t\tVille),\n\ttemp = sum(temp)) ~> Aggregate2\nUnion1 derive(temp = 1,\n\t\tClient = toString(toInteger(Client))) ~> DerivedColumn4\nAggregate2 select(mapColumn(\n\t\tClient,\n\t\t{client Code postal } = {Code postal },\n\t\tNom,\n\t\tVille\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEhsEPS\nDerivedColumn1, addIdentifier join(coalesce(toString(toInteger(replace(unionEccoulement@reference, \" \", \"\"))),replace(unionEccoulement@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(articlDropdupl@reference, \" \", \"\"))),replace(articlDropdupl@reference, \" \", \"\"))\n\t&& toString(marque_id) == marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftarticle\narticlDropdupl derive(torigin = \"article\") ~> addIdentifier\nleftarticle filter(isNull(torigin)) ~> fnullarticle\nSelect4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFournisseur as string,\n\t\t{Coopérative} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\tMois as string,\n\t\tpath as string,\n\t\tqte_ecoulement as string,\n\t\tREFFOURNISSEUR as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\t{Nom Coopérative} as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string\n\t),\n\tpartitionFileNames:['eccoulementUniforme.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputPreparationEcoulement\nunionsapehs sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string\n\t),\n\tpartitionFileNames:['tunionSap.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nfnullarticle sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ecoulementArticleNotFound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tecouunion')]",
				"[concat(variables('factoryId'), '/datasets/article_hierarchi')]",
				"[concat(variables('factoryId'), '/datasets/unionSapEhsIn')]",
				"[concat(variables('factoryId'), '/datasets/InPrixMoyenSplited')]",
				"[concat(variables('factoryId'), '/datasets/ClientEHS')]",
				"[concat(variables('factoryId'), '/datasets/inepsv2')]",
				"[concat(variables('factoryId'), '/datasets/allECoulementPrepared')]",
				"[concat(variables('factoryId'), '/datasets/tunionSap')]",
				"[concat(variables('factoryId'), '/datasets/ecoulementArticleNotFound')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExpeditionBW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "expeditionBW_AC",
								"type": "DatasetReference"
							},
							"name": "AC"
						},
						{
							"dataset": {
								"referenceName": "expeditionBW_AP",
								"type": "DatasetReference"
							},
							"name": "AP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieExpeditionBW",
								"type": "DatasetReference"
							},
							"name": "SortieExpeditionBW"
						}
					],
					"transformations": [
						{
							"name": "RecordID"
						},
						{
							"name": "DateExtDocVteLongDateCRE"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "formatDecimal"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AC\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AP\nUnion1 keyGenerate(output(CleDataSD as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nRecordID derive(DateExt = \"\",\n\t\tDocVte_Long = \"\",\n\t\tDateCRE = \"\",\n\t\t{ATC Corrigé} = iif(  instr({ATC Corrigé}, \"#\")>0, \"\", {ATC Corrigé}),\n\t\t{Agence commerciale corrigé} = iif(  instr({Agence commerciale corrigé}, \"#\")>0, \"\", {Agence commerciale corrigé})) ~> DateExtDocVteLongDateCRE\nDateExtDocVteLongDateCRE select(mapColumn(\n\t\tOrgCial = {Org. commerciale},\n\t\tCanalDist = {Canal distribution},\n\t\tSectAct = {Secteur d'activité},\n\t\tDocVte = {Document de vente},\n\t\tPoste,\n\t\tDate = {Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\tDRCde = {Agence commerciale corrigé},\n\t\tATCCde = {ATC Corrigé},\n\t\tCliCde = {Donneur d'ordre},\n\t\tCliLiv = {Récept. de march.},\n\t\tCliFac = {Destinataire facture},\n\t\tNoArt = Article,\n\t\tTypDocVte = {Type doc. vente},\n\t\tTypPoste = {Type de poste},\n\t\tNoLiv = Livraison,\n\t\tTypLiv = {Type de livraison},\n\t\tTypPostLiv = {Type poste Livraison},\n\t\tNoFac = Facture,\n\t\tTypFac = {Type de facture},\n\t\tTypPostFac = {Type poste Facture},\n\t\tMois = {Mois calendrier},\n\t\tAn = {Année civile},\n\t\tRaiCde = {Motif commande},\n\t\tQtCde = {Qté cdée},\n\t\tValNet = {CA cdé},\n\t\tQtLiv = {Qté livrée},\n\t\tValLiv = {CA livré},\n\t\tQtFac = {Qté facturée},\n\t\tValFac = {CA facturé},\n\t\tStdCost = {Cout standard cdé},\n\t\tFabCost = {Cout fabrication},\n\t\tStdCostLiv = {Cout standard livré},\n\t\tStdCostFac = {Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nAC, AP union(byName: true)~> Union1\nRename derive(ValNet = replace(ValNet, \".\", \",\"),\n\t\tValLiv = replace(ValLiv, \".\", \",\"),\n\t\tValFac = replace(ValFac, \".\", \",\"),\n\t\tStdCost = replace(StdCost, \".\", \",\"),\n\t\tStdCostLiv = replace(StdCostLiv, \".\", \",\"),\n\t\tStdCostFac = replace(StdCostFac, \".\", \",\")) ~> formatDecimal\nformatDecimal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['ExpéditionBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieExpeditionBW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/expeditionBW_AC')]",
				"[concat(variables('factoryId'), '/datasets/expeditionBW_AP')]",
				"[concat(variables('factoryId'), '/datasets/SortieExpeditionBW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationBW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "AC"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "AP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieFacturationBW",
								"type": "DatasetReference"
							},
							"name": "SortieFacturationBW"
						}
					],
					"transformations": [
						{
							"name": "RecordID"
						},
						{
							"name": "DateExtDocVteLongDateCRE"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "formatDecimal"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AC\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> AP\nUnion1 keyGenerate(output(CleDataSD as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nRecordID derive(DateExt = \"\",\n\t\tDocVte_Long = \"\",\n\t\tDateCRE = \"\",\n\t\t{ATC Corrigé} = iif(  instr({ATC Corrigé}, \"#\")>0, \"\", {ATC Corrigé}),\n\t\t{Agence commerciale corrigé} = iif(  instr({Agence commerciale corrigé}, \"#\")>0, \"\", {Agence commerciale corrigé})) ~> DateExtDocVteLongDateCRE\nDateExtDocVteLongDateCRE select(mapColumn(\n\t\tOrgCial = {Org. commerciale},\n\t\tCanalDist = {Canal distribution},\n\t\tSectAct = {Secteur d'activité},\n\t\tDocVte = {Document de vente},\n\t\tPoste,\n\t\tDate = {Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\tDRCde = {Agence commerciale corrigé},\n\t\tATCCde = {ATC Corrigé},\n\t\tCliCde = {Donneur d'ordre},\n\t\tCliLiv = {Récept. de march.},\n\t\tCliFac = {Destinataire facture},\n\t\tNoArt = Article,\n\t\tTypDocVte = {Type doc. vente},\n\t\tTypPoste = {Type de poste},\n\t\tNoLiv = Livraison,\n\t\tTypLiv = {Type de livraison},\n\t\tTypPostLiv = {Type poste Livraison},\n\t\tNoFac = Facture,\n\t\tTypFac = {Type de facture},\n\t\tTypPostFac = {Type poste Facture},\n\t\tMois = {Mois calendrier},\n\t\tAn = {Année civile},\n\t\tRaiCde = {Motif commande},\n\t\tQtCde = {Qté cdée},\n\t\tValNet = {CA cdé},\n\t\tQtLiv = {Qté livrée},\n\t\tValLiv = {CA livré},\n\t\tQtFac = {Qté facturée},\n\t\tValFac = {CA facturé},\n\t\tStdCost = {Cout standard cdé},\n\t\tFabCost = {Cout fabrication},\n\t\tStdCostLiv = {Cout standard livré},\n\t\tStdCostFac = {Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nAC, AP union(byName: true)~> Union1\nRename derive(ValNet = replace(ValNet, \".\", \",\"),\n\t\tValLiv = replace(ValLiv, \".\", \",\"),\n\t\tValFac = replace(ValFac, \".\", \",\"),\n\t\tStdCost = replace(StdCost, \".\", \",\"),\n\t\tStdCostLiv = replace(StdCostLiv, \".\", \",\"),\n\t\tStdCostFac = replace(StdCostFac, \".\", \",\")) ~> formatDecimal\nformatDecimal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['FacturationBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieFacturationBW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/facturationBW_AC')]",
				"[concat(variables('factoryId'), '/datasets/FacturationAP')]",
				"[concat(variables('factoryId'), '/datasets/SortieFacturationBW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "RH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "dataCommerciale"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "levierPerformance"
						},
						{
							"dataset": {
								"referenceName": "FILTRE_OBJECTIF_RH",
								"type": "DatasetReference"
							},
							"name": "filtre"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_PERFORMANCE",
								"type": "DatasetReference"
							},
							"name": "REFERENTIELPYTHON"
						},
						{
							"dataset": {
								"referenceName": "FILTRE_OBJECTIF_SORTIE",
								"type": "DatasetReference"
							},
							"name": "sortieFiltre"
						}
					],
					"transformations": [
						{
							"name": "filtreAffectation"
						},
						{
							"name": "cleansingInput"
						},
						{
							"name": "cleansingPlateformes"
						},
						{
							"name": "innerPlateformes"
						},
						{
							"name": "innerTypeDeVente"
						},
						{
							"name": "fullLeftPlateforme"
						},
						{
							"name": "outerLeftPlateforme"
						},
						{
							"name": "dropColumnsInCommonLeft"
						},
						{
							"name": "TypeVentesDirectes"
						},
						{
							"name": "unionVentesDirectes"
						},
						{
							"name": "dropColumnsInCommonInner"
						},
						{
							"name": "Rename"
						},
						{
							"name": "typeParse"
						},
						{
							"name": "ATCandDistributeurNotNull"
						},
						{
							"name": "newColumn"
						},
						{
							"name": "RecordID"
						},
						{
							"name": "Select3"
						},
						{
							"name": "splitting"
						},
						{
							"name": "FlattenHierarchie"
						},
						{
							"name": "FlattenMarque"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "libelleLevier"
						},
						{
							"name": "uniqueLevier"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "typeParseLevier"
						},
						{
							"name": "FlattenDiffusChantier"
						},
						{
							"name": "clejointure"
						},
						{
							"name": "cleJointureBase"
						},
						{
							"name": "ajoutColonneFiltre"
						},
						{
							"name": "filtreCalcul"
						},
						{
							"name": "Join1"
						},
						{
							"name": "yearFilter"
						},
						{
							"name": "deleteColumns"
						},
						{
							"name": "ventesDirectes"
						},
						{
							"name": "ajoutManuel"
						},
						{
							"name": "typeAjoutManuel"
						},
						{
							"name": "unionAjoutManuel"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dataCommerciale\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10000,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nsource(output(\n\t\t{Année} as string,\n\t\tDocumentation as string,\n\t\tMarque as string,\n\t\tCible as string,\n\t\t{Périmètre} as string,\n\t\tLevier as string,\n\t\tCanal as string,\n\t\t{Hiérarchie inclues} as string,\n\t\t{Hiérarchies exclues} as string,\n\t\tType as string,\n\t\t{Valeur Annuelle} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levierPerformance\nsource(output(\n\t\t{Année} as integer,\n\t\t{Mois début} as integer,\n\t\t{Mois fin} as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> filtre\ndataCommerciale filter({affecte/non_affecte}==\"affecté\") ~> filtreAffectation\ndropColumns derive(HubSAPid = trim(HubSAPid, \" \"),\n\t\tATC = toInteger(ATC),\n\t\tca_final = toDouble(replace(ca_final, \",\", \".\"))) ~> cleansingInput\nPLATEFORMES derive(HubSAPid = trim(HubSAPid, \" \")) ~> cleansingPlateformes\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerPlateformes\ninnerPlateformes derive({Type de vente} = WholeSalerID) ~> innerTypeDeVente\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftPlateforme\nfullLeftPlateforme filter(isNull(cleansingPlateformes@HubSAPid)) ~> outerLeftPlateforme\nouterLeftPlateforme select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque = marque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonLeft\nventesDirectes derive({Type de vente} = \"Ventes directes\") ~> TypeVentesDirectes\ndropColumnsInCommonInner, TypeVentesDirectes union(byName: true)~> unionVentesDirectes\ninnerTypeDeVente select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tmarque = marque_name,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonInner\nunionAjoutManuel select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tcanal_jointure = canal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente},\n\t\tOrgCm = marque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nRename derive({Canal distribution} = toInteger(canal_jointure),\n\t\tid_canal_final = toInteger(canal_jointure),\n\t\tcanal = toInteger(canal_jointure),\n\t\tid_canal = toInteger(canal_jointure),\n\t\t{Canal Final} = toInteger(canal_jointure),\n\t\tOrgCm = toInteger(OrgCm),\n\t\tcanal_final = replace(lower(canal_final), \" \", \"\"),\n\t\tyear = toInteger(year),\n\t\tN1locale = replace(N1locale, \" \", \"\")) ~> typeParse\ntypeParse filter(!isNull(ATC) && !isNull({Type de vente}) && !isNull({OrgCm})) ~> ATCandDistributeurNotNull\nFilter3 derive({diffus/chantier} = iif(Cible!=\"DR\", trim(split(Cible, \" \")[2], \" \"), \"diffus,chantier\"),\n\t\tID_KPI = \"Sum_XRow_\"+toString(RecordID)) ~> newColumn\nuniqueLevier keyGenerate(output(RecordID as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> RecordID\nnewColumn select(mapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie = {Hiérarchie inclues},\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 derive(Marque = split(Marque, \".\"),\n\t\tCanal = split(Canal, \",\"),\n\t\tHierarchie = split(Hierarchie, \",\"),\n\t\tdiffusChantier = split({diffus/chantier}, \",\")) ~> splitting\nFlattenCanal foldDown(unroll(Hierarchie),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenHierarchie\nFlattenDiffusChantier foldDown(unroll(Marque),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenMarque\nFlattenMarque foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nfiltreCalcul select(mapColumn(\n\t\tdistributeur = {plateforme/vente directe},\n\t\tdata_origin = {origine de la ligne},\n\t\treference = {code produit},\n\t\tyearmonth,\n\t\tHubSAPid = {code client plateforme livree},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final = quantite,\n\t\tca_final = ca,\n\t\tcanal_final,\n\t\tPOSSAMidString = {Code client livré},\n\t\tmarque_name = marque_code,\n\t\tno_offre,\n\t\tHierarchiegroupe = {Hiérarchgroupe},\n\t\tHierarchielocale = {Hiérarchlocale},\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation = N1groupedesignation,\n\t\tN2GroupeDesignation = N2groupedesignation,\n\t\tN3GroupeDesignation = N3groupedesignation,\n\t\tN4GroupeDesignation = N4groupedesignation,\n\t\tN5GroupeDesignation = N5groupedesignation,\n\t\tN6GroupeDesignation = N6groupedesignation,\n\t\tN7GroupeDesignation = N7groupedesignation,\n\t\tN1LocalDesignation = N1localedesignation,\n\t\tN2LocalDesignation = N2localedesignation,\n\t\tN3LocalDesignation = N3localedesignation,\n\t\tN4LocalDesignation = N4localedesignation,\n\t\tN6LocalDesignation = N6localedesignation,\n\t\tN7LocalDesignation = N7localedesignation,\n\t\t{Code postal},\n\t\tmarque = marque_code,\n\t\tATC = {ATC Performance},\n\t\tATC1 = {ATC livré},\n\t\tATC2 = {ATC offre},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tN5LocalDesignation = N5localedesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nRecordID filter(!isNull(Documentation) || !isNull(Levier)) ~> Filter3\nlevierPerformance derive({Libellé levié} = Levier+\"-\"+Documentation+\" \"+Cible+\" \"+{Périmètre}+\" \"+iif({Valeur Annuelle}==\"YES\", \"Annuel\", \"Mensuel\"),\n\t\tjointure = 1) ~> libelleLevier\ndeleteColumns aggregate(groupBy({Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\t{Hiérarchie inclues},\n\t\t{Hiérarchies exclues},\n\t\tType,\n\t\t{Valeur Annuelle}),\n\t{Libellé levié} = max({Libellé levié})) ~> uniqueLevier\nuniqueLevier aggregate(groupBy({Libellé levié}),\n\tcount = count({Libellé levié})) ~> Aggregate1\nFlattenHierarchie derive(Marque = toInteger(Marque),\n\t\t{Année} = toInteger({Année}),\n\t\tHierarchie = replace(Hierarchie, \" \", \"\"),\n\t\t{diffus/chantier} = replace(lower({diffus/chantier}), \" \", \"\")) ~> typeParseLevier\nsplitting foldDown(unroll(diffusChantier),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier} = diffusChantier,\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenDiffusChantier\nfiltre derive(jointure = 1) ~> clejointure\nfiltreAffectation derive(jointure = 1) ~> cleJointureBase\ncleJointureBase, clejointure join(cleJointureBase@jointure == clejointure@jointure,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> ajoutColonneFiltre\najoutColonneFiltre filter(toInteger(year)=={Année} && toInteger(month)>={Mois début} && toInteger(month)<={Mois fin}) ~> filtreCalcul\nlibelleLevier, clejointure join(libelleLevier@jointure == clejointure@jointure,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(toInteger(levierPerformance@{Année})==filtre@{Année}) ~> yearFilter\nyearFilter select(mapColumn(\n\t\t{Année} = levierPerformance@{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\t{Hiérarchie inclues},\n\t\t{Hiérarchies exclues},\n\t\tType,\n\t\t{Valeur Annuelle},\n\t\t{Libellé levié}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteColumns\ndropColumnsInCommonLeft filter(data_origin != \"Ajout manuel\") ~> ventesDirectes\ndropColumnsInCommonLeft filter(data_origin == \"Ajout manuel\") ~> ajoutManuel\najoutManuel derive({Type de vente} = \"Ajout manuel: \" + HubSAPid) ~> typeAjoutManuel\nunionVentesDirectes, typeAjoutManuel union(byName: true)~> unionAjoutManuel\nATCandDistributeurNotNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TEMP_LEVIER_RH.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\ntypeParseLevier sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['TEMP_LEVIER_PERFORMANCE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> REFERENTIELPYTHON\nclejointure sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\t{Document de vente} as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string\n\t),\n\tpartitionFileNames:['FILTRE_OBJECTIF_SORTIE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sortieFiltre"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputBaseCommercialMarketing')]",
				"[concat(variables('factoryId'), '/datasets/PLATEFORMES')]",
				"[concat(variables('factoryId'), '/datasets/REFERENTIEL_LEVIER_RH')]",
				"[concat(variables('factoryId'), '/datasets/FILTRE_OBJECTIF_RH')]",
				"[concat(variables('factoryId'), '/datasets/TEMP_LEVIER_RH')]",
				"[concat(variables('factoryId'), '/datasets/TEMP_LEVIER_PERFORMANCE')]",
				"[concat(variables('factoryId'), '/datasets/FILTRE_OBJECTIF_SORTIE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MABILLE_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "MabilleSaunierDuvale"
						},
						{
							"dataset": {
								"referenceName": "MABILE_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "OrganisationMabilleSonac"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MABILE_ECOULEMENT_OUTPUT",
								"type": "DatasetReference"
							},
							"name": "MABILLEECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "MABILE_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "MabileQteNull"
						},
						{
							"dataset": {
								"referenceName": "MABILE_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						},
						{
							"dataset": {
								"referenceName": "mabilleBefoDecrementation",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ExtractYearAndMonth"
						},
						{
							"name": "FiltreQteMois"
						},
						{
							"name": "FiltreQteMoisANull"
						},
						{
							"name": "FiltreRefFournisseur"
						},
						{
							"name": "caEcoulementAndAgenceClient"
						},
						{
							"name": "FiltreAgenceClient"
						},
						{
							"name": "FiltrePOSid"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "leftOuterOrganisation"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "substractVentesDirectes"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "leftOuterVentesDirectes"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "dropColumnsInCommon2"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "endVenteDirect"
						},
						{
							"name": "yearmonthNOTNULL"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "filter1"
						},
						{
							"name": "filter2"
						}
					],
					"script": "source(output(\n\t\t{Activité} as string,\n\t\t{Fournisseur Groupe} as string,\n\t\t{Société} as string,\n\t\tCode as string,\n\t\tFournisseur as string,\n\t\t{Agence du client} as string,\n\t\t{Code article} as string,\n\t\t{Libellé article} as string,\n\t\t{Ref fournisseur} as string,\n\t\t{Qté Mois A-1} as string,\n\t\t{Qté Cumul A-1} as string,\n\t\t{CA Mois A-1} as string,\n\t\t{CA Cumul A-1} as string,\n\t\t{MB Mois A-1} as string,\n\t\t{MB Cumul A-1} as string,\n\t\t{VVA Mois A-1} as string,\n\t\t{VVA Cumul A-1} as string,\n\t\t{Qté Mois A} as string,\n\t\t{Qté Cumul A} as string,\n\t\t{CA Mois A} as string,\n\t\t{CA Cumul A} as string,\n\t\t{MB Mois A} as string,\n\t\t{MB Cumul A} as string,\n\t\t{VVA Mois A} as string,\n\t\t{VVA Cumul A} as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MabilleSaunierDuvale\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string,\n\t\tCommentaire as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrganisationMabilleSonac\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nyearmonthNOTNULL derive(month = substring(yearmonth, 5, 2),\n\t\tyear = substring(yearmonth, 1, 4),\n\t\torigin = \"ecoulement\") ~> ExtractYearAndMonth\nExtractYearAndMonth filter(not({Qté Mois A}=='0')) ~> FiltreQteMois\nExtractYearAndMonth filter({Qté Mois A}=='0') ~> FiltreQteMoisANull\nFiltreQteMois filter({Ref fournisseur}!='') ~> FiltreRefFournisseur\nFiltreRefFournisseur derive({Qté Mois A} = toDouble({Qté Mois A})) ~> caEcoulementAndAgenceClient\ncaEcoulementAndAgenceClient filter({Agence du client} != '') ~> FiltreAgenceClient\nOrganisationMabilleSonac filter(!isNull(POSid)) ~> FiltrePOSid\nFiltrePOSid aggregate(groupBy(POSid,\n\t\tHubSAPid,\n\t\tUnitID),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID),\n\t\tCommentaire = max(Commentaire)) ~> uniqueOrganisation\nFiltreAgenceClient, uniqueOrganisation join(replace({Agence du client},\" \",\"\") == replace({POSid},\" \",\"\")\n\t&& replace({Société},\" \",\"\") == replace(UnitID,\" \",\"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\nselect1, uniqueOrganisation join({Agence du client} == POSid\n\t&& {Société} == UnitID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull(POSid)) ~> leftOuterOrganisation\ninnerOrganisation, endVenteDirect join(MabilleSaunierDuvale@yearmonth == select2@yearmonth\n\t&& coalesce(toString(toInteger(replace({Ref fournisseur}, \" \", \"\"))),replace({Ref fournisseur}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMidString == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerVentesDirectes derive({Qté Mois A} = iif(toDouble({Qté Mois A})-toDouble(qte_ecoulement) >0, toDouble({Qté Mois A})-toDouble(qte_ecoulement), toDouble(0))) ~> substractVentesDirectes\ninnerOrganisation, endVenteDirect join(MabilleSaunierDuvale@yearmonth == select2@yearmonth\n\t&& coalesce(toString(toInteger(replace({Ref fournisseur}, \" \", \"\"))),replace({Ref fournisseur}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMidString == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(torigin)) ~> leftOuterVentesDirectes\ndropColumnsInCommon2, dropColumnsInCommon union(byName: true)~> fullLeftUnion\nsubstractVentesDirectes select(mapColumn(\n\t\t{Activité},\n\t\t{Fournisseur Groupe},\n\t\t{Société},\n\t\tCode,\n\t\tFournisseur,\n\t\t{Agence du client},\n\t\t{Code article},\n\t\t{Libellé article},\n\t\t{Ref fournisseur},\n\t\t{Qté Mois A-1},\n\t\t{Qté Cumul A-1},\n\t\t{VVA Mois A-1},\n\t\t{VVA Cumul A-1},\n\t\t{Qté Mois A},\n\t\t{Qté Cumul A},\n\t\t{VVA Mois A},\n\t\t{VVA Cumul A},\n\t\tyearmonth = MabilleSaunierDuvale@yearmonth,\n\t\tmonth,\n\t\tyear,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tCommentaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon2\nleftOuterVentesDirectes select(mapColumn(\n\t\t{Activité},\n\t\t{Fournisseur Groupe},\n\t\t{Société},\n\t\tCode,\n\t\tFournisseur,\n\t\t{Agence du client},\n\t\t{Code article},\n\t\t{Libellé article},\n\t\t{Ref fournisseur},\n\t\t{Qté Mois A-1},\n\t\t{Qté Cumul A-1},\n\t\t{VVA Mois A-1},\n\t\t{VVA Cumul A-1},\n\t\t{Qté Mois A},\n\t\t{Qté Cumul A},\n\t\t{VVA Mois A},\n\t\t{VVA Cumul A},\n\t\tyearmonth = MabilleSaunierDuvale@yearmonth,\n\t\tmonth,\n\t\tyear,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tCommentaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nAddcolumn select(mapColumn(\n\t\tmarque_file = {Fournisseur Groupe},\n\t\tagence_code = {Agence du client},\n\t\tarticle = {Libellé article},\n\t\treference = {Ref fournisseur},\n\t\tqte_ecoulement = {Qté Mois A},\n\t\tyearmonth,\n\t\tmonth,\n\t\tyear,\n\t\tHubSAPid,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubName,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nfullLeftUnion derive(distributeur = \"MABILLE\") ~> Addcolumn\nselect2 derive(torigin = \"vente direct\") ~> endVenteDirect\nMabilleSaunierDuvale filter(!isNull(yearmonth)) ~> yearmonthNOTNULL\nFiltreAgenceClient select(mapColumn(\n\t\t{Activité},\n\t\t{Fournisseur Groupe},\n\t\t{Société},\n\t\tCode,\n\t\tFournisseur,\n\t\t{Agence du client},\n\t\t{Code article},\n\t\t{Libellé article},\n\t\t{Ref fournisseur},\n\t\t{Qté Mois A-1},\n\t\t{Qté Cumul A-1},\n\t\t{CA Mois A-1},\n\t\t{CA Cumul A-1},\n\t\t{MB Mois A-1},\n\t\t{MB Cumul A-1},\n\t\t{VVA Mois A-1},\n\t\t{VVA Cumul A-1},\n\t\t{Qté Mois A},\n\t\t{Qté Cumul A},\n\t\t{CA Mois A},\n\t\t{CA Cumul A},\n\t\t{MB Mois A},\n\t\t{MB Cumul A},\n\t\t{VVA Mois A},\n\t\t{VVA Cumul A},\n\t\tyearmonth,\n\t\tmonth,\n\t\tyear,\n\t\torigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nventesDirectes select(mapColumn(\n\t\tyearmonth,\n\t\tArticle = reference,\n\t\t{Code client},\n\t\tqte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nendVenteDirect filter({Code client}=='16007943' && Article=='0010021497' &&yearmonth=='202104') ~> filter1\nsubstractVentesDirectes filter({Code client}=='16007943' && Article=='0010021497' &&  select2@yearmonth=='202104') ~> filter2\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Représentant} as string,\n\t\t{N° Département} as string,\n\t\t{Département} as string,\n\t\t{Code point de vente} as string,\n\t\t{Libellé point de vente} as string,\n\t\t{Code Depot source} as string,\n\t\t{Code client} as string,\n\t\tClient as string,\n\t\t{N° Siret} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Année livraison} as string,\n\t\t{Mois livraison} as string,\n\t\t{code fournisseur} as string,\n\t\t{fournisseur principal} as string,\n\t\t{Code produit} as string,\n\t\tproduit as string,\n\t\t{Réference} as string,\n\t\t{Qte en unité de vente} as string,\n\t\t{Montant prv net} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['MABILLE_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> MABILLEECOULPREPARED\nFiltreQteMoisANull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['MABILE_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> MabileQteNull\nleftOuterOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MABILE_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound\ninnerOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal;marque;marque_code;canal_distribution_final;nom du canal;canal_final;document_vente;Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);no_offre;ATC offre;ATC livr�;ATC Performance;NomATC;DR;Matricule;Motif commande;Type de facture;Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Num�ro du compte;EPS_Nom du compte;EPS_Groupe cible/Typologie g�n�rale;EPS_Sous groupe cible/Typologie d�taill�e;EPS_Compte principal: Num�ro du compte;EPS_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP;yearmonth;ATC Corrig�} as string\n\t),\n\tpartitionFileNames:['mabileBeforeDecremation.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MABILLE_ECOULEMENT')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_ECOULEMENT_OUTPUT')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_QTE_NULL')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_ORGANISATION_NOTFOUND')]",
				"[concat(variables('factoryId'), '/datasets/mabilleBefoDecrementation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MAILLARD_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MAILLARD_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "MAILLARDECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						}
					],
					"transformations": [
						{
							"name": "quantityNotNull"
						},
						{
							"name": "cleansingEcoulement",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "getYear"
						},
						{
							"name": "yearMonth"
						},
						{
							"name": "depotNotNull"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "notNull"
						},
						{
							"name": "uniqueAgenceAndHubsapID"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "outerleftOrganisation"
						},
						{
							"name": "cleansingVentesDirectes"
						},
						{
							"name": "sumQuantity"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerleftVentesDirectes"
						},
						{
							"name": "enleverVentesDirectes"
						},
						{
							"name": "Rename"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "marqueFile"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "yearmonthSplit"
						},
						{
							"name": "filter2"
						}
					],
					"script": "source(output(\n\t\t{Société} as string,\n\t\t{Dépot} as string,\n\t\tMois as string,\n\t\t{Code GTAC} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\t{Quantité} as string,\n\t\tValeur as string,\n\t\t{Quantité n-1} as string,\n\t\t{Valeur n-1} as string,\n\t\t{CP Dépôt} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'fname',\n\twildcardPaths:['Ecoulement/Maillard/*.csv']) ~> ecoulement\nsource(output(\n\t\t{Nom Agence (Code)} as string,\n\t\t{CP Agence} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\necoulement filter(!isNull({Quantité})) ~> quantityNotNull\nquantityNotNull derive({Quantité} = toDouble(replace({Quantité}, \",\", \".\"))) ~> cleansingEcoulement\ncleansingEcoulement derive(Year = split(Mois, \"/\")[2],\n\t\tMonth = split(Mois, \"/\")[1]) ~> getYear\ngetYear derive(Yearmonth = concat(Year, Month)) ~> yearMonth\nyearMonth filter(!isNull({Dépot})) ~> depotNotNull\norganisation derive({Nom Agence (Code)} = trim({Nom Agence (Code)}, \" \"),\n\t\tHubSAPid = trim({HubSAPid}, \" \")) ~> cleansing\ncleansing filter(!isNull({Nom Agence (Code)})) ~> notNull\nnotNull aggregate(groupBy({Nom Agence (Code)},\n\t\tHubSAPid),\n\t{CP Agence} = max({CP Agence}),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tBrandID = max(BrandID)) ~> uniqueAgenceAndHubsapID\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull({Nom Agence (Code)})) ~> outerleftOrganisation\nventesDirectes derive({Code client} = trim({Code client}, \" \"),\n\t\t{Qté facturée} = toDouble(qte_ecoulement),\n\t\tyearmonth = trim(yearmonth, \" \"),\n\t\tArticle = trim(reference, \" \")) ~> cleansingVentesDirectes\ncleansingVentesDirectes aggregate(groupBy(yearmonth,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> sumQuantity\nyearmonthSplit, typeCaste join(yearmonthSplit@Yearmonth == typeCaste@yearmonth\n\t&& coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\nRename derive(yearmonth = toString(yearmonth),\n\t\tArticle = toString(Article),\n\t\t{Code client} = toString({Code client})) ~> typeCaste\nyearmonthSplit, typeCaste join(yearmonthSplit@Yearmonth == typeCaste@yearmonth\n\t&& coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\"))\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(typeCaste@yearmonth) || isNull(Article) || isNull({Code client})) ~> outerleftVentesDirectes\ninnerVentesDirectes derive({Quantité} = iif({Quantité}-{Qté ventes directes} >0 , {Quantité}-{Qté ventes directes}, toDouble(0))) ~> enleverVentesDirectes\nsumQuantity select(mapColumn(\n\t\tyearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté ventes directes} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nenleverVentesDirectes, outerleftVentesDirectes union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(marque_file = iif(toInteger(BrandID)==1604, \"saunier\", \"vaillant\"),\n\t\t{Société} = upper({Société})) ~> marqueFile\nmarqueFile select(mapColumn(\n\t\tdistributeur = {Société},\n\t\treference = {Référence},\n\t\tarticle = {Désignation},\n\t\tqte_ecoulement = {Quantité},\n\t\tca_ecoulement = Valeur,\n\t\t{Code postal} = {CP Dépôt},\n\t\tyear = Year,\n\t\tmonth = Month,\n\t\tyearmonth = fullLeftUnion@Yearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tmarque_id = BrandID,\n\t\tmarque_file\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\ninnerOrganisation derive(Yearmonth = replace(Yearmonth, \" \", \"\")) ~> yearmonthSplit\ntypeCaste filter(Article=='001002624'&& {Code client}=='16010144') ~> filter2\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0} as string,\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1} as string,\n\t\tSaunierDuval as string,\n\t\t{01000} as string,\n\t\t{01999} as string,\n\t\t{nicolas hernandez} as string,\n\t\t{Conseiller Technique Thermodynamique} as string,\n\t\t{01} as string,\n\t\t{1647-Rhône-Alpes Auvergne} as string,\n\t\t{16400092} as string,\n\t\t{nicolas julien} as string,\n\t\t{SD diffus} as string,\n\t\t{NICOLAS Julien} as string,\n\t\t{16566798} as string,\n\t\tProp_14 as string\n\t),\n\tpartitionFileNames:['MAILLARD_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> MAILLARDECOULPREPARED\nouterleftOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MAILLARD_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MAILLARD_ECOULEMENT')]",
				"[concat(variables('factoryId'), '/datasets/MAILLARD_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/MAILLARD_ECOUL_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/MAILLARD_ORGANISATION_NOTFOUND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Marketing')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "InputBaseCom"
						},
						{
							"dataset": {
								"referenceName": "HierarchieMKT_SD",
								"type": "DatasetReference"
							},
							"name": "HierarchieMKTSD"
						},
						{
							"dataset": {
								"referenceName": "HierarchieMKT_VA",
								"type": "DatasetReference"
							},
							"name": "HerarchieMKTVA"
						},
						{
							"dataset": {
								"referenceName": "StgOffreChantier",
								"type": "DatasetReference"
							},
							"name": "StgOffreChantier"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHI_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "ArticleHierarchi"
						},
						{
							"dataset": {
								"referenceName": "TYPOLOGIE_EPS",
								"type": "DatasetReference"
							},
							"name": "typologieEPS"
						},
						{
							"dataset": {
								"referenceName": "inputRefVMC",
								"type": "DatasetReference"
							},
							"name": "vmc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SORTIE_MARKETING",
								"type": "DatasetReference"
							},
							"name": "Smarketing"
						}
					],
					"transformations": [
						{
							"name": "Map"
						},
						{
							"name": "TypologieClientIndirect"
						},
						{
							"name": "marqueSaunier"
						},
						{
							"name": "marqueVaillant"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "dropColumns2"
						},
						{
							"name": "UnionMKT"
						},
						{
							"name": "Joindre1"
						},
						{
							"name": "innerMKT"
						},
						{
							"name": "FiltreCanalDiffusTrue"
						},
						{
							"name": "FiltreCanalDiffusFalse"
						},
						{
							"name": "FiltreCanalChantierTrue"
						},
						{
							"name": "FiltrerCanalChantierFalse"
						},
						{
							"name": "UniqueStgOffreChantier"
						},
						{
							"name": "TypologieOffreSIdiffus"
						},
						{
							"name": "UnionALL"
						},
						{
							"name": "JoinStgCanalChantieTrue"
						},
						{
							"name": "NoOffreVide"
						},
						{
							"name": "RemoveColumns1",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "UnionMKTR"
						},
						{
							"name": "FiltreLeft"
						},
						{
							"name": "RemoveColumns3",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "UniqueArticle"
						},
						{
							"name": "JoinUniqueArticle"
						},
						{
							"name": "SelectLast"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "typologieEPSKeepColumns"
						},
						{
							"name": "deleteXinCompte"
						},
						{
							"name": "coalesceCompte"
						},
						{
							"name": "typologieClientDirect"
						},
						{
							"name": "typologieClientIndirectGroupe"
						},
						{
							"name": "renameTypologieClientDirect"
						},
						{
							"name": "renameTypologieClientIndirect"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "coalesceArticle"
						},
						{
							"name": "coalesceRef"
						},
						{
							"name": "uniqueNumeroCompte"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tDR as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tDescription as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Client_direct_Nom du compte} as string,\n\t\t{Client direct_Groupe cible/Typologie générale} as string,\n\t\t{Client direct_Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client direct_Compte principal: Numéro du compte} as string,\n\t\t{Client direct_Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> InputBaseCom\nsource(output(\n\t\t{Référence article} as string,\n\t\t{Grande famille} as string,\n\t\t{Sous-famille} as string,\n\t\t{eShop level 1 - CATALOG - désignation} as string,\n\t\t{eShop level 2 - RANGE - désignation} as string,\n\t\t{eShop level 3 - FAMILY - désignation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> HierarchieMKTSD\nsource(output(\n\t\t{Référence article active} as string,\n\t\t{Grande famille} as string,\n\t\t{Sous-famille} as string,\n\t\t{eShop level 1} as string,\n\t\t{eShop level 2} as string,\n\t\t{eShop level 3} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> HerarchieMKTVA\nsource(output(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix client} as string,\n\t\t{Prix négoce} as string,\n\t\t{Prix total} as string,\n\t\tClient as string,\n\t\t{Type financement} as string,\n\t\t{Ville client} as string,\n\t\t{Numéro interne 1} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Typologie projet} as string,\n\t\tDateValidite as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> StgOffreChantier\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hi�rarch.groupe} as string,\n\t\t{Hi�rarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{D�signation Statut} as string,\n\t\t{D�b. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ArticleHierarchi\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> typologieEPS\nsource(output(\n\t\tMaterial as string,\n\t\tyear as string,\n\t\tVMC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> vmc\nInputBaseCom select(mapColumn(\n\t\t{Typologie client direct} = {Code client livré},\n\t\tyearmonth,\n\t\tyear,\n\t\tcanal_final,\n\t\t{Typologie client indirect} = {code client plateforme livree},\n\t\t{Code article} = {code produit},\n\t\t{Quantité} = quantite,\n\t\t{CA net} = ca,\n\t\tmarque,\n\t\t{Canal de distribution} = {nom du canal},\n\t\tno_offre,\n\t\t{Hiérarchgroupe},\n\t\t{ATC Performance},\n\t\tDR,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Map\nMap derive({Typologie client indirect} = iif({Typologie client indirect}=={Typologie client direct}, \r\n \"\", \r\n {Typologie client indirect}),\n\t\ttemp = \"left\") ~> TypologieClientIndirect\nHierarchieMKTSD derive(marque = \"SaunierDuval\") ~> marqueSaunier\nHerarchieMKTVA derive(marque = \"Vaillant\") ~> marqueVaillant\nmarqueSaunier select(mapColumn(\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nmarqueVaillant select(mapColumn(\n\t\t{Référence article} = {Référence article active},\n\t\t{eShop level 1 - CATALOG - désignation} = {eShop level 1},\n\t\t{eShop level 2 - RANGE - désignation} = {eShop level 2},\n\t\t{eShop level 3 - FAMILY - désignation} = {eShop level 3},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\ndropColumns, dropColumns2 union(byName: true)~> UnionMKT\nTypologieClientIndirect, UnionMKTR join(Map@marque == UnionMKT@marque\n\t&& coalesce(toString(toInteger(replace({Code article}, \" \", \"\"))),replace({Code article}, \" \", \"\")) == coalesce(toString(toInteger(replace({Référence article}, \" \", \"\"))),replace({Référence article}, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Joindre1\nTypologieClientIndirect, UnionMKT join(coalesce(toString(toInteger(replace({Code article}, \" \", \"\"))),replace({Code article}, \" \", \"\")) == coalesce(toString(toInteger(replace({Référence article}, \" \", \"\"))),replace({Référence article}, \" \", \"\"))\n\t&& Map@marque == UnionMKT@marque,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerMKT\nRemoveColumns3 filter(canal_final==\"Diffus\") ~> FiltreCanalDiffusTrue\nRemoveColumns3 filter(canal_final!=\"Diffus\") ~> FiltreCanalDiffusFalse\nFiltreCanalDiffusFalse filter(canal_final==\"Chantier\") ~> FiltreCanalChantierTrue\nFiltreCanalDiffusFalse filter(canal_final!=\"Chantier\") ~> FiltrerCanalChantierFalse\ncoalesceRef aggregate(groupBy(Offre,\n\t\t{Référence}),\n\t{Code projet} = max({Code projet}),\n\t\t{Typologie projet} = max(Type)) ~> UniqueStgOffreChantier\nNoOffreVide derive({Typologie offre si diffus} = substring(no_offre,1,3)) ~> TypologieOffreSIdiffus\nJoinStgCanalChantieTrue, TypologieOffreSIdiffus, RemoveColumns1, FiltrerCanalChantierFalse union(byName: true)~> UnionALL\nUniqueStgOffreChantier, FiltreCanalChantierTrue join(Offre == no_offre\n\t&& coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\")) == coalesce(toString(toInteger(replace({Code article}, \" \", \"\"))),replace({Code article}, \" \", \"\")),\n\tjoinType:'right',\n\tbroadcast: 'auto')~> JoinStgCanalChantieTrue\nFiltreCanalDiffusTrue derive(no_offre = iifNull(no_offre, \"\", no_offre)) ~> NoOffreVide\nFiltreLeft select(mapColumn(\n\t\t{Typologie client direct},\n\t\tcanal_final,\n\t\t{Typologie client indirect},\n\t\t{Code article},\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Canal de distribution},\n\t\tno_offre,\n\t\tyearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{Hiérarchgroupe},\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tmarque = UnionMKT@marque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nUnionMKT derive(temp = \"right\") ~> UnionMKTR\nJoindre1 filter(isNull(UnionMKTR@temp)) ~> FiltreLeft\ninnerMKT select(mapColumn(\n\t\t{Typologie client direct},\n\t\tcanal_final,\n\t\t{Typologie client indirect},\n\t\t{Code article},\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Canal de distribution},\n\t\tno_offre,\n\t\tyearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{Hiérarchgroupe},\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\ttemp,\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns3\ncoalesceArticle aggregate(groupBy(Article),\n\tDescription = max(Description),\n\t\tN1groupe = max({N1.groupe}),\n\t\tN2groupe = max({N2.groupe}),\n\t\tN3groupe = max({N3.groupe}),\n\t\tN4groupe = max({N4.groupe}),\n\t\tN5groupe = max({N5.groupe}),\n\t\tN6groupe = max({N6.groupe}),\n\t\tN7groupe = max({N7.groupe})) ~> UniqueArticle\nUnionALL, UniqueArticle join(coalesce(toString(toInteger(replace({Code article}, \" \", \"\"))),replace({Code article}, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinUniqueArticle\nJoinUniqueArticle select(mapColumn(\n\t\t{Code article},\n\t\t{Description article} = Description,\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tN1groupe,\n\t\tN1groupedesignation,\n\t\tN2groupe,\n\t\tN2groupedesignation,\n\t\tN3groupe,\n\t\tN3groupedesignation,\n\t\tN4groupe,\n\t\tN4groupedesignation,\n\t\tN4groupe = N5groupe,\n\t\tN5groupedesignation,\n\t\tN6groupe,\n\t\tN6groupedesignation,\n\t\tN7groupe,\n\t\tN7groupedesignation,\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Typologie client direct},\n\t\t{Typologie client indirect},\n\t\t{Canal de distribution},\n\t\t{Typologie offre si diffus},\n\t\t{Typologie projet},\n\t\tyearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{Hiérarchgroupe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLast\nStgOffreChantier filter(!isNull(Offre)) ~> Filter1\ntypologieEPS select(mapColumn(\n\t\t{Numéro du compte},\n\t\t{Groupe cible/Typologie générale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> typologieEPSKeepColumns\ntypologieEPSKeepColumns derive({Numéro du compte} = replace({Numéro du compte}, \"x\", \"\")) ~> deleteXinCompte\ndeleteXinCompte derive({Numéro du compte} = coalesce(toString(toInteger(replace({Numéro du compte}, \" \", \"\"))),replace({Numéro du compte}, \" \", \"\"))) ~> coalesceCompte\nSelectLast, uniqueNumeroCompte join(coalesce(toString(toInteger(replace({Typologie client direct}, \" \", \"\"))),replace({Typologie client direct}, \" \", \"\")) == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> typologieClientDirect\nrenameTypologieClientDirect, uniqueNumeroCompte join(coalesce(toString(toInteger(replace({Typologie client indirect}, \" \", \"\"))),replace({Typologie client indirect}, \" \", \"\")) == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> typologieClientIndirectGroupe\ntypologieClientDirect select(mapColumn(\n\t\t{Code article},\n\t\t{Description article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tN1groupe,\n\t\tN1groupedesignation,\n\t\tN2groupe,\n\t\tN2groupedesignation,\n\t\tN3groupe,\n\t\tN3groupedesignation,\n\t\tN4groupe,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupe,\n\t\tN6groupedesignation,\n\t\tN7groupe,\n\t\tN7groupedesignation,\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Typologie client indirect},\n\t\t{Canal de distribution},\n\t\t{Typologie offre si diffus},\n\t\t{Typologie projet},\n\t\t{Typologie client direct} = {Groupe cible/Typologie générale},\n\t\tyearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{Hiérarchgroupe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameTypologieClientDirect\ntypologieClientIndirectGroupe select(mapColumn(\n\t\t{Code article},\n\t\t{Description article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tN1groupe,\n\t\tN1groupedesignation,\n\t\tN2groupe,\n\t\tN2groupedesignation,\n\t\tN3groupe,\n\t\tN3groupedesignation,\n\t\tN4groupe,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupe,\n\t\tN6groupedesignation,\n\t\tN7groupe,\n\t\tN7groupedesignation,\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Typologie client direct},\n\t\t{Typologie client indirect} = {Groupe cible/Typologie générale},\n\t\t{Canal de distribution},\n\t\t{Typologie offre si diffus},\n\t\t{Typologie projet},\n\t\tDate = yearmonth,\n\t\tyear,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{code article \"groupe\"} = {Hiérarchgroupe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameTypologieClientIndirect\nrenameTypologieClientIndirect derive({Prix de vente unitaire} = toDouble( replace({CA net}, \",\", \".\") )/ toDouble(replace({Quantité}, \",\", \".\"))) ~> DerivedColumn1\nDerivedColumn1, vmc join({Code article} == Material\n\t&& renameTypologieClientIndirect@year == vmc@year,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nDerivedColumn2 select(mapColumn(\n\t\t{Code article},\n\t\t{Description article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tN1groupe,\n\t\tN1groupedesignation,\n\t\tN2groupe,\n\t\tN2groupedesignation,\n\t\tN3groupe,\n\t\tN3groupedesignation,\n\t\tN4groupe,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupe,\n\t\tN6groupedesignation,\n\t\tN7groupe,\n\t\tN7groupedesignation,\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Typologie client direct},\n\t\t{Typologie client indirect},\n\t\t{Canal de distribution},\n\t\t{Typologie offre si diffus},\n\t\t{Typologie projet},\n\t\tDate,\n\t\tyear = renameTypologieClientIndirect@year,\n\t\tDR,\n\t\t{ATC Performance},\n\t\t{code article \"groupe\"},\n\t\t{Prix de vente unitaire},\n\t\tVMC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nJoin1 derive({Code article} = {Code article},\n\t\tVMC = replace(VMC, \".\", \",\"),\n\t\t{Prix de vente unitaire} = replace(toString({Prix de vente unitaire}), \".\", \",\")) ~> DerivedColumn2\nArticleHierarchi derive(Article = coalesce(toString(toInteger(replace({Article}, \" \", \"\"))),replace({Article}, \" \", \"\"))) ~> coalesceArticle\nFilter1 derive({Référence} = coalesce(toString(toInteger(replace({Référence}, \" \", \"\"))),replace({Référence}, \" \", \"\"))) ~> coalesceRef\ncoalesceCompte aggregate(groupBy({Numéro du compte}),\n\t{Groupe cible/Typologie générale} = last({Groupe cible/Typologie générale}, true())) ~> uniqueNumeroCompte\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string\n\t),\n\tpartitionFileNames:['SORTIE_MARKETING.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> Smarketing"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputBaseCommercialMarketing')]",
				"[concat(variables('factoryId'), '/datasets/HierarchieMKT_SD')]",
				"[concat(variables('factoryId'), '/datasets/HierarchieMKT_VA')]",
				"[concat(variables('factoryId'), '/datasets/StgOffreChantier')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHI_ARTICLE')]",
				"[concat(variables('factoryId'), '/datasets/TYPOLOGIE_EPS')]",
				"[concat(variables('factoryId'), '/datasets/inputRefVMC')]",
				"[concat(variables('factoryId'), '/datasets/SORTIE_MARKETING')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ModelVenteDirecte')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InFacturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "ventedirecte"
						},
						{
							"dataset": {
								"referenceName": "compteSap",
								"type": "DatasetReference"
							},
							"name": "comptesap"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtc"
						},
						{
							"dataset": {
								"referenceName": "associationoffre",
								"type": "DatasetReference"
							},
							"name": "associationoffre"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "offre"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "venteDirectePrepared",
								"type": "DatasetReference"
							},
							"name": "OVenteDirectePrepared"
						}
					],
					"transformations": [
						{
							"name": "addCols"
						},
						{
							"name": "projection"
						},
						{
							"name": "dropDuplicade"
						},
						{
							"name": "sapJoin"
						},
						{
							"name": "removeCol1"
						},
						{
							"name": "joinAtc"
						},
						{
							"name": "keepColumnsATC"
						},
						{
							"name": "atcDropDuplicate"
						},
						{
							"name": "joinAssociation"
						},
						{
							"name": "keepColumnsOffre"
						},
						{
							"name": "offreDropDuplicade"
						},
						{
							"name": "joinOffre"
						},
						{
							"name": "removeCol2"
						},
						{
							"name": "setQteCA"
						},
						{
							"name": "removeCols"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						}
					],
					"script": "source(output(\n\t\t{ Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\t{ vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventedirecte\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> comptesap\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refAtc\nsource(output(\n\t\tCommande as string,\n\t\t{Référence Offre BA} as string,\n\t\t{Qté Cdée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> associationoffre\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offre\nremoveCols derive(distributeur = \"vente directe\",\n\t\t{Diffus/chantier} = iif( {Canal distribution}==\"43\", \"Chantier\", \"Diffus\"),\n\t\t{marque(SD/vaillant)} = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\")) ~> addCols\ncomptesap select(mapColumn(\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> projection\nDerivedColumn2 aggregate(groupBy(Client,\n\t\t{Code postal}),\n\t{Agence commerciale} = max({Agence commerciale})) ~> dropDuplicade\nremoveCol1, dropDuplicade join({Code client} == Client,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> sapJoin\naddCols select(mapColumn(\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Code client} = {Recept de march},\n\t\t{Destinataire facture},\n\t\tArticle = reference,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyearmonth,\n\t\treference,\n\t\tdistributeur,\n\t\t{Diffus/chantier},\n\t\t{marque(SD/vaillant)},\n\t\t{Agence commerciale corrigé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> removeCol1\nsapJoin, atcDropDuplicate join({Diffus/chantier} == {Canal final}\n\t&& {Code postal} == code_postal_atc\n\t&& {marque(SD/vaillant)} == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinAtc\nrefAtc select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumnsATC\nDerivedColumn1 aggregate(groupBy({Canal final},\n\t\tcode_postal_atc,\n\t\tMarque),\n\tMatricule = max(Matricule),\n\t\tATC = max(ATC),\n\t\tNomATC = max(NomATC)) ~> atcDropDuplicate\njoinAtc, associationoffre join({Document de vente} == Commande,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinAssociation\noffre select(mapColumn(\n\t\tResponsable,\n\t\tOffre,\n\t\t{ATC performance} = CodeATC,\n\t\tcanal = Canal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumnsOffre\nkeepColumnsOffre aggregate(groupBy(Offre,\n\t\t{ATC performance},\n\t\tcanal),\n\tResponsable = max(Responsable)) ~> offreDropDuplicade\njoinAssociation, offreDropDuplicade join({Référence Offre BA} == Offre\n\t&& {Canal final} == canal,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinOffre\nsetQteCA select(mapColumn(\n\t\tmarque_id = {Org commerciale},\n\t\tmarque_name = {marque(SD/vaillant)},\n\t\tcanal_final = {Diffus/chantier},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString = {Code client},\n\t\treference = Article,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tyearmonth,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\t{Agence commerciale} = {Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tno_offre = {Référence Offre BA},\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> removeCol2\njoinOffre derive(ca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tdata_origin = \"facturation\") ~> setQteCA\nventedirecte select(mapColumn(\n\t\t{Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{Type doc vente} = { vente},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> removeCols\nkeepColumnsATC derive(code_postal_atc = toInteger(code_postal_atc)) ~> DerivedColumn1\nprojection derive({Code postal} = toInteger({Code postal})) ~> DerivedColumn2\nremoveCol2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OVenteDirectePrepared.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OVenteDirectePrepared"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InFacturationForVenteDirect')]",
				"[concat(variables('factoryId'), '/datasets/compteSap')]",
				"[concat(variables('factoryId'), '/datasets/ref_atc')]",
				"[concat(variables('factoryId'), '/datasets/associationoffre')]",
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/venteDirectePrepared')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Model_PARTEDIS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecouPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "ecoulmnt"
						},
						{
							"dataset": {
								"referenceName": "facturationWithIndex",
								"type": "DatasetReference"
							},
							"name": "facturation"
						},
						{
							"dataset": {
								"referenceName": "associationoffre",
								"type": "DatasetReference"
							},
							"name": "association"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "offre"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sortiePardedis",
								"type": "DatasetReference"
							},
							"name": "OModelPartedis"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "sAssociation"
						},
						{
							"name": "selectfacturation"
						},
						{
							"name": "InnerJoin"
						},
						{
							"name": "leftFacturationAvoir"
						},
						{
							"name": "origin"
						},
						{
							"name": "sEcoul"
						},
						{
							"name": "fullleft"
						},
						{
							"name": "filterLeft"
						},
						{
							"name": "newColumnsLeft"
						},
						{
							"name": "fullRght"
						},
						{
							"name": "filterRight"
						},
						{
							"name": "newColumnsRight"
						},
						{
							"name": "endRight"
						},
						{
							"name": "endLeft"
						},
						{
							"name": "endjoin"
						},
						{
							"name": "UnionEndRight"
						},
						{
							"name": "JoinOffre"
						},
						{
							"name": "selectOffre"
						},
						{
							"name": "selectATC"
						},
						{
							"name": "unique"
						},
						{
							"name": "Select4"
						},
						{
							"name": "UnionEndLeft"
						},
						{
							"name": "addCanalFinal"
						},
						{
							"name": "uniqueOffreCanalATC"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "marqueName"
						},
						{
							"name": "JoinAtc"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "dropColumnsInCommon2"
						},
						{
							"name": "renameColumns"
						},
						{
							"name": "positifEc"
						},
						{
							"name": "UnionpositiveEc"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "select1"
						},
						{
							"name": "revertPosMid"
						},
						{
							"name": "filter1"
						},
						{
							"name": "wholosalerclean"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "cleandist"
						},
						{
							"name": "changeDistru"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulmnt\nsource(output(\n\t\t{ Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\ttoroll as string,\n\t\tindexcols2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\nsource(output(\n\t\tCommande as string,\n\t\t{Référence Offre BA} as string,\n\t\t{Qté Cdée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> association\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offre\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refAtc\nInnerJoin derive(ca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tdata_origin = \"facturation avec matching\",\n\t\tcanal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" )) ~> DerivedColumn1\nassociation select(mapColumn(\n\t\tCommande,\n\t\tno_offre = {Référence Offre BA},\n\t\t{Qté Cdée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sAssociation\nleftFacturationAvoir select(mapColumn(\n\t\t{Org commerciale} = { Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tarticle = reference,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\torigin,\n\t\tno_offre,\n\t\tindexcols2,\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectfacturation\nsEcoul, selectfacturation join(replace(ecoulmnt@indexcols2, \" \", \"\") == replace(selectfacturation@indexcols2, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoin\norigin, sAssociation join({Document de vente} == Commande,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftFacturationAvoir\nfacturation derive(origin = \"facturation\") ~> origin\necoulmnt derive(origin = \"ecoulement\") ~> sEcoul\nsEcoul, selectfacturation join(replace(ecoulmnt@indexcols2, \" \", \"\") == replace(selectfacturation@indexcols2, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullleft\nfullleft filter(isNull(selectfacturation@origin)) ~> filterLeft\nfilterLeft derive({Canal distribution} = \"42\",\n\t\tca_final = toString(-1*toDouble(ca_ecoulement)),\n\t\tqt_final = toString(-1*toDouble(qte_ecc)),\n\t\tdata_origin = \"decrementation ecoulement sans matching\",\n\t\ttposID = POSSAMidString) ~> newColumnsLeft\nsEcoul, selectfacturation join(replace(ecoulmnt@indexcols2, \" \", \"\") == replace(selectfacturation@indexcols2, \" \", \"\"),\n\tjoinType:'right',\n\tbroadcast: 'auto')~> fullRght\nfullRght filter(isNull(sEcoul@origin)) ~> filterRight\nfilterRight derive(ca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tdata_origin = \"facturation sans ecoulement\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\"),\n\t\tcanal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" )) ~> newColumnsRight\nnewColumnsRight select(mapColumn(\n\t\tmarque_id = {Org commerciale},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString = {Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear = selectfacturation@year,\n\t\tyearmonth = selectfacturation@yearmonth,\n\t\treference = selectfacturation@reference,\n\t\tarticle = selectfacturation@reference,\n\t\tHubSAPid = selectfacturation@HubSAPid,\n\t\ttoreplicate = selectfacturation@toreplicate,\n\t\tindexcols2 = selectfacturation@indexcols2,\n\t\torigin = selectfacturation@origin,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endRight\naddCanalFinal select(mapColumn(\n\t\tyearmonth = ecoulmnt@yearmonth,\n\t\tyear = ecoulmnt@year,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = ecoulmnt@HubSAPid,\n\t\treference = ecoulmnt@reference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate = ecoulmnt@toreplicate,\n\t\tdd,\n\t\tindexcols2 = ecoulmnt@indexcols2,\n\t\torigin = sEcoul@origin,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\t{Canal distribution},\n\t\tcanal_final,\n\t\ttposID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endLeft\nSelect4 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endjoin\ndropColumnsInCommon, endRight union(byName: true)~> UnionEndRight\nDerivedColumn1, selectOffre join(no_offre == Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOffre\nuniqueOffreCanalATC select(mapColumn(\n\t\tOffre,\n\t\t{ATC performance} = ATC,\n\t\t{offre canal} = canal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectOffre\nDerivedColumn2 select(mapColumn(\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc = {Code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectATC\nrefAtc aggregate(groupBy(Marque,\n\t\t{Canal final},\n\t\t{Code postal}),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> unique\nJoinOffre select(mapColumn(\n\t\tyearmonth = ecoulmnt@yearmonth,\n\t\tyear = ecoulmnt@year,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = ecoulmnt@HubSAPid,\n\t\treference = ecoulmnt@reference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate = ecoulmnt@toreplicate,\n\t\tdd,\n\t\t{ Org commerciale} = {Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear = selectfacturation@year,\n\t\tyearmonth = selectfacturation@yearmonth,\n\t\treference = selectfacturation@reference,\n\t\tarticle = selectfacturation@reference,\n\t\tHubSAPid = selectfacturation@HubSAPid,\n\t\ttoreplicate = selectfacturation@toreplicate,\n\t\tindexcols2 = selectfacturation@indexcols2,\n\t\torigin = selectfacturation@origin,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nendjoin, endDecrementation union(byName: true)~> UnionEndLeft\nnewColumnsLeft derive(canal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" ),\n\t\tPOSSAMidString = ecoulmnt@HubSAPid) ~> addCanalFinal\nrenameColumns aggregate(groupBy(Offre,\n\t\tcanal,\n\t\tATC),\n\tDateOffre = first(DateOffre)) ~> uniqueOffreCanalATC\nmarqueName select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tarticle = reference,\n\t\t{Code postal},\n\t\tmarque_id = marque,\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\tcanal_final,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nUnionpositiveEc derive(marque_name = iif(marque==\"1604\", \"SaunierDuval\", \"Vaillant\"),\n\t\t{Code postal} = toInteger({Code postal})) ~> marqueName\nRemoveColumns1, selectATC join(marque_name == Marque\n\t&& canal_final == {Canal final}\n\t&& iif(data_origin==\"decrementation ecoulement sans matching\", -5, {Code postal}) == code_postal_atc,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAtc\nJoinAtc select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nchangeDistru select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon2\noffre select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tATC = CodeATC,\n\t\tcanal = Canal,\n\t\tProduit,\n\t\t{Créateur offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrevertPosMid derive(data_origin = \"ecoulement sans matching\",\n\t\tca_final = ca_ecoulement,\n\t\tqt_final = toString(-1*toDouble(qt_final))) ~> positifEc\nUnionEndLeft, positifEc union(byName: true)~> UnionpositiveEc\nunique derive({Code postal} = toInteger({Code postal})) ~> DerivedColumn2\nselect1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd,\n\t\tindexcols2,\n\t\torigin,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\t{Canal distribution},\n\t\tcanal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\nendLeft select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd,\n\t\tindexcols2,\n\t\torigin,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\t{Canal distribution},\n\t\tcanal_final,\n\t\ttposID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nendLeft select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString = tposID,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd,\n\t\tindexcols2,\n\t\torigin,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\t{Canal distribution},\n\t\tcanal_final,\n\t\ttposID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> revertPosMid\nUnionEndRight filter(year == \"2021\" && in ([\"facturation sans ecoulement\",\"facturation avec matching\"],data_origin)) ~> filter1\nfilter1 derive(WholeSalerID_clen = coalesce(lower(iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis'    ,iif(instr(lower(WholeSalerID), 'trva - tereva' )>0 , 'tereva'    ,iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc'    ,iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort'    ,iif(instr(lower(WholeSalerID), 'sonac' )>0, 'mabille'    , lower(WholeSalerID))))))) , lower(distributeur))) ~> wholosalerclean\nwholosalerclean aggregate(groupBy(WholeSalerID_clen),\n\tqt_final = sum(toDouble(qt_final))) ~> aggregate1\nUnionEndRight derive(wholesalclean = coalesce(lower(iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis'    ,iif(instr(lower(WholeSalerID), 'trva - tereva' )>0 , 'tereva'    ,iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc'    ,iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort'    ,iif(instr(lower(WholeSalerID), 'sonac' )>0, 'mabille'    , lower(WholeSalerID))))))) , lower(distributeur))) ~> cleandist\ncleandist derive(distributeur = upper(wholesalclean)) ~> changeDistru\ndropColumnsInCommon2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelPartedis.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OModelPartedis"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecouPartedisLikeWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/facturationWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/associationoffre')]",
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/ref_atc')]",
				"[concat(variables('factoryId'), '/datasets/sortiePardedis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_CLIENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "EXtractionSAP"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_ATC4_copy1",
								"type": "DatasetReference"
							},
							"name": "ReferentielAtc4"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieNomenclatureClient",
								"type": "DatasetReference"
							},
							"name": "SortieNomenclatureClient"
						}
					],
					"transformations": [
						{
							"name": "FiltreATCClient"
						},
						{
							"name": "UniqueATC"
						},
						{
							"name": "JointureATC"
						},
						{
							"name": "Rename"
						},
						{
							"name": "MapDrifted1",
							"description": "Crée un mappage explicite pour chaque colonne dérivée"
						},
						{
							"name": "NomCli"
						}
					],
					"script": "source(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EXtractionSAP\nsource(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ReferentielAtc4\nMapDrifted1 filter({ATC Client}!=\"#\") ~> FiltreATCClient\nReferentielAtc4 aggregate(groupBy(ATC),\n\tRight_DR = max(Right_DR)) ~> UniqueATC\nFiltreATCClient, UniqueATC join({ATC Client} == ATC,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JointureATC\nNomCli select(mapColumn(\n\t\tNoNiv1 = {Niveau 1},\n\t\tNiv1 = {_c4},\n\t\tNoNiv2 = {Niveau 2},\n\t\tNiv2 = {_c10},\n\t\tNoNiv3 = {Niveau 3},\n\t\tNiv3 = {_c6},\n\t\tNoNiv4 = {Niveau 4},\n\t\tNiv4 = {_c30},\n\t\tNoCli = Client,\n\t\tNomCli,\n\t\tDept = {Dép},\n\t\tVille = {Localité},\n\t\tNoGrpCli5 = {Groupe de clients 5},\n\t\tGrpCli5 = {_c26},\n\t\tNoGrpCli = {Groupe de clients},\n\t\tGrpCli = {_c24},\n\t\tPartnerID = {Récept. de march.}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nEXtractionSAP derive({_c2} = toString(byName('_c2')),\n\t\t{_c4} = toString(byName('_c4')),\n\t\t{_c6} = toString(byName('_c6')),\n\t\t{_c8} = toString(byName('_c8')),\n\t\t{_c10} = toString(byName('_c10')),\n\t\t{_c18} = toString(byName('_c18')),\n\t\t{_c22} = toString(byName('_c22')),\n\t\t{_c24} = toString(byName('_c24')),\n\t\t{_c26} = toString(byName('_c26')),\n\t\t{_c28} = toString(byName('_c28')),\n\t\t{_c30} = toString(byName('_c30')),\n\t\t{_c32} = toString(byName('_c32')),\n\t\t{_c34} = toString(byName('_c34')),\n\t\t{_c36} = toString(byName('_c36')),\n\t\t{_c39} = toString(byName('_c39')),\n\t\t{_c41} = toString(byName('_c41')),\n\t\t{_c43} = toString(byName('_c43'))) ~> MapDrifted1\nJointureATC derive(NomCli = {_c10}) ~> NomCli\nRename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SortieNomenclatureCLient.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieNomenclatureClient"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/extractionSap')]",
				"[concat(variables('factoryId'), '/datasets/REFERENTIEL_ATC4_copy1')]",
				"[concat(variables('factoryId'), '/datasets/SortieNomenclatureClient')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_PRODUIT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HIERARCHI_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "hierarchieArticle"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NOMENCLATURE_PRODUIT",
								"type": "DatasetReference"
							},
							"name": "nomenclatureProduit"
						}
					],
					"transformations": [
						{
							"name": "RenameArticle"
						},
						{
							"name": "Unique"
						},
						{
							"name": "CanalDist"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> hierarchieArticle\nhierarchieArticle select(mapColumn(\n\t\tNoCanalDist = CDis,\n\t\tNoArt = Article,\n\t\tArticle = Description,\n\t\tNoNiv1 = {N1.locale},\n\t\tNoNiv2 = {N2.locale},\n\t\tNoNiv3 = {N3.locale},\n\t\tNoNiv4 = {N4.locale},\n\t\tNoNiv5 = {N5.locale},\n\t\tNoNiv6 = {N6.locale},\n\t\tNoNiv7 = {N7.locale},\n\t\tNiv1 = {N1.locale.designation},\n\t\tNiv2 = {N2.locale.designation},\n\t\tNiv3 = {N3.locale.designation},\n\t\tNiv4 = {N4.locale.designation},\n\t\tNiv5 = {N5.locale.designation},\n\t\tNiv6 = {N6.locale.designation},\n\t\tNiv7 = {N7.locale.designation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameArticle\nRenameArticle aggregate(groupBy(Article),\n\tNoCanalDist = max(NoCanalDist),\n\t\tNoArt = max(NoArt),\n\t\tNoNiv1 = max(NoNiv1),\n\t\tNoNiv2 = max(NoNiv2),\n\t\tNoNiv3 = max(NoNiv3),\n\t\tNoNiv4 = max(NoNiv4),\n\t\tNoNiv5 = max(NoNiv5),\n\t\tNoNiv6 = max(NoNiv6),\n\t\tNoNiv7 = max(NoNiv7),\n\t\tNiv1 = max(Niv1),\n\t\tNiv2 = max(Niv2),\n\t\tNiv3 = max(Niv3),\n\t\tNiv4 = max(Niv4),\n\t\tNiv5 = max(Niv5),\n\t\tNiv6 = max(Niv6),\n\t\tNiv7 = max(Niv7)) ~> Unique\nUnique derive(CanalDist = iif(NoCanalDist==\"43\",\r\n\"Chantier/Contract Business\",\r\niif(NoCanalDist==\"42\", \r\n\"Diffus/One-off\",\r\n iif(NoCanalDist==\"51\",\r\n  \"FS\",\r\n   iif(NoCanalDist==\"45\", \r\n   \"Constructeurs/CMI\", \r\n   iif(NoCanalDist==\"40\",\r\n    \"Non core Business\",\r\n     '')))))) ~> CanalDist\nCanalDist select(mapColumn(\n\t\tArticle,\n\t\tNoArt,\n\t\tNoNiv1,\n\t\tNoNiv2,\n\t\tNoNiv3,\n\t\tNoNiv4,\n\t\tNoNiv5,\n\t\tNoNiv6,\n\t\tNoNiv7,\n\t\tNiv1,\n\t\tNiv2,\n\t\tNiv3,\n\t\tNiv4,\n\t\tNiv5,\n\t\tNiv6,\n\t\tNiv7\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SortieNomenclatureProduit.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> nomenclatureProduit"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HIERARCHI_ARTICLE')]",
				"[concat(variables('factoryId'), '/datasets/NOMENCLATURE_PRODUIT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ORCAB_ECOULEMENT_INPUT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ORCAB_ECOULEMENT_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ORCABECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "quantityNullOutput"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						}
					],
					"transformations": [
						{
							"name": "monthToNumber"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "cooperativenotNull"
						},
						{
							"name": "orgaCooperativeNotNull"
						},
						{
							"name": "unique"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "getYear"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "fillNaRefFournisseur"
						}
					],
					"script": "source(output(\n\t\tFournisseur as string,\n\t\t{Coopérative} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\tMois as string,\n\t\t{CA 2020} as string,\n\t\t{CA 2019} as string,\n\t\t{Qte 2020} as string,\n\t\t{Qte 2019} as string,\n\t\tpath as string,\n\t\tqte_ecoulement as string,\n\t\tFamille as string,\n\t\t{Sous Famille} as string,\n\t\tREFFOURNISSEUR as string,\n\t\t{Qte Livrée 2020} as string,\n\t\t{Qte Livrée 2019} as string,\n\t\t{Code Dispo Cde} as string,\n\t\t{Code SAPAIG} as string,\n\t\t{CA sans Marge} as string,\n\t\t{CA sans Marge A-1} as string,\n\t\t{Evol. CA A/A-1} as string,\n\t\t{Qte Livrée} as string,\n\t\t{Qte Livrée A-1} as string,\n\t\t{Evol. Qte A/A-1} as string,\n\t\t{Qté Livrée 2020} as string,\n\t\t{Qté Livrée 2019} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Nom Coopérative} as string,\n\t\t{CP Coop.} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nfillNaRefFournisseur derive(month = iif(lower(Mois)==\"janvier\", \"01\",      iif(lower(Mois)==\"février\",\"02\",     iif(lower(Mois)==\"mars\", \"03\",      iif(lower(Mois)==\"avril\", \"04\",      iif(lower(Mois)==\"mai\", \"05\",      iif(lower(Mois)==\"juin\", \"06\",      iif(lower(Mois)==\"juillet\", \"07\",      iif(lower(Mois)==\"août\", \"08\",      iif(lower(Mois)==\"septembre\", \"09\",      iif(lower(Mois)==\"octobre\", \"10\",      iif(lower(Mois)==\"novembre\", \"11\",      iif(lower(Mois)==\"décembre\", \"12\", \"0\")))))))))))),\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> monthToNumber\nyearmonth filter(!isNull(qte_ecoulement)) ~> quantityNotNull\nmonthToNumber filter(isNull(qte_ecoulement)) ~> quantityNull\nquantityNotNull filter(!isNull({Coopérative})) ~> cooperativenotNull\norganisation filter(!isNull({Nom Coopérative})) ~> orgaCooperativeNotNull\norgaCooperativeNotNull aggregate(groupBy({Nom Coopérative},\n\t\tHubSAPid),\n\tPOSSAMid = max(POSSAMid)) ~> unique\ncooperativenotNull, unique join({Coopérative} == {Nom Coopérative},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\ncooperativenotNull, unique join({Coopérative} == {Nom Coopérative},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull({Nom Coopérative})) ~> leftOuter\nmonthToNumber derive(yearmonth = year+month,\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonth\ninnerOrganisation derive(marque_id = iif(lower(marque_file)==\"vaillant\", 1621, 1604)) ~> typeCaste\ntypeCaste select(mapColumn(\n\t\tmarque_file,\n\t\treference = {Référence},\n\t\tarticle = {Désignation},\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tmarque_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nDerivedColumn1 select(mapColumn(\n\t\tmarque_file = Fournisseur,\n\t\t{Coopérative},\n\t\t{Référence},\n\t\t{Désignation},\n\t\tMois,\n\t\tpath,\n\t\tqte_ecoulement,\n\t\tREFFOURNISSEUR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\ncolumnChoice derive(year = regexExtract(path, \"(\\\\d+)\", 1)) ~> getYear\necoulement derive({Référence} = coalesce(REFFOURNISSEUR,{Référence})) ~> DerivedColumn1\ngetYear derive({Référence} = coalesce({Référence},REFFOURNISSEUR)) ~> fillNaRefFournisseur\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['ORCAB_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> ORCABECOULPREPARED\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ORCAB_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> quantityNullOutput\nleftOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ORCAB_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ORCAB_ECOULEMENT_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_ECOULEMENT_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_QTE_NULL')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_ORGANISATION_NOTFOUND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PARTEDIS_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "venteDirecte"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PARTEDIS_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						},
						{
							"dataset": {
								"referenceName": "Partedis_qte_null",
								"type": "DatasetReference"
							},
							"name": "quantityNullOutput"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "PARTEDISECOULPREPARED"
						}
					],
					"transformations": [
						{
							"name": "columnChoice"
						},
						{
							"name": "typeCaste",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "posIdNotNull"
						},
						{
							"name": "unique"
						},
						{
							"name": "InnerJoin"
						},
						{
							"name": "LeftJoin"
						},
						{
							"name": "Outer"
						},
						{
							"name": "uniqueKey"
						},
						{
							"name": "cleansingVenteDirecte"
						},
						{
							"name": "eccoulementVenteDirecteLeftJoin"
						},
						{
							"name": "cleansingEcoulement"
						},
						{
							"name": "ecoulementVenteDirecteInnerJoin"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "rendreZeroLesVentesDirectesNegatives"
						},
						{
							"name": "enleverQuantiteVenteDirecte"
						},
						{
							"name": "fullLeft"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "exctractYear"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						}
					],
					"script": "source(output(\n\t\t{Nom Fournisseur Principal} as string,\n\t\tClients as string,\n\t\t{Code Agence} as string,\n\t\t{Libellé Agence} as string,\n\t\t{Code postal agence} as string,\n\t\t{Ag Siret} as string,\n\t\tSiren as string,\n\t\tMKT1 as string,\n\t\tMKT2 as string,\n\t\tMKT3 as string,\n\t\t{Reference Fournisseur} as string,\n\t\tLibelle as string,\n\t\t{Qté Livré Mois A} as string,\n\t\t{Qté Livré Mois A-1} as string,\n\t\t{Qté Livré Cumul A} as string,\n\t\t{Qté Livré Cumul A-1} as string,\n\t\t{VVA MOIS} as string,\n\t\t{VVA MOIS N-1} as string,\n\t\t{VVA CUMUL EXERCICE} as string,\n\t\t{VVA CUMUL EXERCICE N-1} as string,\n\t\tpath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> venteDirecte\necoulement select(mapColumn(\n\t\tMarque_file = {Nom Fournisseur Principal},\n\t\tClients,\n\t\t{Code Agence},\n\t\t{Libellé Agence},\n\t\t{Code postal agence},\n\t\t{Ag Siret},\n\t\tSiren,\n\t\tMKT1,\n\t\tMKT2,\n\t\tMKT3,\n\t\tReference = {Reference Fournisseur},\n\t\tLibelle,\n\t\t{Qté Livré Mois A},\n\t\t{Qté Livré Mois A-1},\n\t\t{Qté Livré Cumul A},\n\t\t{Qté Livré Cumul A-1},\n\t\t{VVA MOIS},\n\t\t{VVA MOIS N-1},\n\t\t{VVA CUMUL EXERCICE},\n\t\t{VVA CUMUL EXERCICE N-1},\n\t\tpath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\ncolumnChoice derive({Qté Livré Mois A} = toInteger({Qté Livré Mois A}),\n\t\tyearmonth = trim(replace(split(path, \"-\")[3], \".xlsx\", \"\"), \" \")) ~> typeCaste\norganisation filter(!isNull(POSid)) ~> posIdNotNull\nposIdNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> unique\ntypeCaste, unique join({Code Agence} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoin\ntypeCaste, unique join({Code Agence} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoin\nLeftJoin filter(isNull(POSid)) ~> Outer\ncleansingVenteDirecte aggregate(groupBy(yearmonth_right,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté ventes directes} = sum({Qté ventes directes})) ~> uniqueKey\nventeDirecte derive({Qté ventes directes} = toDouble(qte_ecoulement),\n\t\tyearmonth_right = replace(yearmonth, \" \", \"\"),\n\t\tArticle = replace(reference, \" \", \"\"),\n\t\t{Code client} = replace({Code client}, \" \", \"\")) ~> cleansingVenteDirecte\ncleansingEcoulement, uniqueKey join(yearmonth == yearmonth_right\n\t&& coalesce(toString(toInteger(replace(Reference, \" \", \"\"))),replace(Reference, \" \", \"\")) == coalesce(toString(toInteger(replace({Article}, \" \", \"\"))),replace({Article}, \" \", \"\"))\n\t&& POSSAMidString == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> eccoulementVenteDirecteLeftJoin\nInnerJoin derive(Reference = replace(Reference,\" \",\"\"),\n\t\tPOSSAMidString = replace(POSSAMidString,\" \",\"\")) ~> cleansingEcoulement\ncleansingEcoulement, uniqueKey join(yearmonth == yearmonth_right\n\t&& coalesce(toString(toInteger(replace(Reference, \" \", \"\"))),replace(Reference, \" \", \"\")) == coalesce(toString(toInteger(replace({Article}, \" \", \"\"))),replace({Article}, \" \", \"\"))\n\t&& POSSAMidString == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> ecoulementVenteDirecteInnerJoin\necoulementVenteDirecteInnerJoin filter(isNull(yearmonth_right) || isNull(Article) || isNull({Code client})) ~> leftOuter\neccoulementVenteDirecteLeftJoin derive({Qté ventes directes} = iif({Qté ventes directes}<0, toDouble(0), {Qté ventes directes})) ~> rendreZeroLesVentesDirectesNegatives\nrendreZeroLesVentesDirectesNegatives derive({Qté Livré Mois A} = iif({Qté Livré Mois A}-{Qté ventes directes} >0 , {Qté Livré Mois A}-{Qté ventes directes} , toDouble(0) )) ~> enleverQuantiteVenteDirecte\nenleverQuantiteVenteDirecte, leftOuter union(byName: true)~> fullLeft\nfullLeft select(mapColumn(\n\t\tMarque_file,\n\t\tClients,\n\t\t{Code Agence},\n\t\t{Libellé Agence},\n\t\t{Code postal agence},\n\t\t{Ag Siret},\n\t\tSiren,\n\t\tReference,\n\t\tLibelle,\n\t\t{Qté Livré Mois A},\n\t\t{VVA MOIS},\n\t\tyearmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\ndropColumnsInCommon derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> exctractYear\nexctractYear filter(!isNull({Qté Livré Mois A})) ~> quantityNotNull\nexctractYear filter(isNull({Qté Livré Mois A})) ~> quantityNull\nAddcolumn select(mapColumn(\n\t\tmarque_file = Marque_file,\n\t\tagence_code = {Code Agence},\n\t\t{Code postal} = {Code postal agence},\n\t\treference = Reference,\n\t\tqte_ecoulement = {Qté Livré Mois A},\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nquantityNotNull derive(canal = '',\n\t\tDept = '') ~> Addcolumn\nOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['PARTEDIS_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OeccPartedis.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> quantityNullOutput\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['PARTEDIS_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> PARTEDISECOULPREPARED"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PARTEDIS_ECOULEMENT')]",
				"[concat(variables('factoryId'), '/datasets/PARTEDIS_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/PARTEDIS_ORGANISATION_NOTFOUND')]",
				"[concat(variables('factoryId'), '/datasets/Partedis_qte_null')]",
				"[concat(variables('factoryId'), '/datasets/PARTEDIS_ECOUL_PREPARED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_FACTURATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "pre",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "facturationAC"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "facturationAP"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outfactDescTereva",
								"type": "DatasetReference"
							},
							"name": "facturationForDSCTEREVA"
						},
						{
							"dataset": {
								"referenceName": "facturationForOtherPlateform",
								"type": "DatasetReference"
							},
							"name": "facturationForOtherPlateform"
						},
						{
							"dataset": {
								"referenceName": "notDSCTerevaPlateform",
								"type": "DatasetReference"
							},
							"name": "notDSCTerevaPlateform"
						},
						{
							"dataset": {
								"referenceName": "facturationForVanMarkes",
								"type": "DatasetReference"
							},
							"name": "facturationForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outFacturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "venteDirecteForModel"
						},
						{
							"dataset": {
								"referenceName": "AZ_OFacturactionPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "OFacturactionPartedisLikeWithIndex"
						},
						{
							"dataset": {
								"referenceName": "outFacturation",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "tempVD",
								"type": "DatasetReference"
							},
							"name": "VenteDirectForDecrementation"
						},
						{
							"dataset": {
								"referenceName": "facturationVF",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "extractYearMonth"
						},
						{
							"name": "FactFilterc"
						},
						{
							"name": "AddColumn"
						},
						{
							"name": "extractYearMonthc"
						},
						{
							"name": "FactFilter"
						},
						{
							"name": "filtreDSC"
						},
						{
							"name": "innerDSC"
						},
						{
							"name": "filtreOtherPlateforme"
						},
						{
							"name": "InnerPlateforme"
						},
						{
							"name": "renameColumns"
						},
						{
							"name": "leftPlateforme"
						},
						{
							"name": "hubsapidNULL"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "rename"
						},
						{
							"name": "typecaste"
						},
						{
							"name": "toroll"
						},
						{
							"name": "torolltoList"
						},
						{
							"name": "createIndexPartedis"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "CAfacture"
						},
						{
							"name": "quantityNULL"
						},
						{
							"name": "qteNullFacturaction"
						},
						{
							"name": "UnionQteNullFacturation"
						},
						{
							"name": "AllFacturation"
						},
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "select2"
						},
						{
							"name": "filter1"
						},
						{
							"name": "mapColName"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "keepPeriode"
						},
						{
							"name": "periode"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as date 'dd/MM/yyyy',\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as date 'dd/MM/yyyy',\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAP\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\nAllFacturation derive(year = toString(year({Jour calendaire})),\n\t\tyearmonth = iif(month({Jour calendaire})<10, toString(year({Jour calendaire}))+\"0\"+toString(month({Jour calendaire})), toString(year({Jour calendaire}))+toString(month({Jour calendaire}))),\n\t\tdate_id = toString({Jour calendaire}, \"dd-MM-yyyy\"),\n\tpartitionBy('hash', 1)) ~> extractYearMonth\nextractYearMonth derive(fact_filter = iif ( ({Type de facture} =='YFAR' && ({Motif commande}=='FAS')  ||  ( {Type de facture}=='YFAB' && {Motif commande}=='FAS' )) ,1,0)) ~> FactFilterc\nFactFilterc derive(qt_cd_e = {Qté cdée},\n\t\tca_cd_ = {CA cdé},\n\t\tqt_livr_e = {Qté livrée},\n\t\tca_livr_ = {CA livré},\n\t\tqt_factur_e = {Qté facturée},\n\t\tca_factur_ = {CA facturé},\n\t\tcout_standard_cd_ = {Cout standard cdé},\n\t\tcout_fabrication = {Cout fabrication},\n\t\tcout_standard_livr_ = {Cout standard livré},\n\t\tcout_standard_factur_ = {Cout standard facturé}) ~> AddColumn\nAddColumn derive(year_month = substring(date_id,1,6)) ~> extractYearMonthc\nextractYearMonthc filter(fact_filter==0 && !isNull(Article)) ~> FactFilter\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')> 0  ||instr(WholeSalerID, 'TEREVA')> 0) ~> filtreDSC\nrenameColumns, filtreDSC join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerDSC\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')== 0  &&  instr(WholeSalerID, 'TEREVA')== 0) ~> filtreOtherPlateforme\nrenameColumns, filtreOtherPlateforme join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerPlateforme\nFactFilter select(mapColumn(\n\t\t{ Org. commerciale} = {Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{ vente} = {Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference = Article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrenameColumns, PLATEFORMES join({Récept. de march.} == HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftPlateforme\nleftPlateforme filter(isNull( HubSAPid )) ~> hubsapidNULL\ninnerDSC select(mapColumn(\n\t\t{Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nInnerPlateforme select(mapColumn(\n\t\t{ Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{Type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\nfilter1 derive(toreplicate = abs(toInteger({Qté facturée})),\n\t\t{CA facturé} = toDouble( {CA facturé}) / toDouble( {Qté facturée})) ~> typecaste\ntypecaste derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index),\n\t\ttempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc', \r\n    iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \r\n     iif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',\r\nlower(WholeSalerID))))))) ~> toroll\ntoroll foldDown(unroll(toroll, toroll),\n\tmapColumn(\n\t\t{ Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\ttoroll\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> torolltoList\ntorolltoList window(over(yearmonth,\n\t\tHubSAPid,\n\t\treference),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> createIndexPartedis\ncreateIndexPartedis derive(indexcols2 = yearmonth+HubSAPid+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+toString(indexcols2),\n\t\t{Qté facturée} = iif(toDouble({Qté facturée})<=0, -1, 1)) ~> newColumns\nnewColumns derive({CA facturé} = {Qté facturée}*abs({CA facturé})) ~> CAfacture\ntypecaste filter(isNull({Qté facturée})) ~> quantityNULL\nquantityNULL derive({CA facturé} = toDouble(ca_factur_),\n\t\tindexcols2 = yearmonth+HubSAPid+reference+\"null\",\n\t\t{Qté facturée} = toInteger({Qté facturée})) ~> qteNullFacturaction\nCAfacture, qteNullFacturaction union(byName: true)~> UnionQteNullFacturation\nfacturationAC, facturationAP union(byName: true)~> AllFacturation\nextractYearMonthc select(mapColumn(\n\t\t{Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tProp_0,\n\t\tyear,\n\t\tyearmonth,\n\t\tdate_id,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nselect1, PLATEFORMES join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> join1\njoin1 select(mapColumn(\n\t\t{Org commerciale} = {Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{ vente} = {Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tProp_0,\n\t\tyear,\n\t\tyearmonth,\n\t\tdate_id,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nrename filter(toString(HubSAPid)!=\"16004028\") ~> filter1\nhubsapidNULL derive(yearmonth = yearmonth,\n\t\tArticle = reference,\n\t\t{Code client} = {Récept. de march.},\n\t\t{Qté vente directe} = {Qté facturée}) ~> mapColName\nperiode select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\nUnionQteNullFacturation select(mapColumn(\n\t\t{ Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\ttoroll,\n\t\tindexcols2,\n\t\t{1ereDateLivrDdee}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepPeriode\nprixParPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> periode\nderivedColumn1 aggregate(groupBy(reference),\n\tNombre = count(reference),\n\t\tCA = sum({CA facturé}),\n\t\t{Qté} = sum({Qté facturée})) ~> aggregate1\nkeepPeriode filter(replace(year, \" \", \"\")==\"2021\"  && WholeSalerID==\"VFC - VF CONFORT\") ~> filter2\nfilter2 derive(reference = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn1\ndropColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['AZ_facturationDescTEREVA.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForDSCTEREVA\ntypecaste sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForOther.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForOtherPlateform\nfiltreOtherPlateforme sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['notDSCTerevaPlateform.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> notDSCTerevaPlateform\nselect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForVanMarkes'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForVanMarkes\nhubsapidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['facturationForVenteDirect.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> venteDirecteForModel\nkeepPeriode sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OFacturactionPartedisLikeWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OFacturactionPartedisLikeWithIndex\nextractYearMonth sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SAUNIER DUVAL} as string,\n\t\t{208.0} as string,\n\t\t{Pièces détachées pour chauffage} as string,\n\t\t{05608600} as string,\n\t\t{5272.0} as string,\n\t\t{33.0} as string,\n\t\t{0.0} as string,\n\t\t{202008} as string,\n\t\t{2020} as string,\n\t\t{08} as string\n\t),\n\tpartitionFileNames:['facturactionBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nmapColName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal;marque;marque_code;canal_distribution_final;nom du canal;canal_final;document_vente;Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);no_offre;ATC offre;ATC livr�;ATC Performance;NomATC;DR;Matricule;Motif commande;Type de facture;Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Num�ro du compte;EPS_Nom du compte;EPS_Groupe cible/Typologie g�n�rale;EPS_Sous groupe cible/Typologie d�taill�e;EPS_Compte principal: Num�ro du compte;EPS_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP;yearmonth;ATC Corrig�} as string\n\t),\n\tpartitionFileNames:['VENTES_DIRECTES_PREPARATION'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VenteDirectForDecrementation\naggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{yearmonth;reference;Code client;qte_ecoulement} as string\n\t),\n\tpartitionFileNames:['facturationVF.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/facturationBW_AC')]",
				"[concat(variables('factoryId'), '/datasets/PLATEFORMES')]",
				"[concat(variables('factoryId'), '/datasets/FacturationAP')]",
				"[concat(variables('factoryId'), '/datasets/InPrixMoyenSplited')]",
				"[concat(variables('factoryId'), '/datasets/outfactDescTereva')]",
				"[concat(variables('factoryId'), '/datasets/facturationForOtherPlateform')]",
				"[concat(variables('factoryId'), '/datasets/notDSCTerevaPlateform')]",
				"[concat(variables('factoryId'), '/datasets/facturationForVanMarkes')]",
				"[concat(variables('factoryId'), '/datasets/outFacturationForVenteDirect')]",
				"[concat(variables('factoryId'), '/datasets/AZ_OFacturactionPartedisLikeWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/outFacturation')]",
				"[concat(variables('factoryId'), '/datasets/tempVD')]",
				"[concat(variables('factoryId'), '/datasets/facturationVF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_FACTURATION_PERIOD')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "pre",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "facturationAC"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "facturationAP"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outfactDescTereva",
								"type": "DatasetReference"
							},
							"name": "facturationForDSCTEREVA"
						},
						{
							"dataset": {
								"referenceName": "facturationForOtherPlateform",
								"type": "DatasetReference"
							},
							"name": "facturationForOtherPlateform"
						},
						{
							"dataset": {
								"referenceName": "notDSCTerevaPlateform",
								"type": "DatasetReference"
							},
							"name": "notDSCTerevaPlateform"
						},
						{
							"dataset": {
								"referenceName": "facturationForVanMarkes",
								"type": "DatasetReference"
							},
							"name": "facturationForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outFacturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "venteDirecteForModel"
						},
						{
							"dataset": {
								"referenceName": "AZ_OFacturactionPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "OFacturactionPartedisLikeWithIndex"
						},
						{
							"dataset": {
								"referenceName": "outFacturation",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "tempVD",
								"type": "DatasetReference"
							},
							"name": "VenteDirectForDecrementation"
						},
						{
							"dataset": {
								"referenceName": "partedislile",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "extractYearMonth"
						},
						{
							"name": "FactFilterc"
						},
						{
							"name": "AddColumn"
						},
						{
							"name": "extractYearMonthc"
						},
						{
							"name": "FactFilter"
						},
						{
							"name": "filtreDSC"
						},
						{
							"name": "innerDSC"
						},
						{
							"name": "filtreOtherPlateforme"
						},
						{
							"name": "InnerPlateforme"
						},
						{
							"name": "renameColumns"
						},
						{
							"name": "leftPlateforme"
						},
						{
							"name": "hubsapidNULL"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "rename"
						},
						{
							"name": "typecaste"
						},
						{
							"name": "toroll"
						},
						{
							"name": "torolltoList"
						},
						{
							"name": "createIndexPartedis"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "CAfacture"
						},
						{
							"name": "quantityNULL"
						},
						{
							"name": "qteNullFacturaction"
						},
						{
							"name": "AllFacturation"
						},
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "select2"
						},
						{
							"name": "filtreVanmakes"
						},
						{
							"name": "mapColName"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "keepPeriode"
						},
						{
							"name": "getPeriode"
						},
						{
							"name": "periode"
						},
						{
							"name": "filter2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as date 'dd/MM/yyyy',\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as date 'dd/MM/yyyy',\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAP\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\nAllFacturation derive(year = toString(year({Jour calendaire})),\n\t\tyearmonth = iif(month({Jour calendaire})<10, toString(year({Jour calendaire}))+\"0\"+toString(month({Jour calendaire})), toString(year({Jour calendaire}))+toString(month({Jour calendaire}))),\n\t\tdate_id = toString({Jour calendaire}, \"dd-MM-yyyy\"),\n\tpartitionBy('hash', 1)) ~> extractYearMonth\nextractYearMonth derive(fact_filter = iif ( ({Type de facture} =='YFAR' && ({Motif commande}=='FAS')  ||  ( {Type de facture}=='YFAB' && {Motif commande}=='FAS' )) ,1,0)) ~> FactFilterc\nFactFilterc derive(qt_cd_e = {Qté cdée},\n\t\tca_cd_ = {CA cdé},\n\t\tqt_livr_e = {Qté livrée},\n\t\tca_livr_ = {CA livré},\n\t\tqt_factur_e = {Qté facturée},\n\t\tca_factur_ = {CA facturé},\n\t\tcout_standard_cd_ = {Cout standard cdé},\n\t\tcout_fabrication = {Cout fabrication},\n\t\tcout_standard_livr_ = {Cout standard livré},\n\t\tcout_standard_factur_ = {Cout standard facturé}) ~> AddColumn\nAddColumn derive(year_month = substring(date_id,1,6)) ~> extractYearMonthc\nextractYearMonthc filter(fact_filter==0 && !isNull(Article)) ~> FactFilter\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')> 0  ||instr(WholeSalerID, 'TEREVA')> 0) ~> filtreDSC\nrenameColumns, filtreDSC join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerDSC\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')== 0  &&  instr(WholeSalerID, 'TEREVA')== 0) ~> filtreOtherPlateforme\nrenameColumns, filtreOtherPlateforme join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerPlateforme\nFactFilter select(mapColumn(\n\t\t{ Org. commerciale} = {Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{ vente} = {Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference = Article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrenameColumns, PLATEFORMES join({Récept. de march.} == HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftPlateforme\nleftPlateforme filter(isNull( HubSAPid )) ~> hubsapidNULL\ninnerDSC select(mapColumn(\n\t\t{Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nInnerPlateforme select(mapColumn(\n\t\t{ Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{Type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\nfiltreVanmakes derive(toreplicate = abs(toInteger({Qté facturée})),\n\t\t{CA facturé} = toDouble( {CA facturé}) / toDouble( {Qté facturée})) ~> typecaste\ntypecaste derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index),\n\t\ttempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc', \r\n    iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \r\n     iif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',\r\nlower(WholeSalerID))))))) ~> toroll\nderivedColumn1 foldDown(unroll(toroll, toroll),\n\tmapColumn(\n\t\t{ Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\ttoroll,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> torolltoList\nderivedColumn2 window(over(year,\n\t\t{Période},\n\t\tHubSAPid,\n\t\tref2),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> createIndexPartedis\ncreateIndexPartedis derive(indexcols2 = year+\"-\"+{Période}+\"-\"+HubSAPid+\"-\"+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+\"-\"+toString(indexcols2),\n\t\t{Qté facturée} = iif(toDouble({Qté facturée})<=0, -1, 1)) ~> newColumns\nnewColumns derive({CA facturé} = {Qté facturée}*abs({CA facturé}),\n\t\t{1ereDateLivrDdee} = \"\") ~> CAfacture\ntypecaste filter(isNull({Qté facturée})) ~> quantityNULL\nquantityNULL derive({CA facturé} = toDouble(ca_factur_),\n\t\tindexcols2 = yearmonth+HubSAPid+reference+\"null\",\n\t\t{Qté facturée} = toInteger({Qté facturée})) ~> qteNullFacturaction\nfacturationAC, facturationAP union(byName: true)~> AllFacturation\nextractYearMonthc select(mapColumn(\n\t\t{Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tProp_0,\n\t\tyear,\n\t\tyearmonth,\n\t\tdate_id,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nselect1, PLATEFORMES join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> join1\njoin1 select(mapColumn(\n\t\t{Org commerciale} = {Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{1ereDateLivrDdee},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{ vente} = {Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tProp_0,\n\t\tyear,\n\t\tyearmonth,\n\t\tdate_id,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select2\nrename filter(!in([\"16004028\"] ,toString(HubSAPid))) ~> filtreVanmakes\nhubsapidNULL derive(yearmonth = yearmonth,\n\t\tArticle = reference,\n\t\t{Code client} = {Récept. de march.},\n\t\t{Qté vente directe} = {Qté facturée}) ~> mapColName\nperiode select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\nCAfacture select(mapColumn(\n\t\t{ Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\ttoroll,\n\t\tindexcols2,\n\t\t{1ereDateLivrDdee}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepPeriode\ntoroll, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger({Mois calendrier}) == toInteger(month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getPeriode\nprixParPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> periode\nkeepPeriode filter(reference=='0020260953') ~> filter2\ngetPeriode derive({Période} = coalesce( {Période}, \"00\" )) ~> derivedColumn1\ntorolltoList derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn2\ndropColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['AZ_facturationDescTEREVA.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForDSCTEREVA\ntypecaste sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForOther.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForOtherPlateform\nfiltreOtherPlateforme sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['notDSCTerevaPlateform.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> notDSCTerevaPlateform\nselect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForVanMarkes'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForVanMarkes\nhubsapidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['facturationForVenteDirect.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> venteDirecteForModel\nkeepPeriode sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OFacturactionPartedisLikeWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OFacturactionPartedisLikeWithIndex\nextractYearMonth sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SAUNIER DUVAL} as string,\n\t\t{208.0} as string,\n\t\t{Pièces détachées pour chauffage} as string,\n\t\t{05608600} as string,\n\t\t{5272.0} as string,\n\t\t{33.0} as string,\n\t\t{0.0} as string,\n\t\t{202008} as string,\n\t\t{2020} as string,\n\t\t{08} as string\n\t),\n\tpartitionFileNames:['facturactionBW.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nmapColName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal;marque;marque_code;canal_distribution_final;nom du canal;canal_final;document_vente;Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);no_offre;ATC offre;ATC livr�;ATC Performance;NomATC;DR;Matricule;Motif commande;Type de facture;Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Num�ro du compte;EPS_Nom du compte;EPS_Groupe cible/Typologie g�n�rale;EPS_Sous groupe cible/Typologie d�taill�e;EPS_Compte principal: Num�ro du compte;EPS_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP;yearmonth;ATC Corrig�} as string\n\t),\n\tpartitionFileNames:['VENTES_DIRECTES_PREPARATION'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VenteDirectForDecrementation\ngetPeriode sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{yearmonth;reference;Code client;qte_ecoulement} as string\n\t),\n\tpartitionFileNames:['partedislileBeforeSplit.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/facturationBW_AC')]",
				"[concat(variables('factoryId'), '/datasets/PLATEFORMES')]",
				"[concat(variables('factoryId'), '/datasets/FacturationAP')]",
				"[concat(variables('factoryId'), '/datasets/InPrixMoyenSplited')]",
				"[concat(variables('factoryId'), '/datasets/outfactDescTereva')]",
				"[concat(variables('factoryId'), '/datasets/facturationForOtherPlateform')]",
				"[concat(variables('factoryId'), '/datasets/notDSCTerevaPlateform')]",
				"[concat(variables('factoryId'), '/datasets/facturationForVanMarkes')]",
				"[concat(variables('factoryId'), '/datasets/outFacturationForVenteDirect')]",
				"[concat(variables('factoryId'), '/datasets/AZ_OFacturactionPartedisLikeWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/outFacturation')]",
				"[concat(variables('factoryId'), '/datasets/tempVD')]",
				"[concat(variables('factoryId'), '/datasets/partedislile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_OBJECTIF_RH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "RH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "OBJECTIFS_RH",
								"type": "DatasetReference"
							},
							"name": "objectif"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PREPARATION_OBJECTIF_RH",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "keepColumns"
						},
						{
							"name": "SelectQuantity"
						},
						{
							"name": "quantityToLine"
						},
						{
							"name": "SelectCA"
						},
						{
							"name": "CAtoLine"
						},
						{
							"name": "getQuantityMonth"
						},
						{
							"name": "getCAMonth"
						},
						{
							"name": "joinQuantityAndCA"
						},
						{
							"name": "changeNULL"
						},
						{
							"name": "deleteRightColumn"
						},
						{
							"name": "dataCleansing"
						}
					],
					"script": "source(output(\n\t\t{Num Org} as string,\n\t\t{Nom Org} as string,\n\t\t{Nom DR} as string,\n\t\t{Num DR} as string,\n\t\tDR as string,\n\t\t{ATC (ATC- DR)} as string,\n\t\t{ATC (DR-ATC)} as string,\n\t\t{Num ATC} as string,\n\t\t{Nom ATC} as string,\n\t\tDept as string,\n\t\t{Canal Dist} as string,\n\t\t{Nom Canal} as string,\n\t\t{Flux text} as string,\n\t\tHubSAPiD as string,\n\t\t{Activité} as string,\n\t\t{Nom Activité} as string,\n\t\t{Art Niv 1} as string,\n\t\t{Nom Niv 1} as string,\n\t\t{Art Niv 2} as string,\n\t\t{Nom Niv 2} as string,\n\t\t{Art Niv 3} as string,\n\t\t{Nom Niv 3} as string,\n\t\t{Art Niv 4} as string,\n\t\t{Nom Niv 4} as string,\n\t\t{Art Niv 5} as string,\n\t\t{Nom Niv 5} as string,\n\t\t{Nom Niv Combiné} as string,\n\t\t{PMV An} as string,\n\t\t{Qté Obj An} as double,\n\t\t{CA Obj An} as string,\n\t\t{Qté Mois 01} as string,\n\t\t{Qté Mois 02} as string,\n\t\t{Qté Mois 03} as string,\n\t\t{Qté Mois 04} as string,\n\t\t{Qté Mois 05} as string,\n\t\t{Qté Mois 06} as string,\n\t\t{Qté Mois 07} as string,\n\t\t{Qté Mois 08} as string,\n\t\t{Qté Mois 09} as string,\n\t\t{Qté Mois 10} as string,\n\t\t{Qté Mois 11} as string,\n\t\t{Qté Mois 12} as string,\n\t\t{CA Mois 01} as string,\n\t\t{CA Mois 02} as string,\n\t\t{CA Mois 03} as string,\n\t\t{CA Mois 04} as string,\n\t\t{CA Mois 05} as string,\n\t\t{CA Mois 06} as string,\n\t\t{CA Mois 07} as string,\n\t\t{CA Mois 08} as string,\n\t\t{CA Mois 09} as string,\n\t\t{CA Mois 10} as string,\n\t\t{CA Mois 11} as string,\n\t\t{CA Mois 12} as string,\n\t\t{Qté Trim 1} as string,\n\t\t{Qté Trim 2} as string,\n\t\t{Qté Trim 3} as string,\n\t\t{Qté Trim 4} as string,\n\t\t{CA Trim 1} as string,\n\t\t{CA Trim 2} as string,\n\t\t{CA Trim 3} as string,\n\t\t{CA Trim 4} as string,\n\t\t{Qté Cumul 01} as string,\n\t\t{Qté Cumul 02} as string,\n\t\t{Qté Cumul 03} as string,\n\t\t{Qté Cumul 04} as string,\n\t\t{Qté Cumul 05} as string,\n\t\t{Qté Cumul 06} as string,\n\t\t{Qté Cumul 07} as string,\n\t\t{Qté Cumul 08} as string,\n\t\t{Qté Cumul 09} as string,\n\t\t{Qté Cumul 10} as string,\n\t\t{Qté Cumul 11} as string,\n\t\t{Qté Cumul 12} as string,\n\t\t{CA Cumul 01} as string,\n\t\t{CA Cumul 02} as string,\n\t\t{CA Cumul 03} as string,\n\t\t{CA Cumul 04} as string,\n\t\t{CA Cumul 05} as string,\n\t\t{CA Cumul 06} as string,\n\t\t{CA Cumul 07} as string,\n\t\t{CA Cumul 08} as string,\n\t\t{CA Cumul 09} as string,\n\t\t{CA Cumul 10} as string,\n\t\t{CA Cumul 11} as string,\n\t\t{CA Cumul 12} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false) ~> objectif\nchangeNULL select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\t{Qté Mois 01},\n\t\t{Qté Mois 02},\n\t\t{Qté Mois 03},\n\t\t{Qté Mois 04},\n\t\t{Qté Mois 05},\n\t\t{Qté Mois 06},\n\t\t{Qté Mois 07},\n\t\t{Qté Mois 08},\n\t\t{Qté Mois 09},\n\t\t{Qté Mois 10},\n\t\t{Qté Mois 11},\n\t\t{Qté Mois 12},\n\t\t{CA Mois 01},\n\t\t{CA Mois 02},\n\t\t{CA Mois 03},\n\t\t{CA Mois 04},\n\t\t{CA Mois 05},\n\t\t{CA Mois 06},\n\t\t{CA Mois 07},\n\t\t{CA Mois 08},\n\t\t{CA Mois 09},\n\t\t{CA Mois 10},\n\t\t{CA Mois 11},\n\t\t{CA Mois 12}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nkeepColumns select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\t{Qté Mois 01},\n\t\t{Qté Mois 02},\n\t\t{Qté Mois 03},\n\t\t{Qté Mois 04},\n\t\t{Qté Mois 05},\n\t\t{Qté Mois 06},\n\t\t{Qté Mois 07},\n\t\t{Qté Mois 08},\n\t\t{Qté Mois 09},\n\t\t{Qté Mois 10},\n\t\t{Qté Mois 11},\n\t\t{Qté Mois 12}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectQuantity\nSelectQuantity unpivot(output(\n\t\tcolumnName as string,\n\t\tqt_final as string\n\t),\n\tungroupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An}),\n\tlateral: false,\n\tignoreNullPivots: false) ~> quantityToLine\nkeepColumns select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\t{CA Mois 01},\n\t\t{CA Mois 02},\n\t\t{CA Mois 03},\n\t\t{CA Mois 04},\n\t\t{CA Mois 05},\n\t\t{CA Mois 06},\n\t\t{CA Mois 07},\n\t\t{CA Mois 08},\n\t\t{CA Mois 09},\n\t\t{CA Mois 10},\n\t\t{CA Mois 11},\n\t\t{CA Mois 12}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCA\nSelectCA unpivot(output(\n\t\tcolumnName as string,\n\t\tca_final as string\n\t),\n\tungroupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An}),\n\tlateral: true,\n\tignoreNullPivots: false) ~> CAtoLine\nquantityToLine derive(Mois = toInteger(split(columnName, \" \")[3]),\n\t\tqt_final = toDouble(qt_final)) ~> getQuantityMonth\nCAtoLine derive(Mois = toInteger(split(columnName, \" \")[3]),\n\t\tca_final = toDouble(ca_final)) ~> getCAMonth\ngetQuantityMonth, getCAMonth join(quantityToLine@{Num Org} == CAtoLine@{Num Org}\n\t&& quantityToLine@{Num DR} == CAtoLine@{Num DR}\n\t&& quantityToLine@{Num ATC} == CAtoLine@{Num ATC}\n\t&& quantityToLine@{Canal Dist} == CAtoLine@{Canal Dist}\n\t&& quantityToLine@{Nom Canal} == CAtoLine@{Nom Canal}\n\t&& quantityToLine@{Art Niv 1} == CAtoLine@{Art Niv 1}\n\t&& quantityToLine@{Art Niv 2} == CAtoLine@{Art Niv 2}\n\t&& quantityToLine@{Art Niv 3} == CAtoLine@{Art Niv 3}\n\t&& quantityToLine@{Art Niv 4} == CAtoLine@{Art Niv 4}\n\t&& quantityToLine@{Art Niv 5} == CAtoLine@{Art Niv 5}\n\t&& getQuantityMonth@Mois == getCAMonth@Mois\n\t&& quantityToLine@{Qté Obj An} == CAtoLine@{Qté Obj An}\n\t&& quantityToLine@{CA Obj An} == CAtoLine@{CA Obj An},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinQuantityAndCA\nobjectif derive({Art Niv 1} = iif(isNull({Art Niv 1}), \" \", {Art Niv 1}),\n\t\t{Art Niv 2} = iif(isNull({Art Niv 2}), \" \", {Art Niv 2}),\n\t\t{Art Niv 3} = iif(isNull({Art Niv 3}), \" \", {Art Niv 3}),\n\t\t{Art Niv 4} = iif(isNull({Art Niv 4}), \" \", {Art Niv 4}),\n\t\t{Art Niv 5} = iif(isNull({Art Niv 5}), \" \", {Art Niv 5})) ~> changeNULL\njoinQuantityAndCA select(mapColumn(\n\t\t{Num Org} = quantityToLine@{Num Org},\n\t\t{Num DR} = quantityToLine@{Num DR},\n\t\t{Num ATC} = quantityToLine@{Num ATC},\n\t\t{Canal Dist} = quantityToLine@{Canal Dist},\n\t\t{Nom Canal} = quantityToLine@{Nom Canal},\n\t\t{Art Niv 1} = quantityToLine@{Art Niv 1},\n\t\t{Art Niv 2} = quantityToLine@{Art Niv 2},\n\t\t{Art Niv 3} = quantityToLine@{Art Niv 3},\n\t\t{Art Niv 4} = quantityToLine@{Art Niv 4},\n\t\t{Art Niv 5} = quantityToLine@{Art Niv 5},\n\t\t{Qté Obj An} = quantityToLine@{Qté Obj An},\n\t\t{CA Obj An} = quantityToLine@{CA Obj An},\n\t\tqt_final,\n\t\tMois = getQuantityMonth@Mois,\n\t\tca_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteRightColumn\ndeleteRightColumn derive({Num Org} = toInteger({Num Org}),\n\t\t{Canal Dist} = toInteger({Canal Dist}),\n\t\t{Nom Canal} = replace(lower({Nom Canal}), \" \", \"\"),\n\t\t{Art Niv 1} = replace({Art Niv 1}, \" \", \"\"),\n\t\t{Art Niv 2} = replace({Art Niv 2}, \" \", \"\"),\n\t\t{CA Obj An} = toDouble(replace({CA Obj An}, \",\", \".\"))) ~> dataCleansing\ndataCleansing sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['PREPARATION_OBJECTIF_RH.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OBJECTIFS_RH')]",
				"[concat(variables('factoryId'), '/datasets/PREPARATION_OBJECTIF_RH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRIX_MOYEN_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "REFERENTIEL_PRIX",
								"type": "DatasetReference"
							},
							"name": "prixmoyen"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "prixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixsplit"
						}
					],
					"transformations": [
						{
							"name": "splitAnneeMois"
						},
						{
							"name": "createArray"
						},
						{
							"name": "splitDuree"
						},
						{
							"name": "createLoop"
						},
						{
							"name": "Flatten1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn5"
						},
						{
							"name": "month"
						}
					],
					"script": "source(output(\n\t\tWholeSalerID as string,\n\t\tArticle as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixmoyen\nsplitDuree derive(mois1 = toInteger(split( {Mois début}, \"/\")[1]),\n\t\tannee1 = split( {Mois début}, \"/\")[2],\n\t\tmois2 = toInteger(split( {Mois fin}, \"/\")[1]),\n\t\tannee2 = split( {Mois fin}, \"/\")[2],\n\t\tDistributeur = iif(WholeSalerID=='ancs - accueil négoce chauffage sanitaire','partedis',  iif(instr(WholeSalerID, 'trva - tereva' )>0, 'tereva',    iif( (instr(WholeSalerID, 'dsc')>0)  || (instr(WholeSalerID, 'cedeo')>0 ) , 'dsc',     iif(instr(WholeSalerID, 'vf' )>0, 'vf_confort',      iif(instr(WholeSalerID, 'sonac' )>0, 'sonac',WholeSalerID)))))) ~> splitAnneeMois\nsplitAnneeMois derive(toreplicate = iif (mois2 - mois1 <=0, 1 ,  mois2 - mois1+1)) ~> createArray\nprixmoyen derive({Mois début} = split( {Durée_période} ,\"-\")[1],\n\t\t{Mois fin} = split( {Durée_période} ,\"-\")[2],\n\t\tWholeSalerID = lower(WholeSalerID)) ~> splitDuree\ncreateArray derive(dd = mapLoop(abs(toInteger(toreplicate)), #index )) ~> createLoop\ncreateLoop foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tWholeSalerID,\n\t\tDistributeur,\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\ttoreplicate,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nDerivedColumn5 select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFlatten1 derive(dd = toInteger(dd) -1) ~> DerivedColumn5\nSelect1 derive(month = dd+mois1) ~> month\nmonth sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['prixmoyensplit.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> prixsplit"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/REFERENTIEL_PRIX')]",
				"[concat(variables('factoryId'), '/datasets/prixMoyenSplited')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_ARTICLE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "articleHierarchie"
						},
						{
							"dataset": {
								"referenceName": "DETAIL_ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "detailArticleHierarchie"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "sortieArticleDesignation"
						}
					],
					"transformations": [
						{
							"name": "splitGroupe"
						},
						{
							"name": "splitLocale"
						},
						{
							"name": "N1GroupeDesignation"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2GroupeDesignation"
						},
						{
							"name": "RemoveColumns2",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3GroupeDesignation"
						},
						{
							"name": "RemoveColumns3",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4GroupeDesignation"
						},
						{
							"name": "RemoveColumns4",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5GroupeDesignation"
						},
						{
							"name": "RemoveColumns5",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6GroupeDesignation"
						},
						{
							"name": "RemoveColumns6",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7GroupeDesignation"
						},
						{
							"name": "RemoveColumns7",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N1LocaleDesignation"
						},
						{
							"name": "RemoveColumns8",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2LocaleDesignation"
						},
						{
							"name": "RemoveColumns9",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3LocaleDesignation"
						},
						{
							"name": "RemoveColumns10",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4LocaleDesignation"
						},
						{
							"name": "RemoveColumns11",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5LocaleDesignation"
						},
						{
							"name": "RemoveColumns12",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6LocaleDesignation"
						},
						{
							"name": "RemoveColumns13",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7LocaleDesignation"
						},
						{
							"name": "RemoveColumns14",
							"description": "Autogenerated by data preview actions"
						}
					],
					"script": "source(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleHierarchie\nsource(output(\n\t\t{Hiérarch.produits} as string,\n\t\t{Désignation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> detailArticleHierarchie\narticleHierarchie derive({N1.groupe} = substring({Hiérarch.groupe}, 1, 2),\n\t\t{N2.groupe} = substring({Hiérarch.groupe}, 1, 3),\n\t\t{N3.groupe} = substring({Hiérarch.groupe}, 1, 4),\n\t\t{N4.groupe} = substring({Hiérarch.groupe}, 1, 5),\n\t\t{N5.groupe} = substring({Hiérarch.groupe}, 1, 6),\n\t\t{N6.groupe} = substring({Hiérarch.groupe}, 1, 7),\n\t\t{N7.groupe} = substring({Hiérarch.groupe}, 1, 10)) ~> splitGroupe\nsplitGroupe derive({N1.locale} = substring({Hiérarch.locale}, 1, 2),\n\t\t{N2.locale} = substring({Hiérarch.locale}, 1, 3),\n\t\t{N3.locale} = substring({Hiérarch.locale}, 1, 4),\n\t\t{N4.locale} = substring({Hiérarch.locale}, 1, 5),\n\t\t{N5.locale} = substring({Hiérarch.locale}, 1, 6),\n\t\t{N6.locale} = substring({Hiérarch.locale}, 1, 7),\n\t\t{N7.locale} = substring({Hiérarch.locale}, 1, 10)) ~> splitLocale\nsplitLocale, detailArticleHierarchie join({N1.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N1GroupeDesignation\nN1GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nRemoveColumns1, detailArticleHierarchie join({N2.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N2GroupeDesignation\nN2GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns2\nRemoveColumns2, detailArticleHierarchie join({N3.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N3GroupeDesignation\nN3GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns3\nRemoveColumns3, detailArticleHierarchie join({N4.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N4GroupeDesignation\nN4GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns4\nRemoveColumns4, detailArticleHierarchie join({N5.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N5GroupeDesignation\nN5GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns5\nRemoveColumns5, detailArticleHierarchie join({N6.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N6GroupeDesignation\nN6GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns6\nRemoveColumns6, detailArticleHierarchie join({N7.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N7GroupeDesignation\nN7GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns7\nRemoveColumns7, detailArticleHierarchie join({N1.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N1LocaleDesignation\nN1LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns8\nRemoveColumns8, detailArticleHierarchie join({N2.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N2LocaleDesignation\nN2LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns9\nRemoveColumns9, detailArticleHierarchie join({N3.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N3LocaleDesignation\nN3LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns10\nRemoveColumns10, detailArticleHierarchie join({N4.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N4LocaleDesignation\nN4LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns11\nRemoveColumns11, detailArticleHierarchie join({N5.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N5LocaleDesignation\nN5LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns12\nRemoveColumns12, detailArticleHierarchie join({N6.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N6LocaleDesignation\nN6LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns13\nRemoveColumns13, detailArticleHierarchie join({N7.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N7LocaleDesignation\nN7LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation},\n\t\t{N7.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns14\nRemoveColumns14 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['HIERARCHIE_ARTICLE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sortieArticleDesignation"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ARTICLE_HIERARCHIE')]",
				"[concat(variables('factoryId'), '/datasets/DETAIL_ARTICLE_HIERARCHIE')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHIE_ARTICLE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_PRIX_MOYEN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "facturationAC"
						},
						{
							"dataset": {
								"referenceName": "platforme",
								"type": "DatasetReference"
							},
							"name": "plateforme"
						},
						{
							"dataset": {
								"referenceName": "FacturationAP",
								"type": "DatasetReference"
							},
							"name": "facturationAP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEMP_PRIX_PAR_PERIODE",
								"type": "DatasetReference"
							},
							"name": "dureePeriodeOutput"
						}
					],
					"transformations": [
						{
							"name": "keep42and51"
						},
						{
							"name": "factureFilter"
						},
						{
							"name": "innerPlateforme"
						},
						{
							"name": "dropColumnsInCommonInner"
						},
						{
							"name": "sort"
						},
						{
							"name": "addKey"
						},
						{
							"name": "previousID"
						},
						{
							"name": "joinPreviousRow"
						},
						{
							"name": "prixUnitaire"
						},
						{
							"name": "prixMoyen"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "renameToPrevious"
						},
						{
							"name": "nextID"
						},
						{
							"name": "renameToNext"
						},
						{
							"name": "joinNextRow"
						},
						{
							"name": "changementDePeriode"
						},
						{
							"name": "changementDePeriodeFiltre"
						},
						{
							"name": "DureePeriode"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "Sort1"
						},
						{
							"name": "dropColumnsInCommon1"
						},
						{
							"name": "dropNULL"
						},
						{
							"name": "leftPlateforme"
						},
						{
							"name": "leftOuterPlateforme"
						},
						{
							"name": "prixUnitaireLeft"
						},
						{
							"name": "dureePeriodeLeft"
						},
						{
							"name": "uniqueWholeSalerID"
						},
						{
							"name": "drop"
						},
						{
							"name": "join"
						},
						{
							"name": "Join1"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "dropColumns2"
						},
						{
							"name": "addperiod"
						},
						{
							"name": "Union1"
						},
						{
							"name": "facFilter"
						},
						{
							"name": "addNewKey"
						},
						{
							"name": "deletePreviousAndNext"
						},
						{
							"name": "Sort2"
						},
						{
							"name": "nextNewID"
						},
						{
							"name": "renameToNextNew"
						},
						{
							"name": "previousNewID"
						},
						{
							"name": "renameToPreviousNew"
						},
						{
							"name": "joinNewPreviousID"
						},
						{
							"name": "joinNewNextID"
						},
						{
							"name": "join2"
						},
						{
							"name": "leftJoin"
						},
						{
							"name": "averagePrix"
						},
						{
							"name": "UnionFacturation"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as integer,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as integer,\n\t\t{CA facturé} as double,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> plateforme\nsource(output(\n\t\tProp_0 as string,\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as integer,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as integer,\n\t\t{CA facturé} as double,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationAP\ncleansing filter({Canal distribution}==42) ~> keep42and51\nkeep42and51 derive(fact_filter1 = iif( instr(lower({Type de facture}),\"yfar\")==0 && instr(lower({Motif commande}),\"fas\")==0, 0, 1),\n\t\tfact_filter2 = iif(instr(lower({Type de facture}),\"yafb\")==0 && instr(lower({Motif commande}),\"fas\")==0, 0, 1)) ~> factureFilter\nfacFilter, plateforme join(trim({Récept. de march.}, \" \") == trim(HubSAPid, \" \"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerPlateforme\ninnerPlateforme select(mapColumn(\n\t\tArticle,\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonInner\nprixMoyen sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> sort\ndropColumns keyGenerate(output(ID as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> addKey\naddKey derive(ID = ID+1) ~> previousID\naddKey, renameToPrevious join(ID == {previous ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinPreviousRow\nsort derive(prix_unitaire = {CA facturé}/{Qté facturée}) ~> prixUnitaire\ndropColumnsInCommonInner aggregate(groupBy(WholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier}),\n\t{Qté facturée} = max({Qté facturée}),\n\t\t{CA facturé} = max({CA facturé})) ~> prixMoyen\nprixUnitaire select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\npreviousID select(mapColumn(\n\t\t{previous WholeSalerID} = WholeSalerID,\n\t\t{previous Article} = Article,\n\t\t{previous Année civile} = {Année civile},\n\t\t{previous Mois calendrier} = {Mois calendrier},\n\t\t{previous prix_unitaire} = prix_unitaire,\n\t\t{previous ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToPrevious\naddKey derive(ID = ID-1) ~> nextID\nnextID select(mapColumn(\n\t\t{next WholeSalerID} = WholeSalerID,\n\t\t{next Article} = Article,\n\t\t{next Année civile} = {Année civile},\n\t\t{next Mois calendrier} = {Mois calendrier},\n\t\t{next prix_unitaire} = prix_unitaire,\n\t\t{next ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToNext\njoinPreviousRow, renameToNext join(ID == {next ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinNextRow\njoinNextRow derive({Changement de période} = iif({previous Article}!=Article || {previous WholeSalerID}!=WholeSalerID || {previous Année civile}!={Année civile}, \r\n    1, \r\n\r\n    iif(abs(({previous prix_unitaire}-prix_unitaire)/{previous prix_unitaire})>0.1, 1, 0))) ~> changementDePeriode\nchangementDePeriode filter({Changement de période}==1) ~> changementDePeriodeFiltre\njoinNewNextID derive({Durée_période} = iif(WholeSalerID=={previous WholeSalerID} && Article=={previous Article} && {Année civile}=={previous Année civile}\r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article} && {Année civile}=={next Année civile}\r\n    \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-12/\"+toString({Année civile}))\r\n    \r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article} && {Année civile}=={next Année civile}\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile})))) ~> DureePeriode\nUnionFacturation derive({Canal distribution} = toInteger({Canal distribution})) ~> cleansing\nDureePeriode sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> Sort1\nSort1 select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon1\ndropColumnsInCommon1 filter(!isNull(WholeSalerID) || !isNull(Article) || !isNull({Année civile}) || !isNull({Mois calendrier}) || !isNull(prix_unitaire) || !isNull({Durée_période})) ~> dropNULL\nfacFilter, plateforme join(trim({Récept. de march.}, \" \") == trim(HubSAPid, \" \"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftPlateforme\nleftPlateforme filter(isNull(HubSAPid)) ~> leftOuterPlateforme\nleftOuterPlateforme aggregate(groupBy(Article,\n\t\t{Année civile}),\n\tprix_unitaire = mean({CA facturé}/{Qté facturée})) ~> prixUnitaireLeft\nprixUnitaireLeft derive({Durée_période} = \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile}),\n\t\tjoin = 1) ~> dureePeriodeLeft\nplateforme aggregate(groupBy(WholeSalerID),\n\tHubName = max(WholeSalerHubID)) ~> uniqueWholeSalerID\nuniqueWholeSalerID select(mapColumn(\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> drop\ndrop derive(join = 1) ~> join\ndureePeriodeLeft, join join(dureePeriodeLeft@join == join@join,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\ndropNULL select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns2\ndropColumnsInCommon derive({Période} = 1) ~> addperiod\ndropColumns2, averagePrix union(byName: true)~> Union1\nfactureFilter filter(fact_filter1==0 || fact_filter2==0) ~> facFilter\nSort2 keyGenerate(output(ID as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> addNewKey\nchangementDePeriodeFiltre select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deletePreviousAndNext\ndeletePreviousAndNext sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> Sort2\naddNewKey derive(ID = ID-1) ~> nextNewID\nnextNewID select(mapColumn(\n\t\t{next WholeSalerID} = WholeSalerID,\n\t\t{next Article} = Article,\n\t\t{next Année civile} = {Année civile},\n\t\t{next Mois calendrier} = {Mois calendrier},\n\t\t{next ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToNextNew\naddNewKey derive(ID = ID+1) ~> previousNewID\npreviousNewID select(mapColumn(\n\t\t{previous WholeSalerID} = WholeSalerID,\n\t\t{previous Article} = Article,\n\t\t{previous Année civile} = {Année civile},\n\t\t{previous Mois calendrier} = {Mois calendrier},\n\t\t{previous ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToPreviousNew\naddNewKey, renameToPreviousNew join(ID == {previous ID},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinNewPreviousID\njoinNewPreviousID, renameToNextNew join(ID == {next ID},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinNewNextID\naddperiod, dropColumns2 join(dropColumnsInCommon@WholeSalerID == dropColumns2@WholeSalerID\n\t&& dropColumnsInCommon@Article == dropColumns2@Article,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> join2\njoin2 filter(isNull(dropColumns2@WholeSalerID) || isNull(dropColumns2@Article)) ~> leftJoin\nleftJoin select(mapColumn(\n\t\tArticle = dropColumnsInCommon@Article,\n\t\tprix_unitaire = dropColumnsInCommon@prix_unitaire,\n\t\t{Durée_période} = dropColumnsInCommon@{Durée_période},\n\t\tWholeSalerID = dropColumnsInCommon@WholeSalerID,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> averagePrix\nfacturationAC, facturationAP union(byName: true)~> UnionFacturation\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TEMP_PRIX_PAR_PERIODE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> dureePeriodeOutput"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/facturationBW_AC')]",
				"[concat(variables('factoryId'), '/datasets/platforme')]",
				"[concat(variables('factoryId'), '/datasets/FacturationAP')]",
				"[concat(variables('factoryId'), '/datasets/TEMP_PRIX_PAR_PERIODE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_VMC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\ninput: dossier VMC\ntraitement:\nconcat all file in vmc,\ndrop duplicate.\noutput referentiel VMC.",
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "vmcinput",
								"type": "DatasetReference"
							},
							"name": "inputVMC"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outPutReferentielVMC",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "extractYEAr"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tMaterial as string,\n\t\t{Description article} as string,\n\t\tVMC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'filename') ~> inputVMC\ninputVMC derive(year = regexExtract(filename , '(\\\\d+)',1)) ~> extractYEAr\nextractYEAr aggregate(groupBy(Material,\n\t\tyear),\n\tVMC = first(VMC)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SAUNIER DUVAL} as string,\n\t\t{208.0} as string,\n\t\t{Pièces détachées pour chauffage} as string,\n\t\t{05608600} as string,\n\t\t{5272.0} as string,\n\t\t{33.0} as string,\n\t\t{0.0} as string,\n\t\t{202008} as string,\n\t\t{2020} as string,\n\t\t{08} as string\n\t),\n\tpartitionFileNames:['referentiel_vmc.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/vmcinput')]",
				"[concat(variables('factoryId'), '/datasets/outPutReferentielVMC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_CHANTIER')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_OFFRE_CHANTIER_INPUT",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SUIVIE_OFFRE_CHANTIER",
								"type": "DatasetReference"
							},
							"name": "SUIVIEOFFRECHANTIER"
						},
						{
							"dataset": {
								"referenceName": "offre_et_baseCom_sans_matching",
								"type": "DatasetReference"
							},
							"name": "offreEtBaseComSansMatching"
						}
					],
					"transformations": [
						{
							"name": "aggregationOffre"
						},
						{
							"name": "offreNotNULLoffre"
						},
						{
							"name": "offreNotNullBase"
						},
						{
							"name": "aggregationBase"
						},
						{
							"name": "leftOffreBaseCom"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "dropColumnsInCommonleft"
						},
						{
							"name": "fullRightOffreBaseCom"
						},
						{
							"name": "rightOffreBaseCom"
						},
						{
							"name": "dropColumnsInCommonRight"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						}
					],
					"script": "source(output(\n\t\t{DateDébutValidité} as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{DateFinValidité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\t{Date de création} as string,\n\t\tNomSignataire1 as string,\n\t\tNomSignataire2 as string,\n\t\tDateSignataire1 as string,\n\t\tDateSignataire2 as string,\n\t\t{DateDérogation} as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nDerivedColumn2 aggregate(groupBy(Offre,\n\t\t{Référence},\n\t\tCanal),\n\t{Statut offre} = first({Statut offre}),\n\t\tResponsable = first(Responsable),\n\t\t{Numéro interne 1} = first({Numéro interne 1}),\n\t\t{Négoce} = first({Négoce}),\n\t\t{Numéro interne 2} = first({Numéro interne 2}),\n\t\t{Quantité de l'offre} = sum(toInteger({Quantité})),\n\t\t{Date fin validité} = max({DateFinValidité})) ~> aggregationOffre\nstgOffre filter(!isNull(Offre)) ~> offreNotNULLoffre\nbaseCommerciale filter(!isNull(no_offre) && canal_final==\"Chantier\") ~> offreNotNullBase\nDerivedColumn1 aggregate(groupBy({plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit},\n\t\tcanal_final),\n\t{qte consommée} = sum(toInteger(quantite) ),\n\t\t{dernière facturation année} = max(toInteger(year)),\n\t\t{dernière facturation mois} = max(toInteger(month))) ~> aggregationBase\naggregationOffre, aggregationBase join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOffreBaseCom\nleftOffreBaseCom derive({Date de dernière facturation de l'offre} = toString({dernière facturation année})+\"-\"+toString({dernière facturation mois})) ~> yearmonth\nyearmonth select(mapColumn(\n\t\t{Num offre} = Offre,\n\t\tCanal,\n\t\tProduit = {Référence},\n\t\t{Quantité de l'offre},\n\t\t{Date fin validité},\n\t\t{Quantité consommée} = {qte consommée},\n\t\t{Date de dernière facturation de l'offre},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\t{Numéro interne 1},\n\t\t{Négoce},\n\t\t{Numéro interne 2}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonleft\naggregationOffre, aggregationBase join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'right',\n\tbroadcast: 'auto')~> fullRightOffreBaseCom\nfullRightOffreBaseCom filter(isNull(Offre) || isNull({Référence})) ~> rightOffreBaseCom\nrightOffreBaseCom select(mapColumn(\n\t\t{plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit},\n\t\tcanal_final,\n\t\t{qte consommée},\n\t\t{dernière facturation année},\n\t\t{dernière facturation mois}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonRight\noffreNotNullBase derive({code produit} = iif(substring({code produit},1,2) == \"00\", substring({code produit},3,length({code produit})-2), {code produit}),\n\t\tno_offre = upper(no_offre)) ~> DerivedColumn1\noffreNotNULLoffre derive({DateFinValidité} = split({DateFinValidité}, \" \")[1]) ~> DerivedColumn2\ndropColumnsInCommonleft sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SUIVIE_OFFRE_CHANTIER.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SUIVIEOFFRECHANTIER\ndropColumnsInCommonRight sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['offre_et_baseCom_sans_matching.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> offreEtBaseComSansMatching"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_CHANTIER_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/InputBaseCommercialMarketing')]",
				"[concat(variables('factoryId'), '/datasets/SUIVIE_OFFRE_CHANTIER')]",
				"[concat(variables('factoryId'), '/datasets/offre_et_baseCom_sans_matching')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_OFFRE_DIFFUS_INPUT",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "articleHierarchi"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OFFRE_SANS_MATCHING_DIFFUS",
								"type": "DatasetReference"
							},
							"name": "offreSansMatching"
						},
						{
							"dataset": {
								"referenceName": "SUIVI_OFFRE_DIFFUS",
								"type": "DatasetReference"
							},
							"name": "OUTputffreDiffus"
						}
					],
					"transformations": [
						{
							"name": "aggregationOffre"
						},
						{
							"name": "offreNotNULL"
						},
						{
							"name": "offreNotNullBase"
						},
						{
							"name": "aggregationBaseold"
						},
						{
							"name": "leftOffreBase"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "dropColumnsInCommonLeft"
						},
						{
							"name": "fullRightOffrebase"
						},
						{
							"name": "right"
						},
						{
							"name": "dropColumnsInCommonRight"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "endArticle"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Join2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "Aggregate2"
						}
					],
					"script": "source(output(\n\t\t{DateDébutValidité} as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{DateFinValidité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\t{Date de création} as string,\n\t\tNomSignataire1 as string,\n\t\tNomSignataire2 as string,\n\t\tDateSignataire1 as string,\n\t\tDateSignataire2 as string,\n\t\t{DateDérogation} as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleHierarchi\noffreNotNULL aggregate(groupBy(Offre,\n\t\t{Référence},\n\t\tCanal),\n\t{Statut offre} = last({Statut offre}),\n\t\t{Numéro interne 1} = first({Numéro interne 1}),\n\t\tResponsable = last(Responsable),\n\t\t{Négoce} = first({Négoce}),\n\t\t{Numéro interne 2} = first({Numéro interne 2}),\n\t\tCODE_CMI = first(CODE_CMI),\n\t\tNOM_CMI = first(NOM_CMI),\n\t\t{Date fin de validité} = max({DateFinValidité}),\n\t\t{Quantité de l'offre} = sum(toInteger({Quantité})),\n\t\tQuantite_P1N = first(PotentielP1N),\n\t\tQuantite_P2N = first(PotentielP2N),\n\t\tQuantite_P3N = first(PotentielP3N),\n\t\tQuantite_P4N = first(PotentielP4N),\n\t\tQuantite_P5N = first(PotentielP5N),\n\t\tQuantite_P6N = first(PotentielP6N)) ~> aggregationOffre\nDerivedColumn1 filter(!isNull(Offre)) ~> offreNotNULL\nbaseCommerciale filter(!isNull(no_offre) && canal_final==\"Diffus\") ~> offreNotNullBase\noffreNotNullBase aggregate(groupBy({plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit}),\n\t{Quantité consommée} = sum(toInteger(quantite)),\n\t\t{dernière facturation année} = max(toInteger(year)),\n\t\t{dernière facturation mois} = max(toInteger(month))) ~> aggregationBaseold\naggregationOffre, aggregationBaseold join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOffreBase\nleftOffreBase derive({Date de dernière facturation de l'offre} = toString({dernière facturation année})+\"-\"+toString({dernière facturation mois}),\n\t\tCanal = \"Diffus\") ~> yearmonth\nyearmonth select(mapColumn(\n\t\tOffre,\n\t\t{Référence},\n\t\tCanal,\n\t\t{Date fin de validité},\n\t\t{Quantité de l'offre},\n\t\tQuantite_P1N,\n\t\tQuantite_P2N,\n\t\tQuantite_P3N,\n\t\tQuantite_P4N,\n\t\tQuantite_P5N,\n\t\tQuantite_P6N,\n\t\t{Quantité consommée},\n\t\t{Date de dernière facturation de l'offre},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\t{Numéro interne 1},\n\t\t{Négoce},\n\t\t{Numéro interne 2},\n\t\tCODE_CMI,\n\t\tNOM_CMI\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonLeft\naggregationOffre, aggregationBaseold join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> fullRightOffrebase\nfullRightOffrebase filter(isNull(Offre) || isNull({Référence})) ~> right\nright select(mapColumn(\n\t\tOffre,\n\t\t{Référence},\n\t\tCanal,\n\t\t{Statut offre},\n\t\tResponsable,\n\t\t{Numéro interne 1},\n\t\t{Négoce},\n\t\t{Numéro interne 2},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Date fin de validité},\n\t\t{Quantité de l'offre},\n\t\tQuantite_P1N,\n\t\tQuantite_P2N,\n\t\tQuantite_P3N,\n\t\tQuantite_P4N,\n\t\tQuantite_P5N,\n\t\tQuantite_P6N,\n\t\t{plateforme/vente directe},\n\t\t{Quantité consommée},\n\t\t{dernière facturation année},\n\t\t{dernière facturation mois}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommonRight\nstgOffre derive({DateFinValidité} = split({DateFinValidité}, \" \")[1]) ~> DerivedColumn1\noffreNotNULL, endArticle join(iif(isInteger({Référence}), toString(toInteger({Référence})), {Référence}) == iif(isInteger(Article), toString(toInteger(Article)), Article),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\narticleHierarchi select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endArticle\nJoin1 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn2 aggregate(groupBy(Offre),\n\tPotentielP1N = sum(toInteger(PotentielP1N)),\n\t\tPotentielP2N = sum(toInteger(PotentielP2N)),\n\t\tPotentielP3N = sum(toInteger(PotentielP3N)),\n\t\tPotentielP4N = sum(toInteger(PotentielP4N)),\n\t\tPotentielP5N = sum(toInteger(PotentielP5N)),\n\t\tPotentielP6N = sum(toInteger(PotentielP6N)),\n\t\t{DateFinValidité} = max({DateFinValidité}),\n\t\tCODE_CMI = first(CODE_CMI),\n\t\tNOM_CMI = first(NOM_CMI),\n\t\tResponsable = last(Responsable),\n\t\t{Numéro interne 1} = last({Numéro interne 1}),\n\t\t{Numéro interne 2} = last({Numéro interne 2}),\n\t\t{Négoce} = last({Négoce}),\n\t\t{Statut offre} = last({Statut offre}),\n\t\tCodeATC = last(CodeATC)) ~> Aggregate1\nSelect1 derive(PotentielP1N = iif( {N1.locale}==\"FB\", coalesce(PotentielP1N , {Quantité}), \"\" ),\n\t\tPotentielP2N = iif( {N1.locale}==\"FA\", coalesce(PotentielP2N , {Quantité}), \"\" ),\n\t\tPotentielP3N = iif( {N2.locale}==\"FP1\", coalesce(PotentielP3N , {Quantité}), \"\" ),\n\t\tPotentielP4N = iif( {N2.locale}==\"FR1\", coalesce(PotentielP4N , {Quantité}), \"\" ),\n\t\tPotentielP5N = iif( {N3.locale}==\"FP41\", coalesce(PotentielP5N , {Quantité}), \"\" ),\n\t\tPotentielP6N = iif( {N3.locale}==\"FC21\", coalesce(PotentielP6N , {Quantité}), \"\" )) ~> DerivedColumn2\nAggregate1, Aggregate2 join(Offre == no_offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 derive(Canal = \"Diffus\",\n\t\t{date dernière facturation} = toString({dernière facturation année})+\"-\"+ toString({dernière facturation mois})) ~> DerivedColumn3\noffreNotNullBase derive(Realise_PotentielP1N = iif( N1locale==\"FB\",  quantite, \"\" ),\n\t\tRealise_PotentielP2N = iif( N1locale==\"FA\", quantite, \"\" ),\n\t\tRealise_PotentielP3N = iif( N2locale==\"FP1\", quantite, \"\" ),\n\t\tRealise_PotentielP4N = iif( N2locale==\"FR1\", quantite  , \"\" ),\n\t\tRealise_PotentielP5N = iif( N3locale==\"FP41\", quantite, \"\" ),\n\t\tRealise_PotentielP6N = iif( N3locale==\"FC21\", quantite, \"\" )) ~> DerivedColumn4\nDerivedColumn4 aggregate(groupBy(no_offre,\n\t\t{plateforme/vente directe}),\n\tRealise_PotentielP1N = sum(toInteger(Realise_PotentielP1N)),\n\t\tRealise_PotentielP2N = sum(toInteger(Realise_PotentielP2N)),\n\t\tRealise_PotentielP3N = sum(toInteger(Realise_PotentielP3N)),\n\t\tRealise_PotentielP4N = sum(toInteger(Realise_PotentielP4N)),\n\t\tRealise_PotentielP5N = sum(toInteger(Realise_PotentielP5N)),\n\t\tRealise_PotentielP6N = sum(toInteger(Realise_PotentielP6N)),\n\t\t{dernière facturation année} = max(toInteger(year)),\n\t\t{dernière facturation mois} = max(toInteger(month))) ~> Aggregate2\ndropColumnsInCommonRight sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string\n\t),\n\tpartitionFileNames:['offre_et_baseCom_sans_matching_diffus.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> offreSansMatching\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SUIVI_OFFRE_DIFFUS.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OUTputffreDiffus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_DIFFUS_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/InputBaseCommercialMarketing')]",
				"[concat(variables('factoryId'), '/datasets/article_hierarchi')]",
				"[concat(variables('factoryId'), '/datasets/OFFRE_SANS_MATCHING_DIFFUS')]",
				"[concat(variables('factoryId'), '/datasets/SUIVI_OFFRE_DIFFUS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TEREVA_ECOULEMENT_INPUT",
								"type": "DatasetReference"
							},
							"name": "ECOULEMENT"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEREVA_EC_PREPARED",
								"type": "DatasetReference"
							},
							"name": "TEREVAECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "TerevaOrgaNotFound",
								"type": "DatasetReference"
							},
							"name": "TEREVAORGANISATIONNOTFOUND"
						},
						{
							"dataset": {
								"referenceName": "terevaQteNull",
								"type": "DatasetReference"
							},
							"name": "terevaQteNull"
						}
					],
					"transformations": [
						{
							"name": "yearmonthANDcanal"
						},
						{
							"name": "yearANDmonth"
						},
						{
							"name": "agenceCodeNotNull"
						},
						{
							"name": "posIDNotNull"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "deleteVentesDirectes"
						},
						{
							"name": "rename"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerLeftVentesDirectes"
						},
						{
							"name": "dropColumnsInCommon1"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "marquename"
						},
						{
							"name": "fullLeftOrganisation"
						},
						{
							"name": "leftOnly"
						},
						{
							"name": "ConditionalSplit1"
						}
					],
					"script": "source(output(\n\t\tProp_0 as string,\n\t\tsociete as string,\n\t\tregion_lib as string,\n\t\tsgeo as string,\n\t\tsgeo_lib as string,\n\t\tagence as string,\n\t\tagence_lib as string,\n\t\tdep_ag as string,\n\t\tfrs as string,\n\t\tarticle as string,\n\t\tarticle_lib as string,\n\t\tdm as string,\n\t\tref_frs as string,\n\t\t{vva (m) n} as string,\n\t\t{vva (m) n-1} as string,\n\t\t{qte (m) n} as string,\n\t\t{qte (m) n-1} as string,\n\t\t{vva (c) n} as string,\n\t\t{vva (c) n-1} as string,\n\t\t{qte (c) n} as string,\n\t\t{qte (c) n-1} as string,\n\t\t{var. vva (m)} as string,\n\t\t{var. qte (m)} as string,\n\t\t{var. vva (c)} as string,\n\t\t{var. qte (c)} as string,\n\t\tpath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ECOULEMENT\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\treference as string,\n\t\t{Code client} as string,\n\t\tqte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nrename derive(yearmonth = replace(split(split(path, \"/\")[3], \"_\")[1], \"-\", \"\"),\n\t\tcanal = split(split(path, \"/\")[3], \"_\")[2],\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonthANDcanal\nConditionalSplit1@qteNotNul derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> yearANDmonth\nyearANDmonth filter(!isNull(agence_code)) ~> agenceCodeNotNull\norganisation filter(!isNull(POSid)) ~> posIDNotNull\nagenceCodeNotNull, uniqueOrganisation join(agence_code == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\nposIDNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> uniqueOrganisation\ninnerOrganisation, ventesDirectes join(ConditionalSplit1@qteNotNul@yearmonth == ventesDirectes@yearmonth\n\t&& ConditionalSplit1@qteNotNul@reference == ventesDirectes@reference\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerVentesDirectes derive(qte_ecoulement = iif( ConditionalSplit1@qteNotNul@qte_ecoulement-toDouble(ventesDirectes@qte_ecoulement) > 0 , ConditionalSplit1@qteNotNul@qte_ecoulement-toDouble(ventesDirectes@qte_ecoulement) , toDouble(0) )) ~> deleteVentesDirectes\nECOULEMENT select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code = agence,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file = frs,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference = ref_frs,\n\t\tqte_ecoulement = {qte (m) n},\n\t\tpath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\ninnerOrganisation, ventesDirectes join(ConditionalSplit1@qteNotNul@yearmonth == ventesDirectes@yearmonth\n\t&& coalesce(toString(toInteger(replace(ConditionalSplit1@qteNotNul@reference, \" \", \"\"))),replace(ConditionalSplit1@qteNotNul@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(ventesDirectes@reference, \" \", \"\"))),replace(ventesDirectes@reference, \" \", \"\"))\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(ventesDirectes@reference) || isNull(ventesDirectes@yearmonth) || isNull({Code client})) ~> outerLeftVentesDirectes\ndeleteVentesDirectes select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference = ConditionalSplit1@qteNotNul@reference,\n\t\tqte_ecoulement,\n\t\tpath,\n\t\tyearmonth = ConditionalSplit1@qteNotNul@yearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon1\nouterLeftVentesDirectes select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference = ConditionalSplit1@qteNotNul@reference,\n\t\tqte_ecoulement = ConditionalSplit1@qteNotNul@qte_ecoulement,\n\t\tpath,\n\t\tyearmonth = ConditionalSplit1@qteNotNul@yearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\ndropColumnsInCommon1, dropColumnsInCommon union(byName: true)~> fullLeftUnion\nmarquename select(mapColumn(\n\t\tdistributeur = societe,\n\t\tagence_code,\n\t\tmarque_file,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tHubSAPid,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tmarque_id = BrandID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nfullLeftUnion derive(marque_name = \"SaunierDuval\",\n\t\tmarque = \"1604\",\n\t\tmarque_num = \"1604\") ~> marquename\nagenceCodeNotNull, uniqueOrganisation join(agence_code == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOrganisation\nfullLeftOrganisation filter(isNull(POSid)) ~> leftOnly\nyearmonthANDcanal split(qte_ecoulement!=0,\n\tdisjoint: false) ~> ConditionalSplit1@(qteNotNul, qteNull)\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['TEREVA_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> TEREVAECOULPREPARED\nleftOnly sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['TEREVA_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> TEREVAORGANISATIONNOTFOUND\nConditionalSplit1@qteNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['TEREVA_QteNull.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> terevaQteNull"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TEREVA_ECOULEMENT_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/TEREVA_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/TEREVA_EC_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/TerevaOrgaNotFound')]",
				"[concat(variables('factoryId'), '/datasets/terevaQteNull')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRAITEMENTECOULEMENT_AVOIR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "flux pour le retraitmenet des ecoulements du modele dsc-tereva",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecoulementUniformAz",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "avoir",
								"type": "DatasetReference"
							},
							"name": "avoir"
						},
						{
							"dataset": {
								"referenceName": "salerDsc",
								"type": "DatasetReference"
							},
							"name": "salerDSC"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "OrgaTerevas"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "eccToReplicate",
								"type": "DatasetReference"
							},
							"name": "outEccDscTereva"
						},
						{
							"dataset": {
								"referenceName": "avoirToReplicate",
								"type": "DatasetReference"
							},
							"name": "DTAvoirRetraiter"
						},
						{
							"dataset": {
								"referenceName": "AZ_OecoulementDscTerevaWithIndex",
								"type": "DatasetReference"
							},
							"name": "outEcoulementDScTereva"
						},
						{
							"dataset": {
								"referenceName": "AZ_OecoulementPartedislikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "outputEcoulementPartedis"
						},
						{
							"dataset": {
								"referenceName": "AZ_AvoirWithIndexDSClike",
								"type": "DatasetReference"
							},
							"name": "outputAvoirDSc"
						},
						{
							"dataset": {
								"referenceName": "AvoirForVanMarkes",
								"type": "DatasetReference"
							},
							"name": "AvoirForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outAvoirNotFound",
								"type": "DatasetReference"
							},
							"name": "outputAvoirNotFound"
						}
					],
					"transformations": [
						{
							"name": "dropColumns"
						},
						{
							"name": "filterColumnsToUse"
						},
						{
							"name": "filterDistrubitor"
						},
						{
							"name": "AvoirAddToReplicate"
						},
						{
							"name": "EccAddToReplicate"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "unionDSCTereva"
						},
						{
							"name": "uniqueAgenceCode"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "DscTerevaJoinOrganisation"
						},
						{
							"name": "ReSelect"
						},
						{
							"name": "positiveQuantite"
						},
						{
							"name": "dd"
						},
						{
							"name": "ddToList"
						},
						{
							"name": "Window1"
						},
						{
							"name": "dd2"
						},
						{
							"name": "dd2ToList"
						},
						{
							"name": "Window2"
						},
						{
							"name": "dd3"
						},
						{
							"name": "Window3"
						},
						{
							"name": "dd3tolist"
						},
						{
							"name": "indexcols3"
						},
						{
							"name": "indexcols2"
						},
						{
							"name": "indexcols"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "dropdd"
						},
						{
							"name": "caEcoulement"
						},
						{
							"name": "caAvoir"
						},
						{
							"name": "JoinOrganisation"
						},
						{
							"name": "posidNULL"
						},
						{
							"name": "periode"
						},
						{
							"name": "columnChoicePrix"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\tmarque as string,\n\t\tClient as string,\n\t\t{code postal} as string,\n\t\tmarque_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Clé} as string,\n\t\tMarque as string,\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tDepot as string,\n\t\tNoFrs as string,\n\t\tFOUR2 as string,\n\t\tC_Four as string,\n\t\tLib_Four as string,\n\t\tCategorie as string,\n\t\tCanal as string,\n\t\tFinancement as string,\n\t\tNoOffre as string,\n\t\tDate_Debut as string,\n\t\tDate_Fin as string,\n\t\tNoArtDSC as string,\n\t\tLibArt as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\t{LIB AGENCE} as string,\n\t\t{Qté_Ini} as string,\n\t\tSolde_Qte as string,\n\t\tQte_Tot as string,\n\t\tQte_Retenue as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tNomCli as string,\n\t\tPRR as string,\n\t\tPRS_ligne_BL as string,\n\t\tPA_Ref as string,\n\t\tPA_D as string,\n\t\tPA_Valide_VGF as string,\n\t\tEcart as string,\n\t\tAide as string,\n\t\tAide_Retenue as string,\n\t\t{Aide_Validée_VGF} as string,\n\t\tDate_Num as string,\n\t\tP_Fact as string,\n\t\t{Clé_Offre_Article} as string,\n\t\tMotif_Commentaire as string,\n\t\t{Qté_Campagne} as string,\n\t\tPrix_Campagne as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tMontant_Avoir as string,\n\t\tNoDocRefac as string,\n\t\tNoLigneDocRefac as string,\n\t\t{Contrôle} as string,\n\t\tDate_Ctrl as string,\n\t\tCode_Motif_Refus as string,\n\t\tCompanyId as string,\n\t\t{ValidéPar} as string,\n\t\tDateAjout as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoir\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> salerDSC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrgaTerevas\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\necoulement select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal} = {code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\navoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filterColumnsToUse\nEccAddToReplicate split(in([\"dsc\",'tereva'],lower(distributeur)),\n\tdisjoint: false) ~> filterDistrubitor@(dscTereva, notDscTereva)\nfilterColumnsToUse derive(toreplicate = abs( toInteger( Qte_Validee_VGF ) )) ~> AvoirAddToReplicate\ndropColumns derive(toreplicate = abs(toInteger( qte_ecoulement )),\n\t\tagence_code = replace(agence_code, \".0\", \"\")) ~> EccAddToReplicate\nnewColumns split(in([\"2\",\"7\"], CompanyId),\n\tdisjoint: false) ~> ConditionalSplit1@(DscTerevaAvoir, NotDscTerevaAvoir)\nsalerDSC, OrgaTerevas union(byName: true)~> unionDSCTereva\nunionDSCTereva aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tHubSAPid = last(HubSAPid)) ~> uniqueAgenceCode\nAvoirAddToReplicate derive(ca_avoir = toFloat(PA_Valide_VGF),\n\t\tyearmonth = iif(toInteger(Mois)<10, {Année}+\"0\"+Mois  ,   {Année}+Mois  ),\n\t\tQte_Validee_VGF = toInteger( Qte_Validee_VGF )) ~> newColumns\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> DscTerevaJoinOrganisation\nConditionalSplit1@DscTerevaAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReSelect\nDscTerevaJoinOrganisation filter(toInteger(Qte_Validee_VGF) >0) ~> positiveQuantite\nfilterDistrubitor@dscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index),\n\t\trcount = 1) ~> dd\ndd foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tdd,\n\t\trcount\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ddToList\nddToList window(over(year,\n\t\tagence_code,\n\t\treference),\n\tasc(year, true),\n\tasc(agence_code, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window1\nfilterDistrubitor@notDscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index)) ~> dd2\ndd2 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> dd2ToList\ndd2ToList window(over(yearmonth,\n\t\tHubSAPid,\n\t\treference),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window2\npositiveQuantite derive(dd = mapLoop(abs(toInteger(Qte_Validee_VGF)), #index)) ~> dd3\ndd3tolist window(over(year = {Année},\n\t\tAgence,\n\t\tNoArtVGF),\n\tasc({Année}, true),\n\tasc(Agence, true),\n\tasc(NoArtVGF, true),\n\tindexcols2 = rowNumber()) ~> Window3\ndd3 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\t{Année},\n\t\tMois_Selection,\n\t\tMois,\n\t\tPA_Valide_VGF,\n\t\tyearmonth,\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tWholeSalerID,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> dd3tolist\nWindow3 derive(indexcols2 = {Année}+Agence+NoArtVGF+toString(indexcols2),\n\t\tqte_avoir = iif(toInteger(Qte_Validee_VGF) >0, 1, -1 )) ~> indexcols3\nWindow2 derive(indexcols2 = yearmonth+HubSAPid+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> indexcols2\ndropdd derive(indexcols2 = year+agence_code+reference+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> indexcols\nfilterDistrubitor@notDscTereva filter(lower(distributeur)==\"tereva\") ~> Filter1\nWindow1 select(mapColumn(\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\trcount,\n\t\tindexcols2,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropdd\nindexcols derive(ca_ecoulement = abs(toDouble(ca_ecoulement))*qte_ecc) ~> caEcoulement\nindexcols3 derive(ca_avoir = abs(ca_avoir)*qte_avoir) ~> caAvoir\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOrganisation\nJoinOrganisation filter(isNull(POSid)) ~> posidNULL\nprixParPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> periode\nperiode select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\nfilterDistrubitor@dscTereva sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['outEccDscTereva.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEccDscTereva\npositiveQuantite sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['DscAvoirTemp.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DTAvoirRetraiter\ncaEcoulement sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementDscTerevaWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEcoulementDScTereva\nindexcols2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementPartedislikeWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputEcoulementPartedis\ncaAvoir sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_AvoirWithIndexDSClike.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirDSc\nConditionalSplit1@NotDscTerevaAvoir sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['AvoirForVanMarkes.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> AvoirForVanMarkes\nposidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoir.organisationNotFound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecoulementUniformAz')]",
				"[concat(variables('factoryId'), '/datasets/avoir')]",
				"[concat(variables('factoryId'), '/datasets/salerDsc')]",
				"[concat(variables('factoryId'), '/datasets/TEREVA_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/InPrixMoyenSplited')]",
				"[concat(variables('factoryId'), '/datasets/eccToReplicate')]",
				"[concat(variables('factoryId'), '/datasets/avoirToReplicate')]",
				"[concat(variables('factoryId'), '/datasets/AZ_OecoulementDscTerevaWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/AZ_OecoulementPartedislikeWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/AZ_AvoirWithIndexDSClike')]",
				"[concat(variables('factoryId'), '/datasets/AvoirForVanMarkes')]",
				"[concat(variables('factoryId'), '/datasets/outAvoirNotFound')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRAITEMENTECOULEMENT_AVOIR_PERIOD')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "flux pour le retraitmenet des ecoulements du modele dsc-tereva",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecoulementUniformAz",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "avoir",
								"type": "DatasetReference"
							},
							"name": "avoir"
						},
						{
							"dataset": {
								"referenceName": "salerDsc",
								"type": "DatasetReference"
							},
							"name": "salerDSC"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "OrgaTerevas"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "eccToReplicate",
								"type": "DatasetReference"
							},
							"name": "outEccDscTereva"
						},
						{
							"dataset": {
								"referenceName": "avoirToReplicate",
								"type": "DatasetReference"
							},
							"name": "DTAvoirRetraiter"
						},
						{
							"dataset": {
								"referenceName": "AZ_OecoulementDscTerevaWithIndex",
								"type": "DatasetReference"
							},
							"name": "outEcoulementDScTereva"
						},
						{
							"dataset": {
								"referenceName": "AZ_OecoulementPartedislikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "outputEcoulementPartedis"
						},
						{
							"dataset": {
								"referenceName": "AZ_AvoirWithIndexDSClike",
								"type": "DatasetReference"
							},
							"name": "outputAvoirDSc"
						},
						{
							"dataset": {
								"referenceName": "AvoirForVanMarkes",
								"type": "DatasetReference"
							},
							"name": "AvoirForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outAvoirNotFound",
								"type": "DatasetReference"
							},
							"name": "outputAvoirNotFound"
						}
					],
					"transformations": [
						{
							"name": "dropColumns"
						},
						{
							"name": "filterColumnsToUse"
						},
						{
							"name": "filterDistrubitor"
						},
						{
							"name": "AvoirAddToReplicate"
						},
						{
							"name": "EccAddToReplicate"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "unionDSCTereva"
						},
						{
							"name": "uniqueAgenceCode"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "DscTerevaJoinOrganisation"
						},
						{
							"name": "ReSelect"
						},
						{
							"name": "positiveQuantite"
						},
						{
							"name": "dd"
						},
						{
							"name": "ddToList"
						},
						{
							"name": "Window1"
						},
						{
							"name": "dd2"
						},
						{
							"name": "dd2ToList"
						},
						{
							"name": "Window2"
						},
						{
							"name": "dd3"
						},
						{
							"name": "Window3"
						},
						{
							"name": "dd3tolist"
						},
						{
							"name": "indexcols3"
						},
						{
							"name": "indexcols2"
						},
						{
							"name": "indexcols"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "dropdd"
						},
						{
							"name": "caEcoulement"
						},
						{
							"name": "caAvoir"
						},
						{
							"name": "JoinOrganisation"
						},
						{
							"name": "posidNULL"
						},
						{
							"name": "periode"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "getPeriode"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "aggregate1"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\tmarque as string,\n\t\tClient as string,\n\t\t{code postal} as string,\n\t\tmarque_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Clé} as string,\n\t\tMarque as string,\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tDepot as string,\n\t\tNoFrs as string,\n\t\tFOUR2 as string,\n\t\tC_Four as string,\n\t\tLib_Four as string,\n\t\tCategorie as string,\n\t\tCanal as string,\n\t\tFinancement as string,\n\t\tNoOffre as string,\n\t\tDate_Debut as string,\n\t\tDate_Fin as string,\n\t\tNoArtDSC as string,\n\t\tLibArt as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\t{LIB AGENCE} as string,\n\t\t{Qté_Ini} as string,\n\t\tSolde_Qte as string,\n\t\tQte_Tot as string,\n\t\tQte_Retenue as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tNomCli as string,\n\t\tPRR as string,\n\t\tPRS_ligne_BL as string,\n\t\tPA_Ref as string,\n\t\tPA_D as string,\n\t\tPA_Valide_VGF as string,\n\t\tEcart as string,\n\t\tAide as string,\n\t\tAide_Retenue as string,\n\t\t{Aide_Validée_VGF} as string,\n\t\tDate_Num as string,\n\t\tP_Fact as string,\n\t\t{Clé_Offre_Article} as string,\n\t\tMotif_Commentaire as string,\n\t\t{Qté_Campagne} as string,\n\t\tPrix_Campagne as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tMontant_Avoir as string,\n\t\tNoDocRefac as string,\n\t\tNoLigneDocRefac as string,\n\t\t{Contrôle} as string,\n\t\tDate_Ctrl as string,\n\t\tCode_Motif_Refus as string,\n\t\tCompanyId as string,\n\t\t{ValidéPar} as string,\n\t\tDateAjout as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoir\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> salerDSC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrgaTerevas\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\necoulement select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal} = {code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\navoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filterColumnsToUse\nEccAddToReplicate split(in([\"dsc\",'tereva'],lower(distributeur)),\n\tdisjoint: false) ~> filterDistrubitor@(dscTereva, notDscTereva)\nfilterColumnsToUse derive(toreplicate = abs( toInteger( Qte_Validee_VGF ) )) ~> AvoirAddToReplicate\ndropColumns derive(toreplicate = abs(toInteger( qte_ecoulement )),\n\t\tagence_code = replace(agence_code, \".0\", \"\")) ~> EccAddToReplicate\nnewColumns split(in([\"2\",\"7\"], CompanyId),\n\tdisjoint: false) ~> ConditionalSplit1@(DscTerevaAvoir, NotDscTerevaAvoir)\nsalerDSC, OrgaTerevas union(byName: true)~> unionDSCTereva\nunionDSCTereva aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tHubSAPid = last(HubSAPid)) ~> uniqueAgenceCode\nAvoirAddToReplicate derive(ca_avoir = toFloat(PA_Valide_VGF),\n\t\tyearmonth = iif(toInteger(Mois)<10, {Année}+\"0\"+Mois  ,   {Année}+Mois  ),\n\t\tQte_Validee_VGF = toInteger( Qte_Validee_VGF )) ~> newColumns\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> DscTerevaJoinOrganisation\nConditionalSplit1@DscTerevaAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReSelect\nDscTerevaJoinOrganisation filter(toInteger(Qte_Validee_VGF) >0) ~> positiveQuantite\nfilterDistrubitor@dscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index),\n\t\trcount = 1) ~> dd\ndd foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tdd,\n\t\trcount\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ddToList\nddToList window(over(year,\n\t\tagence_code,\n\t\treference),\n\tasc(year, true),\n\tasc(agence_code, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window1\nfilterDistrubitor@notDscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index)) ~> dd2\nderivedColumn1 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = filterDistrubitor@notDscTereva@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = filterDistrubitor@notDscTereva@distributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd,\n\t\t{Période}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> dd2ToList\nderivedColumn2 window(over(year,\n\t\t{Période},\n\t\tPOSSAMidString,\n\t\tref2),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window2\npositiveQuantite derive(dd = mapLoop(abs(toInteger(Qte_Validee_VGF)), #index)) ~> dd3\ndd3tolist window(over(year = {Année},\n\t\tAgence,\n\t\tNoArtVGF),\n\tasc({Année}, true),\n\tasc(Agence, true),\n\tasc(NoArtVGF, true),\n\tindexcols2 = rowNumber()) ~> Window3\ndd3 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\t{Année},\n\t\tMois_Selection,\n\t\tMois,\n\t\tPA_Valide_VGF,\n\t\tyearmonth,\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tWholeSalerID,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> dd3tolist\nWindow3 derive(indexcols2 = {Année}+Agence+NoArtVGF+toString(indexcols2),\n\t\tqte_avoir = iif(toInteger(Qte_Validee_VGF) >0, 1, -1 )) ~> indexcols3\nWindow2 derive(indexcols2 = year+\"-\"+{Période}+\"-\"+POSSAMidString+\"-\"+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+\"-\"+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) <=0, -1, 1 )) ~> indexcols2\ndropdd derive(indexcols2 = year+agence_code+reference+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> indexcols\nfilterDistrubitor@notDscTereva filter(lower(distributeur)==\"tereva\") ~> Filter1\nWindow1 select(mapColumn(\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\trcount,\n\t\tindexcols2,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropdd\nindexcols derive(ca_ecoulement = abs(toDouble(ca_ecoulement))*qte_ecc) ~> caEcoulement\nindexcols3 derive(ca_avoir = abs(ca_avoir)*qte_avoir) ~> caAvoir\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOrganisation\nJoinOrganisation filter(isNull(POSid)) ~> posidNULL\nprixParPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> periode\nperiode select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\t{Période},\n\t\tannee2,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoicePrix\ndd2, columnChoicePrix join(replace(lower( iif(filterDistrubitor@notDscTereva@distributeur==\"MABILLE\", \"sonac\", filterDistrubitor@notDscTereva@distributeur) ), \" \", \"\") == replace(lower(columnChoicePrix@Distributeur), \" \", \"\")\n\t&& toInteger(year) == toInteger(annee2)\n\t&& toInteger(filterDistrubitor@notDscTereva@month) == toInteger(columnChoicePrix@month)\n\t&& coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getPeriode\ngetPeriode derive({Période} = coalesce( {Période}, \"00\" )) ~> derivedColumn1\ndd2ToList derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn2\nindexcols2 aggregate(qte_ecc = sum(qte_ecc)) ~> aggregate1\nfilterDistrubitor@dscTereva sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['outEccDscTereva.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEccDscTereva\npositiveQuantite sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['DscAvoirTemp.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DTAvoirRetraiter\ncaEcoulement sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementDscTerevaWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEcoulementDScTereva\nindexcols2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementPartedislikeWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputEcoulementPartedis\ncaAvoir sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_AvoirWithIndexDSClike.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirDSc\nConditionalSplit1@NotDscTerevaAvoir sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['AvoirForVanMarkes.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> AvoirForVanMarkes\nposidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoir.organisationNotFound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecoulementUniformAz')]",
				"[concat(variables('factoryId'), '/datasets/avoir')]",
				"[concat(variables('factoryId'), '/datasets/salerDsc')]",
				"[concat(variables('factoryId'), '/datasets/TEREVA_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/InPrixMoyenSplited')]",
				"[concat(variables('factoryId'), '/datasets/eccToReplicate')]",
				"[concat(variables('factoryId'), '/datasets/avoirToReplicate')]",
				"[concat(variables('factoryId'), '/datasets/AZ_OecoulementDscTerevaWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/AZ_OecoulementPartedislikeWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/AZ_AvoirWithIndexDSClike')]",
				"[concat(variables('factoryId'), '/datasets/AvoirForVanMarkes')]",
				"[concat(variables('factoryId'), '/datasets/outAvoirNotFound')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UNIFORMISATION_OFFRE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ALL_OFFRE_DIFFUS",
								"type": "DatasetReference"
							},
							"name": "offreDiffusInput"
						},
						{
							"dataset": {
								"referenceName": "ALL_OFFRE_CHANTIER",
								"type": "DatasetReference"
							},
							"name": "offreChantierInput"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Stg_offre_diffus",
								"type": "DatasetReference"
							},
							"name": "stagingDiffus"
						},
						{
							"dataset": {
								"referenceName": "Stg_offre_chantier",
								"type": "DatasetReference"
							},
							"name": "stagingChantier"
						},
						{
							"dataset": {
								"referenceName": "stg_offre",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "canalDiffus"
						},
						{
							"name": "columnsChoiceDiffus"
						},
						{
							"name": "typeCast",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "canalChantier"
						},
						{
							"name": "columnsChoiceChantier"
						},
						{
							"name": "typeCastChantier"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "cleanProduit"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "endChantier"
						},
						{
							"name": "endDiffus"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						}
					],
					"script": "source(output(\n\t\t{DateDébutValidité} as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{DateFinValidité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\t{Date de création} as string,\n\t\tNomSignataire1 as string,\n\t\tNomSignataire2 as string,\n\t\tDateSignataire1 as string,\n\t\tDateSignataire2 as string,\n\t\t{DateDérogation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offreDiffusInput\nsource(output(\n\t\t{DateDébutValidité} as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{DateFinValidité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\t{Date de création} as string,\n\t\tNomSignataire1 as string,\n\t\tNomSignataire2 as string,\n\t\tDateSignataire1 as string,\n\t\tDateSignataire2 as string,\n\t\t{DateDérogation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offreChantierInput\nFilter1 derive(Canal = \"Diffus\",\n\t\told_ref = {Référence},\n\t\t{Référence} = iif(substring({Référence},1,2) == \"00\", substring({Référence},3,length({Référence})-2), {Référence})) ~> canalDiffus\ncanalDiffus select(mapColumn(\n\t\tDateOffre = {DateDébutValidité},\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoiceDiffus\ncolumnsChoiceDiffus derive({Quantité} = toDouble({Quantité}),\n\t\tDateOffre = toDate(split( split(DateOffre, \" \")[1] , '/')[1] +\"/\"+ iif(length(split( split(DateOffre, \" \")[1] , '/')[2])==2, split( split(DateOffre, \" \")[1] , '/')[2], \"0\"+split( split(DateOffre, \" \")[1] , '/')[2])+\"/\"+split( split(DateOffre, \" \")[1] , '/')[3], \"dd/mm/yyyy\")) ~> typeCast\nFilter2 derive(Canal = \"Chantier\",\n\t\t{Référence} = iif(substring({Référence},1,2) == \"00\", substring({Référence},3,length({Référence})-2), {Référence})) ~> canalChantier\ncanalChantier select(mapColumn(\n\t\tDateOffre = {DateDébutValidité},\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoiceChantier\ncolumnsChoiceChantier derive(DateOffre = toDate(split(DateOffre, \" \")[1],\"dd/mm/yyyy\"),\n\t\t{Quantité} = toDouble({Quantité})) ~> typeCastChantier\ntypeCastChantier derive(Produit = replace(Produit, '\"', \"\")) ~> DerivedColumn1\nDerivedColumn1 derive(Produit = replace(Produit, \"'\", \" \")) ~> cleanProduit\noffreDiffusInput filter(!isNull(Offre)) ~> Filter1\noffreChantierInput filter(!isNull(Offre)) ~> Filter2\noffreChantierInput filter(Offre==\"ZADX6708\") ~> Filter3\nFilter3 derive({Référence} = iif(substring({Référence},1,2) == \"00\", substring({Référence},3,length({Référence})-2), {Référence})) ~> DerivedColumn3\ncleanProduit select(mapColumn(\n\t\tDateOffre,\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endChantier\ntypeCast select(mapColumn(\n\t\tDateOffre,\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDiffus\nendDiffus, endChantier union(byName: true)~> Union1\ncanalChantier select(mapColumn(\n\t\t{DateDébutValidité},\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ncanalDiffus select(mapColumn(\n\t\t{DateDébutValidité},\n\t\t{Date Prev Cde},\n\t\t{Code projet},\n\t\tProjet,\n\t\tType,\n\t\t{CP projet},\n\t\t{Ville projet},\n\t\tNbLogement,\n\t\tMarque,\n\t\tFamille,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Prix de base},\n\t\t{Prix DO},\n\t\t{Prix pro},\n\t\t{Prix total},\n\t\t{Numéro interne 1},\n\t\tClient,\n\t\t{Ville client},\n\t\t{Type financement},\n\t\t{Numéro interne 2},\n\t\t{Négoce},\n\t\t{Ville négoce},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tGroupe,\n\t\tOffre,\n\t\t{Date de maj statut},\n\t\t{Numéro avant vente},\n\t\t{Créateur offre},\n\t\t{Commentaire interne},\n\t\t{Offre dérogée},\n\t\t{Contrat cadre},\n\t\t{Offre nationale},\n\t\t{Année Tarif},\n\t\tPotentielP1N,\n\t\tPotentielP2N,\n\t\tPotentielP3N,\n\t\tPotentielP4N,\n\t\tPotentielP5N,\n\t\tPotentielP6N,\n\t\t{DateFinValidité},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tCodeATC,\n\t\tDEEE,\n\t\tOffreSupprimee,\n\t\t{Date de création},\n\t\tNomSignataire1,\n\t\tNomSignataire2,\n\t\tDateSignataire1,\n\t\tDateSignataire2,\n\t\t{DateDérogation},\n\t\tCanal,\n\t\t{Référence} = old_ref\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['STG_OFFRE_DIFFUS.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> stagingDiffus\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['STG_OFFRE_CHANTIER.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> stagingChantier\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix client} as string,\n\t\t{Prix négoce} as string,\n\t\t{Prix total} as string,\n\t\tClient as string,\n\t\t{Type financement} as string,\n\t\t{Ville client} as string,\n\t\t{Numéro interne 1} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Typologie projet} as string,\n\t\tDateValidite as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['stg_offre.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ALL_OFFRE_DIFFUS')]",
				"[concat(variables('factoryId'), '/datasets/ALL_OFFRE_CHANTIER')]",
				"[concat(variables('factoryId'), '/datasets/Stg_offre_diffus')]",
				"[concat(variables('factoryId'), '/datasets/Stg_offre_chantier')]",
				"[concat(variables('factoryId'), '/datasets/stg_offre')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UNION_BASE_COMMERCIAL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputVenteDirect",
								"type": "DatasetReference"
							},
							"name": "venteDirecte"
						},
						{
							"dataset": {
								"referenceName": "dscModel",
								"type": "DatasetReference"
							},
							"name": "DSCModel"
						},
						{
							"dataset": {
								"referenceName": "ModelPartedisInput",
								"type": "DatasetReference"
							},
							"name": "PartedisModel"
						},
						{
							"dataset": {
								"referenceName": "OutpoutVanMarkes",
								"type": "DatasetReference"
							},
							"name": "VanMarkes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OunionBaseCommercial",
								"type": "DatasetReference"
							},
							"name": "OUnionBasecommercial"
						}
					],
					"transformations": [
						{
							"name": "oPartedis"
						},
						{
							"name": "endDSC"
						},
						{
							"name": "renameColumnsVenteDirecte"
						},
						{
							"name": "POSSAMidString"
						},
						{
							"name": "UnionDSCPartedis"
						},
						{
							"name": "UnionVenteDirecte"
						},
						{
							"name": "endVM"
						},
						{
							"name": "UnionVM"
						},
						{
							"name": "renameOrgCom"
						}
					],
					"script": "source(output(\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tcanal_final as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tPOSSAMidString as string,\n\t\treference as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\tyearmonth as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\t{Agence commerciale} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC performance} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> venteDirecte\nsource(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tNoOffre as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tCompanyId as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tid_canal_final as string,\n\t\t{Canal final} as string,\n\t\t{ATC Performance} as string,\n\t\t{code postal} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tqt_plateforme_final as string,\n\t\tca_plateforme_final as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSCModel\nsource(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PartedisModel\nsource(output(\n\t\treference as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tcanal as string,\n\t\tid_canal_final as string,\n\t\t{ATC Corrigé} as string,\n\t\tmarque_id as string,\n\t\tPOSSAMidString as string,\n\t\t{Donneur d ordre} as string,\n\t\t{Document de vente} as string,\n\t\tdata_origin as string,\n\t\tNoOffre as string,\n\t\tcanal_final as string,\n\t\t{Agence commerciale} as string,\n\t\tClient as string,\n\t\t{Code postal} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_name as string,\n\t\tdistributeur as string,\n\t\tMarque as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tMatricule as string,\n\t\tNomATC as string,\n\t\tATC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> VanMarkes\nPOSSAMidString select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final = {Canal distribution},\n\t\t{ATC Performance} = {ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> oPartedis\nDSCModel select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tno_offre = NoOffre,\n\t\tNoCli,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final = {Canal final},\n\t\t{ATC Performance},\n\t\t{Code postal} = {code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDSC\nventeDirecte select(mapColumn(\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tcanal_final,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tyearmonth,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\t{Agence commerciale corrigé} = {Agence commerciale},\n\t\t{ATC Corrigé},\n\t\t{ATC Performance} = {ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumnsVenteDirecte\nPartedisModel derive(POSSAMidString = coalesce(POSSAMidString , {Recept de march})) ~> POSSAMidString\nendDSC, oPartedis union(byName: true)~> UnionDSCPartedis\nUnionDSCPartedis, renameColumnsVenteDirecte union(byName: true)~> UnionVenteDirecte\nrenameOrgCom select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal_final = canal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\tdata_origin,\n\t\tno_offre = NoOffre,\n\t\tcanal_final,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\tATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endVM\nUnionVenteDirecte, endVM union(byName: true)~> UnionVM\nVanMarkes select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tcanal_final,\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal},\n\t\t{Téléphone 1},\n\t\t{Numéro de télécopie},\n\t\t{ commerciale} = {Org. commerciale},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameOrgCom\nUnionVM sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string,\n\t\tColumn_23 as string,\n\t\tColumn_24 as string,\n\t\tColumn_25 as string,\n\t\tColumn_26 as string,\n\t\tColumn_27 as string,\n\t\tColumn_28 as string,\n\t\tColumn_29 as string,\n\t\tColumn_30 as string,\n\t\tColumn_31 as string,\n\t\tColumn_32 as string,\n\t\tColumn_33 as string,\n\t\tColumn_34 as string,\n\t\tColumn_35 as string,\n\t\tColumn_36 as string,\n\t\tColumn_37 as string,\n\t\tColumn_38 as string,\n\t\tColumn_39 as string,\n\t\tColumn_40 as string,\n\t\tColumn_41 as string,\n\t\tColumn_42 as string,\n\t\tColumn_43 as string,\n\t\tColumn_44 as string,\n\t\tColumn_45 as string,\n\t\tColumn_46 as string,\n\t\tColumn_47 as string,\n\t\tColumn_48 as string,\n\t\tColumn_49 as string,\n\t\tColumn_50 as string,\n\t\tColumn_51 as string,\n\t\tColumn_52 as string,\n\t\tColumn_53 as string,\n\t\tColumn_54 as string,\n\t\tColumn_55 as string,\n\t\tColumn_56 as string,\n\t\tColumn_57 as string,\n\t\tColumn_58 as string,\n\t\tColumn_59 as string,\n\t\tColumn_60 as string,\n\t\tColumn_61 as string\n\t),\n\tpartitionFileNames:['OUnionBasecommercial.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OUnionBasecommercial"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputVenteDirect')]",
				"[concat(variables('factoryId'), '/datasets/dscModel')]",
				"[concat(variables('factoryId'), '/datasets/ModelPartedisInput')]",
				"[concat(variables('factoryId'), '/datasets/OutpoutVanMarkes')]",
				"[concat(variables('factoryId'), '/datasets/OunionBaseCommercial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UNION_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VFCONFORT_PREPARED",
								"type": "DatasetReference"
							},
							"name": "vfconfortPrepared"
						},
						{
							"dataset": {
								"referenceName": "MABILE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "mabillePrepared"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_PREPARED",
								"type": "DatasetReference"
							},
							"name": "orcabPrepared"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_PREPARED",
								"type": "DatasetReference"
							},
							"name": "tereva"
						},
						{
							"dataset": {
								"referenceName": "DSC_PREPARED",
								"type": "DatasetReference"
							},
							"name": "DSC"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_PREPARED",
								"type": "DatasetReference"
							},
							"name": "maillard"
						},
						{
							"dataset": {
								"referenceName": "PartedisEcoulement",
								"type": "DatasetReference"
							},
							"name": "Partedis"
						},
						{
							"dataset": {
								"referenceName": "EntreeEHS",
								"type": "DatasetReference"
							},
							"name": "EHS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "allUnionedDistributor",
								"type": "DatasetReference"
							},
							"name": "allDistruUnioned"
						}
					],
					"transformations": [
						{
							"name": "Union1"
						},
						{
							"name": "Union2"
						},
						{
							"name": "sTereva"
						},
						{
							"name": "sDSC"
						},
						{
							"name": "sMaillard"
						},
						{
							"name": "sOrcab"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Union4"
						},
						{
							"name": "Union5"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "distributeurOrcab"
						},
						{
							"name": "sPartedis"
						},
						{
							"name": "distributeurPartedis"
						},
						{
							"name": "unionPartedis"
						},
						{
							"name": "distributeurDSC"
						},
						{
							"name": "UnionEHS"
						},
						{
							"name": "sEHS"
						}
					],
					"script": "source(output(\n\t\t{Code postal} as string,\n\t\tmarque_file as string,\n\t\tarticle as string,\n\t\tca_ecoulement as string,\n\t\t{ReprÃ©sentant} as string,\n\t\tdepartement_id as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tUnitID as string,\n\t\tCounty as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> vfconfortPrepared\nsource(output(\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\tarticle as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tmonth as string,\n\t\tyear as string,\n\t\tHubSAPid as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubName as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> mabillePrepared\nsource(output(\n\t\tmarque_file as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tqte_ecoulement as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string,\n\t\tmarque_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> orcabPrepared\nsource(output(\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque_file as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tcanal as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tHubSAPid as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tmarque_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false) ~> tereva\nsource(output(\n\t\tmarque_file as string,\n\t\tsous_famille as string,\n\t\treference as string,\n\t\tagence_code as string,\n\t\tdepartement_id as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSC\nsource(output(\n\t\tdistributeur as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\t{Code postal} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string,\n\t\tmarque_id as string,\n\t\tmarque_file as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> maillard\nsource(output(\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\t{Code postal} as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tyear as string,\n\t\tmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Partedis\nsource(output(\n\t\tmarque_file as string,\n\t\t{Région} as string,\n\t\t{Nom Agence} as string,\n\t\tagence_code as string,\n\t\t{Département} as string,\n\t\t{Référence Article} as string,\n\t\t{Description Article} as string,\n\t\t{Catégorie Achat} as string,\n\t\tqte_ecoulement as string,\n\t\tstr_mois as string,\n\t\tyear as string,\n\t\t{Gestion entrepôt} as string,\n\t\t{Marques/ Constructeur} as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\t{CP Coop.} as string,\n\t\tHubSAPid as string,\n\t\t{Nom Coopérative} as string,\n\t\tPOSSAMidString as string,\n\t\tBrandID as string,\n\t\tDept as string,\n\t\t{Code postal} as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qté vente directe} as string,\n\t\treference as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EHS\nvfconfortPrepared, mabillePrepared union(byName: true)~> Union1\nUnion1, sOrcab union(byName: true)~> Union2\ntereva select(mapColumn(\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_file,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tHubSAPid,\n\t\tCounty,\n\t\tPOSSAMidString = POSSAMid,\n\t\tmarque_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sTereva\ndistributeurDSC select(mapColumn(\n\t\tmarque_file,\n\t\tsous_famille,\n\t\treference,\n\t\tagence_code,\n\t\tdepartement_id,\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tHubSAPid,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sDSC\nmaillard select(mapColumn(\n\t\tdistributeur,\n\t\treference,\n\t\tarticle,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code postal},\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString = POSSAMid,\n\t\tmarque_id,\n\t\tmarque_file\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sMaillard\ndistributeurOrcab select(mapColumn(\n\t\tmarque_file,\n\t\treference,\n\t\tarticle,\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString = POSSAMid,\n\t\tmarque_id,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sOrcab\nUnion2, sTereva union(byName: true)~> Union3\nUnion3, sDSC union(byName: true)~> Union4\nUnion4, sMaillard union(byName: true)~> Union5\nUnionEHS select(mapColumn(\n\t\t{Code postal},\n\t\tmarque_file,\n\t\tca_ecoulement,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\tagence_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\norcabPrepared derive(distributeur = \"orcab\") ~> distributeurOrcab\ndistributeurPartedis select(mapColumn(\n\t\tmarque_file,\n\t\tagence_code,\n\t\t{Code postal},\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tyear,\n\t\tmonth,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sPartedis\nPartedis derive(distributeur = \"partedis\") ~> distributeurPartedis\nUnion5, sPartedis union(byName: true)~> unionPartedis\nDSC derive(distributeur = \"DSC\") ~> distributeurDSC\nunionPartedis, sEHS union(byName: true)~> UnionEHS\nEHS select(mapColumn(\n\t\tmarque_file,\n\t\tagence_code,\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\t{Code postal},\n\t\tArticle,\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sEHS\ndropColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['allDistruUnioned.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> allDistruUnioned"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VFCONFORT_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/TEREVA_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/DSC_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/MAILLARD_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/PartedisEcoulement')]",
				"[concat(variables('factoryId'), '/datasets/EntreeEHS')]",
				"[concat(variables('factoryId'), '/datasets/allUnionedDistributor')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENTES_DIRECTES_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARATION",
								"type": "DatasetReference"
							},
							"name": "VENTESDIRECTESPREPARATION"
						}
					],
					"transformations": [
						{
							"name": "Cleansing"
						},
						{
							"name": "SumQuantity"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "Uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "rename"
						}
					],
					"script": "source(output(\n\t\t{ Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\t{ vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nrename derive({Code client} = replace( {Code client}, \" \", \"\"),\n\t\t{Qté facturée} = toDouble({Qté facturée}),\n\t\tyearmonth = replace(yearmonth, \" \", \"\"),\n\t\tArticle = replace(reference, \" \", \"\")) ~> Cleansing\nCleansing aggregate(groupBy(yearmonth,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> SumQuantity\nSumQuantity select(mapColumn(\n\t\tyearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\nAddcolumn select(mapColumn(\n\t\tyearmonth,\n\t\treference = Article,\n\t\t{Code client},\n\t\tqte_ecoulement = {Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Uniformisation\nRenameColumn derive(canal = '',\n\t\tDept = '') ~> Addcolumn\nventesDirectes select(mapColumn(\n\t\t{ commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Code client} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{ vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\nUniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['VENTES_DIRECTES_PREPARATION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VENTESDIRECTESPREPARATION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/facturationForVenteDirect')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VF_CONFORT_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VFINPUT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "CONFORT_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CONFORT_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "outputQuantityNull"
						},
						{
							"dataset": {
								"referenceName": "VFCONFORT_ECOULEMENT_PREPARED",
								"type": "DatasetReference"
							},
							"name": "VFCONFORTECOULPREPARED"
						},
						{
							"dataset": {
								"referenceName": "VFCONFORT_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "VFCONFORTORGANISATIONNOTFOUND"
						}
					],
					"transformations": [
						{
							"name": "yearmonth"
						},
						{
							"name": "yearAndMonth"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "rename"
						},
						{
							"name": "codePointVenteNotNull"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "posidNotNull"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "RenameVentesDirectes"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "enleverVentesDirectes"
						},
						{
							"name": "outerleftVentesDirectes"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "fullLeftUnion"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "posidNULL"
						}
					],
					"script": "source(output(\n\t\t{Représentant} as string,\n\t\t{N° Département} as string,\n\t\t{Département} as string,\n\t\t{Code point de vente} as string,\n\t\t{Libellé point de vente} as string,\n\t\t{Code Depot source} as string,\n\t\t{Code client} as string,\n\t\tClient as string,\n\t\t{N° Siret} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Année livraison} as string,\n\t\t{Mois livraison} as string,\n\t\t{code fournisseur} as string,\n\t\t{fournisseur principal} as string,\n\t\t{Code produit} as string,\n\t\tproduit as string,\n\t\t{Réference} as string,\n\t\t{Qte en unité de vente} as string,\n\t\t{Montant prv net} as string,\n\t\tpath as string,\n\t\t{Libellé Point de Vente} as string,\n\t\t{Code Depot Source} as string,\n\t\t{Code Client} as string,\n\t\t{N° SIRET} as string,\n\t\t{Code Postal} as string,\n\t\t{Numéro Fournisseur} as string,\n\t\t{Année Livraison} as string,\n\t\t{Mois Livraison} as string,\n\t\t{Code Fournisseur} as string,\n\t\t{Fournisseur Principal} as string,\n\t\t{Code Produit} as string,\n\t\tProduit as string,\n\t\t{Code Point de Vente} as string,\n\t\t{Qte en Unité de Vente} as string,\n\t\t{Montant PRV Net} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nrename derive(yearmonth = regexExtract(fileName , '(\\\\d+)'),\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonth\nyearmonth derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5 ,2)) ~> yearAndMonth\nyearAndMonth filter(isNull(qte_ecoulement)) ~> quantityNull\nyearAndMonth filter(!isNull(qte_ecoulement)) ~> quantityNotNull\necoulement derive({Représentant} = toString(byName('Représentant')),\n\t\t{N° Département} = toString(byName('N° Département')),\n\t\t{Département} = toString(byName('Département')),\n\t\t{Libellé point de vente} = toString(byName('Libellé point de vente')),\n\t\t{N° Siret} = toString(byName('N° Siret')),\n\t\t{Année livraison} = toString(byName('Année livraison')),\n\t\t{Réference} = toString(byName('Réference')),\n\t\t{Qte en unité de vente} = toString(byName('Qte en unité de vente'))) ~> MapDrifted1\nMapDrifted1 select(mapColumn(\n\t\t{Code point de vente} = ecoulement@{Code point de vente},\n\t\t{Code Depot source} = ecoulement@{Code Depot source},\n\t\t{Code client} = ecoulement@{Code client},\n\t\tClient,\n\t\t{Code postal} = ecoulement@{Code postal},\n\t\tVille,\n\t\t{Mois livraison} = ecoulement@{Mois livraison},\n\t\t{code fournisseur} = ecoulement@{code fournisseur},\n\t\t{fournisseur principal} = ecoulement@{fournisseur principal},\n\t\t{Code produit} = ecoulement@{Code produit},\n\t\tproduit = ecoulement@produit,\n\t\t{Montant prv net} = ecoulement@{Montant prv net},\n\t\t{Représentant},\n\t\t{N° Département},\n\t\t{Département},\n\t\t{Libellé point de vente} = MapDrifted1@{Libellé point de vente},\n\t\t{N° Siret} = MapDrifted1@{N° Siret},\n\t\t{Année livraison} = MapDrifted1@{Année livraison},\n\t\t{Réference},\n\t\tqte_ecoulement = MapDrifted1@{Qte en unité de vente},\n\t\tfileName = path\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\nquantityNotNull filter(!isNull({Code point de vente})) ~> codePointVenteNotNull\norganisation derive(POSid = trim(POSid, \" \"),\n\t\tHubSAPid = trim(HubSAPid, \" \")) ~> cleansing\ncleansing filter(!isNull(POSid)) ~> posidNotNull\nposidNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> uniqueOrganisation\ncodePointVenteNotNull, organisation join({Code point de vente} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\nventesDirectes select(mapColumn(\n\t\tyearmonth_right = yearmonth,\n\t\tArticle,\n\t\t{Code client_right} = {Code client},\n\t\t{Qté ventes directes} = {Qt� vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameVentesDirectes\ninnerOrganisation, RenameVentesDirectes join(yearmonth == yearmonth_right\n\t&& coalesce(toString(toInteger(replace({Réference}, \" \", \"\"))),replace({Réference}, \" \", \"\")) == coalesce(toString(toInteger(replace({Article}, \" \", \"\"))),replace({Article}, \" \", \"\"))\n\t&& POSSAMid == {Code client_right},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerOrganisation, RenameVentesDirectes join(yearmonth == yearmonth_right\n\t&& coalesce(toString(toInteger(replace({Réference}, \" \", \"\"))),replace({Réference}, \" \", \"\")) == coalesce(toString(toInteger(replace({Article}, \" \", \"\"))),replace({Article}, \" \", \"\"))\n\t&& POSSAMid == {Code client_right},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\ninnerVentesDirectes derive(qte_ecoulement = qte_ecoulement-toDouble({Qté ventes directes})) ~> enleverVentesDirectes\nleftVentesDirectes filter(isNull(yearmonth) || isNull(Article) || isNull({Code client_right})) ~> outerleftVentesDirectes\nAddcolumn select(mapColumn(\n\t\t{Code postal},\n\t\tmarque_file = {fournisseur principal},\n\t\tarticle = produit,\n\t\tca_ecoulement = {Montant prv net},\n\t\t{Représentant},\n\t\tdepartement_id = {N° Département},\n\t\treference = {Réference},\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tUnitID,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubSAPid,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nenleverVentesDirectes, outerleftVentesDirectes union(byName: true)~> fullLeftUnion\nfullLeftUnion derive(canal = '',\n\t\tdistributeur = \"vf_confort\") ~> Addcolumn\ncodePointVenteNotNull, organisation join({Code point de vente} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull(POSid)) ~> posidNULL\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['VFCONFORT_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputQuantityNull\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['VFCONFORT_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VFCONFORTECOULPREPARED\nposidNULL sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['VFCONFORT_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> VFCONFORTORGANISATIONNOTFOUND"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VFINPUT')]",
				"[concat(variables('factoryId'), '/datasets/CONFORT_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/CONFORT_QTE_NULL')]",
				"[concat(variables('factoryId'), '/datasets/VFCONFORT_ECOULEMENT_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/VFCONFORT_ORGANISATION_NOTFOUND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanMarkes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EVanMarkes1",
								"type": "DatasetReference"
							},
							"name": "organisaation"
						},
						{
							"dataset": {
								"referenceName": "AvoirForVanMarkesInput",
								"type": "DatasetReference"
							},
							"name": "Avoir"
						},
						{
							"dataset": {
								"referenceName": "In_FacturationVM",
								"type": "DatasetReference"
							},
							"name": "Facturation"
						},
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "ExtarctionSAP"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "REFATC"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "Offre"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "articleInput"
						},
						{
							"dataset": {
								"referenceName": "inepsv2",
								"type": "DatasetReference"
							},
							"name": "inputEPS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkVanMarkes",
								"type": "DatasetReference"
							},
							"name": "SinkVanMarkes"
						}
					],
					"transformations": [
						{
							"name": "selectAvoir"
						},
						{
							"name": "InnerfacturationOrganisation"
						},
						{
							"name": "FilterQte"
						},
						{
							"name": "typeCast"
						},
						{
							"name": "mapCanalID"
						},
						{
							"name": "efacturation"
						},
						{
							"name": "inner"
						},
						{
							"name": "month"
						},
						{
							"name": "fullLeft"
						},
						{
							"name": "fullRight"
						},
						{
							"name": "dropColumns"
						},
						{
							"name": "left"
						},
						{
							"name": "dataOriginAvoir"
						},
						{
							"name": "dropColumnsInCommon"
						},
						{
							"name": "right"
						},
						{
							"name": "renameColumns"
						},
						{
							"name": "dataOriginFacturation"
						},
						{
							"name": "renameColumns1"
						},
						{
							"name": "getUnique"
						},
						{
							"name": "endInner"
						},
						{
							"name": "dataOriginFacturationAvoir"
						},
						{
							"name": "endRight"
						},
						{
							"name": "endLeft"
						},
						{
							"name": "unionFacturation"
						},
						{
							"name": "unionAvoir"
						},
						{
							"name": "endDerementaiton"
						},
						{
							"name": "typeCastCanal"
						},
						{
							"name": "Agregat"
						},
						{
							"name": "SelectcolonneATC"
						},
						{
							"name": "SelectColonneOffre"
						},
						{
							"name": "AgregatOffreCanalATC"
						},
						{
							"name": "SelectOffre"
						},
						{
							"name": "canalfinal"
						},
						{
							"name": "SelectSAP"
						},
						{
							"name": "JoinSAP"
						},
						{
							"name": "marqueNamee"
						},
						{
							"name": "SelectCol"
						},
						{
							"name": "JoinATC"
						},
						{
							"name": "addDataorigin"
						},
						{
							"name": "RenameATC"
						},
						{
							"name": "JoinOffre"
						},
						{
							"name": "renameNoOffre"
						},
						{
							"name": "distributeur"
						},
						{
							"name": "filtreCompany"
						},
						{
							"name": "setHubsID"
						},
						{
							"name": "Select1"
						},
						{
							"name": "endArticle"
						},
						{
							"name": "Join1",
							"description": "Inner join on 'dropColumnsInCommon' and 'endArticle'\n\nto get the marque id"
						},
						{
							"name": "endEPS"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Join3"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tF5 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisaation\nsource(output(\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Avoir\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{ vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tProp_0 as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tdate_id as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Facturation\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtarctionSAP\nsource(output(\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tMatricule as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tDR as string,\n\t\t{Code postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> REFATC\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tProduit as string,\n\t\t{Créateur offre} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Offre\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleInput\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputEPS\nAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\treference = NoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectAvoir\nFacturation, organisaation join({Récept. de march.} == organisaation@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerfacturationOrganisation\nsetHubsID filter(toDouble(Qte_Validee_VGF)>0) ~> FilterQte\nFilterQte derive(Mois = toInteger(Mois),\n\t\t{Année} = toInteger({Année}),\n\t\tcanal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\",     iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\")),\n\t\tyearmonth = iif(toInteger(Mois)<10, {Année}+\"0\"+Mois  ,   {Année}+\"0\"+Mois  )) ~> typeCast\ndropColumns derive(id_canal_final = iif(canal==\"FP\", 45,     iif(canal==\"FS\", 51,     iif(canal==\"FC\", 43, 42))),\n\t\ttOrigin = \"avoir\") ~> mapCanalID\nmonth select(mapColumn(\n\t\tmarque_id = {Org. commerciale},\n\t\t{Canal distribution},\n\t\tPoste,\n\t\t{ATC Corrigé},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString = {Récept. de march.},\n\t\treference = Article,\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid = organisaation@HubSAPid,\n\t\ttOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> efacturation\nmapCanalID, efacturation join(dropColumns@HubSAPid == efacturation@HubSAPid\n\t&& {Année} == toInteger(year)\n\t&& Mois == toInteger(month)\n\t&& coalesce(toString(toInteger(replace(dropColumns@reference, \" \", \"\"))),replace(dropColumns@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(efacturation@reference, \" \", \"\"))),replace(efacturation@reference, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inner\nInnerfacturationOrganisation derive(month = right(yearmonth, 2),\n\t\ttOrigin = \"facturation\") ~> month\nmapCanalID, efacturation join({Année} == toInteger(year)\n\t&& Mois == toInteger(month)\n\t&& dropColumns@HubSAPid == efacturation@HubSAPid\n\t&& coalesce(toString(toInteger(replace(dropColumns@reference, \" \", \"\"))),replace(dropColumns@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(efacturation@reference, \" \", \"\"))),replace(efacturation@reference, \" \", \"\")),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nmapCanalID, efacturation join(dropColumns@HubSAPid == efacturation@HubSAPid\n\t&& coalesce(toString(toInteger(replace(dropColumns@reference, \" \", \"\"))),replace(dropColumns@reference, \" \", \"\")) == coalesce(toString(toInteger(replace(efacturation@reference, \" \", \"\"))),replace(efacturation@reference, \" \", \"\"))\n\t&& Mois == toInteger(month)\n\t&& {Année} == toInteger(year),\n\tjoinType:'right',\n\tbroadcast: 'auto')~> fullRight\ntypeCast select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\treference,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tcanal,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumns\nfullLeft filter(isNull(efacturation@tOrigin)) ~> left\nleft derive(data_origin = \"avoir\",\n\t\tid_canal_final = toString(id_canal_final)) ~> dataOriginAvoir\ndataOriginAvoir select(mapColumn(\n\t\tNoOffre,\n\t\treference = dropColumns@reference,\n\t\tqt_final = Qte_Validee_VGF,\n\t\tPOSSAMidString = NoCli,\n\t\tca_final = PA_Valide_VGF,\n\t\tHubSAPid = dropColumns@HubSAPid,\n\t\tyearmonth = dropColumns@yearmonth,\n\t\tcanal,\n\t\tid_canal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dropColumnsInCommon\nfullRight filter(isNull(mapCanalID@tOrigin)) ~> right\nright select(mapColumn(\n\t\tmarque_id,\n\t\tid_canal_final = {Canal distribution},\n\t\t{ATC Corrigé},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\treference = efacturation@reference,\n\t\tyearmonth = efacturation@yearmonth,\n\t\tHubSAPid = efacturation@HubSAPid,\n\t\tqt_final = {Qté facturée},\n\t\tca_final = {CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns\nrenameColumns derive(data_origin = \"facturation\") ~> dataOriginFacturation\ninner select(mapColumn(\n\t\tNoOffre,\n\t\treference = dropColumns@reference,\n\t\tqt_final = Qte_Validee_VGF,\n\t\tca_final = PA_Valide_VGF,\n\t\tHubSAPid = dropColumns@HubSAPid,\n\t\tyearmonth = dropColumns@yearmonth,\n\t\tcanal,\n\t\tid_canal_final,\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\tPoste,\n\t\t{ATC Corrigé},\n\t\t{Donneur d ordre} = {Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\tNoCli\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumns1\nrenameColumns1 aggregate(groupBy(reference,\n\t\tyearmonth,\n\t\tHubSAPid),\n\tca_final = first(ca_final),\n\t\tNoOffre = max(NoOffre),\n\t\tqt_final = max(qt_final),\n\t\tcanal = max(canal),\n\t\tid_canal_final = max(id_canal_final),\n\t\t{ATC Corrigé} = max({ATC Corrigé}),\n\t\tmarque_id = max(marque_id),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\t{Donneur d ordre} = max({Donneur d ordre}),\n\t\tNoCli = max(NoCli)) ~> getUnique\ndataOriginFacturationAvoir select(mapColumn(\n\t\treference,\n\t\tNoOffre,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString = NoCli,\n\t\t{Donneur d ordre},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endInner\ngetUnique derive(data_origin = \"facturation avoir\") ~> dataOriginFacturationAvoir\ndataOriginFacturation select(mapColumn(\n\t\tmarque_id,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\t{Document de vente},\n\t\t{Donneur d ordre} = {Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endRight\nJoin2 select(mapColumn(\n\t\tNoOffre,\n\t\treference,\n\t\tmarque_id,\n\t\tqt_final,\n\t\tPOSSAMidString,\n\t\tca_final,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tcanal,\n\t\tid_canal_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endLeft\ntypeCastCanal, endRight union(byName: true)~> unionFacturation\nunionFacturation, endLeft union(byName: true)~> unionAvoir\ndistributeur select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDerementaiton\nendInner derive(id_canal_final = toString(id_canal_final)) ~> typeCastCanal\nSelect1 aggregate(groupBy({Canal final},\n\t\tMarque,\n\t\tcode_postal_atc),\n\tMatricule = max(Matricule),\n\t\tNomATC = max(NomATC),\n\t\tATC = max(ATC)) ~> Agregat\nAgregat select(mapColumn(\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectcolonneATC\nOffre select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tATC = CodeATC,\n\t\tCanal,\n\t\tProduit,\n\t\t{Créateur offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColonneOffre\nSelectColonneOffre aggregate(groupBy(Offre,\n\t\tCanal,\n\t\tATC),\n\tDateOffre = first(DateOffre)) ~> AgregatOffreCanalATC\nAgregatOffreCanalATC select(mapColumn(\n\t\tOffre,\n\t\tcanal = Canal,\n\t\t{ATC performance} = ATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOffre\nendDerementaiton derive(canal_final = iif(id_canal_final==\"43\", \"Chantier\",  \"Diffus\")) ~> canalfinal\nExtarctionSAP select(mapColumn(\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal},\n\t\t{Téléphone 1},\n\t\t{Numéro de télécopie},\n\t\t{Org. commerciale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSAP\ncanalfinal, SelectSAP join(toInteger(POSSAMidString) == toInteger(Client)\n\t&& toInteger(marque_id) == toInteger({Org. commerciale}),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSAP\nDerivedColumn1 derive(marque_name = iif(marque_id==\"1604\", 'SaunierDuval', 'Vaillant'),\n\t\tdistributeur = \"van markes\") ~> marqueNamee\nmarqueNamee select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tcanal_final,\n\t\t{Agence commerciale},\n\t\tClient = SelectSAP@Client,\n\t\t{Téléphone 1},\n\t\t{Numéro de télécopie},\n\t\t{Org. commerciale},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCol\nSelectCol, SelectcolonneATC join(canal_final == {Canal final}\n\t&& {Code postal} == code_postal_atc\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinATC\nJoin1 derive(data_origin = \"avoir\") ~> addDataorigin\nJoinATC select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tcanal_final,\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal},\n\t\t{Org. commerciale},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameATC\nRenameATC, SelectOffre join(NoOffre == Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOffre\nJoinOffre select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\tdata_origin,\n\t\tno_offre = NoOffre,\n\t\tcanal_final,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\tMarque,\n\t\t{Canal final},\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC,\n\t\tOffre,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameNoOffre\nunionAvoir derive(distributeur = \"Van Markes\") ~> distributeur\nselectAvoir filter(CompanyId==\"11\") ~> filtreCompany\nfiltreCompany derive(HubSAPid = \"16004028\") ~> setHubsID\nREFATC select(mapColumn(\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tATC,\n\t\tNomATC,\n\t\t{Plan primes},\n\t\tMatricule,\n\t\t{Canal final},\n\t\ttoreplicate,\n\t\tdd,\n\t\tcode_postal_atc = {Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\narticleInput select(mapColumn(\n\t\tmarque_id = OrgCm,\n\t\tarticle = Article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endArticle\ndropColumnsInCommon, endArticle join(coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(article, \" \", \"\"))),replace(article, \" \", \"\")),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\ninputEPS select(mapColumn(\n\t\tclient = {Numéro du compte},\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endEPS\naddDataorigin, endEPS join(POSSAMidString == client,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoinSAP, endEPS join(toInteger(POSSAMidString) == toInteger(endEPS@client),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive({Code postal} = coalesce(SelectSAP@{Code postal},endEPS@{Code postal})) ~> DerivedColumn1\nrenameNoOffre sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SinkVanMarkes'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SinkVanMarkes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EVanMarkes1')]",
				"[concat(variables('factoryId'), '/datasets/AvoirForVanMarkesInput')]",
				"[concat(variables('factoryId'), '/datasets/In_FacturationVM')]",
				"[concat(variables('factoryId'), '/datasets/extractionSap')]",
				"[concat(variables('factoryId'), '/datasets/ref_atc')]",
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/article_hierarchi')]",
				"[concat(variables('factoryId'), '/datasets/inepsv2')]",
				"[concat(variables('factoryId'), '/datasets/SinkVanMarkes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ventes derogees')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "FacturationForOther",
								"type": "DatasetReference"
							},
							"name": "FacturationForOther"
						},
						{
							"dataset": {
								"referenceName": "associationoffre",
								"type": "DatasetReference"
							},
							"name": "ArticulationSap"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "PrixPeriode"
						},
						{
							"dataset": {
								"referenceName": "ecouPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "ecoulmnt"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outVenteDeroge",
								"type": "DatasetReference"
							},
							"name": "endSinkOutput"
						},
						{
							"dataset": {
								"referenceName": "tempFacturactionSM",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "factorationAVM43",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "factorationAVM43",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "outVenteDeroge",
								"type": "DatasetReference"
							},
							"name": "sink4"
						},
						{
							"dataset": {
								"referenceName": "TestFacturation43",
								"type": "DatasetReference"
							},
							"name": "sinkFact43"
						},
						{
							"dataset": {
								"referenceName": "TestAfterArticulationOffreJoin",
								"type": "DatasetReference"
							},
							"name": "sinkAfterArticulatioOffreJoin"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "columnChoicePrix"
						},
						{
							"name": "join3"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "torolltoList"
						},
						{
							"name": "derivedColumn4"
						},
						{
							"name": "createIndexPartedis"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "select1"
						},
						{
							"name": "select0"
						},
						{
							"name": "select3"
						},
						{
							"name": "Filtre43"
						},
						{
							"name": "join5"
						},
						{
							"name": "endArticulation"
						},
						{
							"name": "endOffre"
						},
						{
							"name": "derivedColumn8"
						},
						{
							"name": "Filtre5145"
						},
						{
							"name": "endEcoulement"
						},
						{
							"name": "split2"
						},
						{
							"name": "REcoulement43"
						},
						{
							"name": "select5"
						},
						{
							"name": "join7"
						},
						{
							"name": "select6"
						},
						{
							"name": "split3"
						},
						{
							"name": "REcoulement5145"
						},
						{
							"name": "filter3"
						},
						{
							"name": "filter4"
						},
						{
							"name": "torolltoList2"
						},
						{
							"name": "derivedColumn9"
						},
						{
							"name": "window1"
						},
						{
							"name": "ResteEcoulement"
						},
						{
							"name": "derivedColumn10"
						},
						{
							"name": "ddToList"
						},
						{
							"name": "window2"
						},
						{
							"name": "select7"
						},
						{
							"name": "derivedColumn11"
						},
						{
							"name": "caEcoulement"
						},
						{
							"name": "join8"
						},
						{
							"name": "select8"
						},
						{
							"name": "select9"
						},
						{
							"name": "split4"
						},
						{
							"name": "adddataOriginAvecMatchin"
						},
						{
							"name": "adddataOriginEccSansMatching"
						},
						{
							"name": "addDataOringFacturation"
						},
						{
							"name": "addDataOriginAvecMathcin4551"
						},
						{
							"name": "addDataOriginFSM"
						},
						{
							"name": "addDataOriginFM"
						},
						{
							"name": "derivedColumn14"
						},
						{
							"name": "clearColumnsAvecMatchig42"
						},
						{
							"name": "clearFacturationSansM"
						},
						{
							"name": "clearEcoulementSansMatch"
						},
						{
							"name": "clearColFacturationSM43"
						},
						{
							"name": "clearColAVM43"
						},
						{
							"name": "clearColumnAVM5145"
						},
						{
							"name": "clearColFSM4551"
						},
						{
							"name": "union1"
						},
						{
							"name": "unionFSM435145"
						},
						{
							"name": "union2"
						},
						{
							"name": "endFactSansMatching",
							"description": "search 1 col"
						},
						{
							"name": "union3"
						},
						{
							"name": "endAVM434551"
						},
						{
							"name": "union4"
						},
						{
							"name": "endFactAVM"
						},
						{
							"name": "derivedColumn15"
						},
						{
							"name": "endEcoulementSansMatcing"
						},
						{
							"name": "union5"
						},
						{
							"name": "select10"
						},
						{
							"name": "derivedColumn16"
						},
						{
							"name": "union6"
						},
						{
							"name": "endOffreATC"
						},
						{
							"name": "join9"
						},
						{
							"name": "derivedColumn17"
						},
						{
							"name": "derivedColumn18"
						},
						{
							"name": "select11"
						},
						{
							"name": "select12"
						},
						{
							"name": "ecoulementReste"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "derivedColumn19"
						},
						{
							"name": "derivedColumn20"
						},
						{
							"name": "select13"
						},
						{
							"name": "aggregate2"
						},
						{
							"name": "aggregate3"
						},
						{
							"name": "aggregate4"
						},
						{
							"name": "aggregate5"
						},
						{
							"name": "aggregate6"
						},
						{
							"name": "derivedColumn21"
						},
						{
							"name": "derivedColumn22"
						},
						{
							"name": "derivedColumn23"
						},
						{
							"name": "aggregate8"
						},
						{
							"name": "derivedColumn24"
						},
						{
							"name": "endATC"
						},
						{
							"name": "join10"
						},
						{
							"name": "select14"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "unionDecrementation"
						},
						{
							"name": "filter6"
						},
						{
							"name": "ftest"
						},
						{
							"name": "filter7"
						},
						{
							"name": "aggregate9"
						},
						{
							"name": "aggregate10"
						},
						{
							"name": "aggregate11"
						},
						{
							"name": "aggregate12"
						},
						{
							"name": "aggregate13"
						},
						{
							"name": "aggregate14"
						},
						{
							"name": "aggregate15"
						},
						{
							"name": "aggregate16"
						},
						{
							"name": "aggregate17"
						},
						{
							"name": "aggregate18"
						},
						{
							"name": "aggregate19"
						},
						{
							"name": "aggregate20"
						},
						{
							"name": "aggregate21"
						},
						{
							"name": "aggregate22"
						},
						{
							"name": "aggregate23"
						},
						{
							"name": "aggregate24"
						}
					],
					"scriptLines": [
						"source(output(",
						"          { Org commerciale} as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activité} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {1ereDateLivrDdee} as string,",
						"          {Agence commerciale corrigé} as string,",
						"          {ATC Corrigé} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Année civile} as string,",
						"          {Motif commande} as string,",
						"          {Qté cdée} as string,",
						"          {CA cdé} as string,",
						"          {Qté livrée} as string,",
						"          {CA livré} as string,",
						"          {Qté facturée} as string,",
						"          {CA facturé} as string,",
						"          {Cout standard cdé} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livré} as string,",
						"          {Cout standard facturé} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_livr_e as string,",
						"          ca_livr_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          year_month as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          HubSAPid as string,",
						"          toreplicate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> FacturationForOther",
						"source(output(",
						"          Commande as string,",
						"          {Référence Offre BA} as string,",
						"          {Qté Cdée} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ArticulationSap",
						"source(output(",
						"          DateOffre as string,",
						"          {Date Prev Cde} as string,",
						"          {Code projet} as string,",
						"          Projet as string,",
						"          Type as string,",
						"          {CP projet} as string,",
						"          {Ville projet} as string,",
						"          NbLogement as string,",
						"          {Référence} as string,",
						"          Marque as string,",
						"          Famille as string,",
						"          Produit as string,",
						"          {Quantité} as string,",
						"          {Prix de base} as string,",
						"          {Prix DO} as string,",
						"          {Prix pro} as string,",
						"          {Prix total} as string,",
						"          {Numéro interne 1} as string,",
						"          Client as string,",
						"          {Ville client} as string,",
						"          {Type financement} as string,",
						"          {Numéro interne 2} as string,",
						"          {Négoce} as string,",
						"          {Ville négoce} as string,",
						"          {Statut offre} as string,",
						"          Responsable as string,",
						"          Groupe as string,",
						"          Offre as string,",
						"          {Date de maj statut} as string,",
						"          {Numéro avant vente} as string,",
						"          {Créateur offre} as string,",
						"          {Commentaire interne} as string,",
						"          {Offre dérogée} as string,",
						"          {Contrat cadre} as string,",
						"          {Offre nationale} as string,",
						"          {Année Tarif} as string,",
						"          PotentielP1N as string,",
						"          PotentielP2N as string,",
						"          PotentielP3N as string,",
						"          PotentielP4N as string,",
						"          PotentielP5N as string,",
						"          PotentielP6N as string,",
						"          {DateFinValidité} as string,",
						"          CODE_CMI as string,",
						"          NOM_CMI as string,",
						"          CodeATC as string,",
						"          DEEE as string,",
						"          OffreSupprimee as string,",
						"          {Date de création} as string,",
						"          NomSignataire1 as string,",
						"          NomSignataire2 as string,",
						"          DateSignataire1 as string,",
						"          DateSignataire2 as string,",
						"          {DateDérogation} as string,",
						"          Canal as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> stgOffre",
						"source(output(",
						"          Article as string,",
						"          Distributeur as string,",
						"          prix_unitaire as string,",
						"          {Durée_période} as string,",
						"          {Période} as string,",
						"          {Mois début} as string,",
						"          {Mois fin} as string,",
						"          mois1 as string,",
						"          annee1 as string,",
						"          mois2 as string,",
						"          annee2 as string,",
						"          dd as string,",
						"          month as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PrixPeriode",
						"source(output(",
						"          yearmonth as string,",
						"          year as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          ca_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          reference as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          toreplicate as string,",
						"          dd as string,",
						"          {Période} as string,",
						"          ref2 as string,",
						"          indexcols2 as string,",
						"          qte_ecc as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ecoulmnt",
						"source(output(",
						"          Marque as string,",
						"          {Code Postal début} as string,",
						"          {Code Postal fin} as string,",
						"          Utilisateur as string,",
						"          Fonction as string,",
						"          {Département} as string,",
						"          ATC as string,",
						"          NomATC as string,",
						"          {Plan primes} as string,",
						"          Matricule as string,",
						"          {Canal final} as string,",
						"          toreplicate as string,",
						"          dd as string,",
						"          DR as string,",
						"          {Code postal} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> refAtc",
						"derivedColumn8, endArticulation join({Document de vente} == Commande,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> join1",
						"derivedColumn19, endOffre join({Référence Offre BA} == Offre",
						"     && canal_final == Canal,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> join2",
						"PrixPeriode derive({Période} = iif(length({Période})>1,{Période},\"0\"+{Période})) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          Article,",
						"          Distributeur,",
						"          {Période},",
						"          annee2,",
						"          month",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> columnChoicePrix",
						"derivedColumn2, columnChoicePrix join(replace(lower(tempDist), \" \", \"\") == replace(lower(Distributeur), \" \", \"\")",
						"     && toInteger(year) == toInteger(annee2)",
						"     && toInteger({Mois calendrier}) == toInteger(month)",
						"     && coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\")) == coalesce(toString(toInteger(replace(Article, \" \", \"\"))),replace(Article, \" \", \"\")),",
						"     joinType:'left',",
						"     broadcast: 'auto')~> join3",
						"select3 derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index),",
						"          tempDist = iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis',\r",
						"  iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva', \r",
						"   iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc', \r",
						"    iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', \r",
						"     iif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',\r",
						"lower(WholeSalerID))))))) ~> derivedColumn2",
						"join3 derive({Période} = coalesce( {Période}, \"00\" )) ~> derivedColumn3",
						"filter3 foldDown(unroll(toroll, toroll),",
						"     mapColumn(",
						"          {Org commerciale} = { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin}",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> torolltoList",
						"torolltoList derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn4",
						"derivedColumn4 window(over(year,",
						"          {Période},",
						"          POSSAMidString,",
						"          ref2),",
						"     asc(yearmonth, true),",
						"     asc(POSSAMidString, true),",
						"     asc(ref2, true),",
						"     indexcols2 = rowNumber()) ~> createIndexPartedis",
						"createIndexPartedis derive(indexcols2 = year+\"-\"+{Période}+\"-\"+POSSAMidString+\"-\"+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+\"-\"+toString(indexcols2),",
						"          {Qté facturée} = iif(toDouble({Qté facturée})<=0, -1, 1)) ~> derivedColumn5",
						"stgOffre select(mapColumn(",
						"          Offre,",
						"          Canal,",
						"          {Numéro interne 2}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"ecoulmnt select(mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          ca_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPidEcoul = HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          dd,",
						"          indexcols2,",
						"          qte_ecc",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select0",
						"join2 select(mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {1ereDateLivrDdee},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          ca_livr_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          toreplicate,",
						"          Commande,",
						"          {Référence Offre BA},",
						"          Offre,",
						"          POSSAMidString = {Numéro interne 2},",
						"          {Facturation origin},",
						"          {Articulation Origin},",
						"          {Offre origin}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: false) ~> select3",
						"derivedColumn5 filter({Canal distribution}==\"43\") ~> Filtre43",
						"Filtre43, endEcoulement join(derivedColumn5@indexcols2 == select0@indexcols2,",
						"     joinType:'outer',",
						"     broadcast: 'auto')~> join5",
						"ArticulationSap derive({Articulation Origin} = \"Articulation Origin\") ~> endArticulation",
						"aggregate9 derive({Offre origin} = \"Offre origin\") ~> endOffre",
						"FacturationForOther derive({Facturation origin} = \"Facturation origin\") ~> derivedColumn8",
						"derivedColumn5 filter({Canal distribution}==\"51\" ||  {Canal distribution}==\"45\") ~> Filtre5145",
						"select0 derive({Ecoulement origin} = \"Ecoulement origin\") ~> endEcoulement",
						"select5 split(!isNull({Ecoulement origin}) && !isNull({Facturation origin}),",
						"     isNull({Facturation origin}),",
						"     disjoint: false) ~> split2@(avecMatching43, rigthEcoulement43, residu43)",
						"split2@rigthEcoulement43 select(mapColumn(",
						"          yearmonth = yearmonthEcoul,",
						"          year = yearEcoul,",
						"          month,",
						"          qte_ecoulement = ca_ecoulement,",
						"          POSSAMidStringEcoul,",
						"          HubSAPid,",
						"          reference = referenceEcoul,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate = toreplicateEcoul,",
						"          dd,",
						"          indexcols2Ecoul,",
						"          qte_ecc,",
						"          {Ecoulement origin},",
						"          ca_ecoulement",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: true) ~> REcoulement43",
						"join5 select(mapColumn(",
						"          {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          yearFact = torolltoList@year,",
						"          yearmonthFact = torolltoList@yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          referenceFact = torolltoList@reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid_Fact = HubSAPid,",
						"          POSSAMidStringFact = torolltoList@POSSAMidString,",
						"          toreplicateFact = torolltoList@toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2,",
						"          indexcols2Fact = derivedColumn5@indexcols2,",
						"          yearmonthEcoul = select0@yearmonth,",
						"          yearEcoul = select0@year,",
						"          month,",
						"          qte_ecoulement,",
						"          ca_ecoulement,",
						"          POSSAMidStringEcoul = select0@POSSAMidString,",
						"          HubSAPid = HubSAPidEcoul,",
						"          referenceEcoul = select0@reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicateEcoul = select0@toreplicate,",
						"          dd,",
						"          indexcols2Ecoul = select0@indexcols2,",
						"          qte_ecc,",
						"          {Ecoulement origin}",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: true) ~> select5",
						"Filtre5145, REcoulement43 join(indexcols2 == indexcols2Ecoul,",
						"     joinType:'outer',",
						"     broadcast: 'auto')~> join7",
						"join7 select(mapColumn(",
						"          {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          yearFact = torolltoList@year,",
						"          yearmonthFact = torolltoList@yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          referenceFact = torolltoList@reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPidFact = torolltoList@HubSAPid,",
						"          POSSAMidString,",
						"          toreplicateFact = torolltoList@toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2,",
						"          indexcols2,",
						"          yearmonthEcoul = REcoulement43@yearmonth,",
						"          yearEcoul = REcoulement43@year,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidStringEcoul,",
						"          HubSAPidEcoul = REcoulement43@HubSAPid,",
						"          referenceEcoul = REcoulement43@reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicateEcoul = REcoulement43@toreplicate,",
						"          dd,",
						"          indexcols2Ecoul,",
						"          qte_ecc,",
						"          {Ecoulement origin},",
						"          ca_ecoulement",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: true) ~> select6",
						"select6 split(!isNull({Ecoulement origin}) && !isNull({Facturation origin}),",
						"     isNull({Facturation origin}),",
						"     disjoint: false) ~> split3@(avecMatching5145, rigthEcoulement5154, residu5145)",
						"split3@rigthEcoulement5154 select(mapColumn(",
						"          yearmonth = yearmonthEcoul,",
						"          year = yearEcoul,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString = POSSAMidStringEcoul,",
						"          HubSAPid = HubSAPidEcoul,",
						"          reference = referenceEcoul,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate = toreplicateEcoul,",
						"          dd,",
						"          indexcols2 = indexcols2Ecoul,",
						"          qte_ecc,",
						"          {Ecoulement origin},",
						"          ca_ecoulement",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> REcoulement5145",
						"derivedColumn3 filter(({Canal distribution} !=\"42\" ) &&  (!isNull({POSSAMidString}) && !isNull({Articulation Origin}) && !isNull({Offre origin}))) ~> filter3",
						"derivedColumn3 filter({Canal distribution} ==\"42\" || (isNull({POSSAMidString}) || isNull({Articulation Origin}) || isNull({Offre origin}))) ~> filter4",
						"filter4 foldDown(unroll(toroll, toroll),",
						"     mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          { Org comqtmerciale} = qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin}",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> torolltoList2",
						"torolltoList2 derive(ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn9",
						"derivedColumn9 window(over(year,",
						"          {Période},",
						"          HubSAPid,",
						"          ref2),",
						"     asc(yearmonth, true),",
						"     asc(HubSAPid, true),",
						"     asc(reference, true),",
						"     indexcol2 = rowNumber()) ~> window1",
						"derivedColumn17 aggregate(groupBy(yearmonth,",
						"          year,",
						"          month,",
						"          periode,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          dd,",
						"          {Ecoulement origin}),",
						"     qte_ecc = sum(toFloat(qte_ecc)),",
						"          ca_ecoulement = min(toFloat(ca_ecoulement))) ~> ResteEcoulement",
						"ResteEcoulement derive(dd = mapLoop(abs(toInteger(qte_ecc)), #index),",
						"          ref2 = coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))) ~> derivedColumn10",
						"derivedColumn10 foldDown(unroll(dd, dd),",
						"     mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          periode,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          dd,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          ref2",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> ddToList",
						"ddToList window(over(year,",
						"          periode,",
						"          HubSAPid,",
						"          ref2),",
						"     asc(year, true),",
						"     asc(HubSAPid, true),",
						"     asc(ref2, true),",
						"     indexcol2 = rowNumber()) ~> window2",
						"window2 select(mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          indexcol2,",
						"          ca_ecoulement,",
						"          periode,",
						"          ref2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select7",
						"select7 derive(indexcols2 = year+\"-\"+periode+\"-\"+HubSAPid+\"-\"+coalesce(toString(toInteger(replace(reference, \" \", \"\"))),replace(reference, \" \", \"\"))+\"-\"+toString(indexcol2),",
						"          qte_ecc = iif(toInteger(qte_ecc) >0, 1, -1 )) ~> derivedColumn11",
						"select11 derive(ca_ecoulement = abs(toDouble(ca_ecoulement))*qte_ecc) ~> caEcoulement",
						"select12, ecoulementReste join(select12@indexcols2 == ecoulementReste@indexcols2,",
						"     joinType:'outer',",
						"     broadcast: 'auto')~> join8",
						"window1 select(mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          { Org comqtmerciale},",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2,",
						"          indexcol2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select8",
						"join8 select(mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          F_reference = select12@reference,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          F_HubSAPid = select12@HubSAPid,",
						"          F_POSSAMidString = select12@POSSAMidString,",
						"          toreplicate = select12@toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2 = ecoulementReste@ref2,",
						"          E_yearmonth,",
						"          E_year,",
						"          E_month,",
						"          qte_ecoulement,",
						"          POSSAMidString = ecoulementReste@POSSAMidString,",
						"          HubSAPid = ecoulementReste@HubSAPid,",
						"          E_reference = ecoulementReste@reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select9",
						"select9 split(!isNull({Ecoulement origin}) && !isNull({Facturation origin}),",
						"     isNull({Facturation origin}),",
						"     disjoint: false) ~> split4@(avecMatich, rightEcoulement, leftFacturation)",
						"split4@avecMatich derive(data_origin = \"facturation avec matching\") ~> adddataOriginAvecMatchin",
						"split4@rightEcoulement derive(data_origin = \"écoulement sans matching\") ~> adddataOriginEccSansMatching",
						"split4@leftFacturation derive(data_origin = \"facturaiton sans matching\",",
						"          {Qté facturée} = toInteger({Qté facturée})) ~> addDataOringFacturation",
						"split3@avecMatching5145 derive(data_origin = \"facturation avec matching\") ~> addDataOriginAvecMathcin4551",
						"split3@residu5145 derive(data_origin = \"facturaiton sans matching\") ~> addDataOriginFSM",
						"split2@avecMatching43 derive(data_origin = \"facturation avec matching\") ~> addDataOriginFM",
						"split2@residu43 derive(data_origin = \"facturaiton sans matching\") ~> derivedColumn14",
						"adddataOriginAvecMatchin select(mapColumn(",
						"          Org_commerciale = { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          reference = F_reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference = E_reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColumnsAvecMatchig42",
						"addDataOringFacturation select(mapColumn(",
						"          Org_commerciale = { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference = F_reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid = F_HubSAPid,",
						"          POSSAMidString = F_POSSAMidString,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearFacturationSansM",
						"adddataOriginEccSansMatching select(mapColumn(",
						"          yearmonth = E_yearmonth,",
						"          year = E_year,",
						"          month = E_month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference = E_reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearEcoulementSansMatch",
						"derivedColumn14 select(mapColumn(",
						"          {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year = yearFact,",
						"          yearmonth = yearmonthFact,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference = referenceFact,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid = HubSAPid_Fact,",
						"          POSSAMidString = POSSAMidStringFact,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColFacturationSM43",
						"addDataOriginFM select(mapColumn(",
						"          Org_commerciale = {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          POSSAMidString = POSSAMidStringFact,",
						"          {Période},",
						"          Offre,",
						"          yearmonth = yearmonthFact,",
						"          year = yearFact,",
						"          month,",
						"          qte_ecoulement,",
						"          ca_ecoulement,",
						"          HubSAPid,",
						"          reference = referenceEcoul,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColAVM43",
						"addDataOriginAvecMathcin4551 select(mapColumn(",
						"          Org_commerciale = {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          yearmonth = yearmonthFact,",
						"          year = yearFact,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString = POSSAMidStringEcoul,",
						"          HubSAPid = HubSAPidEcoul,",
						"          reference = referenceEcoul,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColumnAVM5145",
						"addDataOriginFSM select(mapColumn(",
						"          {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year = yearFact,",
						"          month,",
						"          yearmonth = yearmonthFact,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference = referenceFact,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid = HubSAPidFact,",
						"          POSSAMidString,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> clearColFSM4551",
						"clearColFSM4551, clearColFacturationSM43 union(byName: true)~> union1",
						"union1 select(mapColumn(",
						"          Org_commerciale = {Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> unionFSM435145",
						"clearFacturationSansM, unionFSM435145 union(byName: true)~> union2",
						"union2 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          {Période},",
						"          Offre,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endFactSansMatching",
						"clearColumnAVM5145, clearColAVM43 union(byName: true)~> union3",
						"derivedColumn15 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_livr_e,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endAVM434551",
						"clearColumnsAvecMatchig42, endAVM434551 union(byName: true)~> union4",
						"union4 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin,",
						"          Org_commerciale",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endFactAVM",
						"union3 derive(ca_ecoulement = toDouble(ca_ecoulement),",
						"          qte_ecc = toInteger(qte_ecc),",
						"          {Qté facturée} = toInteger({Qté facturée})) ~> derivedColumn15",
						"clearEcoulementSansMatch select(mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endEcoulementSansMatcing",
						"derivedColumn16, endFactSansMatching union(byName: true)~> union5",
						"union5 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin,",
						"          year_month",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select10",
						"endFactAVM derive({Qté facturée} = toInteger({Qté facturée})) ~> derivedColumn16",
						"select10, endEcoulementSansMatcing union(byName: true)~> union6",
						"aggregate1 select(mapColumn(",
						"          Offre,",
						"          {ATC performance} = CodeATC,",
						"          Canal",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endOffreATC",
						"derivedColumn20, endOffreATC join(unionDecrementation@Offre == endOffreATC@Offre",
						"     && canal_final == Canal,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> join9",
						"REcoulement5145 derive(periode = split(indexcols2,'-')[2]) ~> derivedColumn17",
						"select8 derive(indexcols2 = year+\"-\"+{Période}+\"-\"+HubSAPid+\"-\"+ref2+\"-\"+toString(indexcol2),",
						"          {Qté facturée} = iif(toDouble({Qté facturée})<=0, -1, 1)) ~> derivedColumn18",
						"derivedColumn11 select(mapColumn(",
						"          E_yearmonth = yearmonth,",
						"          E_year = year,",
						"          E_month = month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          periode,",
						"          ref2,",
						"          indexcols2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select11",
						"derivedColumn18 select(mapColumn(",
						"          { Org commerciale},",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          { Org comqtmerciale},",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          year_month,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          HubSAPid,",
						"          POSSAMidString,",
						"          toreplicate,",
						"          toroll,",
						"          {Période},",
						"          Offre,",
						"          {Facturation origin},",
						"          ref2,",
						"          indexcols2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select12",
						"caEcoulement select(mapColumn(",
						"          E_yearmonth,",
						"          E_year,",
						"          E_month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          toreplicate,",
						"          {Ecoulement origin},",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          periode,",
						"          ref2,",
						"          indexcols2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ecoulementReste",
						"stgOffre aggregate(groupBy(Offre,",
						"          Canal),",
						"     CodeATC = last(CodeATC)) ~> aggregate1",
						"join1 derive(canal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" )) ~> derivedColumn19",
						"unionDecrementation derive(canal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" ),",
						"          month = coalesce(month, right(yearmonth,2) )) ~> derivedColumn20",
						"join9 select(mapColumn(",
						"          Org_commerciale,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          Poste,",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Destinataire facture},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type de facture},",
						"          {Type poste Facture},",
						"          {Mois calendrier},",
						"          {Année civile},",
						"          {Motif commande},",
						"          {CA cdé},",
						"          {Qté livrée},",
						"          {CA livré},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          {Cout standard cdé},",
						"          {Cout fabrication},",
						"          {Cout standard livré},",
						"          {Cout standard facturé},",
						"          date_id,",
						"          year,",
						"          yearmonth,",
						"          qt_cd_e,",
						"          ca_cd_,",
						"          qt_factur_e,",
						"          ca_factur_,",
						"          reference,",
						"          WholeSalerID,",
						"          WholeSalerHubID,",
						"          HubName,",
						"          {Période},",
						"          Offre = unionDecrementation@Offre,",
						"          month,",
						"          qte_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          distributeur,",
						"          agence_code,",
						"          marque,",
						"          {Code postal},",
						"          marque_name,",
						"          qte_ecc,",
						"          ca_ecoulement,",
						"          data_origin,",
						"          {Ecoulement origin},",
						"          canal_final,",
						"          Offre = endOffreATC@Offre,",
						"          {ATC performance},",
						"          Canal",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select13",
						"filter4 aggregate({Qté facturée} = sum( toInteger({Qté facturée}) )) ~> aggregate2",
						"derivedColumn18 aggregate({Qté facturée} = sum(toInteger({Qté facturée})),",
						"          column1 = sum(1)) ~> aggregate3",
						"adddataOriginAvecMatchin aggregate(col1 = sum(1)) ~> aggregate4",
						"derivedColumn2 aggregate(totalQteFactuter = sum(toInteger({Qté facturée}))) ~> aggregate5",
						"filter3 aggregate(qte4251 = sum(toInteger({Qté facturée}))) ~> aggregate6",
						"select13 derive(distributeur = coalesce(lower(distributeur),iif(lower(WholeSalerID)=='ancs - accueil négoce chauffage sanitaire','partedis', iif(instr(lower(WholeSalerID), 'trva - tereva' )>0, 'tereva', iif(instr(lower(WholeSalerID), 'dsc')>0, 'dsc', iif(instr(lower(WholeSalerID), 'vf' )>0, 'vf_confort', iif(instr(lower(WholeSalerID), 'sonac' )>0, 'sonac',lower(WholeSalerID))))))),",
						"          marque_id = iif(data_origin == \"écoulement sans matching\",marque,Org_commerciale)) ~> derivedColumn21",
						"derivedColumn21 derive(marque_name = iif(marque_id=='1604', \"SaunierDuval\", iif(marque_id=='1621', \"Vaillant\", \"\")),",
						"          {Canal distribution} = iif(data_origin == \"écoulement sans matching\",\"42\",{Canal distribution}),",
						"          ca_final = iif((data_origin == \"écoulement sans matching\" || data_origin == \"facturation avec matching\"),toString(ca_ecoulement),toString({CA facturé})),",
						"          qt_final = iif((data_origin == \"écoulement sans matching\" || data_origin == \"facturation avec matching\" || data_origin == \"decrementation ecoulement sans matching\" ),toString(qte_ecc),toString({Qté facturée}))) ~> derivedColumn22",
						"derivedColumn22 derive(canal_final = iif({Canal distribution} ==\"43\",\"Chantier\",\"Diffus\")) ~> derivedColumn23",
						"refAtc aggregate(groupBy(Marque,",
						"          {Canal final},",
						"          {Code postal}),",
						"     ATC = max(ATC),",
						"          NomATC = max(NomATC),",
						"          Matricule = max(Matricule)) ~> aggregate8",
						"aggregate8 derive({Code postal} = toInteger({Code postal})) ~> derivedColumn24",
						"derivedColumn24 select(mapColumn(",
						"          Marque,",
						"          {Canal final},",
						"          {Code postal},",
						"          ATC,",
						"          NomATC,",
						"          Matricule",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> endATC",
						"derivedColumn23, endATC join(marque_name == endATC@Marque",
						"     && canal_final == {Canal final}",
						"     && iif(data_origin==\"decrementation ecoulement sans matching\", -5, toInteger(select13@{Code postal})) == endATC@{Code postal},",
						"     joinType:'left',",
						"     broadcast: 'auto')~> join10",
						"join10 select(mapColumn(",
						"          yearmonth,",
						"          year,",
						"          month,",
						"          qte_ecoulement,",
						"          ca_ecoulement,",
						"          POSSAMidString,",
						"          HubSAPid,",
						"          reference,",
						"          distributeur,",
						"          agence_code,",
						"          marque_id,",
						"          {Code postal} = select13@{Code postal},",
						"          marque_name,",
						"          {Canal distribution},",
						"          {Secteur d'activité},",
						"          {Document de vente},",
						"          {Jour calendaire},",
						"          {Agence commerciale corrigé},",
						"          {ATC Corrigé},",
						"          {Donneur d'ordre},",
						"          {Recept de march},",
						"          {Type doc vente},",
						"          {Type de poste},",
						"          Livraison,",
						"          {Type de livraison},",
						"          {Type poste Livraison},",
						"          Facture,",
						"          {Type poste Facture},",
						"          {Motif commande},",
						"          {Qté facturée},",
						"          {CA facturé},",
						"          no_offre = Offre,",
						"          ca_final,",
						"          qt_final,",
						"          data_origin,",
						"          canal_final,",
						"          {ATC performance},",
						"          ATC,",
						"          NomATC,",
						"          Matricule",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select14",
						"endEcoulementSansMatcing derive(POSSAMidString = HubSAPid,",
						"          qte_ecc = -1*toDouble(qte_ecc),",
						"          data_origin = \"decrementation ecoulement sans matching\") ~> endDecrementation",
						"union6, endDecrementation union(byName: true)~> unionDecrementation",
						"derivedColumn3 filter(POSSAMidString==\"16001050\" && reference ==\"0010021498\" && year=='2021') ~> filter6",
						"derivedColumn2 filter(POSSAMidString==\"16001050\" && reference==\"0010021498\" && year=='2021') ~> ftest",
						"createIndexPartedis filter(POSSAMidString==\"16001050\" && ref2==\"10021498\" && year=='2021') ~> filter7",
						"select1 aggregate(groupBy(Offre,",
						"          Canal),",
						"     {Numéro interne 2} = max({Numéro interne 2})) ~> aggregate9",
						"ecoulementReste aggregate(qte_ecc = sum(toFloat(qte_ecc))) ~> aggregate10",
						"REcoulement5145 aggregate(qte_ecc = sum(toFloat(qte_ecc))) ~> aggregate11",
						"ResteEcoulement aggregate(qte_ecc = sum(toFloat(qte_ecc))) ~> aggregate12",
						"derivedColumn11 aggregate(qte_ecc = sum(toFloat(qte_ecc))) ~> aggregate13",
						"select3 aggregate(Qt = sum(toFloat({Qté facturée}))) ~> aggregate14",
						"FacturationForOther aggregate(groupBy(WholeSalerID),",
						"     {Qté facturée} = sum(toFloat({Qté facturée}))) ~> aggregate15",
						"derivedColumn5 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate16",
						"Filtre5145 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate17",
						"Filtre43 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate18",
						"select5 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate19",
						"addDataOriginFM aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate20",
						"clearColFacturationSM43 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate21",
						"join7 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate22",
						"addDataOriginAvecMathcin4551 aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate23",
						"addDataOriginFSM aggregate({Qté facturée} = sum(toInteger({Qté facturée}))) ~> aggregate24",
						"select13 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['tempVenteDeroge.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> endSinkOutput",
						"clearColFacturationSM43 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal du client livr�;marque;ID marque;ID canal de distribution;Nom du canal;Diffus/Chantier;document_vente (vente directe);Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);Num�ro offre;ATC Corrig� (vente directe);ATC offre;ATC livr�;DR (ATC Performance);ATC Performance;NomATC;Motif commande (vente directe);Type de facture (vente directe);Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Client_direct_Nom du compte;Client direct_Groupe cible/Typologie g�n�rale;Client direct_Sous groupe cible/Typologie d�taill�e;Client direct_Compte principal: Num�ro du compte;Client direct_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP} as string",
						"     ),",
						"     partitionFileNames:['ventederogeAnalysis.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1",
						"clearColAVM43 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal du client livr�;marque;ID marque;ID canal de distribution;Nom du canal;Diffus/Chantier;document_vente (vente directe);Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);Num�ro offre;ATC Corrig� (vente directe);ATC offre;ATC livr�;DR (ATC Performance);ATC Performance;NomATC;Motif commande (vente directe);Type de facture (vente directe);Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Client_direct_Nom du compte;Client direct_Groupe cible/Typologie g�n�rale;Client direct_Sous groupe cible/Typologie d�taill�e;Client direct_Compte principal: Num�ro du compte;Client direct_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP} as string",
						"     ),",
						"     partitionFileNames:['factorationAVM43.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink2",
						"unionFSM435145 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {affecte/non_affecte;plateforme/vente directe;origine de la ligne;year;month;Code client livr�;code client plateforme livree;code produit;quantite;ca;Code postal du client livr�;marque;ID marque;ID canal de distribution;Nom du canal;Diffus/Chantier;document_vente (vente directe);Agence commerciale corrig� (vente directe);Donneur d'ordre (vente directe);Facture (vente directe);Type poste Facture (vente directe);Num�ro offre;ATC Corrig� (vente directe);ATC offre;ATC livr�;DR (ATC Performance);ATC Performance;NomATC;Motif commande (vente directe);Type de facture (vente directe);Description;N1groupe;N2groupe;N3groupe;N4groupe;N5groupe;N6groupe;N7groupe;N1groupedesignation;N2groupedesignation;N3groupedesignation;N4groupedesignation;N5groupedesignation;N6groupedesignation;N7groupedesignation;N1localedesignation;N2localedesignation;N3localedesignation;N4localedesignation;N5localedesignation;N6localedesignation;N7localedesignation;N1locale;N2locale;N3locale;N4locale;N5locale;N6locale;N7locale;Hi�rarchgroupe;Hi�rarchlocale;Client_direct_Nom du compte;Client direct_Groupe cible/Typologie g�n�rale;Client direct_Sous groupe cible/Typologie d�taill�e;Client direct_Compte principal: Num�ro du compte;Client direct_Compte principal: Nom du compte;Client;Num�ro client indirect;CODE_CMI;NOM_CMI;Nom du compte;Client Indirect_ Groupe cible/Typologie g�n�rale;Client Indirect_ Sous groupe cible/Typologie d�taill�e;Client Indirect_  Compte principal: Num�ro du compte;Client Indirect_  Compte principal: Nom du compte;Client Direct - Hi�rarchie N1 SAP ;Client Direct - Hi�rarchie N2 SAP ;Client Indirect - Hi�rarchie N1 SAP;Client Indirect - Hi�rarchie N2 SAP} as string",
						"     ),",
						"     partitionFileNames:['factorationAVM435145.vdb'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink3",
						"select14 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['OModelPartedis.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink4",
						"Filtre43 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Org_commerciale as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activit�} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {Agence commerciale corrig�} as string,",
						"          {ATC Corrig�} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Ann�e civile} as string,",
						"          {Motif commande} as string,",
						"          {CA cd�} as string,",
						"          {Qt� livr�e} as string,",
						"          {CA livr�} as string,",
						"          {Qt� factur�e} as string,",
						"          {CA factur�} as string,",
						"          {Cout standard cd�} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livr�} as string,",
						"          {Cout standard factur�} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          {P�riode} as string,",
						"          Offre as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          qte_ecc as string,",
						"          ca_ecoulement as string,",
						"          data_origin as string,",
						"          {Ecoulement origin} as string,",
						"          canal_final as string,",
						"          {ATC performance} as string,",
						"          Canal as string",
						"     ),",
						"     partitionFileNames:['TestFacturation43.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkFact43",
						"select3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Org_commerciale as string,",
						"          {Canal distribution} as string,",
						"          {Secteur d'activit�} as string,",
						"          {Document de vente} as string,",
						"          Poste as string,",
						"          {Jour calendaire} as string,",
						"          {Agence commerciale corrig�} as string,",
						"          {ATC Corrig�} as string,",
						"          {Donneur d'ordre} as string,",
						"          {Recept de march} as string,",
						"          {Destinataire facture} as string,",
						"          {Type doc vente} as string,",
						"          {Type de poste} as string,",
						"          Livraison as string,",
						"          {Type de livraison} as string,",
						"          {Type poste Livraison} as string,",
						"          Facture as string,",
						"          {Type de facture} as string,",
						"          {Type poste Facture} as string,",
						"          {Mois calendrier} as string,",
						"          {Ann�e civile} as string,",
						"          {Motif commande} as string,",
						"          {CA cd�} as string,",
						"          {Qt� livr�e} as string,",
						"          {CA livr�} as string,",
						"          {Qt� factur�e} as string,",
						"          {CA factur�} as string,",
						"          {Cout standard cd�} as string,",
						"          {Cout fabrication} as string,",
						"          {Cout standard livr�} as string,",
						"          {Cout standard factur�} as string,",
						"          date_id as string,",
						"          year as string,",
						"          yearmonth as string,",
						"          qt_cd_e as string,",
						"          ca_cd_ as string,",
						"          qt_factur_e as string,",
						"          ca_factur_ as string,",
						"          reference as string,",
						"          WholeSalerID as string,",
						"          WholeSalerHubID as string,",
						"          HubName as string,",
						"          {P�riode} as string,",
						"          Offre as string,",
						"          month as string,",
						"          qte_ecoulement as string,",
						"          POSSAMidString as string,",
						"          HubSAPid as string,",
						"          distributeur as string,",
						"          agence_code as string,",
						"          marque as string,",
						"          {Code postal} as string,",
						"          marque_name as string,",
						"          qte_ecc as string,",
						"          ca_ecoulement as string,",
						"          data_origin as string,",
						"          {Ecoulement origin} as string,",
						"          canal_final as string,",
						"          {ATC performance} as string,",
						"          Canal as string",
						"     ),",
						"     partitionFileNames:['TestAfterArticulationOffreJoin.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkAfterArticulatioOffreJoin"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FacturationForOther')]",
				"[concat(variables('factoryId'), '/datasets/associationoffre')]",
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/InPrixMoyenSplited')]",
				"[concat(variables('factoryId'), '/datasets/ecouPartedisLikeWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/ref_atc')]",
				"[concat(variables('factoryId'), '/datasets/outVenteDeroge')]",
				"[concat(variables('factoryId'), '/datasets/tempFacturactionSM')]",
				"[concat(variables('factoryId'), '/datasets/factorationAVM43')]",
				"[concat(variables('factoryId'), '/datasets/TestFacturation43')]",
				"[concat(variables('factoryId'), '/datasets/TestAfterArticulationOffreJoin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/check_base_com')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputBaseCommercialMarketing",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outtest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "filter1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "aggregate4"
						},
						{
							"name": "derivedColumn6"
						},
						{
							"name": "filter3"
						},
						{
							"name": "filter4"
						},
						{
							"name": "derivedColumn7"
						},
						{
							"name": "filter5"
						},
						{
							"name": "aggregate5"
						},
						{
							"name": "derivedColumn8"
						},
						{
							"name": "filter6"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {affecte/non_affecte} as string,",
						"          {plateforme/vente directe} as string,",
						"          {origine de la ligne} as string,",
						"          year as string,",
						"          month as string,",
						"          {Code client livré} as string,",
						"          {code client plateforme livree} as string,",
						"          {code produit} as string,",
						"          quantite as string,",
						"          ca as string,",
						"          {Code postal du client livré} as string,",
						"          marque as string,",
						"          {ID marque} as string,",
						"          {ID canal de distribution} as string,",
						"          {Nom du canal} as string,",
						"          {Diffus/Chantier} as string,",
						"          {document_vente (vente directe)} as string,",
						"          {Agence commerciale corrigé (vente directe)} as string,",
						"          {Donneur d'ordre (vente directe)} as string,",
						"          {Facture (vente directe)} as string,",
						"          {Type poste Facture (vente directe)} as string,",
						"          {Numéro offre} as string,",
						"          {ATC Corrigé (vente directe)} as string,",
						"          {ATC offre} as string,",
						"          {ATC livré} as string,",
						"          {DR (ATC Performance)} as string,",
						"          {ATC Performance} as string,",
						"          NomATC as string,",
						"          {Motif commande (vente directe)} as string,",
						"          {Type de facture (vente directe)} as string,",
						"          Description as string,",
						"          N1groupe as string,",
						"          N2groupe as string,",
						"          N3groupe as string,",
						"          N4groupe as string,",
						"          N5groupe as string,",
						"          N6groupe as string,",
						"          N7groupe as string,",
						"          N1groupedesignation as string,",
						"          N2groupedesignation as string,",
						"          N3groupedesignation as string,",
						"          N4groupedesignation as string,",
						"          N5groupedesignation as string,",
						"          N6groupedesignation as string,",
						"          N7groupedesignation as string,",
						"          N1localedesignation as string,",
						"          N2localedesignation as string,",
						"          N3localedesignation as string,",
						"          N4localedesignation as string,",
						"          N5localedesignation as string,",
						"          N6localedesignation as string,",
						"          N7localedesignation as string,",
						"          N1locale as string,",
						"          N2locale as string,",
						"          N3locale as string,",
						"          N4locale as string,",
						"          N5locale as string,",
						"          N6locale as string,",
						"          N7locale as string,",
						"          {Hiérarchgroupe} as string,",
						"          {Hiérarchlocale} as string,",
						"          {Client_direct_Nom du compte} as string,",
						"          {Client direct_Groupe cible/Typologie générale} as string,",
						"          {Client direct_Sous groupe cible/Typologie détaillée} as string,",
						"          {Client direct_Compte principal: Numéro du compte} as string,",
						"          {Client direct_Compte principal: Nom du compte} as string,",
						"          Client as string,",
						"          {Numéro client indirect} as string,",
						"          CODE_CMI as string,",
						"          NOM_CMI as string,",
						"          {Nom du compte} as string,",
						"          {Client Indirect_ Groupe cible/Typologie générale} as string,",
						"          {Client Indirect_ Sous groupe cible/Typologie détaillée} as string,",
						"          {Client Indirect_  Compte principal: Numéro du compte} as string,",
						"          {Client Indirect_  Compte principal: Nom du compte} as string,",
						"          {Client Direct - Hiérarchie N1 SAP } as string,",
						"          {Client Direct - Hiérarchie N2 SAP } as string,",
						"          {Client Indirect - Hiérarchie N1 SAP} as string,",
						"          {Client Indirect - Hiérarchie N2 SAP} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(ca = toDouble(replace(ca,\",\",\".\")),",
						"          quantite = toInteger(quantite),",
						"          column1 = 1) ~> derivedColumn1",
						"filter4 aggregate(groupBy({plateforme/vente directe}),",
						"     ca = sum(toDouble(ca)),",
						"          quantite = sum(toInteger(quantite))) ~> aggregate1",
						"aggregate1 derive(ca = replace(toString(ca),\".\",\",\"),",
						"          quantite = replace(toString(quantite),\".\",\",\")) ~> derivedColumn5",
						"source1 filter(year==\"2021\" && {plateforme/vente directe}==\"plateforme vf\") ~> filter1",
						"filter1 filter({origine de la ligne}==\"facturation sans ecoulement\" || {origine de la ligne}==\"facturation avec matching\") ~> filter2",
						"derivedColumn6 aggregate(groupBy({code produit}),",
						"     nombre = count({code produit})) ~> aggregate4",
						"filter2 derive({code produit} = coalesce(toString(toInteger(replace({code produit}, \" \", \"\"))),replace({code produit}, \" \", \"\"))) ~> derivedColumn6",
						"derivedColumn1 filter(year==\"2021\") ~> filter3",
						"filter3 filter(in([\"facturation sans ecoulement\",\"facturation avec matching\"],{origine de la ligne})) ~> filter4",
						"source1 derive(ca = toDouble(replace(ca,\",\",\".\")),",
						"          quantite = toInteger(quantite),",
						"          column1 = 1) ~> derivedColumn7",
						"derivedColumn7 filter(year == '2021') ~> filter5",
						"filter6 aggregate(groupBy({plateforme/vente directe},",
						"          {origine de la ligne}),",
						"     ca = sum(toDouble(ca)),",
						"          quantite = sum(toInteger(quantite))) ~> aggregate5",
						"aggregate5 derive(ca = replace(toString(ca),\".\",\",\"),",
						"          quantite = replace(toString(quantite),\".\",\",\")) ~> derivedColumn8",
						"filter5 filter(in([\"decrementation ecoulement sans matching\",\"ecoulement sans matching\",\"facturation sans ecoulement\",\"facturation avec matching\"],{origine de la ligne})) ~> filter6",
						"aggregate4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string",
						"     ),",
						"     partitionFileNames:['test_contratDist.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputBaseCommercialMarketing')]",
				"[concat(variables('factoryId'), '/datasets/outtest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cleaning')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "cleaning process after join",
				"folder": {
					"name": "REFERENTIEL/ATC"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "atc_lower",
								"type": "DatasetReference"
							},
							"name": "atcJoined"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outReferentielATC",
								"type": "DatasetReference"
							},
							"name": "AtcprepareForReplicate"
						},
						{
							"dataset": {
								"referenceName": "outReferentielCTRCTT",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "renamle"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "filtreCodePostal"
						},
						{
							"name": "dd"
						},
						{
							"name": "Flatten1"
						},
						{
							"name": "dd1"
						},
						{
							"name": "codePostalUpdate"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Filter4"
						},
						{
							"name": "Filter5"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Filter6"
						}
					],
					"script": "source(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as integer,\n\t\t{Code Postal fin} as integer,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\t{ID SAP} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{Plan prime} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> atcJoined\nDerivedColumn1 select(mapColumn(\n\t\t{Clé Référentiel},\n\t\t{Recherche Clé EPS},\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tATC = {ID SAP},\n\t\tNomATC = Utilisateur,\n\t\t{Plan primes} = {Plan prime},\n\t\tMatricule = {ID SAP},\n\t\tDR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renamle\nrenamle derive({Canal final} = iif( in([\"Vaillant diffus\",\"SD diffus\",'Diffus'], {Plan primes}), \"Diffus\" ,\"Chantier\" ),\n\t\ttoreplicate = {Code Postal fin}-{Code Postal début}+1) ~> canalFinal\ncanalFinal filter({Code Postal début}<= {Code Postal fin}) ~> filtreCodePostal\nfiltreCodePostal derive(dd = mapLoop(abs(toInteger(toreplicate)), #index)) ~> dd\ndd foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tATC,\n\t\tNomATC = Utilisateur,\n\t\t{Plan primes},\n\t\tMatricule = ATC,\n\t\t{Canal final},\n\t\ttoreplicate,\n\t\tdd,\n\t\tDR\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 derive(dd = toInteger(dd) -1) ~> dd1\ndd1 derive({Code postal} = {Code Postal début}+dd) ~> codePostalUpdate\natcJoined derive({ID SAP} = toInteger({ID SAP})) ~> DerivedColumn1\ncanalFinal filter(ATC==16400015) ~> Filter1\nrenamle filter(ATC==16400015) ~> Filter3\ncodePostalUpdate filter(in(['Attaché commercial prescription','Attaché commercial réseau 2','Attaché commercial réseau' ], Fonction)) ~> Filter4\ncodePostalUpdate filter(in(['Conseiller Technique Thermodynamique' ,'Conseiller technique régional'], Fonction)) ~> Filter5\nFilter5 select(mapColumn(\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tIDSAP = ATC,\n\t\tNom = NomATC,\n\t\t{Plan primes},\n\t\tMatricule,\n\t\t{Canal final},\n\t\ttoreplicate,\n\t\tdd,\n\t\tDR,\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFilter4 filter(!isNull(ATC)) ~> Filter6\nFilter6 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['referentiel_atc.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> AtcprepareForReplicate\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SAUNIER DUVAL} as string,\n\t\t{208.0} as string,\n\t\t{Pièces détachées pour chauffage} as string,\n\t\t{05608600} as string,\n\t\t{5272.0} as string,\n\t\t{33.0} as string,\n\t\t{0.0} as string,\n\t\t{202008} as string,\n\t\t{2020} as string,\n\t\t{08} as string\n\t),\n\tpartitionFileNames:['referentiel_CTRCTT.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/atc_lower')]",
				"[concat(variables('factoryId'), '/datasets/outReferentielATC')]",
				"[concat(variables('factoryId'), '/datasets/outReferentielCTRCTT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cout')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "o\tPour le cout\n\tPrendre la facturation « brute » en sortie de SAP/BW\n\tFiltrer les lignes ou le donneur d’ordre est un CTT\n•\tQuestion 2bis (cf plus haut) : il semblerait que nous ayons besoin ID du CTT ?\n\tFiltrer certaines raisons de commandes et de types de document\n•\tQuestion 3 : pouvez-vous nous transmettre le détail des filtres svp ?\n\tLa colonne de cout en sortie sera le « cout standard » présent dans la facturation \n\tAjouter l’information de VMC (en euros) en faisant la jointure en avec le nouveau référentiel VMC (info non dispo dans l’extract à date BW)\n\tAjouter les méta données produits, client, CTT, comme dans la base commerciale\n",
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationBW_AC",
								"type": "DatasetReference"
							},
							"name": "inputFacturation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outMarketingCout",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{1ereDateLivrDdee} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputFacturation\ninputFacturation select(mapColumn(\n\t\t{Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\tArticle,\n\t\t{Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MarketingCout.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/facturationBW_AC')]",
				"[concat(variables('factoryId'), '/datasets/outMarketingCout')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lower_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL/ATC"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ref_affectation",
								"type": "DatasetReference"
							},
							"name": "refaffectation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "atc_affectation_lower",
								"type": "DatasetReference"
							},
							"name": "atcAffectationLower"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "filteredcolumnsrefrefaffectation"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Filter3"
						}
					],
					"script": "source(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\t{ID SAP} as string,\n\t\t{Lancement Maj Affectation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refaffectation\nSelect2 derive(Utilisateur = Utilisateur) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\t{Clé Référentiel},\n\t\t{Recherche Clé EPS},\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tDR,\n\t\t{ID SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filteredcolumnsrefrefaffectation\nfilteredcolumnsrefrefaffectation derive({Plan prime} = iif( Fonction== \"Attaché commercial réseau\" || Fonction == \"Attaché commercial réseau 2\" , \"Diffus\", iif( Fonction == \"Attaché commercial prescription\"  , \"Chantier\", \"\"  )  )) ~> DerivedColumn3\nFilter2 select(mapColumn(\n\t\t{Clé Référentiel},\n\t\t{Recherche Clé EPS},\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tDR,\n\t\t{ID SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nrefaffectation filter(in(['Attaché commercial prescription','Attaché commercial réseau 2','Attaché commercial réseau' ,'Conseiller Technique Thermodynamique' ,'Conseiller technique régional'], Fonction)) ~> Filter2\nFilter2 filter({ID SAP}==\"16400015\") ~> Filter3\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['atc_affectation_lower.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> atcAffectationLower"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ref_affectation')]",
				"[concat(variables('factoryId'), '/datasets/atc_affectation_lower')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}