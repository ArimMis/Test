{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-VAILLANT"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"BASE COMMERCIALE_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'BASE COMMERCIALE'"
		},
		"BLOB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BLOB'"
		},
		"VAILLANT_ARCHITECTURE_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'VAILLANT_ARCHITECTURE'"
		},
		"data transformation azure function_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'data transformation azure function'"
		},
		"data_input_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'data_input'"
		},
		"data_mart_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'data_mart'"
		},
		"datawarehouse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'datawarehouse'"
		},
		"entrydata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'entrydata'"
		},
		"BASE COMMERCIALE_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\h4h\\Desktop\\Projet H4H\\VAILLANT\\ALTERYX\\-vaillant_pilotage_commerciale\\data_warehouse"
		},
		"BASE COMMERCIALE_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "MiradoMick"
		},
		"data transformation azure function_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://fa-datafacto-transfo-fr.azurewebsites.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MAIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MAIN_PREPARATION_ECOULEMENT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "preparation_facturation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_PREPARATION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MAIN_BASE_COMMERCIAL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MAIN_PREPARATION_ECOULEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAIN_BASE_COMMERCIALE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MAIN_REFERENTIEL",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_REFERENTIEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MAIN_LOGISTIQUE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MAIN_REFERENTIEL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_LOGISTIQUE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "preparation_facturation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "preparation_facturation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"facturationbw": {},
									"PLATEFORMES": {},
									"facturationForDSCTEREVA": {},
									"facturationForOtherPlateform": {},
									"notDSCTerevaPlateform": {},
									"facturationForVanMarkes": {},
									"venteDirect": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CALCUL OBJECTIF RH",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAIN_RH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SORTIE MARKETING",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SORTIE MARKETING",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MAIN_LOGISTIQUE1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_LOGISTIQUE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CONTRAT DISTRIBUTION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CONTRAT_DISTRIBUTION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-04T10:59:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MAIN_PREPARATION')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MAIN_BASE_COMMERCIALE')]",
				"[concat(variables('factoryId'), '/pipelines/MAIN_REFERENTIEL')]",
				"[concat(variables('factoryId'), '/pipelines/MAIN_LOGISTIQUE')]",
				"[concat(variables('factoryId'), '/dataflows/preparation_facturation')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MAIN_RH')]",
				"[concat(variables('factoryId'), '/pipelines/SORTIE MARKETING')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CONTRAT_DISTRIBUTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN_LOGISTIQUE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NomenclatureProduit",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NOMENCLATURE_PRODUIT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"hierarchieArticle": {},
									"nomenclatureProduit": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "NomenclatureClient",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NOMENCLATURE_CLIENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EXtractionSAP": {},
									"ReferentielAtc4": {},
									"SortieNomenclatureClient": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "TDataSD",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TDataSD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FacturationBW": {},
									"SortieTDataSD": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-28T14:04:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/NOMENCLATURE_PRODUIT')]",
				"[concat(variables('factoryId'), '/dataflows/NOMENCLATURE_CLIENT')]",
				"[concat(variables('factoryId'), '/dataflows/TDataSD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_POST_UNION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UNION_ECOULEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_POST_UNION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MABILLE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MABILE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_ORCAB",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORCAB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TRAITEMENT_DSC",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DSC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_VF_CONFORT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_VF_CONFORT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PARTEDIS_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PARTEDIS_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"organisation": {},
									"venteDirecte": {},
									"partedisPrixStd": {},
									"prixParPeriode": {},
									"organisationNotFound": {},
									"quantityNullOutput": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "MAILLARD_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MAILLARD_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"organisation": {},
									"ventesDirectes": {},
									"output": {},
									"organisationNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PL_TEREVA",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TEREVA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UNION_ECOULEMENT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PL_MABILLE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_ORCAB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_TRAITEMENT_DSC",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_VF_CONFORT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PARTEDIS_PREPARATION",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "MAILLARD_PREPARATION",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_TEREVA",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "EHS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNION_ECOULEMENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vfconfortPrepared": {},
									"mabillePrepared": {},
									"orcabPrepared": {},
									"tereva": {},
									"DSC": {},
									"maillard": {},
									"Partedis": {},
									"EHS": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "EHS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EHS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"OrganisationEHS": {},
									"VenteDirecte": {},
									"SoriteEHS": {},
									"EHSOrganisationNotfound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-27T09:12:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_POST_UNION')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MABILE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORCAB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DSC')]",
				"[concat(variables('factoryId'), '/pipelines/PL_VF_CONFORT')]",
				"[concat(variables('factoryId'), '/dataflows/PARTEDIS_PREPARATION')]",
				"[concat(variables('factoryId'), '/dataflows/MAILLARD_PREPARATION')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TEREVA')]",
				"[concat(variables('factoryId'), '/dataflows/UNION_ECOULEMENT')]",
				"[concat(variables('factoryId'), '/dataflows/EHS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN_REFERENTIEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_GET_ARTICLE_DESIGNATION",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GET_ARTICLE_DESIGNATION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_OFFRE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_OFFRE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_REFERENTIEL_ATC",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_REFERENTIEL_ATC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_REFERENTIEL_PRIX",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_REFERENTIEL_PRIX",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-13T07:58:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_GET_ARTICLE_DESIGNATION')]",
				"[concat(variables('factoryId'), '/pipelines/PL_OFFRE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_REFERENTIEL_ATC')]",
				"[concat(variables('factoryId'), '/pipelines/PL_REFERENTIEL_PRIX')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_CLIENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NomenclatureClient",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NOMENCLATURE_CLIENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EXtractionSAP": {},
									"ReferentielAtc4": {},
									"SortieNomenclatureClient": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-28T09:12:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/NOMENCLATURE_CLIENT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_PRODUIT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NomenclatureProduit",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "NOMENCLATURE_PRODUIT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"hierarchieArticle": {},
									"nomenclatureProduit": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-28T07:36:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/NOMENCLATURE_PRODUIT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CALCUL_REM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CALCUL REMUNERATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CALCUL_REMUNERATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contratCadre": {},
									"contrat": {},
									"article": {},
									"baseCommerciale": {},
									"templateContrat": {},
									"calculRem": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-04T10:37:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CALCUL_REMUNERATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CALCUL_SEUIL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CALCUL SEUIL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CALCUL_SEUIL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contratCadre": {},
									"contrat": {},
									"levier": {},
									"article": {},
									"baseCommerciale": {},
									"templateContrat": {},
									"calculRem": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-04T10:37:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CALCUL_SEUIL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CONTRAT_DISTRIBUTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CALCUL SEUIL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CALCUL_SEUIL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contratCadre": {},
									"contrat": {},
									"levier": {},
									"article": {},
									"baseCommerciale": {},
									"templateContrat": {},
									"calculRem": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CALCUL REMUNERATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CALCUL_REMUNERATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contratCadre": {},
									"contrat": {},
									"article": {},
									"baseCommerciale": {},
									"templateContrat": {},
									"calculRem": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CONTRAT DISTRIBUTION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CALCUL SEUIL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CALCUL REMUNERATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CONTRAT_DISTRIBUTION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"seuil": {},
									"remuneration": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-04T10:13:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CALCUL_SEUIL')]",
				"[concat(variables('factoryId'), '/dataflows/CALCUL_REMUNERATION')]",
				"[concat(variables('factoryId'), '/dataflows/CONTRAT_DISTRIBUTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DSC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IMPORT DATA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DSC_PREPARATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "fileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FOLDER_ECOULEMENT_DSC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DSC_ecoulement",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DSC_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DSC_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DSCINPUT": {},
									"organisation": {},
									"ventesDirectes": {},
									"DSCPieceDetache": {},
									"outputNullQuantity": {},
									"preparedDSC": {},
									"orgaNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T08:09:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FOLDER_ECOULEMENT_DSC')]",
				"[concat(variables('factoryId'), '/datasets/DSC_ecoulement')]",
				"[concat(variables('factoryId'), '/dataflows/DSC_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FACTURATION_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "preparation_facturation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "preparation_facturation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"facturationbw": {},
									"PLATEFORMES": {},
									"facturationForDSCTEREVA": {},
									"facturationForOtherPlateform": {},
									"notDSCTerevaPlateform": {},
									"facturationForVanMarkes": {},
									"venteDirect": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BASE COMMERCIALE/Test"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T20:18:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/preparation_facturation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GET_ARTICLE_DESIGNATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "article_designation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "REFERENTIEL_ARTICLE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"articleHierarchie": {},
									"detailArticleHierarchie": {},
									"sortieArticleDesignation": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-07T07:24:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/REFERENTIEL_ARTICLE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LEVIER RH",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LEVIER_RH",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dataCommerciale": {},
									"PLATEFORMES": {},
									"levierPerformance": {},
									"output": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "AF CALCUL LEVIER RH",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "LEVIER RH",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_CALCUL_LEVIER_RH",
							"method": "POST",
							"headers": {},
							"body": {
								"data1_container": "data-warehouse",
								"data1_path": "Temp/TEMP_LEVIERS_RH",
								"data2_container": "data-warehouse",
								"data2_path": "Temp/TEMP_LEVIER_PERFORMANCE",
								"atc_container": "data-input",
								"atc_path": "Client/Copie de referentiel ATC 2021 2020.xlsx",
								"output_container": "data-mart",
								"output_path": "RH/LEVIER_RH.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RH"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-04T08:55:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/LEVIER_RH')]",
				"[concat(variables('factoryId'), '/linkedServices/data transformation azure function')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MABILE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IMPORT DATA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "fileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FOLDER_ECOULEMENT_MABILE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MABILE_ECOULEMENT_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MABILE_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "IMPORT DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MABILE_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MabilleSaunierDuvale": {},
									"OrganisationMabilleSonac": {},
									"ventesDirectes": {},
									"out": {},
									"MabileQteNull": {},
									"organisationNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-13T20:37:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FOLDER_ECOULEMENT_MABILE')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_ECOULEMENT_OUTPUT')]",
				"[concat(variables('factoryId'), '/dataflows/MABILE_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_BASE_COMMERCIALE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION_ECC_AVOIR",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TRAITEMENTECOULEMENT_AVOIR",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"avoir": {},
									"salerDSC": {},
									"OrgaTerevas": {},
									"outEccDscTereva": {},
									"DTAvoirRetraiter": {},
									"outEccNotDSCTEREVA": {},
									"sink1": {},
									"sink2": {},
									"sink3": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ModelVenteDirecte",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ModelVenteDirecte",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ventedirecte": {},
									"comptesap": {},
									"refAtc": {},
									"associationoffre": {},
									"offre": {},
									"oVenteDirect": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DSCTEREVA2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_ECC_AVOIR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DSCTEREVA2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulementwithIndex": {},
									"avoirwithIndex": {},
									"stgOffre": {},
									"referentielATC": {},
									"facturation": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "UNION_BASE_COMMERCIAL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DSCTEREVA2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ModelVenteDirecte",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Model_PARTEDIS2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNION_BASE_COMMERCIAL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"venteDirect": {},
									"DSCModel": {},
									"PartedisModel": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "POST_UNION_FINISH",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "UNION_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "basecommercialUnion_Model",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BCUnion": {},
									"ArticleHierarchi": {},
									"Plateformes": {},
									"ExtractionCompte": {},
									"ClientEHS": {},
									"InputManuel": {},
									"StgOffreUnique": {},
									"OutBaseCommercial": {},
									"DataCommercialNotFOund": {},
									"DataCommercialDT2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Model_PARTEDIS2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_ECC_AVOIR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Model_PARTEDIS2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulmnt": {},
									"facturation": {},
									"association": {},
									"offre": {},
									"refAtc": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-30T07:05:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TRAITEMENTECOULEMENT_AVOIR')]",
				"[concat(variables('factoryId'), '/dataflows/ModelVenteDirecte')]",
				"[concat(variables('factoryId'), '/dataflows/DSCTEREVA2')]",
				"[concat(variables('factoryId'), '/dataflows/UNION_BASE_COMMERCIAL')]",
				"[concat(variables('factoryId'), '/dataflows/basecommercialUnion_Model')]",
				"[concat(variables('factoryId'), '/dataflows/Model_PARTEDIS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_RH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LEVIER RH",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LEVIER_RH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PREPARATION OBJECTIF RH",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_OBJECTIF_RH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OBJECTIF RH",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "LEVIER RH",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "PREPARATION OBJECTIF RH",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_OBJECTIF_RH",
							"method": "POST",
							"headers": {},
							"body": {
								"objectif_container": "data-warehouse",
								"objectif_path": "Temp/OBJECTIF_RH_PREPARED.xlsx",
								"levier_container": "data-mart",
								"levier_path": "RH/LEVIER_RH.xlsx",
								"output_container": "data-mart",
								"output_path": "RH/OBJECTIFS.xlsx",
								"yearToCalculate": "2020"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RH"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-04T08:58:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LEVIER_RH')]",
				"[concat(variables('factoryId'), '/pipelines/PL_OBJECTIF_RH')]",
				"[concat(variables('factoryId'), '/linkedServices/data transformation azure function')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MODELDSC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ModelDSCTEREVA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DSCTEREVA1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulementReplicated": {},
									"avoirReplicated": {},
									"facturationDSCTEREVA": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BASE COMMERCIALE/Test"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-13T14:33:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DSCTEREVA1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_OBJECTIF_RH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION OBJECTIF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PREPARATION_OBJECTIF_RH",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"objectif": {},
									"levierPerformance": {},
									"output": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "AF PREPARATION OBJECTIF",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "PREPARATION OBJECTIF",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_PREPARATION_OBJECTIF_RH",
							"method": "POST",
							"headers": {},
							"body": {
								"data1_container": "data-warehouse",
								"data1_path": "Temp/PREPARATION_OBJECTIF_RH",
								"data2_container": "data-warehouse",
								"data2_path": "Temp/TEMP_LEVIER_PERFORMANCE",
								"atc_container": "data-input",
								"atc_path": "Client/Copie de referentiel ATC 2021 2020.xlsx",
								"output_container": "data-warehouse",
								"output_path": "Temp/OBJECTIF_RH_PREPARED.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RH"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-04T08:55:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PREPARATION_OBJECTIF_RH')]",
				"[concat(variables('factoryId'), '/linkedServices/data transformation azure function')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_OFFRE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"offreDiffusInput": {},
									"offreChantierInput": {},
									"referentielATCinput": {},
									"stagingDiffus": {},
									"stagingChantier": {},
									"outTemp": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "fuzzyjoin",
						"description": "fuzzy join: atc 2020 2021 and  atc affectation",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "PREPARATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "fuzzyjoin",
							"method": "POST",
							"headers": {},
							"body": {
								"leftfilepath": "Temp/atc_affectation_lower",
								"rightfilepath": "Temp/atc_c2021_lower",
								"leftkey": "Utilisateur",
								"rightkey": "NomATC",
								"outputpath": "Temp/atc_fuzzyjoined.xlsx",
								"containername": "data-warehouse"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FINITION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FINITION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"diffus": {},
									"chantier": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-13T07:55:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PREPARATION')]",
				"[concat(variables('factoryId'), '/linkedServices/data transformation azure function')]",
				"[concat(variables('factoryId'), '/dataflows/FINITION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORCAB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ORCAB_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ORCAB_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"organisation": {},
									"ventesDirectes": {},
									"OUTPUT": {},
									"quantityNullOutput": {},
									"organisationNotFound": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-10T11:58:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ORCAB_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PARTEDIS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DATA IMPORT",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": " AF_IMPORT_ECOUL_PARTEDIS",
							"method": "POST",
							"headers": {},
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/Partedis",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/PARTEDIS_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DATA IMPORT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PARTEDIS_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"organisation": {},
									"venteDirecte": {},
									"partedisPrixStd": {},
									"prixParPeriode": {},
									"organisationNotFound": {},
									"quantityNullOutput": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T08:05:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data transformation azure function')]",
				"[concat(variables('factoryId'), '/dataflows/PARTEDIS_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_POST_UNION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "prix_moyen",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PRIX_MOYEN_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"prixmoyen": {},
									"prixsplit": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "unionSAP_EHS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CLIENT_SAP_EHS_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"clientEHS": {},
									"sap": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CleaninPostUnion",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "unionSAP_EHS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "prix_moyen",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CLEANING_POST_UNION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unionEccoulement": {},
									"articlehierarchi": {},
									"unionsapehs": {},
									"pricelisteReplicated": {},
									"outputPreparationEcoulement": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-23T10:46:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PRIX_MOYEN_PREPARATION')]",
				"[concat(variables('factoryId'), '/dataflows/CLIENT_SAP_EHS_PREPARATION')]",
				"[concat(variables('factoryId'), '/dataflows/CLEANING_POST_UNION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_REFERENTIEL_ATC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lower_data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "lower_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"refaffectation": {},
									"ref2021": {},
									"atcAffectationLower": {},
									"atcC2021Lower": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "computing",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "lower_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "cleaning",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"atcJoined": {},
									"AtcprepareForReplicate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "fuzzyjoin",
						"description": "fuzzy join: atc 2020 2021 and  atc affectation",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "lower_data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "fuzzyjoin",
							"method": "POST",
							"headers": {},
							"body": {
								"leftfilepath": "Temp/atc_affectation_lower",
								"rightfilepath": "Temp/atc_c2021_lower",
								"leftkey": "Utilisateur",
								"rightkey": "NomATC",
								"outputpath": "Temp/atc_fuzzyjoined.xlsx",
								"containername": "data-warehouse"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "fuzzyjoinATC",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [
							{
								"activity": "lower_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "fuzzyjoinATC",
								"type": "DataFlowReference",
								"datasetParameters": {
									"afctationflows": {},
									"atcc2021": {},
									"SinkPQAtccfuzzy": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"sinks": {
								"UserQuery": {
									"name": "SinkPQAtccfuzzy",
									"dataset": {
										"referenceName": "PQAtccfuzzy",
										"type": "DatasetReference",
										"parameters": {}
									},
									"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['Pq_ATCFuzzyJun'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SinkPQAtccfuzzy"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-30T13:33:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/lower_data')]",
				"[concat(variables('factoryId'), '/dataflows/cleaning')]",
				"[concat(variables('factoryId'), '/linkedServices/data transformation azure function')]",
				"[concat(variables('factoryId'), '/dataflows/fuzzyjoinATC')]",
				"[concat(variables('factoryId'), '/datasets/PQAtccfuzzy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_REFERENTIEL_OFFRE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IMPORT DATA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FOLDER_OFFRE_DIFFUS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ALL_OFFRE_DIFFUS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DRAFT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-29T08:24:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FOLDER_OFFRE_DIFFUS')]",
				"[concat(variables('factoryId'), '/datasets/ALL_OFFRE_DIFFUS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_REFERENTIEL_PRIX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DUREE PERIODE",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "REFERENTIEL_PRIX_MOYEN",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"facturation": {},
									"plateforme": {},
									"dureePeriodeOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-07T07:24:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/REFERENTIEL_PRIX_MOYEN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SUIVIE_OFFRE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIFFUS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SUIVIE_OFFRE_DIFFUS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stgOffre": {},
									"baseCommerciale": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CHANTIER",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SUIVIE_OFFRE_CHANTIER",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stgOffre": {},
									"baseCommerciale": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SUIVI DES OFFRES"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-04T10:13:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SUIVIE_OFFRE_DIFFUS')]",
				"[concat(variables('factoryId'), '/dataflows/SUIVIE_OFFRE_CHANTIER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TEREVA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TEREVA_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ECOULEMENT": {},
									"organisation": {},
									"ventesDirectes": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-28T07:36:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TEREVA_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_VENTES_DIRECTES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "VENTES_DIRECTES_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ventesDirectes": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-07T13:24:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/VENTES_DIRECTES_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_VF_CONFORT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IMPORT DATA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "fileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FOLDER_ECOULEMENT_CONFORT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CONFORT_ECOULEMENT_OUTPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "VF_CONFORT_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "VF_CONFORT_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulement": {},
									"organisation": {},
									"ventesDirectes": {},
									"outputQuantityNull": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-09T20:12:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FOLDER_ECOULEMENT_CONFORT')]",
				"[concat(variables('factoryId'), '/datasets/CONFORT_ECOULEMENT_OUTPUT')]",
				"[concat(variables('factoryId'), '/dataflows/VF_CONFORT_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/POST_UNION_BC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IMPORT DATA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "fileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "basecommercialUnion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "basecommercialUnion",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "IMPORT DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "basecommercialUnion_Model",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BCUnion": {},
									"ArticleHierarchi": {},
									"Plateformes": {},
									"ExtractionCompte": {},
									"ClientEHS": {},
									"InputManuel": {},
									"StgOffreUnique": {},
									"OutBaseCommercial": {},
									"DataCommercialNotFOund": {},
									"DataCommercialDT2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-22T07:52:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/basecommercialUnion')]",
				"[concat(variables('factoryId'), '/datasets/OutputBaseAllDistru')]",
				"[concat(variables('factoryId'), '/dataflows/basecommercialUnion_Model')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SORTIE MARKETING')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Marketing",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Marketing",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"HierarchieMKTSD": {},
									"HerarchieMKTVA": {},
									"StgOffreChantier": {},
									"ArticleHierarchi": {},
									"Smarketing": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE_MARKETING"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-30T10:39:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Marketing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TDataSD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TDataSD",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TDataSD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FacturationBW": {},
									"SortieTDataSD": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-28T09:57:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TDataSD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "preparation_facturation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "preparation_facturation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"facturationbw": {},
									"PLATEFORMES": {},
									"facturationForDSCTEREVA": {},
									"facturationForOtherPlateform": {},
									"notDSCTerevaPlateform": {},
									"facturationForVanMarkes": {},
									"venteDirect": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BASE COMMERCIALE/Test"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T12:13:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/preparation_facturation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/helloAzurefunctionCall')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "helloword",
						"description": "fuzzy join: atc 2020 2021 and  atc affectation",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "HelloWord",
							"method": "POST",
							"headers": {},
							"body": {
								"name": "bobl"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tutoriel_template"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-06T17:37:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data transformation azure function')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UNION_BASE_COMMERCIAL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNION_BASE_COMMERCIAL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"venteDirect": {},
									"DSCModel": {},
									"PartedisModel": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "basecommercialUnion_Model",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "UNION_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "basecommercialUnion_Model",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BCUnion": {},
									"ArticleHierarchi": {},
									"Plateformes": {},
									"ExtractionCompte": {},
									"ClientEHS": {},
									"InputManuel": {},
									"StgOffreUnique": {},
									"OutBaseCommercial": {},
									"DataCommercialNotFOund": {},
									"DataCommercialDT2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BASE COMMERCIALE/Test"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-24T07:39:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UNION_BASE_COMMERCIAL')]",
				"[concat(variables('factoryId'), '/dataflows/basecommercialUnion_Model')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DSCTEREVA2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DSCTEREVA2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ecoulementwithIndex": {},
									"avoirwithIndex": {},
									"stgOffre": {},
									"referentielATC": {},
									"facturation": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BASE COMMERCIALE/Test"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T18:37:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DSCTEREVA2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UNION_ECOULEMENT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNION_ECOULEMENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vfconfortPrepared": {},
									"mabillePrepared": {},
									"orcabPrepared": {},
									"tereva": {},
									"DSC": {},
									"maillard": {},
									"Partedis": {},
									"EHS": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CLEANING_POST_UNION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "UNION_ECOULEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CLEANING_POST_UNION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unionEccoulement": {},
									"articlehierarchi": {},
									"unionsapehs": {},
									"pricelisteReplicated": {},
									"outputPreparationEcoulement": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PRIX_MOYEN_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PRIX_MOYEN_PREPARATION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"prixmoyen": {},
									"prixsplit": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/test"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-23T13:36:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UNION_ECOULEMENT')]",
				"[concat(variables('factoryId'), '/dataflows/CLEANING_POST_UNION')]",
				"[concat(variables('factoryId'), '/dataflows/PRIX_MOYEN_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ALL_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARTICLE_HIERARCHIE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL ARTICLE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "BI_ARTICLES ",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Articles avec hiérarchie Articles groupe et locale.xlsx",
						"folderPath": "Reference article",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_AvoirWithIndexDSClike')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_OFacturactionPartedisLikeWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": "|",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_OecoulementDscTerevaWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZ_OecoulementPartedislikeWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArctileHierarchi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HIERARCHIE_ARTICLE",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					},
					{
						"name": "N1.groupe",
						"type": "String"
					},
					{
						"name": "N2.groupe",
						"type": "String"
					},
					{
						"name": "N3.groupe",
						"type": "String"
					},
					{
						"name": "N4.groupe",
						"type": "String"
					},
					{
						"name": "N5.groupe",
						"type": "String"
					},
					{
						"name": "N6.groupe",
						"type": "String"
					},
					{
						"name": "N7.groupe",
						"type": "String"
					},
					{
						"name": "N1.locale",
						"type": "String"
					},
					{
						"name": "N2.locale",
						"type": "String"
					},
					{
						"name": "N3.locale",
						"type": "String"
					},
					{
						"name": "N4.locale",
						"type": "String"
					},
					{
						"name": "N5.locale",
						"type": "String"
					},
					{
						"name": "N6.locale",
						"type": "String"
					},
					{
						"name": "N7.locale",
						"type": "String"
					},
					{
						"name": "N1.groupe.designation",
						"type": "String"
					},
					{
						"name": "N2.groupe.designation",
						"type": "String"
					},
					{
						"name": "N3.groupe.designation",
						"type": "String"
					},
					{
						"name": "N4.groupe.designation",
						"type": "String"
					},
					{
						"name": "N5.groupe.designation",
						"type": "String"
					},
					{
						"name": "N6.groupe.designation",
						"type": "String"
					},
					{
						"name": "N7.groupe.designation",
						"type": "String"
					},
					{
						"name": "N1.locale.designation",
						"type": "String"
					},
					{
						"name": "N2.locale.designation",
						"type": "String"
					},
					{
						"name": "N3.locale.designation",
						"type": "String"
					},
					{
						"name": "N4.locale.designation",
						"type": "String"
					},
					{
						"name": "N5.locale.designation",
						"type": "String"
					},
					{
						"name": "N6.locale.designation",
						"type": "String"
					},
					{
						"name": "N7.locale.designation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BASE_COMMERCIALE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OutputBaseAllDistru.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "nom du canal",
						"type": "String"
					},
					{
						"name": "canal_distribution_final",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "qt_ecc_enrichi",
						"type": "String"
					},
					{
						"name": "ca_ecc_enrichi",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "source_atc",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Deb val",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Nom du compte",
						"type": "String"
					},
					{
						"name": "EPS_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "EPS_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_REMUNERATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CALCUL_REMUNERATION.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "ID contrat",
						"type": "String"
					},
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Réalisé",
						"type": "String"
					},
					{
						"name": "Somme quantité",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_SEUIL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CALCUL_SEUIL.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "ID contrat",
						"type": "String"
					},
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "Max ID Seuil",
						"type": "String"
					},
					{
						"name": "Contrepartie seuil",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONFORT_ECOULEMENT_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONFORT_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_VFC.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONFORT_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_93667242-96d5-452f-a1d7-8067052b7662_dae5acec-5029-4dee-949c-75ac3396ac4c.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Repr�sentant",
						"type": "String"
					},
					{
						"name": "N� D�partement",
						"type": "String"
					},
					{
						"name": "D�partement",
						"type": "String"
					},
					{
						"name": "Code point de vente",
						"type": "String"
					},
					{
						"name": "Libell� point de vente",
						"type": "String"
					},
					{
						"name": "Code Depot source",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "N� Siret",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Ville",
						"type": "String"
					},
					{
						"name": "Ann�e livraison",
						"type": "String"
					},
					{
						"name": "Mois livraison",
						"type": "String"
					},
					{
						"name": "code fournisseur",
						"type": "String"
					},
					{
						"name": "fournisseur principal",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "produit",
						"type": "String"
					},
					{
						"name": "R�ference",
						"type": "String"
					},
					{
						"name": "Qte en unit� de vente",
						"type": "String"
					},
					{
						"name": "Montant prv net",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONFORT_QTE_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Contrat",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "0630_template contrats.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID contrat (unique)",
						"type": "String"
					},
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "Liste des POS participants",
						"type": "String"
					},
					{
						"name": "Liste des ATC référents du contrat (pour la visualisation)",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT_CADRE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Contrat cadre",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "0630_template contrats.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "Leviers",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT_DISTRIBUTION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-mart"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ClientEHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC/UnionSAP_EHS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sectorisation",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Client_EHS.xlsx",
						"folderPath": "Client",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "Code Postal",
						"type": "String"
					},
					{
						"name": "Nom",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DETAIL_ARTICLE_HIERARCHIE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL ARTICLE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Libellés hiérarchies articles groupe et locale.xlsx",
						"folderPath": "Reference article",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Hiérarch.produits",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_CONTAINER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_input",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "SAUNIER DUVAL - SDECC00484",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DSC",
						"container": "ecoulement"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ECOUL_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_mart",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_65f7a04e-fc08-4958-80a0-5660aa383911_968edf46-e6c8-43eb-9222-bde071bd0593.csv",
						"container": "ecoulement"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_mart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ECOUL_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_input",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_DSC.xlsx",
						"container": "organisation"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datawarehouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "errorfinding"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datawarehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PIECE_DETACHEE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datawarehouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "errorfinding"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datawarehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DSC_ECOUL_PREPARED",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_QTE_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datawarehouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "errorfinding"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datawarehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ecoulement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_mart",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ecoulement"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_mart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DV_SAUNC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dvSAUNC.csv",
						"folderPath": "Ecoulement/Maillard",
						"container": "data-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Soci�t�",
						"type": "String"
					},
					{
						"name": "D�pot",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Code GTAC",
						"type": "String"
					},
					{
						"name": "R�f�rence",
						"type": "String"
					},
					{
						"name": "D�signation",
						"type": "String"
					},
					{
						"name": "Quantit�",
						"type": "String"
					},
					{
						"name": "Valeur",
						"type": "String"
					},
					{
						"name": "Quantit� n-1",
						"type": "String"
					},
					{
						"name": "Valeur n-1",
						"type": "String"
					},
					{
						"name": "CP D�p�t",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCommercialNotfound')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_price_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_PRIX"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0",
						"type": "String"
					},
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1",
						"type": "String"
					},
					{
						"name": "SaunierDuval",
						"type": "String"
					},
					{
						"name": "01000",
						"type": "String"
					},
					{
						"name": "01999",
						"type": "String"
					},
					{
						"name": "nicolas hernandez",
						"type": "String"
					},
					{
						"name": "Conseiller Technique Thermodynamique",
						"type": "String"
					},
					{
						"name": "01",
						"type": "String"
					},
					{
						"name": "1647-Rhône-Alpes Auvergne",
						"type": "String"
					},
					{
						"name": "16400092",
						"type": "String"
					},
					{
						"name": "nicolas julien",
						"type": "String"
					},
					{
						"name": "SD diffus",
						"type": "String"
					},
					{
						"name": "NICOLAS Julien",
						"type": "String"
					},
					{
						"name": "16566798",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECOULEEMENT_UNIFORME')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "uniformee_ecoulement_prix_moy.xlsx",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "cp1",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "marque_num",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "cp2",
						"type": "String"
					},
					{
						"name": "Org# commerciale",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuille1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EHS.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Marques",
						"type": "String"
					},
					{
						"name": "Région",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "CIA",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "Référence Article",
						"type": "String"
					},
					{
						"name": "Description Article",
						"type": "String"
					},
					{
						"name": "Catégorie Achat",
						"type": "String"
					},
					{
						"name": "Quantitées livrées",
						"type": "String"
					},
					{
						"name": "str_mois",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Gestion entrepôt",
						"type": "String"
					},
					{
						"name": "Marques/ Constructeur",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EHSOrganiationNotfound')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EVanMarkes1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VanMarkes"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuille1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EntreVanMarkes1.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "F5",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EVanMarkes2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VanMarkes"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuille1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EntreVanMarkes2.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "Code_depot",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EntreeEHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SortieEcoulementEHS",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "Région",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "Référence Article",
						"type": "String"
					},
					{
						"name": "Description Article",
						"type": "String"
					},
					{
						"name": "Catégorie Achat",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "str_mois",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Gestion entrepôt",
						"type": "String"
					},
					{
						"name": "Marques/ Constructeur",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "CP Coop.",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "Nom Coopérative",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "Qté vente directe",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExtractionComptesEPSTypologieSousTypoComptePrincipal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "report1623684783907",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Extraction comptes EPS_Typologie_Sous Typo_Compte Principal.xlsx",
						"folderPath": "Client",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Compte principal: Nom du compte",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACTURATION_DSC_TEREVA_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForDSCTEREVA",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FOLDER_ECOULEMENT_CONFORT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_input",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil2",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "VF Confort",
						"container": "ecoulement"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FOLDER_ECOULEMENT_DSC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_input",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SAUNIER DUVAL - SDECC00484",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DSC",
						"container": "ecoulement"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FOLDER_ECOULEMENT_MABILE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Détails",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Ecoulement/Mabille",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Activité",
						"type": "String"
					},
					{
						"name": "Fournisseur Groupe",
						"type": "String"
					},
					{
						"name": "Société",
						"type": "String"
					},
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence du client",
						"type": "String"
					},
					{
						"name": "Code article",
						"type": "String"
					},
					{
						"name": "Libellé article",
						"type": "String"
					},
					{
						"name": "Ref fournisseur",
						"type": "String"
					},
					{
						"name": "Qté Mois A-1",
						"type": "String"
					},
					{
						"name": "Qté Cumul A-1",
						"type": "String"
					},
					{
						"name": "CA Mois A-1",
						"type": "String"
					},
					{
						"name": "CA Cumul A-1",
						"type": "String"
					},
					{
						"name": "MB Mois A-1",
						"type": "String"
					},
					{
						"name": "MB Cumul A-1",
						"type": "String"
					},
					{
						"name": "VVA Mois A-1",
						"type": "String"
					},
					{
						"name": "VVA Cumul A-1",
						"type": "String"
					},
					{
						"name": "Qté Mois A",
						"type": "String"
					},
					{
						"name": "Qté Cumul A",
						"type": "String"
					},
					{
						"name": "CA Mois A",
						"type": "String"
					},
					{
						"name": "CA Cumul A",
						"type": "String"
					},
					{
						"name": "MB Mois A",
						"type": "String"
					},
					{
						"name": "MB Cumul A",
						"type": "String"
					},
					{
						"name": "VVA Mois A",
						"type": "String"
					},
					{
						"name": "VVA Cumul A",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FOLDER_ECOULEMENT_ORCAB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Ecoulement/ORCAB",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte 2020",
						"type": "String"
					},
					{
						"name": "Qte 2019",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FOLDER_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "ExportOffreDet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Offre/OffresBAD&BAC/Diffus",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationBW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_input",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "xTract",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FacturationBW.xlsx",
						"container": "facturationbw"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationDecrementer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIERARCHIE_ARTICLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL ARTICLE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIERARCHIE_ARTICLE_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL ARTICLE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HIERARCHIE_ARTICLE",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					},
					{
						"name": "N1.groupe",
						"type": "String"
					},
					{
						"name": "N2.groupe",
						"type": "String"
					},
					{
						"name": "N3.groupe",
						"type": "String"
					},
					{
						"name": "N4.groupe",
						"type": "String"
					},
					{
						"name": "N5.groupe",
						"type": "String"
					},
					{
						"name": "N6.groupe",
						"type": "String"
					},
					{
						"name": "N7.groupe",
						"type": "String"
					},
					{
						"name": "N1.locale",
						"type": "String"
					},
					{
						"name": "N2.locale",
						"type": "String"
					},
					{
						"name": "N3.locale",
						"type": "String"
					},
					{
						"name": "N4.locale",
						"type": "String"
					},
					{
						"name": "N5.locale",
						"type": "String"
					},
					{
						"name": "N6.locale",
						"type": "String"
					},
					{
						"name": "N7.locale",
						"type": "String"
					},
					{
						"name": "N1.groupe.designation",
						"type": "String"
					},
					{
						"name": "N2.groupe.designation",
						"type": "String"
					},
					{
						"name": "N3.groupe.designation",
						"type": "String"
					},
					{
						"name": "N4.groupe.designation",
						"type": "String"
					},
					{
						"name": "N5.groupe.designation",
						"type": "String"
					},
					{
						"name": "N6.groupe.designation",
						"type": "String"
					},
					{
						"name": "N7.groupe.designation",
						"type": "String"
					},
					{
						"name": "N1.locale.designation",
						"type": "String"
					},
					{
						"name": "N2.locale.designation",
						"type": "String"
					},
					{
						"name": "N3.locale.designation",
						"type": "String"
					},
					{
						"name": "N4.locale.designation",
						"type": "String"
					},
					{
						"name": "N5.locale.designation",
						"type": "String"
					},
					{
						"name": "N6.locale.designation",
						"type": "String"
					},
					{
						"name": "N7.locale.designation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIERARCHI_ARTICLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SortieLogistique"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HIERARCHIE_ARTICLE",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					},
					{
						"name": "N1.groupe",
						"type": "String"
					},
					{
						"name": "N2.groupe",
						"type": "String"
					},
					{
						"name": "N3.groupe",
						"type": "String"
					},
					{
						"name": "N4.groupe",
						"type": "String"
					},
					{
						"name": "N5.groupe",
						"type": "String"
					},
					{
						"name": "N6.groupe",
						"type": "String"
					},
					{
						"name": "N7.groupe",
						"type": "String"
					},
					{
						"name": "N1.locale",
						"type": "String"
					},
					{
						"name": "N2.locale",
						"type": "String"
					},
					{
						"name": "N3.locale",
						"type": "String"
					},
					{
						"name": "N4.locale",
						"type": "String"
					},
					{
						"name": "N5.locale",
						"type": "String"
					},
					{
						"name": "N6.locale",
						"type": "String"
					},
					{
						"name": "N7.locale",
						"type": "String"
					},
					{
						"name": "N1.groupe.designation",
						"type": "String"
					},
					{
						"name": "N2.groupe.designation",
						"type": "String"
					},
					{
						"name": "N3.groupe.designation",
						"type": "String"
					},
					{
						"name": "N4.groupe.designation",
						"type": "String"
					},
					{
						"name": "N5.groupe.designation",
						"type": "String"
					},
					{
						"name": "N6.groupe.designation",
						"type": "String"
					},
					{
						"name": "N7.groupe.designation",
						"type": "String"
					},
					{
						"name": "N1.locale.designation",
						"type": "String"
					},
					{
						"name": "N2.locale.designation",
						"type": "String"
					},
					{
						"name": "N3.locale.designation",
						"type": "String"
					},
					{
						"name": "N4.locale.designation",
						"type": "String"
					},
					{
						"name": "N5.locale.designation",
						"type": "String"
					},
					{
						"name": "N6.locale.designation",
						"type": "String"
					},
					{
						"name": "N7.locale.designation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HierarchieMKT_SD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SD",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Hiérarchie MKT_SD&VA_2021.06.15.xlsx",
						"folderPath": "Reference article",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Référence article",
						"type": "String"
					},
					{
						"name": "Grande famille",
						"type": "String"
					},
					{
						"name": "Sous-famille",
						"type": "String"
					},
					{
						"name": "eShop level 1 - CATALOG - désignation",
						"type": "String"
					},
					{
						"name": "eShop level 2 - RANGE - désignation",
						"type": "String"
					},
					{
						"name": "eShop level 3 - FAMILY - désignation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HierarchieMKT_VA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "VA",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Hiérarchie MKT_SD&VA_2021.06.15.xlsx",
						"folderPath": "Reference article",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Référence article active",
						"type": "String"
					},
					{
						"name": "Grande famille",
						"type": "String"
					},
					{
						"name": "Sous-famille",
						"type": "String"
					},
					{
						"name": "eShop level 1",
						"type": "String"
					},
					{
						"name": "eShop level 2",
						"type": "String"
					},
					{
						"name": "eShop level 3",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InEcoulementWithIndexDSC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_OecoulementDscTerevaWithIndex",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InFacturationForVenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForVenteDirect",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": " Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": " vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "fact_filter",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InPartedisEcoulementReplicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccPartedislike_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InPrixMoyenSplited')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "prixmoyensplit",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Distributeur",
						"type": "String"
					},
					{
						"name": "prix_unitaire",
						"type": "String"
					},
					{
						"name": "Durée_période",
						"type": "String"
					},
					{
						"name": "Période",
						"type": "String"
					},
					{
						"name": "Mois début",
						"type": "String"
					},
					{
						"name": "Mois fin",
						"type": "String"
					},
					{
						"name": "mois1",
						"type": "String"
					},
					{
						"name": "annee1",
						"type": "String"
					},
					{
						"name": "mois2",
						"type": "String"
					},
					{
						"name": "annee2",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InUnionBasecommercial')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OUnionBasecommercial",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Agence commerciale",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "qt_plateforme_final",
						"type": "String"
					},
					{
						"name": "ca_plateforme_final",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/In_avoirwithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_AvoirWithIndexDSClike",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "ca_avoir",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_avoir",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InallDistruUnionNed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "allDistruUnioned",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inbasecommercial')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OutputBaseAllDistru.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "nom du canal",
						"type": "String"
					},
					{
						"name": "canal_distribution_final",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "qt_ecc_enrichi",
						"type": "String"
					},
					{
						"name": "ca_ecc_enrichi",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "source_atc",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Deb val",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Nom du compte",
						"type": "String"
					},
					{
						"name": "EPS_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "EPS_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Numero Interne_ Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputFacturationDecrementer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FacturationDecrementer",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "qt_plateforme_final",
						"type": "String"
					},
					{
						"name": "ca_plateforme_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputVenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OVenteDirectePrepared",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Agence commerciale",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "ATC performance",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LEVIER_CONTRAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Leviers",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "0630_template contrats.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "Code produits exclus",
						"type": "String"
					},
					{
						"name": "Famille produit",
						"type": "String"
					},
					{
						"name": "Famille produit exclus",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Date de début",
						"type": "String"
					},
					{
						"name": "Date de fin",
						"type": "String"
					},
					{
						"name": "Type de seuil",
						"type": "String"
					},
					{
						"name": "ID seuil",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Seuil min",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_ECOULEMENT_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_6064edb8-6f2b-4dd7-95ff-3bb4f97b4a96_21e00391-019b-426b-ba6b-b188d63d8e68.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Activité",
						"type": "String"
					},
					{
						"name": "Fournisseur Groupe",
						"type": "String"
					},
					{
						"name": "Société",
						"type": "String"
					},
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence du client",
						"type": "String"
					},
					{
						"name": "Code article",
						"type": "String"
					},
					{
						"name": "Libellé article",
						"type": "String"
					},
					{
						"name": "Ref fournisseur",
						"type": "String"
					},
					{
						"name": "Qté Mois A-1",
						"type": "String"
					},
					{
						"name": "Qté Cumul A-1",
						"type": "String"
					},
					{
						"name": "VVA Mois A-1",
						"type": "String"
					},
					{
						"name": "VVA Cumul A-1",
						"type": "String"
					},
					{
						"name": "Qté Mois A",
						"type": "String"
					},
					{
						"name": "Qté Cumul A",
						"type": "String"
					},
					{
						"name": "VVA Mois A",
						"type": "String"
					},
					{
						"name": "VVA Cumul A",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_ECOULEMENT_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "N° Département",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "Code point de vente",
						"type": "String"
					},
					{
						"name": "Libellé point de vente",
						"type": "String"
					},
					{
						"name": "Code Depot source",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "N° Siret",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Ville",
						"type": "String"
					},
					{
						"name": "Année livraison",
						"type": "String"
					},
					{
						"name": "Mois livraison",
						"type": "String"
					},
					{
						"name": "code fournisseur",
						"type": "String"
					},
					{
						"name": "fournisseur principal",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "produit",
						"type": "String"
					},
					{
						"name": "Réference",
						"type": "String"
					},
					{
						"name": "Qte en unité de vente",
						"type": "String"
					},
					{
						"name": "Montant prv net",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_Mabille_Sonac.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					},
					{
						"name": "Commentaire",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MABILLE_ECOUL_PREPARED",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_QTE_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MABILE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dvSAUNC.csv",
						"folderPath": "Ecoulement/Maillard",
						"container": "data-input"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Société",
						"type": "String"
					},
					{
						"name": "Dépot",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Code GTAC",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Valeur",
						"type": "String"
					},
					{
						"name": "Quantité n-1",
						"type": "String"
					},
					{
						"name": "Valeur n-1",
						"type": "String"
					},
					{
						"name": "CP Dépôt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_ECOUL_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0",
						"type": "String"
					},
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1",
						"type": "String"
					},
					{
						"name": "SaunierDuval",
						"type": "String"
					},
					{
						"name": "01000",
						"type": "String"
					},
					{
						"name": "01999",
						"type": "String"
					},
					{
						"name": "nicolas hernandez",
						"type": "String"
					},
					{
						"name": "Conseiller Technique Thermodynamique",
						"type": "String"
					},
					{
						"name": "01",
						"type": "String"
					},
					{
						"name": "1647-Rhône-Alpes Auvergne",
						"type": "String"
					},
					{
						"name": "16400092",
						"type": "String"
					},
					{
						"name": "nicolas julien",
						"type": "String"
					},
					{
						"name": "SD diffus",
						"type": "String"
					},
					{
						"name": "NICOLAS Julien",
						"type": "String"
					},
					{
						"name": "16566798",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Organisation",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_Maillard.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Nom Agence (Code)",
						"type": "String"
					},
					{
						"name": "CP Agence",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/MAILLARD"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MAILLARD_ECOUL_PREPARED",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ModelPartedisInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OModelPartedis",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "ATC performance",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_PRODUIT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SortieLogistique"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Logistique",
						"container": "data-mart"
					},
					"columnDelimiter": "|",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OBJECTIFS_RH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OBJECTIF RH"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Objectifs",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "objectifs.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Num Org",
						"type": "String"
					},
					{
						"name": "Nom Org",
						"type": "String"
					},
					{
						"name": "Nom DR",
						"type": "String"
					},
					{
						"name": "Num DR",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "ATC (ATC- DR)",
						"type": "String"
					},
					{
						"name": "ATC (DR-ATC)",
						"type": "String"
					},
					{
						"name": "Num ATC",
						"type": "String"
					},
					{
						"name": "Nom ATC",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "Canal Dist",
						"type": "String"
					},
					{
						"name": "Nom Canal",
						"type": "String"
					},
					{
						"name": "Flux text",
						"type": "String"
					},
					{
						"name": "HubSAPiD",
						"type": "String"
					},
					{
						"name": "Activité",
						"type": "String"
					},
					{
						"name": "Nom Activité",
						"type": "String"
					},
					{
						"name": "Art Niv 1",
						"type": "String"
					},
					{
						"name": "Nom Niv 1",
						"type": "String"
					},
					{
						"name": "Art Niv 2",
						"type": "String"
					},
					{
						"name": "Nom Niv 2",
						"type": "String"
					},
					{
						"name": "Art Niv 3",
						"type": "String"
					},
					{
						"name": "Nom Niv 3",
						"type": "String"
					},
					{
						"name": "Art Niv 4",
						"type": "String"
					},
					{
						"name": "Nom Niv 4",
						"type": "String"
					},
					{
						"name": "Art Niv 5",
						"type": "String"
					},
					{
						"name": "Nom Niv 5",
						"type": "String"
					},
					{
						"name": "Nom Niv Combiné",
						"type": "String"
					},
					{
						"name": "PMV An",
						"type": "String"
					},
					{
						"name": "Qté Obj An",
						"type": "String"
					},
					{
						"name": "CA Obj An",
						"type": "String"
					},
					{
						"name": "Qté Mois 01",
						"type": "String"
					},
					{
						"name": "Qté Mois 02",
						"type": "String"
					},
					{
						"name": "Qté Mois 03",
						"type": "String"
					},
					{
						"name": "Qté Mois 04",
						"type": "String"
					},
					{
						"name": "Qté Mois 05",
						"type": "String"
					},
					{
						"name": "Qté Mois 06",
						"type": "String"
					},
					{
						"name": "Qté Mois 07",
						"type": "String"
					},
					{
						"name": "Qté Mois 08",
						"type": "String"
					},
					{
						"name": "Qté Mois 09",
						"type": "String"
					},
					{
						"name": "Qté Mois 10",
						"type": "String"
					},
					{
						"name": "Qté Mois 11",
						"type": "String"
					},
					{
						"name": "Qté Mois 12",
						"type": "String"
					},
					{
						"name": "CA Mois 01",
						"type": "String"
					},
					{
						"name": "CA Mois 02",
						"type": "String"
					},
					{
						"name": "CA Mois 03",
						"type": "String"
					},
					{
						"name": "CA Mois 04",
						"type": "String"
					},
					{
						"name": "CA Mois 05",
						"type": "String"
					},
					{
						"name": "CA Mois 06",
						"type": "String"
					},
					{
						"name": "CA Mois 07",
						"type": "String"
					},
					{
						"name": "CA Mois 08",
						"type": "String"
					},
					{
						"name": "CA Mois 09",
						"type": "String"
					},
					{
						"name": "CA Mois 10",
						"type": "String"
					},
					{
						"name": "CA Mois 11",
						"type": "String"
					},
					{
						"name": "CA Mois 12",
						"type": "String"
					},
					{
						"name": "Qté Trim 1",
						"type": "String"
					},
					{
						"name": "Qté Trim 2",
						"type": "String"
					},
					{
						"name": "Qté Trim 3",
						"type": "String"
					},
					{
						"name": "Qté Trim 4",
						"type": "String"
					},
					{
						"name": "CA Trim 1",
						"type": "String"
					},
					{
						"name": "CA Trim 2",
						"type": "String"
					},
					{
						"name": "CA Trim 3",
						"type": "String"
					},
					{
						"name": "CA Trim 4",
						"type": "String"
					},
					{
						"name": "Qté Cumul 01",
						"type": "String"
					},
					{
						"name": "Qté Cumul 02",
						"type": "String"
					},
					{
						"name": "Qté Cumul 03",
						"type": "String"
					},
					{
						"name": "Qté Cumul 04",
						"type": "String"
					},
					{
						"name": "Qté Cumul 05",
						"type": "String"
					},
					{
						"name": "Qté Cumul 06",
						"type": "String"
					},
					{
						"name": "Qté Cumul 07",
						"type": "String"
					},
					{
						"name": "Qté Cumul 08",
						"type": "String"
					},
					{
						"name": "Qté Cumul 09",
						"type": "String"
					},
					{
						"name": "Qté Cumul 10",
						"type": "String"
					},
					{
						"name": "Qté Cumul 11",
						"type": "String"
					},
					{
						"name": "Qté Cumul 12",
						"type": "String"
					},
					{
						"name": "CA Cumul 01",
						"type": "String"
					},
					{
						"name": "CA Cumul 02",
						"type": "String"
					},
					{
						"name": "CA Cumul 03",
						"type": "String"
					},
					{
						"name": "CA Cumul 04",
						"type": "String"
					},
					{
						"name": "CA Cumul 05",
						"type": "String"
					},
					{
						"name": "CA Cumul 06",
						"type": "String"
					},
					{
						"name": "CA Cumul 07",
						"type": "String"
					},
					{
						"name": "CA Cumul 08",
						"type": "String"
					},
					{
						"name": "CA Cumul 09",
						"type": "String"
					},
					{
						"name": "CA Cumul 10",
						"type": "String"
					},
					{
						"name": "CA Cumul 11",
						"type": "String"
					},
					{
						"name": "CA Cumul 12",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OFFRE_CHANTIER_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "ExportOffreDet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OffresDet1-6Mois.xlsx",
						"folderPath": "Offre/OffresBAD&BAC/Chantier",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix client",
						"type": "String"
					},
					{
						"name": "Prix négoce",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Typologie projet",
						"type": "String"
					},
					{
						"name": "DateValidite",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OFFRE_DIFFUS_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "ExportOffreDet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OffresDet1-6Mois.xlsx",
						"folderPath": "Offre/OffresBAD&BAC/Diffus",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix DO",
						"type": "String"
					},
					{
						"name": "Prix pro",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Offre nationale",
						"type": "String"
					},
					{
						"name": "Année Tarif",
						"type": "String"
					},
					{
						"name": "PotentielP1N",
						"type": "String"
					},
					{
						"name": "PotentielP2N",
						"type": "String"
					},
					{
						"name": "PotentielP3N",
						"type": "String"
					},
					{
						"name": "PotentielP4N",
						"type": "String"
					},
					{
						"name": "PotentielP5N",
						"type": "String"
					},
					{
						"name": "PotentielP6N",
						"type": "String"
					},
					{
						"name": "Date de validité",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_4ff7fba4-15c0-4a45-bb38-971aaa6bfaaa_985cc61b-ecb2-41f3-9b06-2f13a0c784d4.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte 2020",
						"type": "String"
					},
					{
						"name": "Qte 2019",
						"type": "String"
					},
					{
						"name": "filename",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ECOULEMENT_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORCAB_ECOULEMENT.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte 2020",
						"type": "String"
					},
					{
						"name": "Qte 2019",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "REFFOURNISSEUR",
						"type": "String"
					},
					{
						"name": "Qte Livrée 2020",
						"type": "String"
					},
					{
						"name": "Qte Livrée 2019",
						"type": "String"
					},
					{
						"name": "Code Dispo Cde",
						"type": "String"
					},
					{
						"name": "Code SAPAIG",
						"type": "String"
					},
					{
						"name": "CA sans Marge",
						"type": "String"
					},
					{
						"name": "CA sans Marge A-1",
						"type": "String"
					},
					{
						"name": "Evol. CA A/A-1",
						"type": "String"
					},
					{
						"name": "Qte Livrée",
						"type": "String"
					},
					{
						"name": "Qte Livrée A-1",
						"type": "String"
					},
					{
						"name": "Evol. Qte A/A-1",
						"type": "String"
					},
					{
						"name": "Qté Livrée 2020",
						"type": "String"
					},
					{
						"name": "Qté Livrée 2019",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ECOULEMENT_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ECOULEMENT_SAMPLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecoulements PF VAILLANT DECEMBRE 2020.xlsx",
						"folderPath": "Ecoulement/ORCAB",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "REFFOURNISSEUR",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte Livrée 2020",
						"type": "String"
					},
					{
						"name": "Qte Livrée 2019",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sectorisation",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_Orcab.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Nom Coopérative",
						"type": "String"
					},
					{
						"name": "CP Coop.",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORCAB_ECOUL_PREPARED",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_QTE_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/ORCAB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OUTPUT_CALCUL_REMUNERATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "NoCanalDist",
						"type": "String"
					},
					{
						"name": "NoArt",
						"type": "String"
					},
					{
						"name": "NoNiv1",
						"type": "String"
					},
					{
						"name": "NoNiv2",
						"type": "String"
					},
					{
						"name": "NoNiv3",
						"type": "String"
					},
					{
						"name": "NoNiv4",
						"type": "String"
					},
					{
						"name": "NoNiv5",
						"type": "String"
					},
					{
						"name": "NoNiv6",
						"type": "String"
					},
					{
						"name": "NoNiv7",
						"type": "String"
					},
					{
						"name": "Niv1",
						"type": "String"
					},
					{
						"name": "Niv2",
						"type": "String"
					},
					{
						"name": "Niv3",
						"type": "String"
					},
					{
						"name": "Niv4",
						"type": "String"
					},
					{
						"name": "Niv6",
						"type": "String"
					},
					{
						"name": "Niv7",
						"type": "String"
					},
					{
						"name": "CanalDist",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OUTPUT_CALCUL_SEUIL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "NoCanalDist",
						"type": "String"
					},
					{
						"name": "NoArt",
						"type": "String"
					},
					{
						"name": "NoNiv1",
						"type": "String"
					},
					{
						"name": "NoNiv2",
						"type": "String"
					},
					{
						"name": "NoNiv3",
						"type": "String"
					},
					{
						"name": "NoNiv4",
						"type": "String"
					},
					{
						"name": "NoNiv5",
						"type": "String"
					},
					{
						"name": "NoNiv6",
						"type": "String"
					},
					{
						"name": "NoNiv7",
						"type": "String"
					},
					{
						"name": "Niv1",
						"type": "String"
					},
					{
						"name": "Niv2",
						"type": "String"
					},
					{
						"name": "Niv3",
						"type": "String"
					},
					{
						"name": "Niv4",
						"type": "String"
					},
					{
						"name": "Niv6",
						"type": "String"
					},
					{
						"name": "Niv7",
						"type": "String"
					},
					{
						"name": "CanalDist",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrgaTerevas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation terreva.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrganisationEHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sectorisation",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_EHS.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Nom Coopérative",
						"type": "String"
					},
					{
						"name": "CP Coop.",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "Code Postal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orgatereva')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation terreva.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OunionBaseCommercial')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputBaseAllDistru')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PARTEDIS_ECOULEMENT.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Nom Fournisseur Principal",
						"type": "String"
					},
					{
						"name": "Clients",
						"type": "String"
					},
					{
						"name": "Code Agence",
						"type": "String"
					},
					{
						"name": "Libellé Agence",
						"type": "String"
					},
					{
						"name": "Code postal agence",
						"type": "String"
					},
					{
						"name": "Ag Siret",
						"type": "String"
					},
					{
						"name": "Siren",
						"type": "String"
					},
					{
						"name": "MKT1",
						"type": "String"
					},
					{
						"name": "MKT2",
						"type": "String"
					},
					{
						"name": "MKT3",
						"type": "String"
					},
					{
						"name": "Reference Fournisseur",
						"type": "String"
					},
					{
						"name": "Libelle",
						"type": "String"
					},
					{
						"name": "Qté Livré Mois A",
						"type": "String"
					},
					{
						"name": "Qté Livré Mois A-1",
						"type": "String"
					},
					{
						"name": "Qté Livré Cumul A",
						"type": "String"
					},
					{
						"name": "Qté Livré Cumul A-1",
						"type": "String"
					},
					{
						"name": "VVA MOIS",
						"type": "String"
					},
					{
						"name": "VVA MOIS N-1",
						"type": "String"
					},
					{
						"name": "VVA CUMUL EXERCICE",
						"type": "String"
					},
					{
						"name": "VVA CUMUL EXERCICE N-1",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_ECOUL_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "WholeSalerOrganization_Partedis.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_PRIX_STD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Px Std 2020",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Partedis.xlsx",
						"folderPath": "PriceList",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Prix Unitaire Std",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLATEFORMES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Plateformes.xlsx",
						"folderPath": "Plateformes",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PQAtccfuzzy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_OBJECTIF_RH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OBJECTIF RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PartedisEcoulement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PARTEDIS_ECOUL_PREPARED",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Partedis_qte_null')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PriceListeStg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_PRIX"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_price_list_article.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "date_upload",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_ATC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Bareme",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Copie de referentiel ATC 2021 2020.xlsx",
						"folderPath": "Client",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_ATC4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "referentiel_atc_4.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "User_lowerCase",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "Right_DR",
						"type": "String"
					},
					{
						"name": "Right_User_lowerCase",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_ATC4_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SortieLogistique"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "referentiel_atc_4.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "User_lowerCase",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "Right_DR",
						"type": "String"
					},
					{
						"name": "Right_User_lowerCase",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Référentiel - Leviers performance RH.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "Documentation",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Cible",
						"type": "String"
					},
					{
						"name": "Périmètre",
						"type": "String"
					},
					{
						"name": "Levier",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Hiérarchie inclues",
						"type": "String"
					},
					{
						"name": "Hiérarchies exclues",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Valeur Annuelle",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SORTIE_MARKETING')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-mart"
					},
					"columnDelimiter": "|",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_OFFRE_CHANTIER_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "STG_OFFRE_CHANTIER",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix client",
						"type": "String"
					},
					{
						"name": "Prix négoce",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Typologie projet",
						"type": "String"
					},
					{
						"name": "DateValidite",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_OFFRE_DIFFUS_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "STG_OFFRE_DIFFUS",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix DO",
						"type": "String"
					},
					{
						"name": "Prix pro",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Offre nationale",
						"type": "String"
					},
					{
						"name": "Année Tarif",
						"type": "String"
					},
					{
						"name": "PotentielP1N",
						"type": "String"
					},
					{
						"name": "PotentielP2N",
						"type": "String"
					},
					{
						"name": "PotentielP3N",
						"type": "String"
					},
					{
						"name": "PotentielP4N",
						"type": "String"
					},
					{
						"name": "PotentielP5N",
						"type": "String"
					},
					{
						"name": "PotentielP6N",
						"type": "String"
					},
					{
						"name": "Date de validité",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_OFFRE_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_offre",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "UserLowerCase",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_CHANTIER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Suivi Offre",
						"container": "data-mart"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVI_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Suivi Offre",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SVanMarkes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VanMarkes"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieEHS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/EHS_Folder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieMarketing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieNomenclatureClient')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SortieLogistique"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Logistique",
						"container": "data-mart"
					},
					"columnDelimiter": "|",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SortieTDataSD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SortieLogistique"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Logistique",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgOffreChantier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "STG_OFFRE_CHANTIER",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix client",
						"type": "String"
					},
					{
						"name": "Prix négoce",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Typologie projet",
						"type": "String"
					},
					{
						"name": "DateValidite",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgOffreUniq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_offre_unique.xlsx",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Right_Produit",
						"type": "String"
					},
					{
						"name": "Right_Quantité",
						"type": "String"
					},
					{
						"name": "Right_Numéro interne 1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_offre_chantier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_offre_diffus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMPLATE_CALCUL_REM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "calcul de rem",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "0630_template contrats.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "Code produits exclus",
						"type": "String"
					},
					{
						"name": "Famille produit",
						"type": "String"
					},
					{
						"name": "Famille produit exclus",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Date de début",
						"type": "String"
					},
					{
						"name": "Date de fin",
						"type": "String"
					},
					{
						"name": "Type de seuil",
						"type": "String"
					},
					{
						"name": "Contrepartie seuil",
						"type": "String"
					},
					{
						"name": "ID seuil",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMPLATE_CONTRAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CONTRAT DISTRIBUTION"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Vue contrat",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "0630_template contrats.xlsx",
						"folderPath": "Levier RH",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ID contrat cadre",
						"type": "String"
					},
					{
						"name": "ID contrat",
						"type": "String"
					},
					{
						"name": "ID levier",
						"type": "String"
					},
					{
						"name": "ID Seuil",
						"type": "String"
					},
					{
						"name": "Objectif (avec règles de validation)",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMP_LEVIER_PERFORMANCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMP_LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEMP_PRIX_PAR_PERIODE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_PRIX"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_ECOULEMENT_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/TEREVA"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TEREVA_ECOULEMENT.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "societe",
						"type": "String"
					},
					{
						"name": "region_lib",
						"type": "String"
					},
					{
						"name": "sgeo",
						"type": "String"
					},
					{
						"name": "sgeo_lib",
						"type": "String"
					},
					{
						"name": "agence",
						"type": "String"
					},
					{
						"name": "agence_lib",
						"type": "String"
					},
					{
						"name": "dep_ag",
						"type": "String"
					},
					{
						"name": "frs",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "article_lib",
						"type": "String"
					},
					{
						"name": "dm",
						"type": "String"
					},
					{
						"name": "ref_frs",
						"type": "String"
					},
					{
						"name": "vva (m) n",
						"type": "String"
					},
					{
						"name": "vva (m) n-1",
						"type": "String"
					},
					{
						"name": "qte (m) n",
						"type": "String"
					},
					{
						"name": "qte (m) n-1",
						"type": "String"
					},
					{
						"name": "vva (c) n",
						"type": "String"
					},
					{
						"name": "vva (c) n-1",
						"type": "String"
					},
					{
						"name": "qte (c) n",
						"type": "String"
					},
					{
						"name": "qte (c) n-1",
						"type": "String"
					},
					{
						"name": "var. vva (m)",
						"type": "String"
					},
					{
						"name": "var. qte (m)",
						"type": "String"
					},
					{
						"name": "var. vva (c)",
						"type": "String"
					},
					{
						"name": "var. qte (c)",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_EC_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/TEREVA"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/TEREVA"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "WholeSalerOrganizationExploded",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation terreva.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TEREVA_ECOUL_PREPARED",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENTES_DIRECTES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datawarehouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTES DIRECTES"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Ventes_directes.xlsx",
						"container": "datawarehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datawarehouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENTES_DIRECTES_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTES DIRECTES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENTES_DIRECTES_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTES DIRECTES"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VENTES_DIRECTES_PREPARATION",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Code client",
						"type": "String"
					},
					{
						"name": "Qt� vente directe",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFCONFORT_ECOULEMENT_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFCONFORT_PREPARED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/VF CONFORT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VFCONFORT_ECOUL_PREPARED",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ventedirectTemp.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/afctationflows')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "atc_affectation_lower",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/allECoulementPrepared')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "REFFOURNISSEUR",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "Nom Coopérative",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/allUnionedDistributor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/article_hierarchi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HIERARCHIE_ARTICLE",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					},
					{
						"name": "N1.groupe",
						"type": "String"
					},
					{
						"name": "N2.groupe",
						"type": "String"
					},
					{
						"name": "N3.groupe",
						"type": "String"
					},
					{
						"name": "N4.groupe",
						"type": "String"
					},
					{
						"name": "N5.groupe",
						"type": "String"
					},
					{
						"name": "N6.groupe",
						"type": "String"
					},
					{
						"name": "N7.groupe",
						"type": "String"
					},
					{
						"name": "N1.locale",
						"type": "String"
					},
					{
						"name": "N2.locale",
						"type": "String"
					},
					{
						"name": "N3.locale",
						"type": "String"
					},
					{
						"name": "N4.locale",
						"type": "String"
					},
					{
						"name": "N5.locale",
						"type": "String"
					},
					{
						"name": "N6.locale",
						"type": "String"
					},
					{
						"name": "N7.locale",
						"type": "String"
					},
					{
						"name": "N1.groupe.designation",
						"type": "String"
					},
					{
						"name": "N2.groupe.designation",
						"type": "String"
					},
					{
						"name": "N3.groupe.designation",
						"type": "String"
					},
					{
						"name": "N4.groupe.designation",
						"type": "String"
					},
					{
						"name": "N5.groupe.designation",
						"type": "String"
					},
					{
						"name": "N6.groupe.designation",
						"type": "String"
					},
					{
						"name": "N7.groupe.designation",
						"type": "String"
					},
					{
						"name": "N1.locale.designation",
						"type": "String"
					},
					{
						"name": "N2.locale.designation",
						"type": "String"
					},
					{
						"name": "N3.locale.designation",
						"type": "String"
					},
					{
						"name": "N4.locale.designation",
						"type": "String"
					},
					{
						"name": "N5.locale.designation",
						"type": "String"
					},
					{
						"name": "N6.locale.designation",
						"type": "String"
					},
					{
						"name": "N7.locale.designation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/associationoffre')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ArticulationSap.xlsx",
						"folderPath": "Offre",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "Référence Offre BA",
						"type": "String"
					},
					{
						"name": "Qté Cdée",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atc_affectation_lower')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atc_c2021_lower')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atc_joined')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "atc_fuzzyjoined.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR_x",
						"type": "String"
					},
					{
						"name": "matches",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR_y",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atc_replicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "atc_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR_x",
						"type": "String"
					},
					{
						"name": "matches",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR_y",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/atcc2021')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "atc_c2021_lower",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avoir')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_mart",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "test_base_commercial"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "4.Avoirs validés",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Avoir Validés.xlsx",
						"container": "datawarehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "Code_depot",
						"type": "String"
					},
					{
						"name": "Depot",
						"type": "String"
					},
					{
						"name": "NoFrs",
						"type": "String"
					},
					{
						"name": "FOUR2",
						"type": "String"
					},
					{
						"name": "C_Four",
						"type": "String"
					},
					{
						"name": "Lib_Four",
						"type": "String"
					},
					{
						"name": "Categorie",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Financement",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "Date_Debut",
						"type": "String"
					},
					{
						"name": "Date_Fin",
						"type": "String"
					},
					{
						"name": "NoArtDSC",
						"type": "String"
					},
					{
						"name": "LibArt",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "LIB AGENCE",
						"type": "String"
					},
					{
						"name": "Qté_Ini",
						"type": "String"
					},
					{
						"name": "Solde_Qte",
						"type": "String"
					},
					{
						"name": "Qte_Tot",
						"type": "String"
					},
					{
						"name": "Qte_Retenue",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "NomCli",
						"type": "String"
					},
					{
						"name": "PRR",
						"type": "String"
					},
					{
						"name": "PRS_ligne_BL",
						"type": "String"
					},
					{
						"name": "PA_Ref",
						"type": "String"
					},
					{
						"name": "PA_D",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Ecart",
						"type": "String"
					},
					{
						"name": "Aide",
						"type": "String"
					},
					{
						"name": "Aide_Retenue",
						"type": "String"
					},
					{
						"name": "Aide_Validée_VGF",
						"type": "String"
					},
					{
						"name": "Date_Num",
						"type": "String"
					},
					{
						"name": "P_Fact",
						"type": "String"
					},
					{
						"name": "Clé_Offre_Article",
						"type": "String"
					},
					{
						"name": "Motif_Commentaire",
						"type": "String"
					},
					{
						"name": "Qté_Campagne",
						"type": "String"
					},
					{
						"name": "Prix_Campagne",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "Montant_Avoir",
						"type": "String"
					},
					{
						"name": "NoDocRefac",
						"type": "String"
					},
					{
						"name": "NoLigneDocRefac",
						"type": "String"
					},
					{
						"name": "Contrôle",
						"type": "String"
					},
					{
						"name": "Date_Ctrl",
						"type": "String"
					},
					{
						"name": "Code_Motif_Refus",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "ValidéPar",
						"type": "String"
					},
					{
						"name": "DateAjout",
						"type": "String"
					},
					{
						"name": "ID ATC",
						"type": "String"
					},
					{
						"name": "Nom ATC",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "Nouveau Prix vente unitaire",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_mart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avoirReplicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "avoir_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "ca_avoir",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avoirToReplicate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/baseCommercialOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR_x",
						"type": "String"
					},
					{
						"name": "matches",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR_y",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/basecommercialUnion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "basecommercialUnion .csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/clientehsOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/compteSap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Extraction compte SAP - F.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"range": "",
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Agence commerciale",
						"type": "String"
					},
					{
						"name": "ATC Client",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 1",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 2",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 3",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Rue",
						"type": "String"
					},
					{
						"name": "Dép",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Localité",
						"type": "String"
					},
					{
						"name": "Téléphone 1",
						"type": "String"
					},
					{
						"name": "Numéro de télécopie",
						"type": "String"
					},
					{
						"name": "Attribut 2",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "SIRET",
						"type": "String"
					},
					{
						"name": "Niveau 4",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Groupe de clients",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Groupe de clients 5",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Attribut 1",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Attribut 3",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Payeur",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Témoin suppr. Tous domaines",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_commercial_DTP2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dscModel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OModelDSC",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "code postal",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "qt_plateforme_final",
						"type": "String"
					},
					{
						"name": "ca_plateforme_final",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eccToReplicate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eccoulementUniforme')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecouPartedisLikeWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_OecoulementPartedislikeWithIndex",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_mart",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "test_base_commercial"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "uniformee_ecoulement_prix_moy.xlsx",
						"container": "datawarehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "cp1",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "marque_num",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "cp2",
						"type": "String"
					},
					{
						"name": "Org# commerciale",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_mart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulementOther')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "outEccNotDscTereva",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulementReplicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccDscTereva_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulementUniformAz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccoulementUniforme",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulemetTocreateIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecoulmnt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecoulementPartedisWithIndex.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					},
					{
						"name": "indexcols",
						"type": "String"
					},
					{
						"name": "cumcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/extractionSap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC/UnionSAP_EHS"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Extraction compte SAP - FR - SDECCF - Liste clients avec Hiérarchie et adresse.xls",
						"folderPath": "Client",
						"container": "data-input"
					},
					"range": "A27:AR31641",
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Agence commerciale",
						"type": "String"
					},
					{
						"name": "ATC Client",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 1",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 2",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Niveau 3",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Rue",
						"type": "String"
					},
					{
						"name": "Dép",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Localité",
						"type": "String"
					},
					{
						"name": "Téléphone 1",
						"type": "String"
					},
					{
						"name": "Numéro de télécopie",
						"type": "String"
					},
					{
						"name": "Attribut 2",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "SIRET",
						"type": "String"
					},
					{
						"name": "Niveau 4",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Groupe de clients",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Groupe de clients 5",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Attribut 1",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Attribut 3",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Payeur",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Témoin suppr. Tous domaines",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/extrationSapOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturatemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationReplicatedPartedisWithIndex.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": " Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					},
					{
						"name": "indexcols",
						"type": "String"
					},
					{
						"name": "cumcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_mart",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "test_base_commercial"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "xTract",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FacturationBW.xlsx",
						"container": "datawarehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_mart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationDSCTEREVA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForDSCTEREVA",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "fact_filter",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationForDSCTEREVA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationForOtherPlateform')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationForVanMarkes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationOther')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForOther",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "fact_filter",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "date_upload",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationReplicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForOther_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": " Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationReplicatedPartedis')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationWithIndex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_OFacturactionPartedisLikeWithIndex",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": " Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "toroll",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inFacturationDSC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AZ_facturationDescTEREVA",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Org commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "recept de march",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "type doc vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/input_manuel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "input_manuel.xlsx",
						"folderPath": "Ajout Manuel",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "canal_distribution_final",
						"type": "String"
					},
					{
						"name": "nom du canal",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "id marque",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "N1.groupe",
						"type": "String"
					},
					{
						"name": "N2.groupe",
						"type": "String"
					},
					{
						"name": "N3.groupe",
						"type": "String"
					},
					{
						"name": "N4.groupe",
						"type": "String"
					},
					{
						"name": "N5.groupe",
						"type": "String"
					},
					{
						"name": "N6.groupe",
						"type": "String"
					},
					{
						"name": "N7.groupe",
						"type": "String"
					},
					{
						"name": "N1.groupe.designation",
						"type": "String"
					},
					{
						"name": "N2.groupe.designation",
						"type": "String"
					},
					{
						"name": "N3.groupe.designation",
						"type": "String"
					},
					{
						"name": "N4.groupe.designation",
						"type": "String"
					},
					{
						"name": "N5.groupe.designation",
						"type": "String"
					},
					{
						"name": "N6.groupe.designation",
						"type": "String"
					},
					{
						"name": "N7.groupe.designation",
						"type": "String"
					},
					{
						"name": "N1.locale",
						"type": "String"
					},
					{
						"name": "N2.locale",
						"type": "String"
					},
					{
						"name": "N3.locale",
						"type": "String"
					},
					{
						"name": "N4.locale",
						"type": "String"
					},
					{
						"name": "N5.locale",
						"type": "String"
					},
					{
						"name": "N6.locale",
						"type": "String"
					},
					{
						"name": "N7.locale",
						"type": "String"
					},
					{
						"name": "N1.local.designation",
						"type": "String"
					},
					{
						"name": "N2.local.designation",
						"type": "String"
					},
					{
						"name": "N3.local.designation",
						"type": "String"
					},
					{
						"name": "N4.local.designation",
						"type": "String"
					},
					{
						"name": "N6.local.designation",
						"type": "String"
					},
					{
						"name": "N7.local.designation",
						"type": "String"
					},
					{
						"name": "code postal livrer",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "N5.local.designation",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/modelPartedisOutPrepared')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/notDSCTerevaPlateform')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ofactbw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offre')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_offre.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Right_Produit",
						"type": "String"
					},
					{
						"name": "Right_Quantité",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreAtcTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreChantierTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreDiffusTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreInChantier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "offreChantierTemp",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "UserLowerCase",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreInDiffus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "offreDiffusTemp",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outEccNotDSCTEREVA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outFacturationForVenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outReferentielATC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outdsctereva2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outfactDescTereva')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/platforme')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_input",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Plateformes.xlsx",
						"container": "plateformes"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pricelist_replicated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "prix_moyen_replicated.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Distributeur",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "Prix standard",
						"type": "String"
					},
					{
						"name": "N° Période",
						"type": "String"
					},
					{
						"name": "Mois début",
						"type": "String"
					},
					{
						"name": "Mois fin",
						"type": "String"
					},
					{
						"name": "mois1",
						"type": "String"
					},
					{
						"name": "annee1",
						"type": "String"
					},
					{
						"name": "mois2",
						"type": "String"
					},
					{
						"name": "annee2",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "order",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prixMoyenSplited')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prixSplitedInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "prixmoyensplit",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prix_moyen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "prix_par_périodeV3.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Distributeur",
						"type": "String"
					},
					{
						"name": "Code produit",
						"type": "String"
					},
					{
						"name": "Prix standard",
						"type": "String"
					},
					{
						"name": "N° Période",
						"type": "String"
					},
					{
						"name": "Mois début",
						"type": "String"
					},
					{
						"name": "Mois fin",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ref_affectation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Data",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Référentiel_Affectation Roles Utilisateurs par Code postaux Nouvelle version.xlsx",
						"folderPath": "Client",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé Référentiel",
						"type": "String"
					},
					{
						"name": "Recherche Clé EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal début",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "Département",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "ID SAP",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ref_atc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "referentiel_atc_4.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cl� R�f�rentiel",
						"type": "String"
					},
					{
						"name": "Recherche Cl� EPS",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Code Postal d�but",
						"type": "String"
					},
					{
						"name": "Code Postal fin",
						"type": "String"
					},
					{
						"name": "Utilisateur",
						"type": "String"
					},
					{
						"name": "Fonction",
						"type": "String"
					},
					{
						"name": "D�partement",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "User_lowerCase",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "Right_DR",
						"type": "String"
					},
					{
						"name": "Right_User_lowerCase",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ref_atc_2021')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Bareme",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Copie de referentiel ATC 2021 2020.xlsx",
						"folderPath": "Client",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/referentielAtc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0",
						"type": "String"
					},
					{
						"name": "SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1",
						"type": "String"
					},
					{
						"name": "SaunierDuval",
						"type": "String"
					},
					{
						"name": "01000",
						"type": "String"
					},
					{
						"name": "01999",
						"type": "String"
					},
					{
						"name": "nicolas hernandez",
						"type": "String"
					},
					{
						"name": "Conseiller Technique Thermodynamique",
						"type": "String"
					},
					{
						"name": "01",
						"type": "String"
					},
					{
						"name": "1647-Rhône-Alpes Auvergne",
						"type": "String"
					},
					{
						"name": "16400092",
						"type": "String"
					},
					{
						"name": "nicolas julien",
						"type": "String"
					},
					{
						"name": "SD diffus",
						"type": "String"
					},
					{
						"name": "NICOLAS Julien",
						"type": "String"
					},
					{
						"name": "16566798",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/referentielPrix')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "referentielPrix",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "prix_unitaire",
						"type": "String"
					},
					{
						"name": "Durée_période",
						"type": "String"
					},
					{
						"name": "Période",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/salerDsc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_wholesaler_orgat.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sortiePardedis')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MODEL PARTEDIS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stg_offre')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix client",
						"type": "String"
					},
					{
						"name": "Prix négoce",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Typologie projet",
						"type": "String"
					},
					{
						"name": "DateValidite",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tVerifBaseComm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "toreplicate",
						"type": "String"
					},
					{
						"name": "dd",
						"type": "String"
					},
					{
						"name": "rcount",
						"type": "String"
					},
					{
						"name": "indexcols2",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tecouunion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "allDistruUnioned",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tempAvoirReplicatedOut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tunionSap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_ATC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Plan primes",
						"type": "String"
					},
					{
						"name": "DR",
						"type": "String"
					},
					{
						"name": "Secteur prime",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Secteur DEC",
						"type": "String"
					},
					{
						"name": "Rallye",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionAllModel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OUnionBasecommercial",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "canal distru",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "right_marque",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Recept de march",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionEcoulement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "eccoulement_union.xlsx",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "Représentant",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "prix_unitaire_std",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "marque_file",
						"type": "String"
					},
					{
						"name": "agence_code",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "sous_famille",
						"type": "String"
					},
					{
						"name": "departement_id",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "Nom Agence",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "marque_num",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unionSapEhsIn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/UNION_ALL_DISTRIBUTOR"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "unionClientSapEHS",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/venteDirectePrepared')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "VENTE DIRECT BASE COMM"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wholesalerOrgat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_wholesaler_orgat.csv",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VAILLANT_ARCHITECTURE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BASE COMMERCIALE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('BASE COMMERCIALE_properties_typeProperties_host')]",
					"userId": "[parameters('BASE COMMERCIALE_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('BASE COMMERCIALE_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BLOB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VAILLANT_ARCHITECTURE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('VAILLANT_ARCHITECTURE_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data transformation azure function')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is service group the python data transformation we used in this project",
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('data transformation azure function_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('data transformation azure function_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_input')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('data_input_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_mart')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('data_mart_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datawarehouse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('datawarehouse_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/entrydata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('entrydata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_sq4')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 12000,
					"startTime": "2021-08-23T12:50:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 5,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_REMUNERATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_REMUNERATION",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "Select1"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Union1"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "quantite"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "Union2"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\t{Canal distribution} as string,\n\t\t{nom du canal} as string,\n\t\tcanal_distribution_final as string,\n\t\tcanal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tqt_ecc_enrichi as string,\n\t\tca_ecc_enrichi as string,\n\t\tqte_ecoulement as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tsource_atc as string,\n\t\tSuccessor as string,\n\t\tCDis as string,\n\t\tPredecessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Deb val} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tca_ecoulement as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Nom du compte} as string,\n\t\t{Numero Interne_ Groupe cible/Typologie générale} as string,\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Numero Interne_ Compte principal: Numéro du compte} as string,\n\t\t{Numero Interne_ Compte principal: Nom du compte} as string,\n\t\t{Jour calendaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, calculRem join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(Canal, \"<> \", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque)) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\nSelect1 foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\narticle aggregate(groupBy(Article,\n\t\t{Hiérarch.locale}),\n\tcount = count(Article)) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu, uniqueReferenceArticle join(code_produit == Article,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ngetHierarchieLocale derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\nFlattenFamilleExclu filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> Filter1\nFlattenFamilleExclu filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> Filter2\nFilter1, Filter2 union(byName: true)~> Union1\nUnion1 derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\nFlattenPOS, baseColumnChoice join(code_produit == {code produit},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\ninnerBaseCommerciale select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nbaseCommerciale select(mapColumn(\n\t\tyear,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> DerivedColumn1\nDerivedColumn1 filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif(Canal=={nom du canal}, 1, 0)) ~> DerivedColumn2\nDerivedColumn2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca))) ~> Aggregate1\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite))) ~> Aggregate2\nAggregate1, Aggregate2 union(byName: true)~> Union2\nUnion2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_REMUNERATION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CONTRAT_CADRE')]",
				"[concat(variables('factoryId'), '/datasets/CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHIE_ARTICLE_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/BASE_COMMERCIALE')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CALCUL_REM')]",
				"[concat(variables('factoryId'), '/datasets/OUTPUT_CALCUL_REMUNERATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CALCUL_SEUIL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONTRAT_CADRE",
								"type": "DatasetReference"
							},
							"name": "contratCadre"
						},
						{
							"dataset": {
								"referenceName": "CONTRAT",
								"type": "DatasetReference"
							},
							"name": "contrat"
						},
						{
							"dataset": {
								"referenceName": "LEVIER_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "levier"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "article"
						},
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CONTRAT",
								"type": "DatasetReference"
							},
							"name": "templateContrat"
						},
						{
							"dataset": {
								"referenceName": "TEMPLATE_CALCUL_REM",
								"type": "DatasetReference"
							},
							"name": "calculRem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OUTPUT_CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "joinContrat"
						},
						{
							"name": "uniqueColumnContrat"
						},
						{
							"name": "innerContratLevier"
						},
						{
							"name": "uniqueColumnLevier"
						},
						{
							"name": "canal"
						},
						{
							"name": "uniqueIDContrat"
						},
						{
							"name": "codeProduitToList"
						},
						{
							"name": "FlattenCodeProduit"
						},
						{
							"name": "articleToLIst"
						},
						{
							"name": "uniqueReferenceArticle"
						},
						{
							"name": "name"
						},
						{
							"name": "getArticleList"
						},
						{
							"name": "newCodeProduit"
						},
						{
							"name": "Select1"
						},
						{
							"name": "FlattenCodeProduitExclu"
						},
						{
							"name": "toDeleteCode"
						},
						{
							"name": "deleteCodeProduitExclu"
						},
						{
							"name": "getHierarchieLocale"
						},
						{
							"name": "familleProduitToList"
						},
						{
							"name": "FlattenFamille"
						},
						{
							"name": "FlattenFamilleExclu"
						},
						{
							"name": "touteFamille"
						},
						{
							"name": "touteFamilleToDelete"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "pasTouteFamille"
						},
						{
							"name": "pasTouteFamilleToDelete"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Union1"
						},
						{
							"name": "canalToList"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "FlattenPOS"
						},
						{
							"name": "innerBaseCommerciale"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "baseColumnChoice"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "filtreListePOS"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "filtreCanal"
						},
						{
							"name": "CA"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "quantite"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "Union2"
						},
						{
							"name": "innerTemplateContrat"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "innerTemplateRemuneration"
						},
						{
							"name": "Select3"
						}
					],
					"script": "source(output(\n\t\t{ID contrat cadre} as string,\n\t\tLeviers as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contratCadre\nsource(output(\n\t\t{ID contrat (unique)} as string,\n\t\t{ID contrat cadre} as string,\n\t\t{Liste des POS participants} as string,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> contrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string,\n\t\t{Seuil min} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levier\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> article\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\t{Canal distribution} as string,\n\t\t{nom du canal} as string,\n\t\tcanal_distribution_final as string,\n\t\tcanal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tqt_ecc_enrichi as string,\n\t\tca_ecc_enrichi as string,\n\t\tqte_ecoulement as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tsource_atc as string,\n\t\tSuccessor as string,\n\t\tCDis as string,\n\t\tPredecessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Deb val} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tca_ecoulement as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Nom du compte} as string,\n\t\t{Numero Interne_ Groupe cible/Typologie générale} as string,\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Numero Interne_ Compte principal: Numéro du compte} as string,\n\t\t{Numero Interne_ Compte principal: Nom du compte} as string,\n\t\t{Jour calendaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{ID Seuil} as string,\n\t\t{Objectif (avec règles de validation)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> templateContrat\nsource(output(\n\t\t{ID levier} as string,\n\t\t{Code produit} as string,\n\t\t{Code produits exclus} as string,\n\t\t{Famille produit} as string,\n\t\t{Famille produit exclus} as string,\n\t\tCanal as string,\n\t\t{Date de début} as string,\n\t\t{Date de fin} as string,\n\t\t{Type de seuil} as string,\n\t\t{Contrepartie seuil} as string,\n\t\t{ID seuil} as string,\n\t\tMarque as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> calculRem\ncontratCadre, contrat join(contratCadre@{ID contrat cadre} == contrat@{ID contrat cadre},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinContrat\njoinContrat select(mapColumn(\n\t\t{ID contrat cadre} = contratCadre@{ID contrat cadre},\n\t\tLeviers,\n\t\t{ID contrat} = {ID contrat (unique)},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnContrat\nuniqueColumnContrat, levier join(Leviers == {ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerContratLevier\ninnerContratLevier select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\t{ID levier},\n\t\tcode_produit = {Code produit},\n\t\t{Code produits exclus},\n\t\tfamille_produit = {Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniqueColumnLevier\nuniqueColumnLevier derive(Canal = replace(Canal, \"<> \", \"\")) ~> canal\ncanal aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Liste des POS participants} = max({Liste des POS participants}),\n\t\t{Liste des ATC référents du contrat (pour la visualisation)} = max({Liste des ATC référents du contrat (pour la visualisation)}),\n\t\tcode_produit = max(code_produit),\n\t\t{Code produits exclus} = max({Code produits exclus}),\n\t\t{Famille produit} = max(famille_produit),\n\t\t{Famille produit exclus} = max({Famille produit exclus}),\n\t\tCanal = max(Canal),\n\t\t{Date de début} = max({Date de début}),\n\t\t{Date de fin} = max({Date de fin}),\n\t\t{Type de seuil} = max({Type de seuil}),\n\t\t{ID seuil} = max({ID seuil}),\n\t\tMarque = max(Marque)) ~> uniqueIDContrat\ngetArticleList derive(code_produit = split(code_produit, \";\"),\n\t\t{Code produits exclus} = split({Code produits exclus}, \";\")) ~> codeProduitToList\nSelect1 foldDown(unroll(code_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\tCode_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduit\nname aggregate(groupBy(name),\n\tarticle_list = collect(Article)) ~> articleToLIst\narticle aggregate(groupBy(Article,\n\t\t{Hiérarch.locale}),\n\tcount = count(Article)) ~> uniqueReferenceArticle\nuniqueReferenceArticle derive(name = \"tous\") ~> name\nuniqueIDContrat, articleToLIst join(lower(code_produit) == lower(name),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> getArticleList\ncodeProduitToList derive(code_produit = iif(lower(code_produit[1])==\"tous\", article_list, code_produit)) ~> newCodeProduit\nnewCodeProduit select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tCode_produits_exclus = {Code produits exclus},\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tname,\n\t\tcode_produit\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFlattenCodeProduit foldDown(unroll(Code_produits_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus} = Code_produits_exclus,\n\t\t{Famille produit},\n\t\t{Famille produit exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCodeProduitExclu\nFlattenCodeProduitExclu derive(ToDelete = iif(code_produit=={Code produits exclus}, 1, 0)) ~> toDeleteCode\ntoDeleteCode filter(ToDelete!=1) ~> deleteCodeProduitExclu\ndeleteCodeProduitExclu, uniqueReferenceArticle join(code_produit == Article,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> getHierarchieLocale\ngetHierarchieLocale derive(Famille_produit = split({Famille produit}, \";\"),\n\t\tFamille_produit_exclus = split({Famille produit exclus}, \";\")) ~> familleProduitToList\nfamilleProduitToList foldDown(unroll(Famille_produit),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamille\nFlattenFamille foldDown(unroll(Famille_produit_exclus),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenFamilleExclu\nFlattenFamilleExclu filter(lower(Famille_produit)==\"toutes\") ~> touteFamille\ntouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit_exclus))==Famille_produit_exclus,1,0)) ~> touteFamilleToDelete\ntouteFamilleToDelete filter(ToDelete==0) ~> Filter1\nFlattenFamilleExclu filter(lower(Famille_produit)!=\"toutes\") ~> pasTouteFamille\npasTouteFamille derive(ToDelete = iif(substring({Hiérarch.locale},1,length(Famille_produit))!=Famille_produit || Famille_produit==Famille_produit_exclus,1,0)) ~> pasTouteFamilleToDelete\npasTouteFamilleToDelete filter(ToDelete==0) ~> Filter2\nFilter1, Filter2 union(byName: true)~> Union1\nUnion1 derive(Canal = split(Canal, \";\"),\n\t\tListe_des_POS_participants = split({Liste des POS participants}, \";\")) ~> canalToList\ncanalToList foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tListe_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenCanal foldDown(unroll(Liste_des_POS_participants),\n\tmapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants} = Liste_des_POS_participants,\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\t{Hiérarch.locale},\n\t\tcount,\n\t\tFamille_produit,\n\t\tFamille_produit_exclus\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenPOS\nFlattenPOS, baseColumnChoice join(code_produit == {code produit},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerBaseCommerciale\ninnerBaseCommerciale select(mapColumn(\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\t{Liste des POS participants},\n\t\t{Liste des ATC référents du contrat (pour la visualisation)},\n\t\tcode_produit,\n\t\t{Code produits exclus},\n\t\tCanal,\n\t\t{Date de début},\n\t\t{Date de fin},\n\t\t{Type de seuil},\n\t\t{ID seuil},\n\t\tMarque,\n\t\tToDelete,\n\t\tArticle,\n\t\tlocale = {Hiérarch.locale},\n\t\tFamille_produit,\n\t\tFamille_produit_exclus,\n\t\tyear,\n\t\t{Code client livré},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\nbaseCommerciale select(mapColumn(\n\t\tyear,\n\t\t{Code client livré},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> baseColumnChoice\ncolumnChoice derive(ToDelete = iif({Liste des POS participants}==\"\" || {Liste des POS participants}=={Code client livré}, 0, 1)) ~> DerivedColumn1\nDerivedColumn1 filter(ToDelete==0) ~> filtreListePOS\nfiltreListePOS derive(ToDelete = iif(Canal=={nom du canal}, 1, 0)) ~> DerivedColumn2\nDerivedColumn2 filter(ToDelete==0) ~> filtreCanal\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")>0) ~> CA\nCA aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\tca = sum(toDouble(ca)),\n\t\t{Réalisé} = sum(toDouble(ca))) ~> Aggregate1\nfiltreCanal filter(instr(lower({Type de seuil}),\"ca\")==0) ~> quantite\nquantite aggregate(groupBy({ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier},\n\t\tyear),\n\t{Somme quantité} = sum(toInteger(quantite)),\n\t\t{Réalisé} = sum(toInteger(quantite))) ~> Aggregate2\nAggregate1, Aggregate2 union(byName: true)~> Union2\nUnion2, templateContrat join(Union2@{ID contrat cadre} == templateContrat@{ID contrat cadre}\n\t&& Union2@{ID contrat} == templateContrat@{ID contrat}\n\t&& Union2@{ID levier} == templateContrat@{ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateContrat\ninnerTemplateContrat select(mapColumn(\n\t\t{ID contrat cadre} = Union2@{ID contrat cadre},\n\t\t{ID contrat} = Union2@{ID contrat},\n\t\t{ID levier} = Union2@{ID levier},\n\t\tyear,\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité},\n\t\t{ID Seuil},\n\t\t{Objectif (avec règles de validation)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 filter({Réalisé}>=toDouble({Objectif (avec règles de validation)})) ~> Filter3\nFilter3 aggregate(groupBy(year,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier}),\n\t{Max ID Seuil} = max(toInteger({ID Seuil}))) ~> Aggregate3\nAggregate3, calculRem join(Aggregate3@{ID levier} == calculRem@{ID levier}\n\t&& toInteger({Max ID Seuil}) == toInteger({ID seuil}),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerTemplateRemuneration\ninnerTemplateRemuneration select(mapColumn(\n\t\tyear,\n\t\t{ID contrat cadre},\n\t\t{ID contrat},\n\t\t{ID levier} = Aggregate3@{ID levier},\n\t\t{Max ID Seuil},\n\t\t{Contrepartie seuil}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tArticle as string,\n\t\tNoCanalDist as string,\n\t\tNoArt as string,\n\t\tNoNiv1 as string,\n\t\tNoNiv2 as string,\n\t\tNoNiv3 as string,\n\t\tNoNiv4 as string,\n\t\tNoNiv5 as string,\n\t\tNoNiv6 as string,\n\t\tNoNiv7 as string,\n\t\tNiv1 as string,\n\t\tNiv2 as string,\n\t\tNiv3 as string,\n\t\tNiv4 as string,\n\t\tNiv6 as string,\n\t\tNiv7 as string,\n\t\tCanalDist as string\n\t),\n\tpartitionFileNames:['CALCUL_SEUIL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CONTRAT_CADRE')]",
				"[concat(variables('factoryId'), '/datasets/CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/LEVIER_CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHIE_ARTICLE_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/BASE_COMMERCIALE')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CONTRAT')]",
				"[concat(variables('factoryId'), '/datasets/TEMPLATE_CALCUL_REM')]",
				"[concat(variables('factoryId'), '/datasets/OUTPUT_CALCUL_SEUIL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CLEANING_POST_UNION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tecouunion",
								"type": "DatasetReference"
							},
							"name": "unionEccoulement"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "articlehierarchi"
						},
						{
							"dataset": {
								"referenceName": "unionSapEhsIn",
								"type": "DatasetReference"
							},
							"name": "unionsapehs"
						},
						{
							"dataset": {
								"referenceName": "InPrixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "pricelisteReplicated"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "allECoulementPrepared",
								"type": "DatasetReference"
							},
							"name": "outputPreparationEcoulement"
						},
						{
							"dataset": {
								"referenceName": "tunionSap",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "articlDropdupl"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "setPostalCode"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "pricelisteTojoin"
						},
						{
							"name": "Join3"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\t{Code postal} as string,\n\t\tmarque_file as string,\n\t\tca_ecoulement as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string,\n\t\tagence_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionEccoulement\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> articlehierarchi\nsource(output(\n\t\tClient as integer,\n\t\t{Code postal} as string,\n\t\t{Org# commerciale} as short,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> unionsapehs\nsource(output(\n\t\tArticle as string,\n\t\tDistributeur as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string,\n\t\t{Mois début} as string,\n\t\t{Mois fin} as string,\n\t\tmois1 as string,\n\t\tannee1 as string,\n\t\tmois2 as string,\n\t\tannee2 as string,\n\t\tdd as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> pricelisteReplicated\nunionEccoulement derive(marque_id = iif (  instr(lower({marque_file}) , \"saunier\") >0  , 1604 , 1621 )) ~> DerivedColumn1\narticlehierarchi select(mapColumn(\n\t\tmarque = OrgCm,\n\t\treference = Article,\n\t\tCDis\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(marque,\n\t\treference),\n\tCDis = max(CDis)) ~> articlDropdupl\nDerivedColumn1, articlDropdupl join(unionEccoulement@reference == articlDropdupl@reference\n\t&& toString(marque_id) == marque,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nSelect3, unionsapehs join(POSSAMidString == toString(Client)\n\t&& toInteger(marque_id) == {Org# commerciale},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tEcc_Code_postal = Select3@{Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{Sap_Code postal} = unionsapehs@{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = unionEccoulement@reference,\n\t\t{Code postal},\n\t\tdistributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect2 derive({code postal} = iif( !isNull({Sap_Code postal}) , {Sap_Code postal} , Ecc_Code_postal),\n\t\tmarque_name = iif(marque==\"1604\",  \"SaunierDuval\", \"Vaillant\"),\n\t\tdistributeur = upper(distributeur)) ~> setPostalCode\nSelect5 derive(month = toInteger(mois1)+ toInteger(order),\n\t\tDistributeur = lower(Distributeur)) ~> DerivedColumn2\nAggregate1 derive(distributeur = iif(  instr(Distributeur ,'sonac' ) >0 , upper('mabille') , upper(Distributeur)  )) ~> pricelisteTojoin\nsetPostalCode, pricelisteTojoin join(setPostalCode@distributeur == pricelisteTojoin@distributeur\n\t&& toInteger(Select2@month) == toInteger(Aggregate1@month)\n\t&& toInteger(year) == toInteger(annee1)\n\t&& toInteger(reference) == toInteger(Article),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(ca_ecoulement = iif( !isNull(prix_unitaire) , prix_unitaire, \"0\" )) ~> DerivedColumn3\nDerivedColumn3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth = Select2@month,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur = setPostalCode@distributeur,\n\t\tmarque_file,\n\t\tagence_code,\n\t\tmarque_id,\n\t\tmarque,\n\t\tClient,\n\t\t{code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\npricelisteReplicated select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\torder = dd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nDerivedColumn2 aggregate(groupBy(Distributeur,\n\t\tArticle,\n\t\tmonth,\n\t\tannee1),\n\tprix_unitaire = max(prix_unitaire)) ~> Aggregate1\nSelect4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFournisseur as string,\n\t\t{Coopérative} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\tMois as string,\n\t\tpath as string,\n\t\tqte_ecoulement as string,\n\t\tREFFOURNISSEUR as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\t{Nom Coopérative} as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string\n\t),\n\tpartitionFileNames:['eccoulementUniforme'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputPreparationEcoulement\nunionsapehs sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string\n\t),\n\tpartitionFileNames:['tunionSap'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tecouunion')]",
				"[concat(variables('factoryId'), '/datasets/article_hierarchi')]",
				"[concat(variables('factoryId'), '/datasets/unionSapEhsIn')]",
				"[concat(variables('factoryId'), '/datasets/InPrixMoyenSplited')]",
				"[concat(variables('factoryId'), '/datasets/allECoulementPrepared')]",
				"[concat(variables('factoryId'), '/datasets/tunionSap')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CLIENT_SAP_EHS_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "clientEHS"
						},
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "sap"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "extrationSapOut",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Union1"
						},
						{
							"name": "renamecols"
						}
					],
					"script": "source(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> clientEHS\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sap\nsap select(mapColumn(\n\t\tClient,\n\t\t{Code postal},\n\t\t{Org# commerciale} = {Org. commerciale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, renamecols union(byName: true)~> Union1\nclientEHS select(mapColumn(\n\t\tClient,\n\t\t{Org# commerciale} = BrandID,\n\t\t{Code postal} = {Code Postal},\n\t\tNom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renamecols\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['unionClientSapEHS'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ClientEHS')]",
				"[concat(variables('factoryId'), '/datasets/extractionSap')]",
				"[concat(variables('factoryId'), '/datasets/extrationSapOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CONTRAT_DISTRIBUTION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "CONTRAT_DISTRIBUTION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CALCUL_SEUIL",
								"type": "DatasetReference"
							},
							"name": "seuil"
						},
						{
							"dataset": {
								"referenceName": "CALCUL_REMUNERATION",
								"type": "DatasetReference"
							},
							"name": "remuneration"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CONTRAT_DISTRIBUTION",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "innerJoin"
						},
						{
							"name": "remunerationColumn"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tyear as string,\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\t{Max ID Seuil} as string,\n\t\t{Contrepartie seuil} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> seuil\nsource(output(\n\t\t{ID contrat cadre} as string,\n\t\t{ID contrat} as string,\n\t\t{ID levier} as string,\n\t\tyear as string,\n\t\tca as string,\n\t\t{Réalisé} as string,\n\t\t{Somme quantité} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> remuneration\nseuil, remuneration join(seuil@{ID contrat cadre} == remuneration@{ID contrat cadre}\n\t&& seuil@{ID contrat} == remuneration@{ID contrat}\n\t&& seuil@{ID levier} == remuneration@{ID levier},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerJoin\nSelect1 derive({Rémunération} = toDouble({Réalisé})*toDouble({Contrepartie seuil})) ~> remunerationColumn\ninnerJoin select(mapColumn(\n\t\tyear = seuil@year,\n\t\t{ID contrat cadre} = seuil@{ID contrat cadre},\n\t\t{ID contrat} = seuil@{ID contrat},\n\t\t{ID levier} = seuil@{ID levier},\n\t\t{ID Seuil} = {Max ID Seuil},\n\t\t{Contrepartie seuil},\n\t\tca,\n\t\t{Réalisé},\n\t\t{Somme quantité}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nremunerationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CONTRAT_DISTRIBUTION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CALCUL_SEUIL')]",
				"[concat(variables('factoryId'), '/datasets/CALCUL_REMUNERATION')]",
				"[concat(variables('factoryId'), '/datasets/CONTRAT_DISTRIBUTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "VERIFICATION/bkp"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecoulementReplicated",
								"type": "DatasetReference"
							},
							"name": "ecoulementReplicated"
						},
						{
							"dataset": {
								"referenceName": "avoirReplicated",
								"type": "DatasetReference"
							},
							"name": "avoirReplicated"
						},
						{
							"dataset": {
								"referenceName": "facturationDSCTEREVA",
								"type": "DatasetReference"
							},
							"name": "facturationDSCTEREVA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tempAvoirReplicatedOut",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ecoulemetTocreateIndex",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "computation"
						},
						{
							"name": "createIndex"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn3"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tcanal as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as integer,\n\t\tca_ecoulement as float,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tsous_famille as string,\n\t\tarticle as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\torder as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementReplicated\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\torder as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirReplicated\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationDSCTEREVA\nDerivedColumn1 aggregate(groupBy(Article,\n\t\tyearmonth,\n\t\t{Canal distribution},\n\t\t{Org. commerciale},\n\t\t{Récept. de march.}),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_)) ~> Aggregate1\nfacturationDSCTEREVA derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toFloat(ca_cd_),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tca_livr_ = toFloat(ca_livr_),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_factur_ = toFloat(ca_factur_)) ~> DerivedColumn1\necoulementReplicated derive(qte = iif( qte_ecoulement<=0 , -1, 1)) ~> computation\ncomputation derive(ca_ecoulement = qte*ca_ecoulement,\n\t\tindexcol1 = agence_code+\"-\"+reference,\n\t\trcount = 1) ~> createIndex\navoirReplicated select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\torder,\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(Qte_Validee_VGF = iif(toInteger(Qte_Validee_VGF)<0, -1, 1),\n\t\tindexcols1 = Agence+\"-\"+NoArtVGF,\n\t\trcount = 1) ~> DerivedColumn3\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['avoirTocreateindex'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\ncreateIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['ecoulementToCreateindex'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecoulementReplicated')]",
				"[concat(variables('factoryId'), '/datasets/avoirReplicated')]",
				"[concat(variables('factoryId'), '/datasets/facturationDSCTEREVA')]",
				"[concat(variables('factoryId'), '/datasets/tempAvoirReplicatedOut')]",
				"[concat(variables('factoryId'), '/datasets/ecoulemetTocreateIndex')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InEcoulementWithIndexDSC",
								"type": "DatasetReference"
							},
							"name": "ecoulementwithIndex"
						},
						{
							"dataset": {
								"referenceName": "In_avoirwithIndex",
								"type": "DatasetReference"
							},
							"name": "avoirwithIndex"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_ATC4",
								"type": "DatasetReference"
							},
							"name": "referentielATC"
						},
						{
							"dataset": {
								"referenceName": "inFacturationDSC",
								"type": "DatasetReference"
							},
							"name": "facturation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outdsctereva2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "fullLeft"
						},
						{
							"name": "caFinal"
						},
						{
							"name": "RenameLeft"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "columnChoiceEcoulement"
						},
						{
							"name": "renameAvoir"
						},
						{
							"name": "inner"
						},
						{
							"name": "canal"
						},
						{
							"name": "idCanal"
						},
						{
							"name": "idCanalFinal"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueOffre"
						},
						{
							"name": "fullLeftOffre"
						},
						{
							"name": "EndInner",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "Union1"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "keepColumns"
						},
						{
							"name": "atcKeepingColumn"
						},
						{
							"name": "atcNotNull"
						},
						{
							"name": "uniqueATC"
						},
						{
							"name": "fullLeftATC"
						},
						{
							"name": "renameColumn"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "aggFacturation"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "innerFacturation"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "leftFacturation"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "EndunJoinedFacturation"
						},
						{
							"name": "endInerEcouFact"
						},
						{
							"name": "Union2"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Select5"
						},
						{
							"name": "DerivedColumn5"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Aggregate4"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Aggregate5"
						},
						{
							"name": "Filter4"
						},
						{
							"name": "DerivedColumn6"
						},
						{
							"name": "Aggregate6"
						},
						{
							"name": "Select6"
						},
						{
							"name": "Filter5"
						},
						{
							"name": "Aggregate7"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tNbLogement as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Créateur offre} as string,\n\t\tSource as string,\n\t\tUserLowerCase as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inner\ninner derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\"))) ~> canal\ncanal derive(id_canal_final = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(canal_final = iif(id_canal_final==43, \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement_retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\nSelect2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> Union1\nUnion1 derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\nSelect3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement = qte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id = marque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\natcKeepingColumn filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nkeepColumns, uniqueATC join({Code postal} == code_postal_atc\n\t&& canal_final == {Canal final}\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftATC\nSelect4 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumn\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_)) ~> typeCaste\ntypeCaste aggregate(groupBy(reference,\n\t\tHubSAPid,\n\t\tyearmonth),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_),\n\t\t{Canal distribution} = first({Canal distribution}),\n\t\t{Org commerciale} = first({Org commerciale}),\n\t\t{recept de march} = first({recept de march})) ~> Aggregate2\nDerivedColumn2 select(mapColumn(\n\t\tarticle = reference,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e = qt_cd_e,\n\t\tSum_ca_cd_ = ca_cd_,\n\t\tSum_qt_livr_e = qt_livr_e,\n\t\tSum_ca_livr_ = ca_livr_,\n\t\tSum_qt_factur_e = qt_factur_e,\n\t\tSum_ca_factur_ = ca_factur_,\n\t\ttempOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> aggFacturation\nkeepColumns aggregate(groupBy(yearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tdistributeur),\n\tSum_ca_ecoulement = sum(toDouble(ca_ecoulement)),\n\t\tSum_qte_ecoulement = sum(toDouble(qte_ecoulement))) ~> Aggregate3\nAggregate3, aggFacturation join(reference == article\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerFacturation\nfullLeftOffre select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nfullLeftATC select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nDerivedColumn3, aggFacturation join(reference == article\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> leftFacturation\ninnerFacturation derive(qt_plateforme_final = toDouble(Sum_qt_factur_e) - toDouble(Sum_qte_ecoulement),\n\t\tca_plateforme_final = Sum_ca_factur_ -  Sum_ca_ecoulement,\n\t\tdata_origin = \"facturation decrementé\") ~> DerivedColumn1\nAggregate2 derive(tempOrigin = \"facturation\") ~> DerivedColumn2\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> DerivedColumn3\nleftFacturation filter(isNull(DerivedColumn3@tempOrigin)) ~> Filter1\nSelect6 derive(qt_plateforme_final = toDouble(Sum_qt_factur_e),\n\t\tca_plateforme_final = Sum_ca_factur_,\n\t\tdata_origin = \"facturation\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\"),\n\t\tid_canal_final = id_canal_final) ~> DerivedColumn4\nDerivedColumn4 select(mapColumn(\n\t\treference = article,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code = {Org commerciale},\n\t\tmarque_name,\n\t\tPOSSAMidString = {recept de march},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndunJoinedFacturation\nDerivedColumn1 select(mapColumn(\n\t\tyearmonth = Aggregate3@yearmonth,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tid_canal_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\ttempOrigin,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endInerEcouFact\nEndunJoinedFacturation, endInerEcouFact union(byName: true)~> Union2\nDerivedColumn6 select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code,\n\t\tmarque_name,\n\t\tPOSSAMidString,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tmarque_id = marque_code,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\nrenameColumn, endDecrementation union(byName: true)~> Union3\nDerivedColumn5 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\t{Canal final},\n\t\t{ATC Performance},\n\t\t{code postal} = DerivedColumn5@{code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nUnion3 derive(marque_id = coalesce(marque_id , marque_code),\n\t\tid_canal_final = coalesce(id_canal_final ),\n\t\t{Canal final} = coalesce({Canal final} , canal_final),\n\t\t{code postal} = coalesce(code_postal_atc , {Code postal})) ~> DerivedColumn5\naggFacturation filter(toInteger({recept de march})==16012598 && toInteger(article)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter2\nFilter2 aggregate(sq = sum(Sum_qt_factur_e)) ~> Aggregate4\nendDecrementation filter(toInteger(HubSAPid)==16012598 && toInteger(reference)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter3\nFilter3 aggregate(sqte = sum(toDouble(qt_plateforme_final))) ~> Aggregate5\nEndunJoinedFacturation filter(toInteger(HubSAPid)==16012598 && toInteger(reference)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter4\nUnion2 derive(id_canal_final = toInteger(id_canal_final)) ~> DerivedColumn6\nFilter4 aggregate(column1 = sum( qt_plateforme_final )) ~> Aggregate6\nFilter1 select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\ttempOrigin = DerivedColumn3@tempOrigin,\n\t\tarticle,\n\t\tHubSAPid = aggFacturation@HubSAPid,\n\t\tyearmonth = aggFacturation@yearmonth,\n\t\tid_canal_final,\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e,\n\t\tSum_ca_cd_,\n\t\tSum_qt_livr_e,\n\t\tSum_ca_livr_,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nendInerEcouFact filter(toInteger(HubSAPid)==16012598 && toInteger(reference)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter5\nFilter5 aggregate(cons = sum(qt_plateforme_final)) ~> Aggregate7\nSelect5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelDSC'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InEcoulementWithIndexDSC')]",
				"[concat(variables('factoryId'), '/datasets/In_avoirwithIndex')]",
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/REFERENTIEL_ATC4')]",
				"[concat(variables('factoryId'), '/datasets/inFacturationDSC')]",
				"[concat(variables('factoryId'), '/datasets/outdsctereva2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA2_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InEcoulementWithIndexDSC",
								"type": "DatasetReference"
							},
							"name": "ecoulementwithIndex"
						},
						{
							"dataset": {
								"referenceName": "In_avoirwithIndex",
								"type": "DatasetReference"
							},
							"name": "avoirwithIndex"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_ATC4",
								"type": "DatasetReference"
							},
							"name": "referentielATC"
						},
						{
							"dataset": {
								"referenceName": "inFacturationDSC",
								"type": "DatasetReference"
							},
							"name": "facturation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outdsctereva2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "FacturationDecrementer",
								"type": "DatasetReference"
							},
							"name": "FacturationDecrementer"
						}
					],
					"transformations": [
						{
							"name": "fullLeft"
						},
						{
							"name": "caFinal"
						},
						{
							"name": "RenameLeft"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "columnChoiceEcoulement"
						},
						{
							"name": "renameAvoir"
						},
						{
							"name": "inner"
						},
						{
							"name": "canal"
						},
						{
							"name": "idCanal"
						},
						{
							"name": "idCanalFinal"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueOffre"
						},
						{
							"name": "fullLeftOffre"
						},
						{
							"name": "EndInner",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "Union1"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "keepColumns"
						},
						{
							"name": "atcKeepingColumn"
						},
						{
							"name": "atcNotNull"
						},
						{
							"name": "uniqueATC"
						},
						{
							"name": "fullLeftATC"
						},
						{
							"name": "renameColumn"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "aggFacturation"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "innerFacturation"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "leftFacturation"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "endFacturationDecrementer1"
						},
						{
							"name": "endFacturationDecrementer2"
						},
						{
							"name": "Union2"
						},
						{
							"name": "endFacturationDecrementer3"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Select5"
						},
						{
							"name": "DerivedColumn5"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tNbLogement as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Créateur offre} as string,\n\t\tSource as string,\n\t\tUserLowerCase as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inner\ninner derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\"))) ~> canal\ncanal derive(id_canal = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(id_canal_final = id_canal,\n\t\tcanal_final = iif(canal==\"43\", \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement_retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\nSelect2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tid_canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final = id_canal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> Union1\nUnion1 derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\nSelect3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement = qte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id = marque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tid_canal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\natcKeepingColumn filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nkeepColumns, uniqueATC join({Code postal} == code_postal_atc\n\t&& canal_final == {Canal final}\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftATC\nSelect4 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tid_canal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumn\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_)) ~> typeCaste\ntypeCaste aggregate(groupBy(reference,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\t{Canal distribution},\n\t\t{Org commerciale},\n\t\t{recept de march}),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_)) ~> Aggregate2\nDerivedColumn2 select(mapColumn(\n\t\tarticle = reference,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e = qt_cd_e,\n\t\tSum_ca_cd_ = ca_cd_,\n\t\tSum_qt_livr_e = qt_livr_e,\n\t\tSum_ca_livr_ = ca_livr_,\n\t\tSum_qt_factur_e = qt_factur_e,\n\t\tSum_ca_factur_ = ca_factur_,\n\t\ttempOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> aggFacturation\nkeepColumns aggregate(groupBy(yearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_name,\n\t\tmarque_id,\n\t\tid_canal_final,\n\t\tdistributeur),\n\tSum_ca_ecoulement = sum(toDouble(ca_ecoulement)),\n\t\tSum_qte_ecoulement = sum(toDouble(qte_ecoulement))) ~> Aggregate3\nAggregate3, aggFacturation join(reference == article\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerFacturation\nfullLeftOffre select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tid_canal = id_canal_final,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tid_canal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nfullLeftATC select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tid_canal,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nDerivedColumn3, aggFacturation join(reference == article\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> leftFacturation\ninnerFacturation derive(qt_plateforme_final = Sum_qt_factur_e - Sum_qte_ecoulement,\n\t\tca_plateforme_final = Sum_ca_factur_ -  Sum_ca_ecoulement,\n\t\tdata_origin = \"facturation decrementé\") ~> DerivedColumn1\nAggregate2 derive(tempOrigin = \"facturation\") ~> DerivedColumn2\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> DerivedColumn3\nleftFacturation filter(isNull(DerivedColumn3@tempOrigin)) ~> Filter1\nFilter1 derive(qt_plateforme_final = Sum_qt_factur_e,\n\t\tca_plateforme_final = Sum_ca_factur_,\n\t\tdata_origin = \"facturation\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\"),\n\t\tid_canal_final = toInteger(aggFacturation@id_canal_final)) ~> DerivedColumn4\nDerivedColumn4 select(mapColumn(\n\t\treference = article,\n\t\tdistributeur,\n\t\tHubSAPid = aggFacturation@HubSAPid,\n\t\tyearmonth = aggFacturation@yearmonth,\n\t\tid_canal_final,\n\t\tmarque_code = {Org commerciale},\n\t\tmarque_name,\n\t\tPOSSAMidString = {recept de march},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endFacturationDecrementer1\nDerivedColumn1 select(mapColumn(\n\t\tyearmonth = Aggregate3@yearmonth,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tid_canal_final = Aggregate3@id_canal_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\ttempOrigin,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endFacturationDecrementer2\nendFacturationDecrementer1, endFacturationDecrementer2 union(byName: true)~> Union2\nUnion2 select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code,\n\t\tmarque_name,\n\t\tPOSSAMidString,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tmarque_id,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endFacturationDecrementer3\nrenameColumn, endFacturationDecrementer3 union(byName: true)~> Union3\nDerivedColumn5 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\t{Canal final},\n\t\t{ATC Performance},\n\t\t{code postal} = DerivedColumn5@{code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nUnion3 derive(marque_id = coalesce(marque_id , marque_code),\n\t\tid_canal_final = coalesce(id_canal_final , id_canal),\n\t\t{Canal final} = coalesce({Canal final} , canal_final),\n\t\t{code postal} = coalesce(code_postal_atc , {Code postal})) ~> DerivedColumn5\nSelect5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelDSC'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nendFacturationDecrementer3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['FacturationDecrementer'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> FacturationDecrementer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InEcoulementWithIndexDSC')]",
				"[concat(variables('factoryId'), '/datasets/In_avoirwithIndex')]",
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/REFERENTIEL_ATC4')]",
				"[concat(variables('factoryId'), '/datasets/inFacturationDSC')]",
				"[concat(variables('factoryId'), '/datasets/outdsctereva2')]",
				"[concat(variables('factoryId'), '/datasets/FacturationDecrementer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DSC_ECOUL_INPUT",
								"type": "DatasetReference"
							},
							"name": "DSCINPUT"
						},
						{
							"dataset": {
								"referenceName": "DSC_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DSC_PIECE_DETACHEE",
								"type": "DatasetReference"
							},
							"name": "DSCPieceDetache"
						},
						{
							"dataset": {
								"referenceName": "DSC_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "outputNullQuantity"
						},
						{
							"dataset": {
								"referenceName": "DSC_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "preparedDSC"
						},
						{
							"dataset": {
								"referenceName": "DSC_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "orgaNotFound"
						}
					],
					"transformations": [
						{
							"name": "getMonthYear"
						},
						{
							"name": "KeepImportantColumn"
						},
						{
							"name": "notNullQuantity"
						},
						{
							"name": "columnFormat",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "pieceDetache"
						},
						{
							"name": "nullQuantity"
						},
						{
							"name": "notPieceDetache"
						},
						{
							"name": "monthToNumber"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "agenceCodeNotNull"
						},
						{
							"name": "posidNotNull"
						},
						{
							"name": "innerJoinWithOrga"
						},
						{
							"name": "fullLeftJoin"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "Cleansing"
						},
						{
							"name": "SumQuantity"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "InnerVentesDirecte"
						},
						{
							"name": "fullLeftVentesDirectes"
						},
						{
							"name": "removeQuantityVenteDirecte"
						},
						{
							"name": "Select1"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "Select2"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Union1"
						}
					],
					"script": "source(output(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSCINPUT\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Code client} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nDSCINPUT derive(month_name = split(split(fileName, \"_\")[1], \" \")[1],\n\t\tyear = split(split(fileName, \"_\")[1], \" \")[2]) ~> getMonthYear\ngetMonthYear select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tmonth_name,\n\t\tyear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> KeepImportantColumn\ncolumnFormat filter({Quantité en UV BL}!=0) ~> notNullQuantity\nKeepImportantColumn derive({Quantité en UV BL} = toDouble({Quantité en UV BL}),\n\t\t{Marque Code} = toDouble({Marque Code})) ~> columnFormat\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})>0) ~> pieceDetache\ncolumnFormat filter({Quantité en UV BL}==0) ~> nullQuantity\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})==0) ~> notPieceDetache\nnotPieceDetache derive(month = iif(month_name==\"janv\", \"01\", \r\n    iif(month_name==\"févr\",\"02\",\r\n    iif(month_name==\"mars\", \"03\", \r\n    iif(month_name==\"avr\", \"04\", \r\n    iif(month_name==\"mai\", \"05\", \r\n    iif(month_name==\"juin\", \"06\", \r\n    iif(month_name==\"juil\", \"07\", \r\n    iif(month_name==\"août\", \"08\", \r\n    iif(month_name==\"sept\", \"09\", \r\n    iif(month_name==\"oct\", \"10\", \r\n    iif(month_name==\"nov\", \"11\", \r\n    iif(month_name==\"déc\", \"12\", \"0\"))))))))))))) ~> monthToNumber\nmonthToNumber derive(yearmonth = year+month) ~> yearmonth\nyearmonth filter(!isNull({Agence Code})) ~> agenceCodeNotNull\nAggregate1 filter(!isNull(POSid)) ~> posidNotNull\nagenceCodeNotNull, posidNotNull join({Agence Code} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerJoinWithOrga\nagenceCodeNotNull, posidNotNull join({Agence Code} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftJoin\nfullLeftJoin filter(!isNull({Agence Code})) ~> leftOuter\nventesDirectes derive({Org. commerciale} = replace({Org. commerciale}, \" \", \"\"),\n\t\t{Qté facturée} = toDouble({Qté facturée}),\n\t\tyearmonth = replace(yearmonth, \" \", \"\"),\n\t\tArticle = replace(Article, \" \", \"\")) ~> Cleansing\nCleansing aggregate(groupBy(yearmonth,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> SumQuantity\nSumQuantity select(mapColumn(\n\t\tyearmonth_right = yearmonth,\n\t\tArticle_right = Article,\n\t\t{Code client_right} = {Code client},\n\t\t{Qté vente directe} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\ninnerJoinWithOrga, RenameColumn join(yearmonth == yearmonth_right\n\t&& {Référence Article Fournisseur} == Article_right\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerVentesDirecte\ninnerJoinWithOrga, RenameColumn join(yearmonth == yearmonth_right\n\t&& {Référence Article Fournisseur} == Article_right\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftVentesDirectes\nInnerVentesDirecte derive({Quantité en UV BL} = {Quantité en UV BL}-{Qté vente directe}) ~> removeQuantityVenteDirecte\nremoveQuantityVenteDirecte select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tmonth_name,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\tBrandID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nfullLeftVentesDirectes filter(isNull(yearmonth_right) || isNull(Article_right) || isNull({Code client_right})) ~> outerLeft\nouterLeft select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tmonth_name,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nUnion1 select(mapColumn(\n\t\tmarque_file = {Marque DESC},\n\t\tsous_famille = {Sous Famille},\n\t\treference = {Référence Article Fournisseur},\n\t\tagence_code = {Agence Code},\n\t\tdepartement_id = {Département ID},\n\t\tqte_ecoulement = {Quantité en UV BL},\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nSelect1 derive(departement_id = toDouble(''),\n\t\tprix_unitaire_std = toDouble(''),\n\t\tdistributeur = \"DSC\") ~> Addcolumn\norganisation aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tPOSSAMidString = first(POSSAMidString),\n\t\tHubSAPid = first(HubSAPid),\n\t\tBrandID = first(BrandID)) ~> Aggregate1\nAddcolumn, Select2 union(byName: true)~> Union1\npieceDetache sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DSCPieceDetache\nnullQuantity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_QTE_NULL'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputNullQuantity\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string\n\t),\n\tpartitionFileNames:['DSC_ECOUL_PREPARED'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> preparedDSC\nleftOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> orgaNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DSC_ECOUL_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DSC_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES')]",
				"[concat(variables('factoryId'), '/datasets/DSC_PIECE_DETACHEE')]",
				"[concat(variables('factoryId'), '/datasets/DSC_QTE_NULL')]",
				"[concat(variables('factoryId'), '/datasets/DSC_ECOUL_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/DSC_ORGANISATION_NOTFOUND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EHS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EHS",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "OrganisationEHS",
								"type": "DatasetReference"
							},
							"name": "OrganisationEHS"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "VenteDirecte"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieEHS",
								"type": "DatasetReference"
							},
							"name": "SoriteEHS"
						},
						{
							"dataset": {
								"referenceName": "EHSOrganiationNotfound",
								"type": "DatasetReference"
							},
							"name": "EHSOrganisationNotfound"
						}
					],
					"transformations": [
						{
							"name": "ConvertMonth"
						},
						{
							"name": "ExtractMonthYear"
						},
						{
							"name": "FiltrerCIA"
						},
						{
							"name": "FiltreCPCoop"
						},
						{
							"name": "UniqueCpCoopHubsApid"
						},
						{
							"name": "InnerJoinCIACPCoop"
						},
						{
							"name": "JoinLeftCIACPCoop"
						},
						{
							"name": "JoinVenteDirect"
						},
						{
							"name": "QuantiteesLivres"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Reference"
						},
						{
							"name": "distributeur"
						},
						{
							"name": "RenamePOSSAMIDstring"
						},
						{
							"name": "RenameMarqueFile"
						}
					],
					"script": "source(output(\n\t\tMarques as string,\n\t\t{Région} as string,\n\t\t{Nom Agence} as string,\n\t\tCIA as string,\n\t\t{Département} as string,\n\t\t{Référence Article} as string,\n\t\t{Description Article} as string,\n\t\t{Catégorie Achat} as string,\n\t\t{Quantitées livrées} as string,\n\t\tstr_mois as string,\n\t\tyear as string,\n\t\t{Gestion entrepôt} as string,\n\t\t{Marques/ Constructeur} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\t{Nom Coopérative} as string,\n\t\t{CP Coop.} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string,\n\t\tDept as string,\n\t\t{Code Postal} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrganisationEHS\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> VenteDirecte\nsource1 derive(month = iif(str_mois==\"janvier\", \"01\",     \r\n iif(str_mois==\"février\",\"02\",    \r\n  iif(str_mois==\"mars\", \"03\",      \r\n  iif(str_mois==\"avril\", \"04\",      \r\n  iif(str_mois==\"mai\", \"05\",      \r\n  iif(str_mois==\"juin\", \"06\",      \r\n  iif(str_mois==\"juillet\", \"07\",      \r\n  iif(str_mois==\"Août\", \"08\",      \r\n  iif(str_mois==\"Septembre\", \"09\",      \r\n  iif(str_mois==\"Octobre\", \"10\",      \r\n  iif(str_mois==\"Novembre\", \"11\",      \r\n  iif(str_mois==\"Décembre\", \"12\", \"0\"))))))))))))) ~> ConvertMonth\nConvertMonth derive(yearmonth = year+month) ~> ExtractMonthYear\nExtractMonthYear filter(!isNull(CIA)) ~> FiltrerCIA\nOrganisationEHS filter(!isNull({CP Coop.})) ~> FiltreCPCoop\nFiltreCPCoop aggregate(groupBy({CP Coop.},\n\t\tHubSAPid),\n\t{Nom Coopérative} = max({Nom Coopérative}),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tBrandID = max(BrandID),\n\t\tDept = max(Dept),\n\t\t{Code Postal} = max({Code Postal})) ~> UniqueCpCoopHubsApid\nFiltrerCIA, UniqueCpCoopHubsApid join(CIA == {CP Coop.},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoinCIACPCoop\nFiltrerCIA, UniqueCpCoopHubsApid join(CIA == {CP Coop.},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLeftCIACPCoop\nInnerJoinCIACPCoop, Rename join({Référence Article} == Article\n\t&& ExtractMonthYear@yearmonth == Rename@yearmonth\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinVenteDirect\nJoinVenteDirect derive({Quantitées livrées} = toDouble({Quantitées livrées}) - coalesce(toDouble({Qté vente directe}) , 0)) ~> QuantiteesLivres\nVenteDirecte select(mapColumn(\n\t\tyearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe} = {Qt� vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nQuantiteesLivres derive(reference = replace({Référence Article}, 'SDU', '')) ~> Reference\nReference derive(distributeur = \"EHS\") ~> distributeur\ndistributeur select(mapColumn(\n\t\tmarque_str = Marques,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tagence_code = CIA,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\tqte_ecoulement = {Quantitées livrées},\n\t\tstr_mois,\n\t\tyear,\n\t\t{Gestion entrepôt},\n\t\t{Marques/ Constructeur},\n\t\tmonth,\n\t\tyearmonth = ExtractMonthYear@yearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMidString = POSSAMid,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code postal} = {Code Postal},\n\t\tyearmonth = Rename@yearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe},\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenamePOSSAMIDstring\nRenamePOSSAMIDstring select(mapColumn(\n\t\tmarque_file = marque_str,\n\t\t{Région},\n\t\t{Nom Agence},\n\t\tagence_code,\n\t\t{Département},\n\t\t{Référence Article},\n\t\t{Description Article},\n\t\t{Catégorie Achat},\n\t\tqte_ecoulement,\n\t\tstr_mois,\n\t\tyear,\n\t\t{Gestion entrepôt},\n\t\t{Marques/ Constructeur},\n\t\tmonth,\n\t\tyearmonth,\n\t\t{CP Coop.},\n\t\tHubSAPid,\n\t\t{Nom Coopérative},\n\t\tPOSSAMidString,\n\t\tBrandID,\n\t\tDept,\n\t\t{Code postal},\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe},\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameMarqueFile\nRenameMarqueFile sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SortieEcoulementEHS'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SoriteEHS\nJoinLeftCIACPCoop sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['EHSOrganisationNotfound'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> EHSOrganisationNotfound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EHS')]",
				"[concat(variables('factoryId'), '/datasets/OrganisationEHS')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/SortieEHS')]",
				"[concat(variables('factoryId'), '/datasets/EHSOrganiationNotfound')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FINITION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL/OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "offreInDiffus",
								"type": "DatasetReference"
							},
							"name": "diffus"
						},
						{
							"dataset": {
								"referenceName": "offreInChantier",
								"type": "DatasetReference"
							},
							"name": "chantier"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "stg_offre",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Union1"
						},
						{
							"name": "Arrange"
						},
						{
							"name": "rename"
						}
					],
					"script": "source(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tcanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> diffus\nsource(output(\n\t\tDateOffre as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Numéro interne 2} as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\t{Créateur offre} as string,\n\t\tCanal as string,\n\t\tSource as string,\n\t\tUserLowerCase as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> chantier\nrename, Arrange union(byName: true)~> Union1\nchantier select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\tProduit,\n\t\t{Quantité},\n\t\tResponsable,\n\t\tOffre,\n\t\t{Créateur offre},\n\t\tCanal,\n\t\tUserLowerCase\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Arrange\ndiffus select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tCodeATC,\n\t\tCanal = canal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix client} as string,\n\t\t{Prix négoce} as string,\n\t\t{Prix total} as string,\n\t\tClient as string,\n\t\t{Type financement} as string,\n\t\t{Ville client} as string,\n\t\t{Numéro interne 1} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Typologie projet} as string,\n\t\tDateValidite as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\tCanal as string\n\t),\n\tpartitionFileNames:['stg_offre'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/offreInDiffus')]",
				"[concat(variables('factoryId'), '/datasets/offreInChantier')]",
				"[concat(variables('factoryId'), '/datasets/stg_offre')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "RH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "dataCommerciale"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "levierPerformance"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "output"
						},
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_PERFORMANCE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "cleansingInput"
						},
						{
							"name": "cleansingPlateformes"
						},
						{
							"name": "innerPlateformes"
						},
						{
							"name": "innerTypeDeVente"
						},
						{
							"name": "fullLeftPlateforme"
						},
						{
							"name": "outerLeftPlateforme"
						},
						{
							"name": "Select1"
						},
						{
							"name": "leftTypeDeVente"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Rename"
						},
						{
							"name": "typeParse"
						},
						{
							"name": "ATCandDistributeurNotNull"
						},
						{
							"name": "newColumn"
						},
						{
							"name": "RecordID"
						},
						{
							"name": "Select3"
						},
						{
							"name": "YEARFILTER"
						},
						{
							"name": "splitting"
						},
						{
							"name": "FlattenHierarchie"
						},
						{
							"name": "FlattenMarque"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "lenHierarchie3"
						},
						{
							"name": "innerLevier"
						},
						{
							"name": "Select4"
						},
						{
							"name": "levierCA"
						},
						{
							"name": "Pivot1"
						},
						{
							"name": "levierQA"
						},
						{
							"name": "Pivot2"
						},
						{
							"name": "Union2"
						},
						{
							"name": "lenHierarchieNot3"
						},
						{
							"name": "innerLevier2"
						},
						{
							"name": "levierQA2"
						},
						{
							"name": "Pivot3"
						},
						{
							"name": "levierCA2"
						},
						{
							"name": "Pivot4"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Union4"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "libelleLevier"
						},
						{
							"name": "uniqueLevier"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\t{Canal distribution} as string,\n\t\t{nom du canal} as string,\n\t\tcanal_distribution_final as string,\n\t\tcanal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tqt_ecc_enrichi as string,\n\t\tca_ecc_enrichi as string,\n\t\tqte_ecoulement as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tsource_atc as string,\n\t\tSuccessor as string,\n\t\tCDis as string,\n\t\tPredecessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Deb val} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tca_ecoulement as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Nom du compte} as string,\n\t\t{Numero Interne_ Groupe cible/Typologie générale} as string,\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Numero Interne_ Compte principal: Numéro du compte} as string,\n\t\t{Numero Interne_ Compte principal: Nom du compte} as string,\n\t\t{Jour calendaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10000,\n\tignoreNoFilesFound: false) ~> dataCommerciale\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10000,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nsource(output(\n\t\t{Année} as string,\n\t\tDocumentation as string,\n\t\tMarque as string,\n\t\tCible as string,\n\t\t{Périmètre} as string,\n\t\tLevier as string,\n\t\tCanal as string,\n\t\t{Hiérarchie inclues} as string,\n\t\t{Hiérarchies exclues} as string,\n\t\tType as string,\n\t\t{Valeur Annuelle} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levierPerformance\ndataCommerciale filter(instr(lower({origine de la ligne}), \"ecoulement\") > 0 || lower({origine de la ligne}) == \"facturation avec matching\") ~> Filter1\nSelect4 derive(HubSAPid = trim(HubSAPid, \" \")) ~> cleansingInput\nPLATEFORMES derive(HubSAPid = trim(HubSAPid, \" \")) ~> cleansingPlateformes\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerPlateformes\ninnerPlateformes derive({Type de vente} = WholeSalerID) ~> innerTypeDeVente\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftPlateforme\nfullLeftPlateforme filter(isNull(cleansingPlateformes@HubSAPid)) ~> outerLeftPlateforme\nouterLeftPlateforme select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque = marque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive({Type de vente} = \"Ventes directes\") ~> leftTypeDeVente\nSelect2, leftTypeDeVente union(byName: true)~> Union1\ninnerTypeDeVente select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tmarque,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nUnion1 select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tcanal_jointure = canal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente},\n\t\tOrgCm = marque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nRename derive({Canal distribution} = toInteger(canal_jointure),\n\t\tid_canal_final = toInteger(canal_jointure),\n\t\tcanal = toInteger(canal_jointure),\n\t\tid_canal = toInteger(canal_jointure),\n\t\t{Canal Final} = toInteger(canal_jointure)) ~> typeParse\ntypeParse filter(!isNull(ATC) && !isNull(distributeur)) ~> ATCandDistributeurNotNull\nFilter3 derive({diffus/chantier} = trim(split(Cible, \" \")[2], \" \"),\n\t\tID_KPI = \"Sum_XRow_\"+toString(RecordID)) ~> newColumn\nuniqueLevier keyGenerate(output(RecordID as long),\n\tstartAt: 1L) ~> RecordID\nnewColumn select(mapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie = {Hiérarchie inclues},\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nlevierPerformance filter({Année}==\"2020\") ~> YEARFILTER\nSelect3 derive(Marque = split(Marque, \".\"),\n\t\tCanal = split(Canal, \",\"),\n\t\tHierarchie = split(Hierarchie, \",\")) ~> splitting\nFlattenCanal foldDown(unroll(Hierarchie),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenHierarchie\nsplitting foldDown(unroll(Marque),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenMarque\nFlattenMarque foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenHierarchie filter(length(Hierarchie)==3) ~> lenHierarchie3\nATCandDistributeurNotNull, lenHierarchie3 join(OrgCm == Marque\n\t&& lower(canal_final) == {diffus/chantier}\n\t&& canal_jointure == FlattenHierarchie@Canal\n\t&& N2locale == Hierarchie\n\t&& year == {Année},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerLevier\nFilter1 select(mapColumn(\n\t\tdistributeur = {plateforme/vente directe},\n\t\tdata_origin = {origine de la ligne},\n\t\treference = {code produit},\n\t\tyearmonth,\n\t\tHubSAPid = {code client plateforme livree},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final = quantite,\n\t\tca_final = ca,\n\t\tcanal_final,\n\t\tPOSSAMidString = {Code client livré},\n\t\tmarque_name = marque,\n\t\tno_offre,\n\t\tHierarchiegroupe = {Hiérarchgroupe},\n\t\tHierarchielocale = {Hiérarchlocale},\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation = N1groupedesignation,\n\t\tN2GroupeDesignation = N2groupedesignation,\n\t\tN3GroupeDesignation = N3groupedesignation,\n\t\tN4GroupeDesignation = N4groupedesignation,\n\t\tN5GroupeDesignation = N5groupedesignation,\n\t\tN6GroupeDesignation = N6groupedesignation,\n\t\tN7GroupeDesignation = N7groupedesignation,\n\t\tN1LocalDesignation = N1localedesignation,\n\t\tN2LocalDesignation = N2localedesignation,\n\t\tN3LocalDesignation = N3localedesignation,\n\t\tN4LocalDesignation = N4localedesignation,\n\t\tN6LocalDesignation = N6localedesignation,\n\t\tN7LocalDesignation = N7localedesignation,\n\t\t{Code postal},\n\t\tmarque = marque_code,\n\t\tATC = {ATC Performance},\n\t\tATC1 = {ATC livré},\n\t\tATC2 = {ATC offre},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tN5LocalDesignation = N5localedesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\ninnerLevier filter(Type==\"CA\") ~> levierCA\nlevierCA pivot(groupBy(year,\n\t\tmonth,\n\t\tATC,\n\t\t{Type de vente},\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(ca_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot1\ninnerLevier filter(Type==\"Quantité\") ~> levierQA\nlevierQA pivot(groupBy(year,\n\t\tmonth,\n\t\tATC,\n\t\t{Type de vente},\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(qt_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot2\nPivot1, Pivot2 union(byName: true)~> Union2\nFlattenHierarchie filter(length(Hierarchie)!=3) ~> lenHierarchieNot3\nATCandDistributeurNotNull, lenHierarchieNot3 join(OrgCm == Marque\n\t&& canal_jointure == FlattenHierarchie@Canal\n\t&& lower(canal_final) == {diffus/chantier}\n\t&& N1locale == Hierarchie\n\t&& year == {Année},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerLevier2\ninnerLevier2 filter(Type==\"Quantité\") ~> levierQA2\nlevierQA2 pivot(groupBy(year,\n\t\tmonth,\n\t\tATC,\n\t\t{Type de vente},\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(qt_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot3\ninnerLevier2 filter(Type==\"CA\") ~> levierCA2\nlevierCA2 pivot(groupBy(year,\n\t\tmonth,\n\t\tATC,\n\t\t{Type de vente},\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(ca_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot4\nPivot3, Pivot4 union(byName: true)~> Union3\nUnion2, Union3 union(byName: true)~> Union4\nRecordID filter(!isNull(Documentation) || !isNull(Levier)) ~> Filter3\nYEARFILTER derive({Libellé levié} = Levier+\"-\"+Documentation+\" \"+Cible+\" \"+{Périmètre}+\" \"+iif({Valeur Annuelle}==\"YES\", \"Annuel\", \"Mensuel\")) ~> libelleLevier\nlibelleLevier aggregate(groupBy({Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\t{Hiérarchie inclues},\n\t\t{Hiérarchies exclues},\n\t\tType,\n\t\t{Valeur Annuelle}),\n\t{Libellé levié} = max({Libellé levié})) ~> uniqueLevier\nuniqueLevier aggregate(groupBy({Libellé levié}),\n\tcount = count({Libellé levié})) ~> Aggregate1\nUnion4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TEMP_LEVIERS_RH'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['TEMP_LEVIER_PERFORMANCE'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BASE_COMMERCIALE')]",
				"[concat(variables('factoryId'), '/datasets/PLATEFORMES')]",
				"[concat(variables('factoryId'), '/datasets/REFERENTIEL_LEVIER_RH')]",
				"[concat(variables('factoryId'), '/datasets/TEMP_LEVIER_RH')]",
				"[concat(variables('factoryId'), '/datasets/TEMP_LEVIER_PERFORMANCE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MABILE_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MABILE_ECOULEMENT_INPUT",
								"type": "DatasetReference"
							},
							"name": "MabilleSaunierDuvale"
						},
						{
							"dataset": {
								"referenceName": "MABILE_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "OrganisationMabilleSonac"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MABILE_ECOULEMENT_OUTPUT",
								"type": "DatasetReference"
							},
							"name": "out"
						},
						{
							"dataset": {
								"referenceName": "MABILE_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "MabileQteNull"
						},
						{
							"dataset": {
								"referenceName": "MABILE_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						}
					],
					"transformations": [
						{
							"name": "ExtractYearAndMonth"
						},
						{
							"name": "FiltreQteMois"
						},
						{
							"name": "Extractyearmonth"
						},
						{
							"name": "FiltreQteMoisANull"
						},
						{
							"name": "FiltreRefFournisseur"
						},
						{
							"name": "caEcoulementAndAgenceClient"
						},
						{
							"name": "FiltreAgenceClient"
						},
						{
							"name": "POSid"
						},
						{
							"name": "FiltrePOSid"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "leftOuterOrganisation"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "substractVentesDirectes"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "leftOuterVentesDirectes"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "endVenteDirect"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Filter3"
						}
					],
					"script": "source(output(\n\t\t{Activité} as string,\n\t\t{Fournisseur Groupe} as string,\n\t\t{Société} as string,\n\t\tCode as string,\n\t\tFournisseur as string,\n\t\t{Agence du client} as string,\n\t\t{Code article} as string,\n\t\t{Libellé article} as string,\n\t\t{Ref fournisseur} as string,\n\t\t{Qté Mois A-1} as string,\n\t\t{Qté Cumul A-1} as string,\n\t\t{VVA Mois A-1} as string,\n\t\t{VVA Cumul A-1} as string,\n\t\t{Qté Mois A} as string,\n\t\t{Qté Cumul A} as string,\n\t\t{VVA Mois A} as string,\n\t\t{VVA Cumul A} as string,\n\t\tfileName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MabilleSaunierDuvale\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string,\n\t\tCommentaire as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrganisationMabilleSonac\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nFilter2 derive(month = substring(yearmonth, 5, 2),\n\t\tyear = substring(yearmonth, 1, 4),\n\t\torigin = \"ecoulement\") ~> ExtractYearAndMonth\nExtractYearAndMonth filter(not({Qté Mois A}=='0')) ~> FiltreQteMois\nFilter3 derive(yearmonth = regexExtract(fileName , '(\\\\d+)')) ~> Extractyearmonth\nExtractYearAndMonth filter({Qté Mois A}=='0') ~> FiltreQteMoisANull\nFiltreQteMois filter({Ref fournisseur}!='') ~> FiltreRefFournisseur\nFiltreRefFournisseur derive({Agence du client} = replace(replace({Agence du client}, \" \", \"\"), \"ETS\", \"\"),\n\t\t{Qté Mois A} = toDouble({Qté Mois A})) ~> caEcoulementAndAgenceClient\ncaEcoulementAndAgenceClient filter({Agence du client} != '') ~> FiltreAgenceClient\nOrganisationMabilleSonac derive(POSid = replace( replace({POSid}, \" \", \"\"),'ETS','' )) ~> POSid\nPOSid filter(!isNull(POSid)) ~> FiltrePOSid\nFiltrePOSid aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID),\n\t\tCommentaire = max(Commentaire)) ~> uniqueOrganisation\nFiltreAgenceClient, uniqueOrganisation join({Agence du client} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\nFiltreAgenceClient, uniqueOrganisation join({Agence du client} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull(POSid)) ~> leftOuterOrganisation\ninnerOrganisation, ventesDirectes join(Extractyearmonth@yearmonth == ventesDirectes@yearmonth\n\t&& {Code article} == Article\n\t&& POSSAMidString == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerVentesDirectes derive({Qté Mois A} = toDouble({Qté Mois A})-toDouble({Qt� vente directe})) ~> substractVentesDirectes\ninnerOrganisation, endVenteDirect join(Extractyearmonth@yearmonth == ventesDirectes@yearmonth\n\t&& {Code article} == Article\n\t&& POSSAMidString == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(torigin)) ~> leftOuterVentesDirectes\nSelect2, Select3 union(byName: true)~> Union1\nUnion1 select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsubstractVentesDirectes select(mapColumn(\n\t\t{Activité},\n\t\t{Fournisseur Groupe},\n\t\t{Société},\n\t\tCode,\n\t\tFournisseur,\n\t\t{Agence du client},\n\t\t{Code article},\n\t\t{Libellé article},\n\t\t{Ref fournisseur},\n\t\t{Qté Mois A-1},\n\t\t{Qté Cumul A-1},\n\t\t{VVA Mois A-1},\n\t\t{VVA Cumul A-1},\n\t\t{Qté Mois A},\n\t\t{Qté Cumul A},\n\t\t{VVA Mois A},\n\t\t{VVA Cumul A},\n\t\tfileName,\n\t\tyearmonth = Extractyearmonth@yearmonth,\n\t\tmonth,\n\t\tyear,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tCommentaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nleftOuterVentesDirectes select(mapColumn(\n\t\t{Activité},\n\t\t{Fournisseur Groupe},\n\t\t{Société},\n\t\tCode,\n\t\tFournisseur,\n\t\t{Agence du client},\n\t\t{Code article},\n\t\t{Libellé article},\n\t\t{Ref fournisseur},\n\t\t{Qté Mois A-1},\n\t\t{Qté Cumul A-1},\n\t\t{VVA Mois A-1},\n\t\t{VVA Cumul A-1},\n\t\t{Qté Mois A},\n\t\t{Qté Cumul A},\n\t\t{VVA Mois A},\n\t\t{VVA Cumul A},\n\t\tfileName,\n\t\tyearmonth = Extractyearmonth@yearmonth,\n\t\tmonth,\n\t\tyear,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID,\n\t\tCommentaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nAddcolumn select(mapColumn(\n\t\tmarque_file = {Fournisseur Groupe},\n\t\tagence_code = {Agence du client},\n\t\tarticle = {Libellé article},\n\t\treference = {Ref fournisseur},\n\t\tqte_ecoulement = {Qté Mois A},\n\t\tyearmonth,\n\t\tmonth,\n\t\tyear,\n\t\tHubSAPid,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubName,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nSelect1 derive(distributeur = \"MABILLE\") ~> Addcolumn\nventesDirectes derive(torigin = \"vente direct\") ~> endVenteDirect\nExtractyearmonth filter(!isNull(yearmonth)) ~> Filter2\nMabilleSaunierDuvale filter(length(fileName)>3) ~> Filter3\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Représentant} as string,\n\t\t{N° Département} as string,\n\t\t{Département} as string,\n\t\t{Code point de vente} as string,\n\t\t{Libellé point de vente} as string,\n\t\t{Code Depot source} as string,\n\t\t{Code client} as string,\n\t\tClient as string,\n\t\t{N° Siret} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Année livraison} as string,\n\t\t{Mois livraison} as string,\n\t\t{code fournisseur} as string,\n\t\t{fournisseur principal} as string,\n\t\t{Code produit} as string,\n\t\tproduit as string,\n\t\t{Réference} as string,\n\t\t{Qte en unité de vente} as string,\n\t\t{Montant prv net} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['MABILLE_ECOUL_PREPARED'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> out\nFiltreQteMoisANull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MabileQteNull\nleftOuterOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> organisationNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MABILE_ECOULEMENT_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_ECOULEMENT_OUTPUT')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_QTE_NULL')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_ORGANISATION_NOTFOUND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MAILLARD_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MAILLARD_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "output"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						}
					],
					"transformations": [
						{
							"name": "quantityNotNull"
						},
						{
							"name": "cleansingEcoulement",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "getYear"
						},
						{
							"name": "yearMonth"
						},
						{
							"name": "depotNotNull"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "notNull"
						},
						{
							"name": "uniqueAgenceAndHubsapID"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "outerleftOrganisation"
						},
						{
							"name": "cleansingVentesDirectes"
						},
						{
							"name": "sumQuantity"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerleftVentesDirectes"
						},
						{
							"name": "enleverVentesDirectes"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "marqueFile"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{Société} as string,\n\t\t{Dépot} as string,\n\t\tMois as string,\n\t\t{Code GTAC} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\t{Quantité} as string,\n\t\tValeur as string,\n\t\t{Quantité n-1} as string,\n\t\t{Valeur n-1} as string,\n\t\t{CP Dépôt} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Nom Agence (Code)} as string,\n\t\t{CP Agence} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Code client} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\necoulement filter(!isNull({Quantité})) ~> quantityNotNull\nquantityNotNull derive({Quantité} = toDouble({Quantité})) ~> cleansingEcoulement\ncleansingEcoulement derive(Year = split(Mois, \"/\")[2],\n\t\tMonth = split(Mois, \"/\")[1]) ~> getYear\ngetYear derive(Yearmonth = concat(Year, Month)) ~> yearMonth\nyearMonth filter(!isNull({Dépot})) ~> depotNotNull\norganisation derive({Nom Agence (Code)} = trim({Nom Agence (Code)}, \" \"),\n\t\tHubSAPid = trim({HubSAPid}, \" \")) ~> cleansing\ncleansing filter(!isNull({Nom Agence (Code)})) ~> notNull\nnotNull aggregate(groupBy({Nom Agence (Code)},\n\t\tHubSAPid),\n\t{CP Agence} = max({CP Agence}),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tBrandID = max(BrandID)) ~> uniqueAgenceAndHubsapID\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull({Nom Agence (Code)})) ~> outerleftOrganisation\nventesDirectes derive({Code client} = trim({Code client}, \" \"),\n\t\t{Qté facturée} = toDouble({Qté facturée}),\n\t\tyearmonth = trim(yearmonth, \" \"),\n\t\tArticle = trim(Article, \" \")) ~> cleansingVentesDirectes\ncleansingVentesDirectes aggregate(groupBy(yearmonth,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> sumQuantity\nDerivedColumn1, typeCaste join(DerivedColumn1@Yearmonth == typeCaste@yearmonth\n\t&& {Référence} == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\nRename derive(yearmonth = toString(yearmonth),\n\t\tArticle = toString(Article),\n\t\t{Code client} = toString({Code client})) ~> typeCaste\nDerivedColumn1, typeCaste join(DerivedColumn1@Yearmonth == typeCaste@yearmonth\n\t&& {Référence} == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(typeCaste@yearmonth) || isNull(Article) || isNull({Code client})) ~> outerleftVentesDirectes\ninnerVentesDirectes derive({Quantité} = {Quantité}-{Qté ventes directes}) ~> enleverVentesDirectes\nsumQuantity select(mapColumn(\n\t\tyearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté ventes directes} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nenleverVentesDirectes, outerleftVentesDirectes union(byName: true)~> Union1\nUnion1 derive(marque_file = iif(toInteger(BrandID)==1604, \"saunier\", \"vaillant\"),\n\t\t{Société} = upper({Société})) ~> marqueFile\nmarqueFile select(mapColumn(\n\t\tdistributeur = {Société},\n\t\treference = {Référence},\n\t\tarticle = {Désignation},\n\t\tqte_ecoulement = {Quantité},\n\t\tca_ecoulement = Valeur,\n\t\t{Code postal} = {CP Dépôt},\n\t\tyear = Year,\n\t\tmonth = Month,\n\t\tyearmonth = Union1@Yearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tmarque_id = BrandID,\n\t\tmarque_file\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\ninnerOrganisation derive(Yearmonth = replace(Yearmonth, \" \", \"\")) ~> DerivedColumn1\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0} as string,\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1} as string,\n\t\tSaunierDuval as string,\n\t\t{01000} as string,\n\t\t{01999} as string,\n\t\t{nicolas hernandez} as string,\n\t\t{Conseiller Technique Thermodynamique} as string,\n\t\t{01} as string,\n\t\t{1647-Rhône-Alpes Auvergne} as string,\n\t\t{16400092} as string,\n\t\t{nicolas julien} as string,\n\t\t{SD diffus} as string,\n\t\t{NICOLAS Julien} as string,\n\t\t{16566798} as string,\n\t\tProp_14 as string\n\t),\n\tpartitionFileNames:['MAILLARD_ECOUL_PREPARED'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output\nouterleftOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MAILLARD_ORGANISATION_NOTFOUND'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MAILLARD_ECOULEMENT')]",
				"[concat(variables('factoryId'), '/datasets/MAILLARD_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES')]",
				"[concat(variables('factoryId'), '/datasets/MAILLARD_ECOUL_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/MAILLARD_ORGANISATION_NOTFOUND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Marketing')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE MARKETING"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "HierarchieMKT_SD",
								"type": "DatasetReference"
							},
							"name": "HierarchieMKTSD"
						},
						{
							"dataset": {
								"referenceName": "HierarchieMKT_VA",
								"type": "DatasetReference"
							},
							"name": "HerarchieMKTVA"
						},
						{
							"dataset": {
								"referenceName": "StgOffreChantier",
								"type": "DatasetReference"
							},
							"name": "StgOffreChantier"
						},
						{
							"dataset": {
								"referenceName": "HIERARCHI_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "ArticleHierarchi"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SORTIE_MARKETING",
								"type": "DatasetReference"
							},
							"name": "Smarketing"
						}
					],
					"transformations": [
						{
							"name": "Map"
						},
						{
							"name": "TypologieClientIndirect"
						},
						{
							"name": "marqueSaunier"
						},
						{
							"name": "marqueVaillant"
						},
						{
							"name": "select"
						},
						{
							"name": "Select2"
						},
						{
							"name": "UnionMKT"
						},
						{
							"name": "Joindre1"
						},
						{
							"name": "Joindre2"
						},
						{
							"name": "FiltreCanalDiffusTrue"
						},
						{
							"name": "FiltreCanalDiffusFalse"
						},
						{
							"name": "FiltreCanalChantierTrue"
						},
						{
							"name": "FiltrerCanalChantierFalse"
						},
						{
							"name": "UniqueStgOffreChantier"
						},
						{
							"name": "TypologieOffreSIdiffus"
						},
						{
							"name": "Union1"
						},
						{
							"name": "JoinStgCanalChantieTrue"
						},
						{
							"name": "NoOffreVide"
						},
						{
							"name": "RemoveColumns1",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "UnionMKTR"
						},
						{
							"name": "FiltreLeft"
						},
						{
							"name": "RemoveColumns3",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "selectmarquee"
						},
						{
							"name": "UniqueArticle"
						},
						{
							"name": "Join"
						},
						{
							"name": "SelectLast"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\t{Canal distribution} as string,\n\t\t{nom du canal} as string,\n\t\tcanal_distribution_final as string,\n\t\tcanal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tqt_ecc_enrichi as string,\n\t\tca_ecc_enrichi as string,\n\t\tqte_ecoulement as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tsource_atc as string,\n\t\tSuccessor as string,\n\t\tCDis as string,\n\t\tPredecessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Deb val} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tca_ecoulement as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Nom du compte} as string,\n\t\t{Numero Interne_ Groupe cible/Typologie générale} as string,\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Numero Interne_ Compte principal: Numéro du compte} as string,\n\t\t{Numero Interne_ Compte principal: Nom du compte} as string,\n\t\t{Jour calendaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\t{Référence article} as string,\n\t\t{Grande famille} as string,\n\t\t{Sous-famille} as string,\n\t\t{eShop level 1 - CATALOG - désignation} as string,\n\t\t{eShop level 2 - RANGE - désignation} as string,\n\t\t{eShop level 3 - FAMILY - désignation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> HierarchieMKTSD\nsource(output(\n\t\t{Référence article active} as string,\n\t\t{Grande famille} as string,\n\t\t{Sous-famille} as string,\n\t\t{eShop level 1} as string,\n\t\t{eShop level 2} as string,\n\t\t{eShop level 3} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> HerarchieMKTVA\nsource(output(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix client} as string,\n\t\t{Prix négoce} as string,\n\t\t{Prix total} as string,\n\t\tClient as string,\n\t\t{Type financement} as string,\n\t\t{Ville client} as string,\n\t\t{Numéro interne 1} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Typologie projet} as string,\n\t\tDateValidite as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> StgOffreChantier\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ArticleHierarchi\nsource1 select(mapColumn(\n\t\t{Typologie client direct} = {Code client livré},\n\t\tcanal_final,\n\t\t{Typologie client indirect} = {code client plateforme livree},\n\t\t{Code article} = {code produit},\n\t\t{Quantité} = quantite,\n\t\t{CA net} = ca,\n\t\tmarque,\n\t\t{Canal de distribution} = {nom du canal},\n\t\tno_offre,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Map\nMap derive({Typologie client indirect} = iif({Typologie client indirect}=={Typologie client direct}, \r\n \"\", \r\n {Typologie client indirect}),\n\t\ttemp = \"left\") ~> TypologieClientIndirect\nHierarchieMKTSD derive(marque = \"SaunierDuval\") ~> marqueSaunier\nHerarchieMKTVA derive(marque = \"Vaillant\") ~> marqueVaillant\nmarqueSaunier select(mapColumn(\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select\nmarqueVaillant select(mapColumn(\n\t\t{Référence article} = {Référence article active},\n\t\t{eShop level 1 - CATALOG - désignation} = {eShop level 1},\n\t\t{eShop level 2 - RANGE - désignation} = {eShop level 2},\n\t\t{eShop level 3 - FAMILY - désignation} = {eShop level 3},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nselect, Select2 union(byName: true)~> UnionMKT\nTypologieClientIndirect, UnionMKTR join(Map@marque == UnionMKT@marque\n\t&& {Code article} == {Référence article},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Joindre1\nTypologieClientIndirect, UnionMKT join({Code article} == {Référence article}\n\t&& Map@marque == UnionMKT@marque,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joindre2\nRemoveColumns3 filter(canal_final==\"Diffus\") ~> FiltreCanalDiffusTrue\nRemoveColumns3 filter(canal_final!=\"Diffus\") ~> FiltreCanalDiffusFalse\nFiltreCanalDiffusFalse filter(canal_final==\"Chantier\") ~> FiltreCanalChantierTrue\nFiltreCanalDiffusFalse filter(canal_final!=\"Chantier\") ~> FiltrerCanalChantierFalse\nFilter1 aggregate(groupBy(Offre,\n\t\t{Référence}),\n\t{Code projet} = max({Code projet})) ~> UniqueStgOffreChantier\nNoOffreVide derive({Typologie offre si diffus} = substring(no_offre,1,3)) ~> TypologieOffreSIdiffus\nJoinStgCanalChantieTrue, TypologieOffreSIdiffus, RemoveColumns1, FiltrerCanalChantierFalse union(byName: true)~> Union1\nUniqueStgOffreChantier, FiltreCanalChantierTrue join(Offre == no_offre\n\t&& {Référence} == {Code article},\n\tjoinType:'right',\n\tbroadcast: 'auto')~> JoinStgCanalChantieTrue\nFiltreCanalDiffusTrue derive(no_offre = iifNull(no_offre, \"\", no_offre)) ~> NoOffreVide\nFiltreLeft select(mapColumn(\n\t\t{Typologie client direct},\n\t\tcanal_final,\n\t\t{Typologie client indirect},\n\t\t{Code article},\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Canal de distribution},\n\t\tno_offre,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\tmarque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nUnionMKT derive(temp = \"right\") ~> UnionMKTR\nJoindre1 filter(isNull(UnionMKTR@temp)) ~> FiltreLeft\nJoindre2 select(mapColumn(\n\t\t{Typologie client direct},\n\t\tcanal_final,\n\t\t{Typologie client indirect},\n\t\t{Code article},\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Canal de distribution},\n\t\tno_offre,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\ttemp,\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns3\nUnion1 select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectmarquee\nArticleHierarchi aggregate(groupBy(Article),\n\t{Désignation Statut} = max({Désignation Statut}),\n\t\tN1locale = max({N1.locale}),\n\t\tN2groupe = max({N2.groupe}),\n\t\tN3groupe = max({N3.groupe}),\n\t\tN4groupe = max({N4.groupe}),\n\t\tN5groupe = max({N5.groupe}),\n\t\tN6groupe = max({N6.groupe}),\n\t\tN7groupe = max({N7.groupe})) ~> UniqueArticle\nselectmarquee, UniqueArticle join({Code article} == Article,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join\nJoin select(mapColumn(\n\t\tOffre,\n\t\t{Référence},\n\t\t{Code projet},\n\t\t{Typologie client direct},\n\t\tcanal_final,\n\t\t{Typologie client indirect},\n\t\t{Code article},\n\t\t{Quantité},\n\t\t{CA net},\n\t\t{Canal de distribution},\n\t\tno_offre,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\ttemp,\n\t\t{Référence article},\n\t\t{eShop level 1 - CATALOG - désignation},\n\t\t{eShop level 2 - RANGE - désignation},\n\t\t{eShop level 3 - FAMILY - désignation},\n\t\t{Typologie offre si diffus},\n\t\tArticle,\n\t\t{Désignation Statut},\n\t\tN1locale,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLast\nStgOffreChantier filter(!isNull(Offre)) ~> Filter1\nSelectLast sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Smarketing"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BASE_COMMERCIALE')]",
				"[concat(variables('factoryId'), '/datasets/HierarchieMKT_SD')]",
				"[concat(variables('factoryId'), '/datasets/HierarchieMKT_VA')]",
				"[concat(variables('factoryId'), '/datasets/StgOffreChantier')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHI_ARTICLE')]",
				"[concat(variables('factoryId'), '/datasets/SORTIE_MARKETING')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ModelPartedis')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "VERIFICATION/bkp"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InPartedisEcoulementReplicated",
								"type": "DatasetReference"
							},
							"name": "ecoulementOther"
						},
						{
							"dataset": {
								"referenceName": "facturationReplicated",
								"type": "DatasetReference"
							},
							"name": "facutration"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "modelPartedisOutPrepared",
								"type": "DatasetReference"
							},
							"name": "modelPartedis"
						},
						{
							"dataset": {
								"referenceName": "facturationReplicatedPartedis",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tcanal as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tsous_famille as string,\n\t\tarticle as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\torder as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementOther\nsource(output(\n\t\t{ Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\torder as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facutration\necoulementOther sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['ecoulementPartedisReplicated'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> modelPartedis\nfacutration sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['facturationReplicatedPartedis'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InPartedisEcoulementReplicated')]",
				"[concat(variables('factoryId'), '/datasets/facturationReplicated')]",
				"[concat(variables('factoryId'), '/datasets/modelPartedisOutPrepared')]",
				"[concat(variables('factoryId'), '/datasets/facturationReplicatedPartedis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ModelVenteDirecte')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InFacturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "ventedirecte"
						},
						{
							"dataset": {
								"referenceName": "compteSap",
								"type": "DatasetReference"
							},
							"name": "comptesap"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtc"
						},
						{
							"dataset": {
								"referenceName": "associationoffre",
								"type": "DatasetReference"
							},
							"name": "associationoffre"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "offre"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "venteDirectePrepared",
								"type": "DatasetReference"
							},
							"name": "oVenteDirect"
						}
					],
					"transformations": [
						{
							"name": "addCols"
						},
						{
							"name": "projection"
						},
						{
							"name": "dropDuplicade"
						},
						{
							"name": "sapJoin"
						},
						{
							"name": "Select1"
						},
						{
							"name": "joinAtc"
						},
						{
							"name": "Select2"
						},
						{
							"name": "atcDropDuplicate"
						},
						{
							"name": "joinAssociation"
						},
						{
							"name": "Select3"
						},
						{
							"name": "offreDropDuplicade"
						},
						{
							"name": "joinOffre"
						},
						{
							"name": "Select4"
						},
						{
							"name": "mapping"
						},
						{
							"name": "Select5"
						}
					],
					"script": "source(output(\n\t\t{ Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\t{ vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventedirecte\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> comptesap\nsource(output(\n\t\t{Cl� R�f�rentiel} as string,\n\t\t{Recherche Cl� EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal d�but} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{D�partement} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refAtc\nsource(output(\n\t\tCommande as string,\n\t\t{Référence Offre BA} as string,\n\t\t{Qté Cdée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> associationoffre\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tNbLogement as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Créateur offre} as string,\n\t\tSource as string,\n\t\tUserLowerCase as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offre\nSelect5 derive(distributeur = \"vente directe\",\n\t\t{Diffus/chantier} = iif( {Canal distribution}==\"43\", \"Chantier\", \"Diffus\"),\n\t\t{marque(SD/vaillant)} = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\")) ~> addCols\ncomptesap select(mapColumn(\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> projection\nprojection aggregate(groupBy(Client,\n\t\t{Code postal}),\n\t{Agence commerciale} = max({Agence commerciale})) ~> dropDuplicade\nSelect1, dropDuplicade join({Code client} == Client,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> sapJoin\naddCols select(mapColumn(\n\t\t{Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Code client} = {Recept de march},\n\t\t{Destinataire facture},\n\t\tArticle = reference,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyearmonth,\n\t\treference,\n\t\tdistributeur,\n\t\t{Diffus/chantier},\n\t\t{marque(SD/vaillant)},\n\t\t{Agence commerciale corrigé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsapJoin, atcDropDuplicate join({Diffus/chantier} == {Canal final}\n\t&& {Code postal} == code_postal_atc\n\t&& {marque(SD/vaillant)} == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinAtc\nrefAtc select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 aggregate(groupBy({Canal final},\n\t\tcode_postal_atc,\n\t\tMarque,\n\t\tATC,\n\t\tNomATC),\n\tMatricule = max(Matricule)) ~> atcDropDuplicate\njoinAtc, associationoffre join({Document de vente} == Commande,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinAssociation\noffre select(mapColumn(\n\t\tResponsable,\n\t\tOffre,\n\t\t{ATC performance} = CodeATC,\n\t\tcanal = Canal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 aggregate(groupBy(Offre,\n\t\t{ATC performance},\n\t\tcanal),\n\tResponsable = max(Responsable)) ~> offreDropDuplicade\njoinAssociation, offreDropDuplicade join({Référence Offre BA} == Offre\n\t&& {Canal final} == canal,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinOffre\nmapping select(mapColumn(\n\t\tmarque_id = {Org commerciale},\n\t\tmarque_name = {marque(SD/vaillant)},\n\t\tcanal_final = {Diffus/chantier},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPOSSAMidString = {Code client},\n\t\treference = Article,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tyearmonth,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\t{Agence commerciale} = {Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tno_offre = {Référence Offre BA},\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\njoinOffre derive(ca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tdata_origin = \"facturation\") ~> mapping\nventedirecte select(mapColumn(\n\t\t{Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{Type doc vente} = { vente},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OVenteDirectePrepared'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> oVenteDirect"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InFacturationForVenteDirect')]",
				"[concat(variables('factoryId'), '/datasets/compteSap')]",
				"[concat(variables('factoryId'), '/datasets/ref_atc')]",
				"[concat(variables('factoryId'), '/datasets/associationoffre')]",
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/venteDirectePrepared')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Model_PARTEDIS2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecouPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "ecoulmnt"
						},
						{
							"dataset": {
								"referenceName": "facturationWithIndex",
								"type": "DatasetReference"
							},
							"name": "facturation"
						},
						{
							"dataset": {
								"referenceName": "associationoffre",
								"type": "DatasetReference"
							},
							"name": "association"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "offre"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "refAtc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sortiePardedis",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "sAssociation"
						},
						{
							"name": "selectfacturation"
						},
						{
							"name": "InnerJoin"
						},
						{
							"name": "Join4"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "sEcoul"
						},
						{
							"name": "fullleft"
						},
						{
							"name": "filterLeft"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "fullRght"
						},
						{
							"name": "filterRight"
						},
						{
							"name": "DerivedColumn5"
						},
						{
							"name": "endRight"
						},
						{
							"name": "endLeft"
						},
						{
							"name": "endjoin"
						},
						{
							"name": "Union1"
						},
						{
							"name": "JoinOffre"
						},
						{
							"name": "selectOffre"
						},
						{
							"name": "selectATC"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Union2"
						},
						{
							"name": "addCanalFinal"
						},
						{
							"name": "Select6"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "DerivedColumn6"
						},
						{
							"name": "JoinAtc"
						},
						{
							"name": "Select7"
						},
						{
							"name": "Select8"
						},
						{
							"name": "Select9"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulmnt\nsource(output(\n\t\t{ Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\ttoroll as string,\n\t\tindexcols2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\nsource(output(\n\t\tCommande as string,\n\t\t{Référence Offre BA} as string,\n\t\t{Qté Cdée} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> association\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tNbLogement as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Créateur offre} as string,\n\t\tSource as string,\n\t\tUserLowerCase as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offre\nsource(output(\n\t\t{Cl� R�f�rentiel} as string,\n\t\t{Recherche Cl� EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal d�but} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{D�partement} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refAtc\nInnerJoin derive(ca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tdata_origin = \"facturation avec matching\",\n\t\tcanal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" )) ~> DerivedColumn1\nassociation select(mapColumn(\n\t\tCommande,\n\t\tno_offre = {Référence Offre BA},\n\t\t{Qté Cdée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sAssociation\nJoin4 select(mapColumn(\n\t\t{Org commerciale} = { Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear,\n\t\tyearmonth,\n\t\treference,\n\t\tarticle,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\torigin,\n\t\tno_offre,\n\t\tindexcols2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectfacturation\nsEcoul, selectfacturation join(ecoulmnt@indexcols2 == selectfacturation@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoin\nDerivedColumn2, sAssociation join({Document de vente} == Commande,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nfacturation derive(origin = \"facturation\") ~> DerivedColumn2\necoulmnt derive(origin = \"ecoulement\") ~> sEcoul\nsEcoul, selectfacturation join(ecoulmnt@indexcols2 == selectfacturation@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullleft\nfullleft filter(isNull(selectfacturation@origin)) ~> filterLeft\nfilterLeft derive({Canal distribution} = \"42\",\n\t\tca_final = ca_ecoulement,\n\t\tqt_final = qte_ecc,\n\t\tdata_origin = \"ecoulement sans matching\") ~> DerivedColumn4\nsEcoul, selectfacturation join(ecoulmnt@indexcols2 == selectfacturation@indexcols2,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> fullRght\nfullRght filter(isNull(sEcoul@origin)) ~> filterRight\nfilterRight derive(ca_final = {CA facturé},\n\t\tqt_final = {Qté facturée},\n\t\tdata_origin = \"facturation sans ecoulement\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\"),\n\t\tcanal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" )) ~> DerivedColumn5\nDerivedColumn5 select(mapColumn(\n\t\tmarque_id = {Org commerciale},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString = {Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear = selectfacturation@year,\n\t\tyearmonth = selectfacturation@yearmonth,\n\t\treference = selectfacturation@reference,\n\t\tarticle,\n\t\tHubSAPid = selectfacturation@HubSAPid,\n\t\ttoreplicate = selectfacturation@toreplicate,\n\t\tindexcols2 = selectfacturation@indexcols2,\n\t\torigin = selectfacturation@origin,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endRight\naddCanalFinal select(mapColumn(\n\t\tyearmonth = ecoulmnt@yearmonth,\n\t\tyear = ecoulmnt@year,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = ecoulmnt@HubSAPid,\n\t\treference = ecoulmnt@reference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate = ecoulmnt@toreplicate,\n\t\tdd,\n\t\tindexcols2 = ecoulmnt@indexcols2,\n\t\torigin = sEcoul@origin,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin,\n\t\t{Canal distribution},\n\t\tcanal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endLeft\nSelect4 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endjoin\nSelect7, endRight union(byName: true)~> Union1\nDerivedColumn1, selectOffre join(no_offre == Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOffre\nAggregate2 select(mapColumn(\n\t\tOffre,\n\t\t{ATC performance} = ATC,\n\t\t{offre canal} = canal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectOffre\nAggregate1 select(mapColumn(\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectATC\nrefAtc aggregate(groupBy(Marque,\n\t\t{Canal final},\n\t\tcode_postal_atc),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> Aggregate1\nJoinOffre select(mapColumn(\n\t\tyearmonth = ecoulmnt@yearmonth,\n\t\tyear = ecoulmnt@year,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = ecoulmnt@HubSAPid,\n\t\treference = ecoulmnt@reference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate = ecoulmnt@toreplicate,\n\t\tdd,\n\t\t{ Org commerciale} = {Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear = selectfacturation@year,\n\t\tyearmonth = selectfacturation@yearmonth,\n\t\treference = selectfacturation@reference,\n\t\tarticle,\n\t\tHubSAPid = selectfacturation@HubSAPid,\n\t\ttoreplicate = selectfacturation@toreplicate,\n\t\tindexcols2 = selectfacturation@indexcols2,\n\t\torigin = selectfacturation@origin,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nendjoin, endLeft union(byName: true)~> Union2\nDerivedColumn4 derive(canal_final = iif( {Canal distribution}==\"43\" ,  \"Chantier\" , \"Diffus\" )) ~> addCanalFinal\nRemoveColumns1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nSelect9 aggregate(groupBy(Offre,\n\t\tcanal,\n\t\tATC),\n\tDateOffre = first(DateOffre)) ~> Aggregate2\nDerivedColumn6 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tarticle,\n\t\t{Code postal},\n\t\tmarque_id = marque,\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\tcanal_final,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nUnion2 derive(marque_name = iif(marque==\"1604\", \"SaunierDuval\", \"Vaillant\")) ~> DerivedColumn6\nSelect6, selectATC join(marque_name == Marque\n\t&& canal_final == {Canal final}\n\t&& {Code postal} == code_postal_atc,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAtc\nJoinAtc select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nUnion1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\t{ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select8\noffre select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tATC = CodeATC,\n\t\tcanal = Canal,\n\t\tNbLogement,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\t{Créateur offre},\n\t\tSource,\n\t\tUserLowerCase\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select9\nSelect8 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelPartedis'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecouPartedisLikeWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/facturationWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/associationoffre')]",
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/ref_atc')]",
				"[concat(variables('factoryId'), '/datasets/sortiePardedis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_CLIENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "EXtractionSAP"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_ATC4",
								"type": "DatasetReference"
							},
							"name": "ReferentielAtc4"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieNomenclatureClient",
								"type": "DatasetReference"
							},
							"name": "SortieNomenclatureClient"
						}
					],
					"transformations": [
						{
							"name": "FiltreATCClient"
						},
						{
							"name": "UniqueATC"
						},
						{
							"name": "JointureATC"
						},
						{
							"name": "Select"
						}
					],
					"script": "source(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EXtractionSAP\nsource(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ReferentielAtc4\nEXtractionSAP filter({ATC Client}!=\"#\") ~> FiltreATCClient\nReferentielAtc4 aggregate(groupBy(ATC),\n\tRight_DR = max(Right_DR)) ~> UniqueATC\nFiltreATCClient, UniqueATC join({ATC Client} == ATC,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JointureATC\nJointureATC select(mapColumn(\n\t\tSalesAgentID = {ATC Client},\n\t\tClientID = Client,\n\t\tSalesOrgID = {Org. commerciale},\n\t\tSalesChannelID = {Canal distribution},\n\t\tSalesOfficeID = Right_DR,\n\t\tBusinessUnitID = {Secteur d'activité}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SortieNomenclatureCLient'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieNomenclatureClient"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/extractionSap')]",
				"[concat(variables('factoryId'), '/datasets/REFERENTIEL_ATC4')]",
				"[concat(variables('factoryId'), '/datasets/SortieNomenclatureClient')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOMENCLATURE_PRODUIT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HIERARCHI_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "hierarchieArticle"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NOMENCLATURE_PRODUIT",
								"type": "DatasetReference"
							},
							"name": "nomenclatureProduit"
						}
					],
					"transformations": [
						{
							"name": "RenameArticle"
						},
						{
							"name": "Unique"
						},
						{
							"name": "CanalDist"
						},
						{
							"name": "Select"
						}
					],
					"script": "source(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> hierarchieArticle\nhierarchieArticle select(mapColumn(\n\t\tNoCanalDist = CDis,\n\t\tNoArt = Article,\n\t\tArticle = Description,\n\t\tNoNiv1 = {N1.locale},\n\t\tNoNiv2 = {N2.locale},\n\t\tNoNiv3 = {N3.locale},\n\t\tNoNiv4 = {N4.locale},\n\t\tNoNiv5 = {N5.locale},\n\t\tNoNiv6 = {N6.locale},\n\t\tNoNiv7 = {N7.locale},\n\t\tNiv1 = {N1.locale.designation},\n\t\tNiv2 = {N2.locale.designation},\n\t\tNiv3 = {N3.locale.designation},\n\t\tNiv4 = {N4.locale.designation},\n\t\tNiv5 = {N5.locale.designation},\n\t\tNiv6 = {N6.locale.designation},\n\t\tNiv7 = {N7.locale.designation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameArticle\nRenameArticle aggregate(groupBy(Article),\n\tNoCanalDist = max(NoCanalDist),\n\t\tNoArt = max(NoArt),\n\t\tNoNiv1 = max(NoNiv1),\n\t\tNoNiv2 = max(NoNiv2),\n\t\tNoNiv3 = max(NoNiv3),\n\t\tNoNiv4 = max(NoNiv4),\n\t\tNoNiv5 = max(NoNiv5),\n\t\tNoNiv6 = max(NoNiv6),\n\t\tNoNiv7 = max(NoNiv7),\n\t\tNiv1 = max(Niv1),\n\t\tNiv2 = max(Niv2),\n\t\tNiv3 = max(Niv3),\n\t\tNiv4 = max(Niv4),\n\t\tNiv5 = max(Niv5),\n\t\tNiv6 = max(Niv6),\n\t\tNiv7 = max(Niv7)) ~> Unique\nUnique derive(CanalDist = iif(NoCanalDist==\"43\", \"Chantier\", \"Diffus\")) ~> CanalDist\nCanalDist select(mapColumn(\n\t\tArticle,\n\t\tNoCanalDist,\n\t\tNoArt,\n\t\tNoNiv1,\n\t\tNoNiv2,\n\t\tNoNiv3,\n\t\tNoNiv4,\n\t\tNoNiv5,\n\t\tNoNiv6,\n\t\tNoNiv7,\n\t\tNiv1,\n\t\tNiv2,\n\t\tNiv3,\n\t\tNiv4,\n\t\tNiv6,\n\t\tNiv7,\n\t\tCanalDist\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SortieNomenclatureProduit'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> nomenclatureProduit"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HIERARCHI_ARTICLE')]",
				"[concat(variables('factoryId'), '/datasets/NOMENCLATURE_PRODUIT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORCAB_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ORCAB_ECOULEMENT_INPUT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ORCAB_ECOULEMENT_PREPARED",
								"type": "DatasetReference"
							},
							"name": "OUTPUT"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "quantityNullOutput"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						}
					],
					"transformations": [
						{
							"name": "monthToNumber"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "cooperativenotNull"
						},
						{
							"name": "orgaCooperativeNotNull"
						},
						{
							"name": "unique"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "enleverVentesDirectes"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerLeftVentesDirectes"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Select4"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "columnChoice"
						},
						{
							"name": "getYearmonth"
						}
					],
					"script": "source(output(\n\t\tFournisseur as string,\n\t\t{Coopérative} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\tMois as string,\n\t\t{CA 2020} as string,\n\t\t{CA 2019} as string,\n\t\t{Qte 2020} as string,\n\t\t{Qte 2019} as string,\n\t\tpath as string,\n\t\tqte_ecoulement as string,\n\t\tFamille as string,\n\t\t{Sous Famille} as string,\n\t\tREFFOURNISSEUR as string,\n\t\t{Qte Livrée 2020} as string,\n\t\t{Qte Livrée 2019} as string,\n\t\t{Code Dispo Cde} as string,\n\t\t{Code SAPAIG} as string,\n\t\t{CA sans Marge} as string,\n\t\t{CA sans Marge A-1} as string,\n\t\t{Evol. CA A/A-1} as string,\n\t\t{Qte Livrée} as string,\n\t\t{Qte Livrée A-1} as string,\n\t\t{Evol. Qte A/A-1} as string,\n\t\t{Qté Livrée 2020} as string,\n\t\t{Qté Livrée 2019} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Nom Coopérative} as string,\n\t\t{CP Coop.} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\ngetYearmonth derive(month = iif(lower(Mois)==\"janvier\", \"01\",      iif(lower(Mois)==\"février\",\"02\",     iif(lower(Mois)==\"mars\", \"03\",      iif(lower(Mois)==\"avril\", \"04\",      iif(lower(Mois)==\"mai\", \"05\",      iif(lower(Mois)==\"juin\", \"06\",      iif(lower(Mois)==\"juillet\", \"07\",      iif(lower(Mois)==\"août\", \"08\",      iif(lower(Mois)==\"septembre\", \"09\",      iif(lower(Mois)==\"octobre\", \"10\",      iif(lower(Mois)==\"novembre\", \"11\",      iif(lower(Mois)==\"décembre\", \"12\", \"0\")))))))))))),\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> monthToNumber\nyearmonth filter(!isNull(qte_ecoulement)) ~> quantityNotNull\nmonthToNumber filter(isNull(qte_ecoulement)) ~> quantityNull\nquantityNotNull filter(!isNull({Coopérative})) ~> cooperativenotNull\norganisation filter(!isNull({Nom Coopérative})) ~> orgaCooperativeNotNull\norgaCooperativeNotNull aggregate(groupBy({Nom Coopérative},\n\t\tHubSAPid),\n\tPOSSAMid = max(POSSAMid)) ~> unique\ncooperativenotNull, unique join({Coopérative} == {Nom Coopérative},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\ncooperativenotNull, unique join({Coopérative} == {Nom Coopérative},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull({Nom Coopérative})) ~> leftOuter\ninnerOrganisation, ventesDirectes join(yearmonth@yearmonth == ventesDirectes@yearmonth\n\t&& REFFOURNISSEUR == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\nmonthToNumber derive(yearmonth = year+month,\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonth\ninnerVentesDirectes derive(qte_ecoulement = qte_ecoulement-toDouble({Qt� vente directe})) ~> enleverVentesDirectes\ninnerOrganisation, ventesDirectes join(yearmonth@yearmonth == ventesDirectes@yearmonth\n\t&& REFFOURNISSEUR == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(ventesDirectes@yearmonth) || isNull(Article) || isNull({Code client})) ~> outerLeftVentesDirectes\nenleverVentesDirectes select(mapColumn(\n\t\tFournisseur = marque_file,\n\t\t{Coopérative},\n\t\t{Référence},\n\t\t{Désignation},\n\t\tMois,\n\t\tpath,\n\t\tqte_ecoulement,\n\t\tREFFOURNISSEUR,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth = yearmonth@yearmonth,\n\t\t{Nom Coopérative},\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tyearmonth = ventesDirectes@yearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qt� vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nouterLeftVentesDirectes select(mapColumn(\n\t\tmarque_file,\n\t\t{Coopérative},\n\t\t{Référence},\n\t\t{Désignation},\n\t\tMois,\n\t\tpath,\n\t\tqte_ecoulement,\n\t\tREFFOURNISSEUR,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth = yearmonth@yearmonth,\n\t\t{Nom Coopérative},\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tyearmonth = ventesDirectes@yearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qt� vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, Select2 union(byName: true)~> Union1\nUnion1 select(mapColumn(\n\t\tmarque_file,\n\t\t{Coopérative},\n\t\t{Référence},\n\t\t{Désignation},\n\t\tMois,\n\t\tpath,\n\t\tqte_ecoulement,\n\t\tREFFOURNISSEUR,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\t{Nom Coopérative},\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qt� vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect4 derive(year = substring(yearmonth,1,4),\n\t\tmarque_id = iif(lower(marque_file)==\"vaillant\", 1621, 1604)) ~> typeCaste\ntypeCaste select(mapColumn(\n\t\tmarque_file,\n\t\treference = {Référence},\n\t\tarticle = {Désignation},\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tmarque_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\necoulement select(mapColumn(\n\t\tmarque_file = Fournisseur,\n\t\t{Coopérative},\n\t\t{Référence},\n\t\t{Désignation},\n\t\tMois,\n\t\tpath,\n\t\tqte_ecoulement,\n\t\tREFFOURNISSEUR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\ncolumnChoice derive(year = replace(split(path, \" \")[5], \".xlsx\", \"\"),\n\t\tmonth = split(path, \" \")[4]) ~> getYearmonth\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['ORCAB_ECOUL_PREPARED'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OUTPUT\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ORCAB_QTE_NULL'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> quantityNullOutput\nleftOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> organisationNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ORCAB_ECOULEMENT_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_ECOULEMENT_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_QTE_NULL')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_ORGANISATION_NOTFOUND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PARTEDIS_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES",
								"type": "DatasetReference"
							},
							"name": "venteDirecte"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_PRIX_STD",
								"type": "DatasetReference"
							},
							"name": "partedisPrixStd"
						},
						{
							"dataset": {
								"referenceName": "TEMP_PRIX_PAR_PERIODE",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PARTEDIS_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						},
						{
							"dataset": {
								"referenceName": "Partedis_qte_null",
								"type": "DatasetReference"
							},
							"name": "quantityNullOutput"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "columnChoice"
						},
						{
							"name": "typeCaste",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "posIdNotNull"
						},
						{
							"name": "unique"
						},
						{
							"name": "InnerJoin"
						},
						{
							"name": "LeftJoin"
						},
						{
							"name": "Outer"
						},
						{
							"name": "uniqueKey"
						},
						{
							"name": "cleansingVenteDirecte"
						},
						{
							"name": "eccoulementVenteDirecteLeftJoin"
						},
						{
							"name": "cleansingEcoulement"
						},
						{
							"name": "ecoulementVenteDirecteInnerJoin"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "rendreZeroLesVentesDirectesNegatives"
						},
						{
							"name": "enleverQuantiteVenteDirecte"
						},
						{
							"name": "fullLeft"
						},
						{
							"name": "Select1"
						},
						{
							"name": "exctractYear"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "Select2"
						},
						{
							"name": "uploadingDate"
						},
						{
							"name": "prixStdToDouble"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						}
					],
					"script": "source(output(\n\t\t{Nom Fournisseur Principal} as string,\n\t\tClients as string,\n\t\t{Code Agence} as string,\n\t\t{Libellé Agence} as string,\n\t\t{Code postal agence} as string,\n\t\t{Ag Siret} as string,\n\t\tSiren as string,\n\t\tMKT1 as string,\n\t\tMKT2 as string,\n\t\tMKT3 as string,\n\t\t{Reference Fournisseur} as string,\n\t\tLibelle as string,\n\t\t{Qté Livré Mois A} as string,\n\t\t{Qté Livré Mois A-1} as string,\n\t\t{Qté Livré Cumul A} as string,\n\t\t{Qté Livré Cumul A-1} as string,\n\t\t{VVA MOIS} as string,\n\t\t{VVA MOIS N-1} as string,\n\t\t{VVA CUMUL EXERCICE} as string,\n\t\t{VVA CUMUL EXERCICE N-1} as string,\n\t\tpath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Code client} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> venteDirecte\nsource(output(\n\t\t{Référence} as string,\n\t\tArticle as string,\n\t\t{Prix Unitaire Std} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> partedisPrixStd\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\necoulement select(mapColumn(\n\t\tMarque_file = {Nom Fournisseur Principal},\n\t\tClients,\n\t\t{Code Agence},\n\t\t{Libellé Agence},\n\t\t{Code postal agence},\n\t\t{Ag Siret},\n\t\tSiren,\n\t\tMKT1,\n\t\tMKT2,\n\t\tMKT3,\n\t\tReference = {Reference Fournisseur},\n\t\tLibelle,\n\t\t{Qté Livré Mois A},\n\t\t{Qté Livré Mois A-1},\n\t\t{Qté Livré Cumul A},\n\t\t{Qté Livré Cumul A-1},\n\t\t{VVA MOIS},\n\t\t{VVA MOIS N-1},\n\t\t{VVA CUMUL EXERCICE},\n\t\t{VVA CUMUL EXERCICE N-1},\n\t\tpath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\ncolumnChoice derive({Qté Livré Mois A} = toInteger({Qté Livré Mois A}),\n\t\tyearmonth = trim(replace(split(path, \"-\")[3], \".xlsx\", \"\"), \" \")) ~> typeCaste\norganisation filter(!isNull(POSid)) ~> posIdNotNull\nposIdNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> unique\ntypeCaste, unique join({Code Agence} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoin\ntypeCaste, unique join({Code Agence} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoin\nLeftJoin filter(isNull(POSid)) ~> Outer\ncleansingVenteDirecte aggregate(groupBy(yearmonth_right,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté ventes directes} = sum({Qté ventes directes})) ~> uniqueKey\nventeDirecte derive({Qté ventes directes} = toDouble({Qté facturée}),\n\t\tyearmonth_right = replace(yearmonth, \" \", \"\"),\n\t\tArticle = replace(Article, \" \", \"\"),\n\t\t{Code client} = replace({Code client}, \" \", \"\")) ~> cleansingVenteDirecte\ncleansingEcoulement, uniqueKey join(yearmonth == yearmonth_right\n\t&& Reference == Article\n\t&& POSSAMidString == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> eccoulementVenteDirecteLeftJoin\nInnerJoin derive(Reference = replace(Reference,\" \",\"\"),\n\t\tPOSSAMidString = replace(POSSAMidString,\" \",\"\")) ~> cleansingEcoulement\ncleansingEcoulement, uniqueKey join(yearmonth == yearmonth_right\n\t&& Reference == Article\n\t&& POSSAMidString == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> ecoulementVenteDirecteInnerJoin\necoulementVenteDirecteInnerJoin filter(isNull(yearmonth_right) || isNull(Article) || isNull({Code client})) ~> leftOuter\neccoulementVenteDirecteLeftJoin derive({Qté ventes directes} = iif({Qté ventes directes}<0, toDouble(0), {Qté ventes directes})) ~> rendreZeroLesVentesDirectesNegatives\nrendreZeroLesVentesDirectesNegatives derive({Qté Livré Mois A} = {Qté Livré Mois A}-{Qté ventes directes}) ~> enleverQuantiteVenteDirecte\nenleverQuantiteVenteDirecte, leftOuter union(byName: true)~> fullLeft\nfullLeft select(mapColumn(\n\t\tMarque_file,\n\t\tClients,\n\t\t{Code Agence},\n\t\t{Libellé Agence},\n\t\t{Code postal agence},\n\t\t{Ag Siret},\n\t\tSiren,\n\t\tReference,\n\t\tLibelle,\n\t\t{Qté Livré Mois A},\n\t\t{VVA MOIS},\n\t\tyearmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> exctractYear\nexctractYear filter(!isNull({Qté Livré Mois A})) ~> quantityNotNull\nexctractYear filter(isNull({Qté Livré Mois A})) ~> quantityNull\npartedisPrixStd select(mapColumn(\n\t\tReference = {Référence},\n\t\tArticle,\n\t\t{Prix Unitaire Std}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 derive({Uploading date} = currentDate(),\n\t\tYear = \"2020\") ~> uploadingDate\nuploadingDate derive({Prix Unitaire Std} = toDouble({Prix Unitaire Std}),\n\t\tYear = toDouble(Year)) ~> prixStdToDouble\nAddcolumn select(mapColumn(\n\t\tmarque_file = Marque_file,\n\t\tagence_code = {Code Agence},\n\t\t{Code postal} = {Code postal agence},\n\t\treference = Reference,\n\t\tqte_ecoulement = {Qté Livré Mois A},\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tyear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nquantityNotNull derive(canal = '',\n\t\tDept = '') ~> Addcolumn\nOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> organisationNotFound\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OeccPartedis'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> quantityNullOutput\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['PARTEDIS_ECOUL_PREPARED'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PARTEDIS_ECOULEMENT')]",
				"[concat(variables('factoryId'), '/datasets/PARTEDIS_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES')]",
				"[concat(variables('factoryId'), '/datasets/PARTEDIS_PRIX_STD')]",
				"[concat(variables('factoryId'), '/datasets/TEMP_PRIX_PAR_PERIODE')]",
				"[concat(variables('factoryId'), '/datasets/PARTEDIS_ORGANISATION_NOTFOUND')]",
				"[concat(variables('factoryId'), '/datasets/Partedis_qte_null')]",
				"[concat(variables('factoryId'), '/datasets/PARTEDIS_ECOUL_PREPARED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL/OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "OFFRE_DIFFUS_SAMPLE",
								"type": "DatasetReference"
							},
							"name": "offreDiffusInput"
						},
						{
							"dataset": {
								"referenceName": "OFFRE_CHANTIER_SAMPLE",
								"type": "DatasetReference"
							},
							"name": "offreChantierInput"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_ATC",
								"type": "DatasetReference"
							},
							"name": "referentielATCinput"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Stg_offre_diffus",
								"type": "DatasetReference"
							},
							"name": "stagingDiffus"
						},
						{
							"dataset": {
								"referenceName": "Stg_offre_chantier",
								"type": "DatasetReference"
							},
							"name": "stagingChantier"
						},
						{
							"dataset": {
								"referenceName": "offreAtcTemp",
								"type": "DatasetReference"
							},
							"name": "outTemp"
						},
						{
							"dataset": {
								"referenceName": "offreChantierTemp",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "offreDiffusTemp",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "canalDiffus"
						},
						{
							"name": "columnsChoiceDiffus"
						},
						{
							"name": "typeCast",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "canalChantier"
						},
						{
							"name": "columnsChoiceChantier"
						},
						{
							"name": "typeCastChantier"
						},
						{
							"name": "Select1"
						},
						{
							"name": "typeCastATC"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						}
					],
					"script": "source(output(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{Date de validité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offreDiffusInput\nsource(output(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix client} as string,\n\t\t{Prix négoce} as string,\n\t\t{Prix total} as string,\n\t\tClient as string,\n\t\t{Type financement} as string,\n\t\t{Ville client} as string,\n\t\t{Numéro interne 1} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Typologie projet} as string,\n\t\tDateValidite as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offreChantierInput\nsource(output(\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\tNomATC2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATCinput\nFilter1 derive(Canal = \"Diffus\") ~> canalDiffus\ncanalDiffus select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tCodeATC,\n\t\tcanal = Canal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoiceDiffus\ncolumnsChoiceDiffus derive({Quantité} = toDouble({Quantité}),\n\t\tCodeATC = toDouble(CodeATC),\n\t\tDateOffre = toDate(DateOffre,\"yyyy-mm-dd\")) ~> typeCast\nFilter2 derive(Canal = \"Chantier\") ~> canalChantier\ncanalChantier select(mapColumn(\n\t\tDateOffre,\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Numéro interne 2},\n\t\tResponsable,\n\t\tOffre,\n\t\t{Créateur offre},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoiceChantier\ncolumnsChoiceChantier derive(DateOffre = toDate(DateOffre,\"yyyy-mm-dd\"),\n\t\tSource = \"file1\",\n\t\tUserLowerCase = lower(Responsable),\n\t\tNbLogement = toDouble(NbLogement),\n\t\t{Quantité} = toDouble({Quantité}),\n\t\t{Numéro interne 2} = toDouble({Numéro interne 2})) ~> typeCastChantier\nreferentielATCinput select(mapColumn(\n\t\tATC,\n\t\tNomATC,\n\t\t{Plan primes},\n\t\tDR,\n\t\t{Secteur prime},\n\t\tMatricule,\n\t\t{Secteur DEC},\n\t\tRallye\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(DR = toDouble(DR),\n\t\tNomATC = lower(NomATC),\n\t\tSource = \"file2\") ~> typeCastATC\ntypeCastChantier derive(Produit = replace(Produit, '\"', \"\")) ~> DerivedColumn1\nDerivedColumn1 derive(Produit = replace(Produit, \"'\", \" \")) ~> DerivedColumn2\noffreDiffusInput filter(!isNull(Offre)) ~> Filter1\noffreChantierInput filter(!isNull(Offre)) ~> Filter2\ncanalDiffus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['STG_OFFRE_DIFFUS'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> stagingDiffus\ncanalChantier sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['STG_OFFRE_CHANTIER'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> stagingChantier\ntypeCastATC sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['refATC2021Offre'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outTemp\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['offreChantierTemp'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\ntypeCast sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['offreDiffusTemp'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OFFRE_DIFFUS_SAMPLE')]",
				"[concat(variables('factoryId'), '/datasets/OFFRE_CHANTIER_SAMPLE')]",
				"[concat(variables('factoryId'), '/datasets/REFERENTIEL_ATC')]",
				"[concat(variables('factoryId'), '/datasets/Stg_offre_diffus')]",
				"[concat(variables('factoryId'), '/datasets/Stg_offre_chantier')]",
				"[concat(variables('factoryId'), '/datasets/offreAtcTemp')]",
				"[concat(variables('factoryId'), '/datasets/offreChantierTemp')]",
				"[concat(variables('factoryId'), '/datasets/offreDiffusTemp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION_OBJECTIF_RH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "RH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "OBJECTIFS_RH",
								"type": "DatasetReference"
							},
							"name": "objectif"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "levierPerformance"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PREPARATION_OBJECTIF_RH",
								"type": "DatasetReference"
							},
							"name": "output"
						},
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_PERFORMANCE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "newColumn"
						},
						{
							"name": "RecordID"
						},
						{
							"name": "Select3"
						},
						{
							"name": "YEARFILTER"
						},
						{
							"name": "splitting"
						},
						{
							"name": "FlattenHierarchie"
						},
						{
							"name": "FlattenMarque"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "lenHierarchie3"
						},
						{
							"name": "innerLevier"
						},
						{
							"name": "levierCA"
						},
						{
							"name": "Pivot1"
						},
						{
							"name": "levierQA"
						},
						{
							"name": "Pivot2"
						},
						{
							"name": "Union2"
						},
						{
							"name": "lenHierarchieNot3"
						},
						{
							"name": "innerLevier2"
						},
						{
							"name": "levierQA2"
						},
						{
							"name": "Pivot3"
						},
						{
							"name": "levierCA2"
						},
						{
							"name": "Pivot4"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Union4"
						},
						{
							"name": "keepColumns"
						},
						{
							"name": "SelectQuantity"
						},
						{
							"name": "quantityToLine"
						},
						{
							"name": "SelectCA"
						},
						{
							"name": "CAtoLine"
						},
						{
							"name": "Select4"
						},
						{
							"name": "getQuantityMonth"
						},
						{
							"name": "getCAMonth"
						},
						{
							"name": "joinQuantityAndCA"
						},
						{
							"name": "changeNULL"
						},
						{
							"name": "deleteRightColumn"
						},
						{
							"name": "dataCleansing"
						},
						{
							"name": "uniqueLevier"
						},
						{
							"name": "libelleLevier"
						}
					],
					"script": "source(output(\n\t\t{Num Org} as string,\n\t\t{Nom Org} as string,\n\t\t{Nom DR} as string,\n\t\t{Num DR} as string,\n\t\tDR as string,\n\t\t{ATC (ATC- DR)} as string,\n\t\t{ATC (DR-ATC)} as string,\n\t\t{Num ATC} as string,\n\t\t{Nom ATC} as string,\n\t\tDept as string,\n\t\t{Canal Dist} as string,\n\t\t{Nom Canal} as string,\n\t\t{Flux text} as string,\n\t\tHubSAPiD as string,\n\t\t{Activité} as string,\n\t\t{Nom Activité} as string,\n\t\t{Art Niv 1} as string,\n\t\t{Nom Niv 1} as string,\n\t\t{Art Niv 2} as string,\n\t\t{Nom Niv 2} as string,\n\t\t{Art Niv 3} as string,\n\t\t{Nom Niv 3} as string,\n\t\t{Art Niv 4} as string,\n\t\t{Nom Niv 4} as string,\n\t\t{Art Niv 5} as string,\n\t\t{Nom Niv 5} as string,\n\t\t{Nom Niv Combiné} as string,\n\t\t{PMV An} as string,\n\t\t{Qté Obj An} as string,\n\t\t{CA Obj An} as string,\n\t\t{Qté Mois 01} as string,\n\t\t{Qté Mois 02} as string,\n\t\t{Qté Mois 03} as string,\n\t\t{Qté Mois 04} as string,\n\t\t{Qté Mois 05} as string,\n\t\t{Qté Mois 06} as string,\n\t\t{Qté Mois 07} as string,\n\t\t{Qté Mois 08} as string,\n\t\t{Qté Mois 09} as string,\n\t\t{Qté Mois 10} as string,\n\t\t{Qté Mois 11} as string,\n\t\t{Qté Mois 12} as string,\n\t\t{CA Mois 01} as string,\n\t\t{CA Mois 02} as string,\n\t\t{CA Mois 03} as string,\n\t\t{CA Mois 04} as string,\n\t\t{CA Mois 05} as string,\n\t\t{CA Mois 06} as string,\n\t\t{CA Mois 07} as string,\n\t\t{CA Mois 08} as string,\n\t\t{CA Mois 09} as string,\n\t\t{CA Mois 10} as string,\n\t\t{CA Mois 11} as string,\n\t\t{CA Mois 12} as string,\n\t\t{Qté Trim 1} as string,\n\t\t{Qté Trim 2} as string,\n\t\t{Qté Trim 3} as string,\n\t\t{Qté Trim 4} as string,\n\t\t{CA Trim 1} as string,\n\t\t{CA Trim 2} as string,\n\t\t{CA Trim 3} as string,\n\t\t{CA Trim 4} as string,\n\t\t{Qté Cumul 01} as string,\n\t\t{Qté Cumul 02} as string,\n\t\t{Qté Cumul 03} as string,\n\t\t{Qté Cumul 04} as string,\n\t\t{Qté Cumul 05} as string,\n\t\t{Qté Cumul 06} as string,\n\t\t{Qté Cumul 07} as string,\n\t\t{Qté Cumul 08} as string,\n\t\t{Qté Cumul 09} as string,\n\t\t{Qté Cumul 10} as string,\n\t\t{Qté Cumul 11} as string,\n\t\t{Qté Cumul 12} as string,\n\t\t{CA Cumul 01} as string,\n\t\t{CA Cumul 02} as string,\n\t\t{CA Cumul 03} as string,\n\t\t{CA Cumul 04} as string,\n\t\t{CA Cumul 05} as string,\n\t\t{CA Cumul 06} as string,\n\t\t{CA Cumul 07} as string,\n\t\t{CA Cumul 08} as string,\n\t\t{CA Cumul 09} as string,\n\t\t{CA Cumul 10} as string,\n\t\t{CA Cumul 11} as string,\n\t\t{CA Cumul 12} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10000,\n\tignoreNoFilesFound: false) ~> objectif\nsource(output(\n\t\t{Année} as string,\n\t\tDocumentation as string,\n\t\tMarque as string,\n\t\tCible as string,\n\t\t{Périmètre} as string,\n\t\tLevier as string,\n\t\tCanal as string,\n\t\t{Hiérarchie inclues} as string,\n\t\t{Hiérarchies exclues} as string,\n\t\tType as string,\n\t\t{Valeur Annuelle} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levierPerformance\nRecordID derive({diffus/chantier} = trim(split(Cible, \" \")[2], \" \"),\n\t\tID_KPI = \"Sum_XRow_\"+toString(RecordID),\n\t\t{Libellé levié} = Levier+\"-\"+Documentation+\" \"+Cible+\" \"+iif({Valeur Annuelle}==\"YES\", \"Annuel\", \"Mensuel\")) ~> newColumn\nuniqueLevier keyGenerate(output(RecordID as long),\n\tstartAt: 1L) ~> RecordID\nnewColumn select(mapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie = {Hiérarchie inclues},\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nlevierPerformance filter({Année}==\"2020\") ~> YEARFILTER\nSelect3 derive(Marque = split(Marque, \".\"),\n\t\tCanal = split(Canal, \",\"),\n\t\tHierarchie = split(Hierarchie, \",\")) ~> splitting\nFlattenCanal foldDown(unroll(Hierarchie),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenHierarchie\nsplitting foldDown(unroll(Marque),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenMarque\nFlattenMarque foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenHierarchie filter(length(Hierarchie)==3) ~> lenHierarchie3\nSelect4, lenHierarchie3 join({Num Org} == Marque\n\t&& {Canal Dist} == Canal\n\t&& {Nom Canal} == {diffus/chantier}\n\t&& {Art Niv 2} == Hierarchie,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerLevier\ninnerLevier filter(Type==\"CA\") ~> levierCA\nlevierCA pivot(groupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\tMois,\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(ca_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot1\ninnerLevier filter(Type==\"Quantité\") ~> levierQA\nlevierQA pivot(groupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\tMois,\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(qt_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot2\nPivot1, Pivot2 union(byName: true)~> Union2\nFlattenHierarchie filter(length(Hierarchie)!=3) ~> lenHierarchieNot3\nSelect4, lenHierarchieNot3 join({Num Org} == Marque\n\t&& {Canal Dist} == Canal\n\t&& {Nom Canal} == {diffus/chantier}\n\t&& {Art Niv 1} == Hierarchie,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerLevier2\ninnerLevier2 filter(Type==\"Quantité\") ~> levierQA2\nlevierQA2 pivot(groupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\tMois,\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(qt_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot3\ninnerLevier2 filter(Type==\"CA\") ~> levierCA2\nlevierCA2 pivot(groupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\tMois,\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(ca_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot4\nPivot3, Pivot4 union(byName: true)~> Union3\nUnion2, Union3 union(byName: true)~> Union4\nchangeNULL select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\t{Qté Mois 01},\n\t\t{Qté Mois 02},\n\t\t{Qté Mois 03},\n\t\t{Qté Mois 04},\n\t\t{Qté Mois 05},\n\t\t{Qté Mois 06},\n\t\t{Qté Mois 07},\n\t\t{Qté Mois 08},\n\t\t{Qté Mois 09},\n\t\t{Qté Mois 10},\n\t\t{Qté Mois 11},\n\t\t{Qté Mois 12},\n\t\t{CA Mois 01},\n\t\t{CA Mois 02},\n\t\t{CA Mois 03},\n\t\t{CA Mois 04},\n\t\t{CA Mois 05},\n\t\t{CA Mois 06},\n\t\t{CA Mois 07},\n\t\t{CA Mois 08},\n\t\t{CA Mois 09},\n\t\t{CA Mois 10},\n\t\t{CA Mois 11},\n\t\t{CA Mois 12}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nkeepColumns select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\t{Qté Mois 01},\n\t\t{Qté Mois 02},\n\t\t{Qté Mois 03},\n\t\t{Qté Mois 04},\n\t\t{Qté Mois 05},\n\t\t{Qté Mois 06},\n\t\t{Qté Mois 07},\n\t\t{Qté Mois 08},\n\t\t{Qté Mois 09},\n\t\t{Qté Mois 10},\n\t\t{Qté Mois 11},\n\t\t{Qté Mois 12}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectQuantity\nSelectQuantity unpivot(output(\n\t\tcolumnName as string,\n\t\tqt_final as string\n\t),\n\tungroupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An}),\n\tlateral: false,\n\tignoreNullPivots: false) ~> quantityToLine\nkeepColumns select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\t{CA Mois 01},\n\t\t{CA Mois 02},\n\t\t{CA Mois 03},\n\t\t{CA Mois 04},\n\t\t{CA Mois 05},\n\t\t{CA Mois 06},\n\t\t{CA Mois 07},\n\t\t{CA Mois 08},\n\t\t{CA Mois 09},\n\t\t{CA Mois 10},\n\t\t{CA Mois 11},\n\t\t{CA Mois 12}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCA\nSelectCA unpivot(output(\n\t\tcolumnName as string,\n\t\tca_final as string\n\t),\n\tungroupBy({Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An}),\n\tlateral: true,\n\tignoreNullPivots: false) ~> CAtoLine\ndataCleansing select(mapColumn(\n\t\t{Num Org},\n\t\t{Num DR},\n\t\t{Num ATC},\n\t\t{Canal Dist},\n\t\t{Nom Canal},\n\t\t{Art Niv 1},\n\t\t{Art Niv 2},\n\t\t{Art Niv 3},\n\t\t{Art Niv 4},\n\t\t{Art Niv 5},\n\t\t{Qté Obj An},\n\t\t{CA Obj An},\n\t\tqt_final,\n\t\tca_final,\n\t\tMois\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nquantityToLine derive(Mois = toInteger(split(columnName, \" \")[3]),\n\t\tqt_final = toDouble(qt_final)) ~> getQuantityMonth\nCAtoLine derive(Mois = toInteger(split(columnName, \" \")[3]),\n\t\tca_final = toDouble(ca_final)) ~> getCAMonth\ngetQuantityMonth, getCAMonth join(quantityToLine@{Num Org} == CAtoLine@{Num Org}\n\t&& quantityToLine@{Num DR} == CAtoLine@{Num DR}\n\t&& quantityToLine@{Num ATC} == CAtoLine@{Num ATC}\n\t&& quantityToLine@{Canal Dist} == CAtoLine@{Canal Dist}\n\t&& quantityToLine@{Nom Canal} == CAtoLine@{Nom Canal}\n\t&& quantityToLine@{Art Niv 1} == CAtoLine@{Art Niv 1}\n\t&& quantityToLine@{Art Niv 2} == CAtoLine@{Art Niv 2}\n\t&& quantityToLine@{Art Niv 3} == CAtoLine@{Art Niv 3}\n\t&& quantityToLine@{Art Niv 4} == CAtoLine@{Art Niv 4}\n\t&& quantityToLine@{Art Niv 5} == CAtoLine@{Art Niv 5}\n\t&& getQuantityMonth@Mois == getCAMonth@Mois,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinQuantityAndCA\nobjectif derive({Art Niv 1} = iif(isNull({Art Niv 1}), \" \", {Art Niv 1}),\n\t\t{Art Niv 2} = iif(isNull({Art Niv 2}), \" \", {Art Niv 2}),\n\t\t{Art Niv 3} = iif(isNull({Art Niv 3}), \" \", {Art Niv 3}),\n\t\t{Art Niv 4} = iif(isNull({Art Niv 4}), \" \", {Art Niv 4}),\n\t\t{Art Niv 5} = iif(isNull({Art Niv 5}), \" \", {Art Niv 5})) ~> changeNULL\njoinQuantityAndCA select(mapColumn(\n\t\t{Num Org} = quantityToLine@{Num Org},\n\t\t{Num DR} = quantityToLine@{Num DR},\n\t\t{Num ATC} = quantityToLine@{Num ATC},\n\t\t{Canal Dist} = quantityToLine@{Canal Dist},\n\t\t{Nom Canal} = quantityToLine@{Nom Canal},\n\t\t{Art Niv 1} = quantityToLine@{Art Niv 1},\n\t\t{Art Niv 2} = quantityToLine@{Art Niv 2},\n\t\t{Art Niv 3} = quantityToLine@{Art Niv 3},\n\t\t{Art Niv 4} = quantityToLine@{Art Niv 4},\n\t\t{Art Niv 5} = quantityToLine@{Art Niv 5},\n\t\t{Qté Obj An} = quantityToLine@{Qté Obj An},\n\t\t{CA Obj An} = quantityToLine@{CA Obj An},\n\t\tqt_final,\n\t\tMois = getQuantityMonth@Mois,\n\t\tca_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteRightColumn\ndeleteRightColumn derive({Num Org} = trim({Num Org}, \" \"),\n\t\t{Canal Dist} = trim({Canal Dist}, \" \"),\n\t\t{Nom Canal} = trim(lower({Nom Canal}), \" \"),\n\t\t{Art Niv 1} = trim({Art Niv 1}, \" \"),\n\t\t{Art Niv 2} = trim({Art Niv 2}, \" \")) ~> dataCleansing\nlibelleLevier aggregate(groupBy({Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\t{Hiérarchie inclues},\n\t\t{Hiérarchies exclues},\n\t\tType,\n\t\t{Valeur Annuelle}),\n\t{Libellé levié} = max({Libellé levié})) ~> uniqueLevier\nYEARFILTER derive({Libellé levié} = Levier+\"-\"+Documentation+\" \"+Cible+\" \"+{Périmètre}+\" \"+iif({Valeur Annuelle}==\"YES\", \"Annuel\", \"Mensuel\")) ~> libelleLevier\nUnion4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['PREPARATION_OBJECTIF_RH'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['TEMP_LEVIER_PERFORMANCE'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OBJECTIFS_RH')]",
				"[concat(variables('factoryId'), '/datasets/REFERENTIEL_LEVIER_RH')]",
				"[concat(variables('factoryId'), '/datasets/PREPARATION_OBJECTIF_RH')]",
				"[concat(variables('factoryId'), '/datasets/TEMP_LEVIER_PERFORMANCE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRIX_MOYEN_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT/POST_UNION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "referentielPrix",
								"type": "DatasetReference"
							},
							"name": "prixmoyen"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "prixMoyenSplited",
								"type": "DatasetReference"
							},
							"name": "prixsplit"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "Flatten1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn5"
						}
					],
					"script": "source(output(\n\t\tWholeSalerID as string,\n\t\tArticle as string,\n\t\tprix_unitaire as string,\n\t\t{Durée_période} as string,\n\t\t{Période} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixmoyen\nDerivedColumn3 derive(mois1 = toInteger(split( {Mois début}, \"/\")[1]),\n\t\tannee1 = split( {Mois début}, \"/\")[2],\n\t\tmois2 = toInteger(split( {Mois fin}, \"/\")[1]),\n\t\tannee2 = split( {Mois fin}, \"/\")[2],\n\t\tDistributeur = iif(WholeSalerID=='ancs - accueil négoce chauffage sanitaire','partedis',  iif(instr(WholeSalerID, 'trva - tereva' )>0, 'tereva',    iif( (instr(WholeSalerID, 'dsc')>0)  || (instr(WholeSalerID, 'cedeo')>0 ) , 'dsc',     iif(instr(WholeSalerID, 'vf' )>0, 'vf',      iif(instr(WholeSalerID, 'sonac' )>0, 'sonac',WholeSalerID)))))) ~> DerivedColumn1\nDerivedColumn1 derive(toreplicate = iif (mois2 - mois1 <=0, 1 ,  mois2 - mois1+1)) ~> DerivedColumn2\nprixmoyen derive({Mois début} = split( {Durée_période} ,\"-\")[1],\n\t\t{Mois fin} = split( {Durée_période} ,\"-\")[2],\n\t\tWholeSalerID = lower(WholeSalerID)) ~> DerivedColumn3\nDerivedColumn2 derive(dd = mapLoop(abs(toInteger(toreplicate)), #index )) ~> DerivedColumn4\nDerivedColumn4 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tWholeSalerID,\n\t\tDistributeur,\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\ttoreplicate,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nDerivedColumn5 select(mapColumn(\n\t\tArticle,\n\t\tDistributeur,\n\t\tprix_unitaire,\n\t\t{Durée_période},\n\t\t{Période},\n\t\t{Mois début},\n\t\t{Mois fin},\n\t\tmois1,\n\t\tannee1,\n\t\tmois2,\n\t\tannee2,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFlatten1 derive(dd = toInteger(dd) -1) ~> DerivedColumn5\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['prixmoyensplit'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> prixsplit"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/referentielPrix')]",
				"[concat(variables('factoryId'), '/datasets/prixMoyenSplited')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_ARTICLE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "articleHierarchie"
						},
						{
							"dataset": {
								"referenceName": "DETAIL_ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "detailArticleHierarchie"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "sortieArticleDesignation"
						}
					],
					"transformations": [
						{
							"name": "splitGroupe"
						},
						{
							"name": "splitLocale"
						},
						{
							"name": "N1GroupeDesignation"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2GroupeDesignation"
						},
						{
							"name": "RemoveColumns2",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3GroupeDesignation"
						},
						{
							"name": "RemoveColumns3",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4GroupeDesignation"
						},
						{
							"name": "RemoveColumns4",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5GroupeDesignation"
						},
						{
							"name": "RemoveColumns5",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6GroupeDesignation"
						},
						{
							"name": "RemoveColumns6",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7GroupeDesignation"
						},
						{
							"name": "RemoveColumns7",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N1LocaleDesignation"
						},
						{
							"name": "RemoveColumns8",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2LocaleDesignation"
						},
						{
							"name": "RemoveColumns9",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3LocaleDesignation"
						},
						{
							"name": "RemoveColumns10",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4LocaleDesignation"
						},
						{
							"name": "RemoveColumns11",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5LocaleDesignation"
						},
						{
							"name": "RemoveColumns12",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6LocaleDesignation"
						},
						{
							"name": "RemoveColumns13",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7LocaleDesignation"
						},
						{
							"name": "RemoveColumns14",
							"description": "Autogenerated by data preview actions"
						}
					],
					"script": "source(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleHierarchie\nsource(output(\n\t\t{Hiérarch.produits} as string,\n\t\t{Désignation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> detailArticleHierarchie\narticleHierarchie derive({N1.groupe} = substring({Hiérarch.groupe}, 1, 2),\n\t\t{N2.groupe} = substring({Hiérarch.groupe}, 1, 3),\n\t\t{N3.groupe} = substring({Hiérarch.groupe}, 1, 4),\n\t\t{N4.groupe} = substring({Hiérarch.groupe}, 1, 5),\n\t\t{N5.groupe} = substring({Hiérarch.groupe}, 1, 6),\n\t\t{N6.groupe} = substring({Hiérarch.groupe}, 1, 7),\n\t\t{N7.groupe} = substring({Hiérarch.groupe}, 1, 10)) ~> splitGroupe\nsplitGroupe derive({N1.locale} = substring({Hiérarch.locale}, 1, 2),\n\t\t{N2.locale} = substring({Hiérarch.locale}, 1, 3),\n\t\t{N3.locale} = substring({Hiérarch.locale}, 1, 4),\n\t\t{N4.locale} = substring({Hiérarch.locale}, 1, 5),\n\t\t{N5.locale} = substring({Hiérarch.locale}, 1, 6),\n\t\t{N6.locale} = substring({Hiérarch.locale}, 1, 7),\n\t\t{N7.locale} = substring({Hiérarch.locale}, 1, 10)) ~> splitLocale\nsplitLocale, detailArticleHierarchie join({N1.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N1GroupeDesignation\nN1GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nRemoveColumns1, detailArticleHierarchie join({N2.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N2GroupeDesignation\nN2GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns2\nRemoveColumns2, detailArticleHierarchie join({N3.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N3GroupeDesignation\nN3GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns3\nRemoveColumns3, detailArticleHierarchie join({N4.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N4GroupeDesignation\nN4GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns4\nRemoveColumns4, detailArticleHierarchie join({N5.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N5GroupeDesignation\nN5GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns5\nRemoveColumns5, detailArticleHierarchie join({N6.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N6GroupeDesignation\nN6GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns6\nRemoveColumns6, detailArticleHierarchie join({N7.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N7GroupeDesignation\nN7GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns7\nRemoveColumns7, detailArticleHierarchie join({N1.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N1LocaleDesignation\nN1LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns8\nRemoveColumns8, detailArticleHierarchie join({N2.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N2LocaleDesignation\nN2LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns9\nRemoveColumns9, detailArticleHierarchie join({N3.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N3LocaleDesignation\nN3LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns10\nRemoveColumns10, detailArticleHierarchie join({N4.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N4LocaleDesignation\nN4LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns11\nRemoveColumns11, detailArticleHierarchie join({N5.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N5LocaleDesignation\nN5LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns12\nRemoveColumns12, detailArticleHierarchie join({N6.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N6LocaleDesignation\nN6LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns13\nRemoveColumns13, detailArticleHierarchie join({N7.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N7LocaleDesignation\nN7LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation},\n\t\t{N7.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns14\nRemoveColumns14 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['HIERARCHIE_ARTICLE'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sortieArticleDesignation"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ARTICLE_HIERARCHIE')]",
				"[concat(variables('factoryId'), '/datasets/DETAIL_ARTICLE_HIERARCHIE')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHIE_ARTICLE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFERENTIEL_PRIX_MOYEN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "FacturationBW",
								"type": "DatasetReference"
							},
							"name": "facturation"
						},
						{
							"dataset": {
								"referenceName": "platforme",
								"type": "DatasetReference"
							},
							"name": "plateforme"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEMP_PRIX_PAR_PERIODE",
								"type": "DatasetReference"
							},
							"name": "dureePeriodeOutput"
						}
					],
					"transformations": [
						{
							"name": "keep42and51"
						},
						{
							"name": "factureFilter"
						},
						{
							"name": "innerPlateforme"
						},
						{
							"name": "Select1"
						},
						{
							"name": "sort"
						},
						{
							"name": "addKey"
						},
						{
							"name": "newID"
						},
						{
							"name": "joinPreviousRow"
						},
						{
							"name": "prixUnitaire"
						},
						{
							"name": "prixMoyen"
						},
						{
							"name": "Select3"
						},
						{
							"name": "renameToPrevious"
						},
						{
							"name": "nextNewID"
						},
						{
							"name": "renameToNext"
						},
						{
							"name": "joinNextRow"
						},
						{
							"name": "changementDePeriode"
						},
						{
							"name": "changementDePeriodeFiltre"
						},
						{
							"name": "DureePeriode"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "Sort1"
						},
						{
							"name": "Select4"
						},
						{
							"name": "dropNULL"
						},
						{
							"name": "leftPlateforme"
						},
						{
							"name": "leftOuterPlateforme"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "Select5"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select6"
						},
						{
							"name": "Select7"
						},
						{
							"name": "addperiod"
						},
						{
							"name": "Union1"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as integer,\n\t\t{Canal distribution} as integer,\n\t\t{Secteur d'activité} as integer,\n\t\t{Document de vente} as integer,\n\t\tPoste as integer,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as integer,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as integer,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as double,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as integer,\n\t\t{Année civile} as integer,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as float,\n\t\t{CA cdé} as float,\n\t\t{Qté livrée} as float,\n\t\t{CA livré} as float,\n\t\t{Qté facturée} as float,\n\t\t{CA facturé} as float,\n\t\t{Cout standard cdé} as float,\n\t\t{Cout fabrication} as float,\n\t\t{Cout standard livré} as float,\n\t\t{Cout standard facturé} as float\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> plateforme\ncleansing filter({Canal distribution}==42 || {Canal distribution}==51) ~> keep42and51\nkeep42and51 derive(fact_filter = iif( ( instr({Type de facture},\"YFAR\")==0 && instr({Motif commande},\"FAS\")==0 ) || ( instr({Type de facture},\"YFAB\")==0 && instr({Motif commande},\"FAS\")==0 ), 1, 0)) ~> factureFilter\nfactureFilter, plateforme join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerPlateforme\ninnerPlateforme select(mapColumn(\n\t\tArticle,\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nprixMoyen sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> sort\nSelect3 keyGenerate(output(ID as long),\n\tstartAt: 1L) ~> addKey\naddKey derive(ID = ID+1) ~> newID\naddKey, renameToPrevious join(ID == {previous ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinPreviousRow\nsort derive(prix_unitaire = {CA facturé}/{Qté facturée}) ~> prixUnitaire\nSelect1 aggregate(groupBy(WholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier}),\n\t{Qté facturée} = max({Qté facturée}),\n\t\t{CA facturé} = max({CA facturé})) ~> prixMoyen\nprixUnitaire select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nnewID select(mapColumn(\n\t\t{previous WholeSalerID} = WholeSalerID,\n\t\t{previous Article} = Article,\n\t\t{previous Année civile} = {Année civile},\n\t\t{previous Mois calendrier} = {Mois calendrier},\n\t\t{previous prix_unitaire} = prix_unitaire,\n\t\t{previous ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToPrevious\naddKey derive(ID = ID-1) ~> nextNewID\nnextNewID select(mapColumn(\n\t\t{next WholeSalerID} = WholeSalerID,\n\t\t{next Article} = Article,\n\t\t{next Année civile} = {Année civile},\n\t\t{next Mois calendrier} = {Mois calendrier},\n\t\t{next prix_unitaire} = prix_unitaire,\n\t\t{next ID} = ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameToNext\njoinPreviousRow, renameToNext join(ID == {next ID},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinNextRow\njoinNextRow derive({Changement de période} = iif({previous Article}!=Article || {previous WholeSalerID}!=WholeSalerID, \r\n    1, \r\n\r\n    iif(abs(({previous prix_unitaire}-prix_unitaire)/{previous prix_unitaire})>0.1, 1, 0))) ~> changementDePeriode\nchangementDePeriode filter({Changement de période}==1) ~> changementDePeriodeFiltre\nchangementDePeriodeFiltre derive({Durée_période} = iif(WholeSalerID=={previous WholeSalerID} && Article=={previous Article}\r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article}\r\n    \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , toString({Mois calendrier})+\"/\"+toString({Année civile})+\"-12/\"+toString({Année civile}))\r\n    \r\n    , iif(WholeSalerID=={next WholeSalerID} && Article=={next Article}\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-\"+toString({next Mois calendrier}-1)+\"/\"+toString({Année civile})\r\n        \r\n        , \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile})))) ~> DureePeriode\nfacturation derive({Canal distribution} = toInteger({Canal distribution})) ~> cleansing\nDureePeriode sort(asc(WholeSalerID, true),\n\tasc(Article, true),\n\tasc({Année civile}, true),\n\tasc({Mois calendrier}, true)) ~> Sort1\nSort1 select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\t{Année civile},\n\t\t{Mois calendrier},\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect4 filter(!isNull(WholeSalerID) || !isNull(Article) || !isNull({Année civile}) || !isNull({Mois calendrier}) || !isNull(prix_unitaire) || !isNull({Durée_période})) ~> dropNULL\nfactureFilter, plateforme join({Récept. de march.} == HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftPlateforme\nleftPlateforme filter(isNull(HubSAPid)) ~> leftOuterPlateforme\nleftOuterPlateforme aggregate(groupBy(Article,\n\t\t{Année civile}),\n\t{Qté facturée} = mean({Qté facturée})) ~> Aggregate1\nAggregate1 derive({Durée_période} = \"1/\"+toString({Année civile})+\"-12/\"+toString({Année civile}),\n\t\tjoin = 1) ~> DerivedColumn1\nplateforme aggregate(groupBy(WholeSalerID),\n\tHubName = max(WholeSalerHubID)) ~> Aggregate2\nAggregate2 select(mapColumn(\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect5 derive(join = 1) ~> DerivedColumn2\nDerivedColumn1, DerivedColumn2 join(DerivedColumn1@join == DerivedColumn2@join,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tArticle,\n\t\tprix_unitaire = {Qté facturée},\n\t\t{Durée_période},\n\t\tWholeSalerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\ndropNULL select(mapColumn(\n\t\tWholeSalerID,\n\t\tArticle,\n\t\tprix_unitaire,\n\t\t{Durée_période}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nSelect6 derive({Période} = 1) ~> addperiod\nSelect7, addperiod union(byName: true)~> Union1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['referentielPrix'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> dureePeriodeOutput"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FacturationBW')]",
				"[concat(variables('factoryId'), '/datasets/platforme')]",
				"[concat(variables('factoryId'), '/datasets/TEMP_PRIX_PAR_PERIODE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_CHANTIER')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_OFFRE_CHANTIER_INPUT",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SUIVIE_OFFRE_CHANTIER",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregationOffre"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "offreNotNull"
						},
						{
							"name": "aggregationBase"
						},
						{
							"name": "Join1"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix client} as string,\n\t\t{Prix négoce} as string,\n\t\t{Prix total} as string,\n\t\tClient as string,\n\t\t{Type financement} as string,\n\t\t{Ville client} as string,\n\t\t{Numéro interne 1} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Typologie projet} as string,\n\t\tDateValidite as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\t{Canal distribution} as string,\n\t\t{nom du canal} as string,\n\t\tcanal_distribution_final as string,\n\t\tcanal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tqt_ecc_enrichi as string,\n\t\tca_ecc_enrichi as string,\n\t\tqte_ecoulement as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tsource_atc as string,\n\t\tSuccessor as string,\n\t\tCDis as string,\n\t\tPredecessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Deb val} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tca_ecoulement as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Nom du compte} as string,\n\t\t{Numero Interne_ Groupe cible/Typologie générale} as string,\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Numero Interne_ Compte principal: Numéro du compte} as string,\n\t\t{Numero Interne_ Compte principal: Nom du compte} as string,\n\t\t{Jour calendaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nFilter1 aggregate(groupBy(Offre,\n\t\t{Référence},\n\t\tCanal),\n\t{Quantité de l'offre} = sum(toInteger({Quantité})),\n\t\t{Date fin validité} = max(DateValidite)) ~> aggregationOffre\nstgOffre filter(!isNull(Offre)) ~> Filter1\nbaseCommerciale filter(!isNull(no_offre)) ~> offreNotNull\noffreNotNull aggregate(groupBy({plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit},\n\t\tcanal_final),\n\t{qte consommée} = sum(toInteger(quantite)),\n\t\t{dernière facturation année} = max(toInteger(year)),\n\t\t{dernière facturation mois} = max(toInteger(month))) ~> aggregationBase\naggregationOffre, aggregationBase join(Offre == no_offre\n\t&& {Référence} == {code produit}\n\t&& Canal == canal_final,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive({Date de dernière facturation de l'offre} = toString({dernière facturation année})+\"-\"+toString({dernière facturation mois})) ~> yearmonth\nyearmonth select(mapColumn(\n\t\t{Num offre} = Offre,\n\t\tCanal,\n\t\tProduit = {Référence},\n\t\t{Quantité de l'offre},\n\t\t{Date fin validité},\n\t\t{Quantité consommée} = {qte consommée},\n\t\t{Date de dernière facturation de l'offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SUIVIE_OFFRE_CHANTIER'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_CHANTIER_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/BASE_COMMERCIALE')]",
				"[concat(variables('factoryId'), '/datasets/SUIVIE_OFFRE_CHANTIER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_OFFRE_DIFFUS_INPUT",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SUIVI_OFFRE_DIFFUS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregationOffre"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "offreNotNull"
						},
						{
							"name": "aggregationBase"
						},
						{
							"name": "Join1"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{Date de validité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\t{Canal distribution} as string,\n\t\t{nom du canal} as string,\n\t\tcanal_distribution_final as string,\n\t\tcanal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tqt_ecc_enrichi as string,\n\t\tca_ecc_enrichi as string,\n\t\tqte_ecoulement as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tsource_atc as string,\n\t\tSuccessor as string,\n\t\tCDis as string,\n\t\tPredecessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Deb val} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tca_ecoulement as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Nom du compte} as string,\n\t\t{Numero Interne_ Groupe cible/Typologie générale} as string,\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Numero Interne_ Compte principal: Numéro du compte} as string,\n\t\t{Numero Interne_ Compte principal: Nom du compte} as string,\n\t\t{Jour calendaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nFilter1 aggregate(groupBy(Offre,\n\t\t{Référence},\n\t\tCanal),\n\t{Date fin de validité} = max({Date de validité}),\n\t\t{Quantité de l'offre} = sum(toInteger({Quantité})),\n\t\tQuantite_P1N = first(PotentielP1N),\n\t\tQuantite_P2N = first(PotentielP2N),\n\t\tQuantite_P3N = first(PotentielP3N),\n\t\tQuantite_P4N = first(PotentielP4N),\n\t\tQuantite_P5N = first(PotentielP5N),\n\t\tQuantite_P6N = first(PotentielP6N)) ~> aggregationOffre\nstgOffre filter(!isNull(Offre)) ~> Filter1\nbaseCommerciale filter(!isNull(no_offre)) ~> offreNotNull\noffreNotNull aggregate(groupBy({plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit},\n\t\tcanal_final),\n\t{qte consommée} = sum(toInteger(quantite)),\n\t\t{dernière facturation année} = max(toInteger(year)),\n\t\t{dernière facturation mois} = max(toInteger(month))) ~> aggregationBase\naggregationOffre, aggregationBase join(Offre == no_offre\n\t&& {Référence} == {code produit}\n\t&& Canal == canal_final,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive({Date de dernière facturation de l'offre} = toString({dernière facturation année})+\"-\"+toString({dernière facturation mois}),\n\t\tCanal = \"Diffus\") ~> yearmonth\nyearmonth select(mapColumn(\n\t\tOffre,\n\t\t{Référence},\n\t\tCanal,\n\t\t{Date fin de validité},\n\t\t{Sum_Quantité} = {Quantité de l'offre},\n\t\tQuantite_P1N,\n\t\tQuantite_P2N,\n\t\tQuantite_P3N,\n\t\tQuantite_P4N,\n\t\tQuantite_P5N,\n\t\tQuantite_P6N,\n\t\t{Quantité consommée} = {qte consommée},\n\t\t{Date de dernière facturation de l'offre}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SUIVI_OFFRE_DIFFUS'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_OFFRE_DIFFUS_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/BASE_COMMERCIALE')]",
				"[concat(variables('factoryId'), '/datasets/SUIVI_OFFRE_DIFFUS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TDataSD')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SORTIE LOGISTIQUE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "FacturationBW",
								"type": "DatasetReference"
							},
							"name": "FacturationBW"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SortieTDataSD",
								"type": "DatasetReference"
							},
							"name": "SortieTDataSD"
						}
					],
					"transformations": [
						{
							"name": "RecordID"
						},
						{
							"name": "DateExtDocVteLongDateCRE"
						},
						{
							"name": "Rename"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FacturationBW\nFacturationBW keyGenerate(output(CleDataSD as long),\n\tstartAt: 1L) ~> RecordID\nRecordID derive(DateExt = \"\",\n\t\tDocVte_Long = \"\",\n\t\tDateCRE = \"\") ~> DateExtDocVteLongDateCRE\nDateExtDocVteLongDateCRE select(mapColumn(\n\t\tOrgCial = {Org. commerciale},\n\t\tCanalDist = {Canal distribution},\n\t\tSectAct = {Secteur d'activité},\n\t\tDocVte = {Document de vente},\n\t\tPoste,\n\t\tDate = {Jour calendaire},\n\t\tDRCde = {Agence commerciale corrigé},\n\t\tATCCde = {ATC Corrigé},\n\t\tCliCde = {Donneur d'ordre},\n\t\tCliLiv = {Récept. de march.},\n\t\tCliFac = {Destinataire facture},\n\t\tNoArt = Article,\n\t\tTypDocVte = {Type doc. vente},\n\t\tTypPoste = {Type de poste},\n\t\tNoLiv = Livraison,\n\t\tTypLiv = {Type de livraison},\n\t\tTypPostLiv = {Type poste Livraison},\n\t\tNoFac = Facture,\n\t\tTypFac = {Type de facture},\n\t\tTypPostFac = {Type poste Facture},\n\t\tMois = {Mois calendrier},\n\t\tAn = {Année civile},\n\t\tRaiCde = {Motif commande},\n\t\tQtCde = {Qté cdée},\n\t\tValNet = {CA cdé},\n\t\tQtLiv = {Qté livrée},\n\t\tValLiv = {CA livré},\n\t\tQtFac = {Qté facturée},\n\t\tValFac = {CA facturé},\n\t\tStdCost = {Cout standard cdé},\n\t\tFabCost = {Cout fabrication},\n\t\tStdCostLiv = {Cout standard livré},\n\t\tStdCostFac = {Cout standard facturé},\n\t\tCleDataSD,\n\t\tDateExt,\n\t\tDocVte_Long,\n\t\tDateCRE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nRename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SortieTDataSD'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieTDataSD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FacturationBW')]",
				"[concat(variables('factoryId'), '/datasets/SortieTDataSD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TEREVA_ECOULEMENT_INPUT",
								"type": "DatasetReference"
							},
							"name": "ECOULEMENT"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEREVA_EC_PREPARED",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "yearmonthANDcanal"
						},
						{
							"name": "yearANDmonth"
						},
						{
							"name": "agenceCodeNotNull"
						},
						{
							"name": "posIDNotNull"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "deleteVentesDirectes"
						},
						{
							"name": "rename"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerLeftVentesDirectes"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Union1"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "marquename"
						}
					],
					"script": "source(output(\n\t\tsociete as string,\n\t\tregion_lib as string,\n\t\tsgeo as string,\n\t\tsgeo_lib as string,\n\t\tagence as string,\n\t\tagence_lib as string,\n\t\tdep_ag as string,\n\t\tfrs as string,\n\t\tarticle as string,\n\t\tarticle_lib as string,\n\t\tdm as string,\n\t\tref_frs as string,\n\t\t{vva (m) n} as string,\n\t\t{vva (m) n-1} as string,\n\t\t{qte (m) n} as string,\n\t\t{qte (m) n-1} as string,\n\t\t{vva (c) n} as string,\n\t\t{vva (c) n-1} as string,\n\t\t{qte (c) n} as string,\n\t\t{qte (c) n-1} as string,\n\t\t{var. vva (m)} as string,\n\t\t{var. qte (m)} as string,\n\t\t{var. vva (c)} as string,\n\t\t{var. qte (c)} as string,\n\t\tpath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ECOULEMENT\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nrename derive(yearmonth = replace(split(split(path, \"/\")[3], \"_\")[1], \"-\", \"\"),\n\t\tcanal = split(split(path, \"/\")[3], \"_\")[2],\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonthANDcanal\nyearmonthANDcanal derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> yearANDmonth\nyearANDmonth filter(!isNull(agence_code)) ~> agenceCodeNotNull\norganisation filter(!isNull(POSid)) ~> posIDNotNull\nagenceCodeNotNull, uniqueOrganisation join(agence_code == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\nposIDNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> uniqueOrganisation\ninnerOrganisation, ventesDirectes join(yearmonthANDcanal@yearmonth == ventesDirectes@yearmonth\n\t&& reference == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerVentesDirectes derive(qte_ecoulement = qte_ecoulement-toDouble({Qt� vente directe})) ~> deleteVentesDirectes\nECOULEMENT select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code = agence,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file = frs,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference = ref_frs,\n\t\tqte_ecoulement = {qte (m) n},\n\t\tpath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\ninnerOrganisation, ventesDirectes join(yearmonthANDcanal@yearmonth == ventesDirectes@yearmonth\n\t&& reference == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(Article) || isNull(ventesDirectes@yearmonth) || isNull({Code client})) ~> outerLeftVentesDirectes\ndeleteVentesDirectes select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tpath,\n\t\tyearmonth = yearmonthANDcanal@yearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nouterLeftVentesDirectes select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tpath,\n\t\tyearmonth = yearmonthANDcanal@yearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect1, Select2 union(byName: true)~> Union1\nmarquename select(mapColumn(\n\t\tdistributeur = societe,\n\t\tagence_code,\n\t\tmarque_file,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tHubSAPid,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tmarque_id = BrandID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nUnion1 derive(marque_name = \"SaunierDuval\",\n\t\tmarque = \"1604\",\n\t\tmarque_num = \"1604\") ~> marquename\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['TEREVA_ECOUL_PREPARED'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TEREVA_ECOULEMENT_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/TEREVA_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/TEREVA_EC_PREPARED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRAITEMENTECOULEMENT_AVOIR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "flux pour le retraitmenet des ecoulements du modele dsc-tereva",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecoulementUniformAz",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "avoir",
								"type": "DatasetReference"
							},
							"name": "avoir"
						},
						{
							"dataset": {
								"referenceName": "salerDsc",
								"type": "DatasetReference"
							},
							"name": "salerDSC"
						},
						{
							"dataset": {
								"referenceName": "OrgaTerevas",
								"type": "DatasetReference"
							},
							"name": "OrgaTerevas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "eccToReplicate",
								"type": "DatasetReference"
							},
							"name": "outEccDscTereva"
						},
						{
							"dataset": {
								"referenceName": "avoirToReplicate",
								"type": "DatasetReference"
							},
							"name": "DTAvoirRetraiter"
						},
						{
							"dataset": {
								"referenceName": "outEccNotDSCTEREVA",
								"type": "DatasetReference"
							},
							"name": "outEccNotDSCTEREVA"
						},
						{
							"dataset": {
								"referenceName": "AZ_OecoulementDscTerevaWithIndex",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "AZ_OecoulementPartedislikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "AZ_AvoirWithIndexDSClike",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "filterColumnsToUse"
						},
						{
							"name": "filterDistrubitor"
						},
						{
							"name": "AvoirAddToReplicate"
						},
						{
							"name": "EccAddToReplicate"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "Union1"
						},
						{
							"name": "uniqueAgenceCode"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "positiveQuantite"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "Flatten1"
						},
						{
							"name": "Window1"
						},
						{
							"name": "DerivedColumn5"
						},
						{
							"name": "Flatten2"
						},
						{
							"name": "Window2"
						},
						{
							"name": "DerivedColumn6"
						},
						{
							"name": "Window3"
						},
						{
							"name": "Flatten3"
						},
						{
							"name": "DerivedColumn7"
						},
						{
							"name": "DerivedColumn8"
						},
						{
							"name": "DerivedColumn9"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\tmarque as string,\n\t\tClient as string,\n\t\t{code postal} as string,\n\t\tmarque_name as string,\n\t\t{Code produit} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Clé} as string,\n\t\tMarque as string,\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tDepot as string,\n\t\tNoFrs as string,\n\t\tFOUR2 as string,\n\t\tC_Four as string,\n\t\tLib_Four as string,\n\t\tCategorie as string,\n\t\tCanal as string,\n\t\tFinancement as string,\n\t\tNoOffre as string,\n\t\tDate_Debut as string,\n\t\tDate_Fin as string,\n\t\tNoArtDSC as string,\n\t\tLibArt as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\t{LIB AGENCE} as string,\n\t\t{Qté_Ini} as string,\n\t\tSolde_Qte as string,\n\t\tQte_Tot as string,\n\t\tQte_Retenue as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tNomCli as string,\n\t\tPRR as string,\n\t\tPRS_ligne_BL as string,\n\t\tPA_Ref as string,\n\t\tPA_D as string,\n\t\tPA_Valide_VGF as string,\n\t\tEcart as string,\n\t\tAide as string,\n\t\tAide_Retenue as string,\n\t\t{Aide_Validée_VGF} as string,\n\t\tDate_Num as string,\n\t\tP_Fact as string,\n\t\t{Clé_Offre_Article} as string,\n\t\tMotif_Commentaire as string,\n\t\t{Qté_Campagne} as string,\n\t\tPrix_Campagne as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tMontant_Avoir as string,\n\t\tNoDocRefac as string,\n\t\tNoLigneDocRefac as string,\n\t\t{Contrôle} as string,\n\t\tDate_Ctrl as string,\n\t\tCode_Motif_Refus as string,\n\t\tCompanyId as string,\n\t\t{ValidéPar} as string,\n\t\tDateAjout as string,\n\t\t{ID ATC} as string,\n\t\t{Nom ATC} as string,\n\t\tHubSAPid as string,\n\t\t{Nouveau Prix vente unitaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoir\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> salerDSC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrgaTerevas\necoulement select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal} = {code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\navoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filterColumnsToUse\nEccAddToReplicate split(in([\"dsc\",'tereva'],lower(distributeur)),\n\tdisjoint: false) ~> filterDistrubitor@(dscTereva, notDscTereva)\nfilterColumnsToUse derive(toreplicate = abs( toInteger( Qte_Validee_VGF ) )) ~> AvoirAddToReplicate\nSelect1 derive(toreplicate = abs(toInteger( qte_ecoulement ))) ~> EccAddToReplicate\nDerivedColumn1 split(in([\"2\",\"7\"], CompanyId),\n\tdisjoint: false) ~> ConditionalSplit1@(DscTerevaAvoir, NotDscTerevaAvoir)\nsalerDSC, OrgaTerevas union(byName: true)~> Union1\nUnion1 aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID)) ~> uniqueAgenceCode\nAvoirAddToReplicate derive(ca_avoir = toFloat(PA_Valide_VGF),\n\t\tyearmonth = iif(toInteger(Mois)<10, {Année}+\"0\"+Mois  ,   {Année}+\"0\"+Mois  ),\n\t\tQte_Validee_VGF = toInteger( Qte_Validee_VGF )) ~> DerivedColumn1\nSelect2, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nConditionalSplit1@DscTerevaAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin1 filter(toInteger(Qte_Validee_VGF) >0) ~> positiveQuantite\nfilterDistrubitor@dscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index),\n\t\trcount = 1) ~> DerivedColumn4\nDerivedColumn4 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd,\n\t\trcount\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 window(over(yearmonth,\n\t\tagence_code,\n\t\treference),\n\tasc(yearmonth, true),\n\tasc(agence_code, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window1\nfilterDistrubitor@notDscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index)) ~> DerivedColumn5\nDerivedColumn5 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten2\nFlatten2 window(over(yearmonth,\n\t\tHubSAPid,\n\t\treference),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window2\npositiveQuantite derive(dd = mapLoop(abs(toInteger(Qte_Validee_VGF)), #index)) ~> DerivedColumn6\nFlatten3 window(over(yearmonth,\n\t\tAgence,\n\t\tNoArtVGF),\n\tasc(yearmonth, true),\n\tasc(Agence, true),\n\tasc(NoArtVGF, true),\n\tindexcols2 = rowNumber()) ~> Window3\nDerivedColumn6 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tWholeSalerID,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten3\nWindow3 derive(indexcols2 = yearmonth+Agence+NoArtVGF+toString(indexcols2),\n\t\tqte_avoir = iif(toInteger(Qte_Validee_VGF) >0, 1, -1 )) ~> DerivedColumn7\nWindow2 derive(indexcols2 = yearmonth+HubSAPid+reference+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> DerivedColumn8\nWindow1 derive(indexcols2 = yearmonth+agence_code+reference+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> DerivedColumn9\nfilterDistrubitor@dscTereva sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['outEccDscTereva'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEccDscTereva\npositiveQuantite sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['DscAvoirTemp'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DTAvoirRetraiter\nfilterDistrubitor@notDscTereva sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['outEccPartedisLike'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEccNotDSCTEREVA\nDerivedColumn9 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementDscTerevaWithIndex'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nDerivedColumn8 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementPartedislikeWithIndex'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nDerivedColumn7 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_AvoirWithIndexDSClike'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ecoulementUniformAz')]",
				"[concat(variables('factoryId'), '/datasets/avoir')]",
				"[concat(variables('factoryId'), '/datasets/salerDsc')]",
				"[concat(variables('factoryId'), '/datasets/OrgaTerevas')]",
				"[concat(variables('factoryId'), '/datasets/eccToReplicate')]",
				"[concat(variables('factoryId'), '/datasets/avoirToReplicate')]",
				"[concat(variables('factoryId'), '/datasets/outEccNotDSCTEREVA')]",
				"[concat(variables('factoryId'), '/datasets/AZ_OecoulementDscTerevaWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/AZ_OecoulementPartedislikeWithIndex')]",
				"[concat(variables('factoryId'), '/datasets/AZ_AvoirWithIndexDSClike')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UNION_BASE_COMMERCIAL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputVenteDirect",
								"type": "DatasetReference"
							},
							"name": "venteDirect"
						},
						{
							"dataset": {
								"referenceName": "dscModel",
								"type": "DatasetReference"
							},
							"name": "DSCModel"
						},
						{
							"dataset": {
								"referenceName": "ModelPartedisInput",
								"type": "DatasetReference"
							},
							"name": "PartedisModel"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OunionBaseCommercial",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "oPartedis"
						},
						{
							"name": "endDSC"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Union2"
						}
					],
					"script": "source(output(\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tcanal_final as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPOSSAMidString as string,\n\t\treference as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\tyearmonth as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\t{Agence commerciale} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC performance} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> venteDirect\nsource(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tNoOffre as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tCompanyId as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tid_canal_final as string,\n\t\t{Canal final} as string,\n\t\t{ATC Performance} as string,\n\t\t{code postal} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tqt_plateforme_final as string,\n\t\tca_plateforme_final as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSCModel\nsource(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\t{ATC performance} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PartedisModel\nDerivedColumn1 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final = {Canal distribution},\n\t\t{ATC Performance} = {ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> oPartedis\nDSCModel select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tno_offre = NoOffre,\n\t\tNoCli,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final = {Canal final},\n\t\t{ATC Performance},\n\t\t{Code postal} = {code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDSC\nventeDirect select(mapColumn(\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tcanal_final,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tyearmonth,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\t{Agence commerciale},\n\t\t{ATC Corrigé},\n\t\t{ATC Performance} = {ATC performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nUnion2 select(mapColumn(\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tyearmonth,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\t{Agence commerciale},\n\t\t{ATC Corrigé},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tHubSAPid,\n\t\tNoCli,\n\t\t{ATC Performance},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tagence_code,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\t{Qté facturée},\n\t\t{CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nPartedisModel derive(POSSAMidString = coalesce(POSSAMidString , {Recept de march})) ~> DerivedColumn1\nendDSC, oPartedis union(byName: true)~> Union1\nUnion1, Select1 union(byName: true)~> Union2\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string,\n\t\tColumn_23 as string,\n\t\tColumn_24 as string,\n\t\tColumn_25 as string,\n\t\tColumn_26 as string,\n\t\tColumn_27 as string,\n\t\tColumn_28 as string,\n\t\tColumn_29 as string,\n\t\tColumn_30 as string,\n\t\tColumn_31 as string,\n\t\tColumn_32 as string,\n\t\tColumn_33 as string,\n\t\tColumn_34 as string,\n\t\tColumn_35 as string,\n\t\tColumn_36 as string,\n\t\tColumn_37 as string,\n\t\tColumn_38 as string,\n\t\tColumn_39 as string,\n\t\tColumn_40 as string,\n\t\tColumn_41 as string,\n\t\tColumn_42 as string,\n\t\tColumn_43 as string,\n\t\tColumn_44 as string,\n\t\tColumn_45 as string,\n\t\tColumn_46 as string,\n\t\tColumn_47 as string,\n\t\tColumn_48 as string,\n\t\tColumn_49 as string,\n\t\tColumn_50 as string,\n\t\tColumn_51 as string,\n\t\tColumn_52 as string,\n\t\tColumn_53 as string,\n\t\tColumn_54 as string,\n\t\tColumn_55 as string,\n\t\tColumn_56 as string,\n\t\tColumn_57 as string,\n\t\tColumn_58 as string,\n\t\tColumn_59 as string,\n\t\tColumn_60 as string,\n\t\tColumn_61 as string\n\t),\n\tpartitionFileNames:['OUnionBasecommercial'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputVenteDirect')]",
				"[concat(variables('factoryId'), '/datasets/dscModel')]",
				"[concat(variables('factoryId'), '/datasets/ModelPartedisInput')]",
				"[concat(variables('factoryId'), '/datasets/OunionBaseCommercial')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UNION_ECOULEMENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VFCONFORT_PREPARED",
								"type": "DatasetReference"
							},
							"name": "vfconfortPrepared"
						},
						{
							"dataset": {
								"referenceName": "MABILE_PREPARED",
								"type": "DatasetReference"
							},
							"name": "mabillePrepared"
						},
						{
							"dataset": {
								"referenceName": "ORCAB_PREPARED",
								"type": "DatasetReference"
							},
							"name": "orcabPrepared"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_PREPARED",
								"type": "DatasetReference"
							},
							"name": "tereva"
						},
						{
							"dataset": {
								"referenceName": "DSC_PREPARED",
								"type": "DatasetReference"
							},
							"name": "DSC"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_PREPARED",
								"type": "DatasetReference"
							},
							"name": "maillard"
						},
						{
							"dataset": {
								"referenceName": "PartedisEcoulement",
								"type": "DatasetReference"
							},
							"name": "Partedis"
						},
						{
							"dataset": {
								"referenceName": "EntreeEHS",
								"type": "DatasetReference"
							},
							"name": "EHS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "allUnionedDistributor",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Union1"
						},
						{
							"name": "Union2"
						},
						{
							"name": "sTereva"
						},
						{
							"name": "sDSC"
						},
						{
							"name": "sMaillard"
						},
						{
							"name": "sOrcab"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Union4"
						},
						{
							"name": "Union5"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "sPartedis"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "unionPartedis"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "UnionEHS"
						},
						{
							"name": "sEHS"
						}
					],
					"script": "source(output(\n\t\t{Code postal} as string,\n\t\tmarque_file as string,\n\t\tarticle as string,\n\t\tca_ecoulement as string,\n\t\t{Représentant} as string,\n\t\tdepartement_id as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tUnitID as string,\n\t\tCounty as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> vfconfortPrepared\nsource(output(\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\tarticle as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tmonth as string,\n\t\tyear as string,\n\t\tHubSAPid as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubName as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> mabillePrepared\nsource(output(\n\t\tmarque_file as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tqte_ecoulement as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string,\n\t\tmarque_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> orcabPrepared\nsource(output(\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque_file as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tcanal as string,\n\t\tyear as string,\n\t\tHubSAPid as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tmarque_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false) ~> tereva\nsource(output(\n\t\tmarque_file as string,\n\t\tsous_famille as string,\n\t\treference as string,\n\t\tagence_code as string,\n\t\tdepartement_id as string,\n\t\tqte_ecoulement as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tHubSAPid as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSC\nsource(output(\n\t\tdistributeur as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\t{Code postal} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tPOSSAMid as string,\n\t\tmarque_id as string,\n\t\tmarque_file as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> maillard\nsource(output(\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\t{Code postal} as string,\n\t\treference as string,\n\t\tqte_ecoulement as string,\n\t\tyearmonth as string,\n\t\tHubSAPid as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMidString as string,\n\t\tmarque_id as string,\n\t\tyear as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Partedis\nsource(output(\n\t\tmarque_file as string,\n\t\t{Région} as string,\n\t\t{Nom Agence} as string,\n\t\tagence_code as string,\n\t\t{Département} as string,\n\t\t{Référence Article} as string,\n\t\t{Description Article} as string,\n\t\t{Catégorie Achat} as string,\n\t\tqte_ecoulement as string,\n\t\tstr_mois as string,\n\t\tyear as string,\n\t\t{Gestion entrepôt} as string,\n\t\t{Marques/ Constructeur} as string,\n\t\tmonth as string,\n\t\tyearmonth as string,\n\t\t{CP Coop.} as string,\n\t\tHubSAPid as string,\n\t\t{Nom Coopérative} as string,\n\t\tPOSSAMidString as string,\n\t\tBrandID as string,\n\t\tDept as string,\n\t\t{Code postal} as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qté vente directe} as string,\n\t\treference as string,\n\t\tdistributeur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EHS\nvfconfortPrepared, mabillePrepared union(byName: true)~> Union1\nUnion1, sOrcab union(byName: true)~> Union2\ntereva select(mapColumn(\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque_file,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tHubSAPid,\n\t\tCounty,\n\t\tPOSSAMidString = POSSAMid,\n\t\tmarque_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sTereva\nDerivedColumn3 select(mapColumn(\n\t\tmarque_file,\n\t\tsous_famille,\n\t\treference,\n\t\tagence_code,\n\t\tdepartement_id,\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tHubSAPid,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sDSC\nmaillard select(mapColumn(\n\t\tdistributeur,\n\t\treference,\n\t\tarticle,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code postal},\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString = POSSAMid,\n\t\tmarque_id,\n\t\tmarque_file\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sMaillard\nDerivedColumn1 select(mapColumn(\n\t\tmarque_file,\n\t\treference,\n\t\tarticle,\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString = POSSAMid,\n\t\tmarque_id,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sOrcab\nUnion2, sTereva union(byName: true)~> Union3\nUnion3, sDSC union(byName: true)~> Union4\nUnion4, sMaillard union(byName: true)~> Union5\nUnionEHS select(mapColumn(\n\t\t{Code postal},\n\t\tmarque_file,\n\t\tca_ecoulement,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\tagence_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\norcabPrepared derive(distributeur = \"orcab\") ~> DerivedColumn1\nDerivedColumn2 select(mapColumn(\n\t\tmarque_file,\n\t\tagence_code,\n\t\t{Code postal},\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_id,\n\t\tyear,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sPartedis\nPartedis derive(distributeur = \"partedis\") ~> DerivedColumn2\nUnion5, sPartedis union(byName: true)~> unionPartedis\nDSC derive(distributeur = \"DSC\") ~> DerivedColumn3\nunionPartedis, sEHS union(byName: true)~> UnionEHS\nEHS select(mapColumn(\n\t\tmarque_file,\n\t\tagence_code,\n\t\tqte_ecoulement,\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\t{Code postal},\n\t\tArticle,\n\t\treference,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sEHS\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['allDistruUnioned'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VFCONFORT_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/MABILE_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/ORCAB_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/TEREVA_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/DSC_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/MAILLARD_PREPARED')]",
				"[concat(variables('factoryId'), '/datasets/PartedisEcoulement')]",
				"[concat(variables('factoryId'), '/datasets/EntreeEHS')]",
				"[concat(variables('factoryId'), '/datasets/allUnionedDistributor')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENTES_DIRECTES_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "outFacturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARATION",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Cleansing"
						},
						{
							"name": "SumQuantity"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "Uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "renam"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nrenam derive({Code client} = replace({Code client}, \" \", \"\"),\n\t\t{Qté facturée} = toDouble({Qté facturée}),\n\t\tyearmonth = replace(yearmonth, \" \", \"\"),\n\t\tArticle = replace(Article, \" \", \"\")) ~> Cleansing\nCleansing aggregate(groupBy(yearmonth,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> SumQuantity\nSumQuantity select(mapColumn(\n\t\tyearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\nAddcolumn select(mapColumn(\n\t\tyearmonth,\n\t\treference = Article,\n\t\t{Code client},\n\t\tqte_ecoulement = {Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Uniformisation\nRenameColumn derive(canal = '',\n\t\tDept = '') ~> Addcolumn\nventesDirectes select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\tArticle = reference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tis_prix_dsc,\n\t\tqte_ecc,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité} = {Secteur d'activit�},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé} = {Agence commerciale corrig�},\n\t\t{Donneur d'ordre},\n\t\t{Code client} = {R�cept. de march.},\n\t\tRight_reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée} = {Qt� factur�e},\n\t\t{CA facturé} = {CA factur�},\n\t\tRight_HubSAPid,\n\t\tType_Facturation = {Type_Facturation�},\n\t\tqt_fact,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC Performance},\n\t\tcanal,\n\t\tRowCount,\n\t\tATC,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tcode_depot,\n\t\tid_canal,\n\t\tmarque_code,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\tClient,\n\t\tMarque,\n\t\t{ATC Corrigé} = {ATC Corrig�},\n\t\t{Motif commande},\n\t\t{ commerciale} = {Org. commerciale},\n\t\tmarque_id,\n\t\tOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renam\nUniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['VENTES_DIRECTES_PREPARATION'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/outFacturationForVenteDirect')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VF_CONFORT_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CONFORT_PREPARATION",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "CONFORT_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CONFORT_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "outputQuantityNull"
						},
						{
							"dataset": {
								"referenceName": "VFCONFORT_ECOULEMENT_PREPARED",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "yearmonth"
						},
						{
							"name": "yearAndMonth"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "Select1"
						},
						{
							"name": "codePointVenteNotNull"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "posidNotNull"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "cleansingVentesDirectes"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "RenameVentesDirectes"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "enleverVentesDirectes"
						},
						{
							"name": "outerleftVentesDirectes"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Addcolumn"
						}
					],
					"script": "source(output(\n\t\t{Repr�sentant} as string,\n\t\t{N� D�partement} as string,\n\t\t{D�partement} as string,\n\t\t{Code point de vente} as string,\n\t\t{Libell� point de vente} as string,\n\t\t{Code Depot source} as string,\n\t\t{Code client} as string,\n\t\tClient as string,\n\t\t{N� Siret} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Ann�e livraison} as string,\n\t\t{Mois livraison} as string,\n\t\t{code fournisseur} as string,\n\t\t{fournisseur principal} as string,\n\t\t{Code produit} as string,\n\t\tproduit as string,\n\t\t{R�ference} as string,\n\t\t{Qte en unit� de vente} as string,\n\t\t{Montant prv net} as string,\n\t\tfileName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Code client} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nSelect1 derive(yearmonth = regexExtract(fileName , '(\\\\d+)'),\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonth\nyearmonth derive(year = substring(yearmonth, 1, 5),\n\t\tmonth = substring(yearmonth, 6 ,2)) ~> yearAndMonth\nyearAndMonth filter(isNull(qte_ecoulement)) ~> quantityNull\nyearAndMonth filter(!isNull(qte_ecoulement)) ~> quantityNotNull\necoulement derive({Représentant} = toString(byName('Représentant')),\n\t\t{N° Département} = toString(byName('N° Département')),\n\t\t{Département} = toString(byName('Département')),\n\t\t{Libellé point de vente} = toString(byName('Libellé point de vente')),\n\t\t{N° Siret} = toString(byName('N° Siret')),\n\t\t{Année livraison} = toString(byName('Année livraison')),\n\t\t{Réference} = toString(byName('Réference')),\n\t\t{Qte en unité de vente} = toString(byName('Qte en unité de vente'))) ~> MapDrifted1\nMapDrifted1 select(mapColumn(\n\t\t{Code point de vente},\n\t\t{Code Depot source},\n\t\t{Code client},\n\t\tClient,\n\t\t{Code postal},\n\t\tVille,\n\t\t{Mois livraison},\n\t\t{code fournisseur},\n\t\t{fournisseur principal},\n\t\t{Code produit},\n\t\tproduit,\n\t\t{Montant prv net},\n\t\tfileName,\n\t\t{Représentant},\n\t\t{N° Département},\n\t\t{Département},\n\t\t{Libellé point de vente},\n\t\t{N° Siret},\n\t\t{Année livraison},\n\t\t{Réference},\n\t\tqte_ecoulement = {Qte en unité de vente}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nquantityNotNull filter(!isNull({Code point de vente})) ~> codePointVenteNotNull\norganisation derive(POSid = trim(POSid, \" \"),\n\t\tHubSAPid = trim(HubSAPid, \" \")) ~> cleansing\ncleansing filter(!isNull(POSid)) ~> posidNotNull\nposidNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> uniqueOrganisation\ncodePointVenteNotNull, organisation join({Code point de vente} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\nventesDirectes derive({Code client} = trim({Code client}, \" \"),\n\t\t{Qté facturée} = toDouble({Qté facturée}),\n\t\tyearmonth = trim(yearmonth, \" \")) ~> cleansingVentesDirectes\ncleansingVentesDirectes aggregate(groupBy(yearmonth,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> Aggregate1\nAggregate1 select(mapColumn(\n\t\tyearmonth_right = yearmonth,\n\t\tArticle,\n\t\t{Code client_right} = {Code client},\n\t\t{Qté ventes directes} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameVentesDirectes\ninnerOrganisation, RenameVentesDirectes join(yearmonth == yearmonth_right\n\t&& {Réference} == Article\n\t&& POSSAMid == {Code client_right},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerOrganisation, RenameVentesDirectes join(yearmonth == yearmonth_right\n\t&& {Réference} == Article\n\t&& POSSAMid == {Code client_right},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\ninnerVentesDirectes derive(qte_ecoulement = qte_ecoulement-{Qté ventes directes}) ~> enleverVentesDirectes\nleftVentesDirectes filter(isNull(yearmonth) || isNull(Article) || isNull({Code client_right})) ~> outerleftVentesDirectes\nAddcolumn select(mapColumn(\n\t\t{Code postal},\n\t\tmarque_file = {fournisseur principal},\n\t\tarticle = produit,\n\t\tca_ecoulement = {Montant prv net},\n\t\t{Représentant},\n\t\tdepartement_id = {N° Département},\n\t\treference = {Réference},\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tUnitID,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubSAPid,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nenleverVentesDirectes, outerleftVentesDirectes union(byName: true)~> Union1\nUnion1 derive(canal = '',\n\t\tdistributeur = \"vf_confort\") ~> Addcolumn\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['VFCONFORT_QTE_NULL'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputQuantityNull\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['VFCONFORT_ECOUL_PREPARED'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CONFORT_PREPARATION')]",
				"[concat(variables('factoryId'), '/datasets/CONFORT_ORGANISATION')]",
				"[concat(variables('factoryId'), '/datasets/VENTES_DIRECTES')]",
				"[concat(variables('factoryId'), '/datasets/CONFORT_QTE_NULL')]",
				"[concat(variables('factoryId'), '/datasets/VFCONFORT_ECOULEMENT_PREPARED')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanMarkes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EVanMarkes1",
								"type": "DatasetReference"
							},
							"name": "entreVan1"
						},
						{
							"dataset": {
								"referenceName": "EVanMarkes2",
								"type": "DatasetReference"
							},
							"name": "entreeVan"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SVanMarkes",
								"type": "DatasetReference"
							},
							"name": "SortieVanMarkes"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tF5 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> entreVan1\nsource(output(\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> entreeVan\nentreVan1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SortieVanMarkes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EVanMarkes1')]",
				"[concat(variables('factoryId'), '/datasets/EVanMarkes2')]",
				"[concat(variables('factoryId'), '/datasets/SVanMarkes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VerifBC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "VERIFICATION"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Inbasecommercial",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tVerifBaseComm",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Select2"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\t{Canal distribution} as string,\n\t\t{nom du canal} as string,\n\t\tcanal_distribution_final as string,\n\t\tcanal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\tno_offre as string,\n\t\t{ATC Corrigé} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tqt_ecc_enrichi as string,\n\t\tca_ecc_enrichi as string,\n\t\tqte_ecoulement as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tsource_atc as string,\n\t\tSuccessor as string,\n\t\tCDis as string,\n\t\tPredecessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Deb val} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tca_ecoulement as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Nom du compte} as string,\n\t\t{Numero Interne_ Groupe cible/Typologie générale} as string,\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Numero Interne_ Compte principal: Numéro du compte} as string,\n\t\t{Numero Interne_ Compte principal: Nom du compte} as string,\n\t\t{Jour calendaire} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy({plateforme/vente directe},\n\t\t{origine de la ligne}),\n\tquantite = sum(toInteger(quantite)),\n\t\tcountrow = count(quantite)) ~> Aggregate1\nAggregate1 split(instr({plateforme/vente directe}, \"dsc\") >0 || instr({plateforme/vente directe}, \"tereva\") >0,\n\tdisjoint: false) ~> ConditionalSplit1@(dsc, other)\nSelect1 filter(!( instr({plateforme/vente directe}, \"dsc\") >0 || instr({plateforme/vente directe}, \"tereva\") >0 || instr({plateforme/vente directe}, \"vente\") >0)) ~> Filter1\nFilter1 select(mapColumn(\n\t\teach(match(true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nConditionalSplit1@dsc sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Inbasecommercial')]",
				"[concat(variables('factoryId'), '/datasets/tVerifBaseComm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/appendFile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "EntreeEHS",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EntreeEHS",
							"dataset": {
								"referenceName": "EntreeEHS",
								"type": "DatasetReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EntreeEHS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/backpREFERENTIEL_ARTICLE_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "backup",
				"folder": {
					"name": "REFERENTIEL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "articleHierarchie"
						},
						{
							"dataset": {
								"referenceName": "DETAIL_ARTICLE_HIERARCHIE",
								"type": "DatasetReference"
							},
							"name": "detailArticleHierarchie"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIERARCHIE_ARTICLE",
								"type": "DatasetReference"
							},
							"name": "sortieArticleDesignation"
						}
					],
					"transformations": [
						{
							"name": "splitGroupe"
						},
						{
							"name": "splitLocale"
						},
						{
							"name": "N1GroupeDesignation"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2GroupeDesignation"
						},
						{
							"name": "RemoveColumns2",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3GroupeDesignation"
						},
						{
							"name": "RemoveColumns3",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4GroupeDesignation"
						},
						{
							"name": "RemoveColumns4",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5GroupeDesignation"
						},
						{
							"name": "RemoveColumns5",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6GroupeDesignation"
						},
						{
							"name": "RemoveColumns6",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7GroupeDesignation"
						},
						{
							"name": "RemoveColumns7",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N1LocaleDesignation"
						},
						{
							"name": "RemoveColumns8",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N2LocaleDesignation"
						},
						{
							"name": "RemoveColumns9",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N3LocaleDesignation"
						},
						{
							"name": "RemoveColumns10",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N4LocaleDesignation"
						},
						{
							"name": "RemoveColumns11",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N5LocaleDesignation"
						},
						{
							"name": "RemoveColumns12",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N6LocaleDesignation"
						},
						{
							"name": "RemoveColumns13",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "N7LocaleDesignation"
						},
						{
							"name": "RemoveColumns14",
							"description": "Autogenerated by data preview actions"
						}
					],
					"script": "source(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> articleHierarchie\nsource(output(\n\t\t{Hiérarch.produits} as string,\n\t\t{Désignation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> detailArticleHierarchie\narticleHierarchie derive({N1.groupe} = substring({Hiérarch.groupe}, 1, 2),\n\t\t{N2.groupe} = substring({Hiérarch.groupe}, 3, 1),\n\t\t{N3.groupe} = substring({Hiérarch.groupe}, 4, 1),\n\t\t{N4.groupe} = substring({Hiérarch.groupe}, 5, 1),\n\t\t{N5.groupe} = substring({Hiérarch.groupe}, 6, 1),\n\t\t{N6.groupe} = substring({Hiérarch.groupe}, 7, 1),\n\t\t{N7.groupe} = substring({Hiérarch.groupe}, 8, 3)) ~> splitGroupe\nsplitGroupe derive({N1.locale} = substring({Hiérarch.locale}, 1, 2),\n\t\t{N2.locale} = substring({Hiérarch.locale}, 3, 1),\n\t\t{N3.locale} = substring({Hiérarch.locale}, 4, 1),\n\t\t{N4.locale} = substring({Hiérarch.locale}, 5, 1),\n\t\t{N5.locale} = substring({Hiérarch.locale}, 6, 1),\n\t\t{N6.locale} = substring({Hiérarch.locale}, 7, 1),\n\t\t{N7.locale} = substring({Hiérarch.locale}, 8, 3)) ~> splitLocale\nsplitLocale, detailArticleHierarchie join({N1.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N1GroupeDesignation\nN1GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns1\nRemoveColumns1, detailArticleHierarchie join({N2.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N2GroupeDesignation\nN2GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns2\nRemoveColumns2, detailArticleHierarchie join({N3.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N3GroupeDesignation\nN3GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns3\nRemoveColumns3, detailArticleHierarchie join({N4.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N4GroupeDesignation\nN4GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns4\nRemoveColumns4, detailArticleHierarchie join({N5.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N5GroupeDesignation\nN5GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns5\nRemoveColumns5, detailArticleHierarchie join({N6.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N6GroupeDesignation\nN6GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns6\nRemoveColumns6, detailArticleHierarchie join({N7.groupe} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N7GroupeDesignation\nN7GroupeDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns7\nRemoveColumns7, detailArticleHierarchie join({N1.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N1LocaleDesignation\nN1LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns8\nRemoveColumns8, detailArticleHierarchie join({N2.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N2LocaleDesignation\nN2LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns9\nRemoveColumns9, detailArticleHierarchie join({N3.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N3LocaleDesignation\nN3LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns10\nRemoveColumns10, detailArticleHierarchie join({N4.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N4LocaleDesignation\nN4LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns11\nRemoveColumns11, detailArticleHierarchie join({N5.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N5LocaleDesignation\nN5LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns12\nRemoveColumns12, detailArticleHierarchie join({N6.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N6LocaleDesignation\nN6LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns13\nRemoveColumns13, detailArticleHierarchie join({N7.locale} == {Hiérarch.produits},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> N7LocaleDesignation\nN7LocaleDesignation select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\tArticle,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\t{N1.groupe},\n\t\t{N2.groupe},\n\t\t{N3.groupe},\n\t\t{N4.groupe},\n\t\t{N5.groupe},\n\t\t{N6.groupe},\n\t\t{N7.groupe},\n\t\t{N1.locale},\n\t\t{N2.locale},\n\t\t{N3.locale},\n\t\t{N4.locale},\n\t\t{N5.locale},\n\t\t{N6.locale},\n\t\t{N7.locale},\n\t\t{N1.groupe.designation},\n\t\t{N2.groupe.designation},\n\t\t{N3.groupe.designation},\n\t\t{N4.groupe.designation},\n\t\t{N5.groupe.designation},\n\t\t{N6.groupe.designation},\n\t\t{N7.groupe.designation},\n\t\t{N1.locale.designation},\n\t\t{N2.locale.designation},\n\t\t{N3.locale.designation},\n\t\t{N4.locale.designation},\n\t\t{N5.locale.designation},\n\t\t{N6.locale.designation},\n\t\t{N7.locale.designation} = {Désignation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns14\nRemoveColumns14 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['HIERARCHIE_ARTICLE'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sortieArticleDesignation"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ARTICLE_HIERARCHIE')]",
				"[concat(variables('factoryId'), '/datasets/DETAIL_ARTICLE_HIERARCHIE')]",
				"[concat(variables('factoryId'), '/datasets/HIERARCHIE_ARTICLE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/basecommercialUnion')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "base commercial après UNion",
				"folder": {
					"name": "VERIFICATION/bkp"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "unionAllModel",
								"type": "DatasetReference"
							},
							"name": "BCUnion"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "ArticleHierarchi"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "Plateformes"
						},
						{
							"dataset": {
								"referenceName": "ExtractionComptesEPSTypologieSousTypoComptePrincipal",
								"type": "DatasetReference"
							},
							"name": "ExtractionCompte"
						},
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "ClientEHS"
						},
						{
							"dataset": {
								"referenceName": "input_manuel",
								"type": "DatasetReference"
							},
							"name": "InputManuel"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference"
							},
							"name": "OutBaseCommercial"
						},
						{
							"dataset": {
								"referenceName": "DataCommercialNotfound",
								"type": "DatasetReference"
							},
							"name": "DataCommercialNotFOund"
						},
						{
							"dataset": {
								"referenceName": "data_commercial_DTP2",
								"type": "DatasetReference"
							},
							"name": "DataCommercialDT2"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Cleansing"
						},
						{
							"name": "AtcSOurceATC"
						},
						{
							"name": "MarqueID"
						},
						{
							"name": "renameReference"
						},
						{
							"name": "UniqueReferenc"
						},
						{
							"name": "JoinArticle"
						},
						{
							"name": "LeftJoinArticle"
						},
						{
							"name": "QtFinalCaFinalCanalDistributin"
						},
						{
							"name": "toDoubleCA"
						},
						{
							"name": "ExtractYearandMonth"
						},
						{
							"name": "Distributeur"
						},
						{
							"name": "distributeurr"
						},
						{
							"name": "RenameDistributeur"
						},
						{
							"name": "JoinPlateforme"
						},
						{
							"name": "CDistributeur"
						},
						{
							"name": "PossmidString"
						},
						{
							"name": "UnionClientEHSandExtractionCompte"
						},
						{
							"name": "AgregatNumeroCompte"
						},
						{
							"name": "SelectNomClient"
						},
						{
							"name": "JoinCompte"
						},
						{
							"name": "renameMarque"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "affecteNonaffecte"
						},
						{
							"name": "IdMarque"
						},
						{
							"name": "NomDuCanal"
						},
						{
							"name": "RenameDistrib"
						},
						{
							"name": "FiltrerN1Locale"
						},
						{
							"name": "RenameCaFinal"
						},
						{
							"name": "OrigineDeLaLigne"
						},
						{
							"name": "FiltreReferenceNull"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tmarque_code as string,\n\t\t{canal distru} as string,\n\t\t{Document de vente} as string,\n\t\tPOSSAMidString as string,\n\t\treference as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\tClient as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tMarque as string,\n\t\tNomATC as string,\n\t\tcode_postal_atc as string,\n\t\tno_offre as string,\n\t\tATC as string,\n\t\t{Motif commande} as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tdistributeur as string,\n\t\tMatricule as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tca_ecoulement as string,\n\t\tHubSAPid as string,\n\t\tsous_famille as string,\n\t\tarticle as string,\n\t\tmarque as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tid_canal_final as string,\n\t\tid_canal as string,\n\t\tcanal_final as string,\n\t\tOffre as string,\n\t\t{ATC Performance} as string,\n\t\t{Canal final} as string,\n\t\tright_marque as string,\n\t\tqte_ecoulement as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Recept de march} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\tcanal as string,\n\t\tdate_id as string,\n\t\tHubName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> BCUnion\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ArticleHierarchi\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Plateformes\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionCompte\nsource(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ClientEHS\nsource(output(\n\t\t{plateforme/vente directe} as string,\n\t\t{affecte/non_affecte} as string,\n\t\t{origine de la ligne} as string,\n\t\t{code produit} as string,\n\t\t{code client plateforme livree} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\t{Code client livré} as string,\n\t\tmarque as string,\n\t\t{id marque} as string,\n\t\tno_offre as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.local.designation} as string,\n\t\t{N2.local.designation} as string,\n\t\t{N3.local.designation} as string,\n\t\t{N4.local.designation} as string,\n\t\t{N6.local.designation} as string,\n\t\t{N7.local.designation} as string,\n\t\t{code postal livrer} as string,\n\t\t{ATC Performance} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC Corrigé} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\tis_prix_dsc as string,\n\t\t{N5.local.designation} as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\t{Motif commande} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> InputManuel\nDerivedColumn1 select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente = {Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.} = {Recept de march},\n\t\tRight_reference = reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tRight_HubSAPid = HubSAPid,\n\t\tType_Facturation = {Type de facture},\n\t\tqt_fact = {Qté facturée},\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tCommande = {Motif commande},\n\t\tno_offre,\n\t\t{ATC 2} = {ATC Performance},\n\t\tcanal,\n\t\t{ATC 1} = ATC,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final} = qte_ecoulement,\n\t\t{ca plateforme final} = ca_ecoulement,\n\t\tSum_qt_factur_e = qt_final,\n\t\tSum_ca_factur_ = ca_final,\n\t\tSum_ca_ecoulement = ca_final,\n\t\tSum_qte_ecoulement = qt_final,\n\t\tid_canal,\n\t\tmarque_code,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\tClient,\n\t\tMarque = BCUnion@Marque,\n\t\t{Motif commande},\n\t\t{ commerciale} = marque_code,\n\t\tmarque_id = marque_code,\n\t\tOffre,\n\t\t{ATC Corrigé},\n\t\tqt_ecc_enrichi,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive({ATC 2} = iif(isNull({ATC 2}),'',{ATC 2}),\n\t\t{ATC 1} = iif(isNull({ATC 1}),'',{ATC 1})) ~> Cleansing\nCleansing derive(ATC = iif(distributeur!='vente directe', \r\n iif({ATC 2}!='', {ATC 2}, {ATC 1}),\r\n  iif({ATC Corrigé}!='', {ATC Corrigé}, iif({ATC 2}!='', {ATC 2}, {ATC 1}))),\n\t\tsource_atc = iif(isNull({ATC 2})||{ATC 2}!='0','[ATC 2]','[ATC 1]')) ~> AtcSOurceATC\nAtcSOurceATC derive(marque_id = iif(instr(marque_name, 'SaunierDuval')>0,\r\n 1604, \r\n iif(instr(marque_name, 'Vaillant')>0, 1621, 1621))) ~> MarqueID\nArticleHierarchi select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\treference = Article,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\tN1groupe = {N1.groupe},\n\t\tN2groupe = {N2.groupe},\n\t\tN3groupe = {N3.groupe},\n\t\tN4groupe = {N4.groupe},\n\t\tN5groupe = {N5.groupe},\n\t\tN6groupe = {N6.groupe},\n\t\tN7groupe = {N7.groupe},\n\t\tN1locale = {N1.locale},\n\t\tN2locale = {N2.locale},\n\t\tN3locale = {N3.locale},\n\t\tN4locale = {N4.locale},\n\t\tN5locale = {N5.locale},\n\t\tN6locale = {N6.locale},\n\t\tN7locale = {N7.locale},\n\t\tN1groupedesignation = {N1.groupe.designation},\n\t\tN2groupedesignation = {N2.groupe.designation},\n\t\tN3groupedesignation = {N3.groupe.designation},\n\t\tN4groupedesignation = {N4.groupe.designation},\n\t\tN5groupedesignation = {N5.groupe.designation},\n\t\tN6groupedesignation = {N6.groupe.designation},\n\t\tN7groupedesignation = {N7.groupe.designation},\n\t\tN1localedesignation = {N1.locale.designation},\n\t\tN2localedesignation = {N2.locale.designation},\n\t\tN3localedesignation = {N3.locale.designation},\n\t\tN4localedesignation = {N4.locale.designation},\n\t\tN5localedesignation = {N5.locale.designation},\n\t\tN6localedesignation = {N6.locale.designation},\n\t\tN7localedesignation = {N7.locale.designation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameReference\nrenameReference aggregate(groupBy(reference),\n\tSuccessor = max(Successor),\n\t\tCDis = max(CDis),\n\t\tOrgCm = max(OrgCm),\n\t\tPredecessor = max(Predecessor),\n\t\tSt = max(St),\n\t\t{Désignation Statut} = max({Désignation Statut}),\n\t\t{Deb val} = max({Déb. val.}),\n\t\tN1groupe = max(N1groupe),\n\t\tN2groupe = max(N2groupe),\n\t\tN3groupe = max(N3groupe),\n\t\tN4groupe = max(N4groupe),\n\t\tN5groupe = max(N5groupe),\n\t\tN6groupe = max(N6groupe),\n\t\tN7groupe = max(N7groupe),\n\t\tN1groupedesignation = max(N1groupedesignation),\n\t\tN2groupedesignation = max(N2groupedesignation),\n\t\tN3groupedesignation = max(N3groupedesignation),\n\t\tN4groupedesignation = max(N4groupedesignation),\n\t\tN5groupedesignation = max(N5groupedesignation),\n\t\tN6groupedesignation = max(N6groupedesignation),\n\t\tN7groupedesignation = max(N7groupedesignation),\n\t\tN1localedesignation = max(N1localedesignation),\n\t\tN2localedesignation = max(N2localedesignation),\n\t\tN3localedesignation = max(N3localedesignation),\n\t\tN4localedesignation = max(N4localedesignation),\n\t\tN5localedesignation = max(N5localedesignation),\n\t\tN6localedesignation = max(N6localedesignation),\n\t\tN7localedesignation = max(N7localedesignation),\n\t\tN1locale = max(N1locale),\n\t\tN2locale = max(N2locale),\n\t\tN3locale = max(N3locale),\n\t\tN4locale = max(N4locale),\n\t\tN5locale = max(N5locale),\n\t\tN6locale = max(N6locale),\n\t\tN7locale = max(N7locale),\n\t\t{Hiérarchgroupe} = max({Hiérarch.groupe}),\n\t\t{Hiérarchlocale} = max({Hiérarch.locale})) ~> UniqueReferenc\nMarqueID, UniqueReferenc join(Select1@reference == UniqueReferenc@reference,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinArticle\nMarqueID, UniqueReferenc join(Select1@reference == UniqueReferenc@reference,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinArticle\ntoDoubleCA derive(qt_final = iif(isNull(qt_ecc_enrichi),\r\n {qte plateforme final},\r\n  iif(isNull({qte plateforme final}),qt_ecc_enrichi,qt_ecc_enrichi)),\n\t\tca_final = coalesce(  ca_ecc_enrichi , {ca plateforme final} ),\n\t\tcanal_distribution_final = iif(isNull({Canal distribution}), \r\n iif(isNull(id_canal_final),\r\n id_canal,id_canal_final),\r\n {Canal distribution}\r\n )) ~> QtFinalCaFinalCanalDistributin\nRenameCaFinal derive(ca_ecc_enrichi = toDouble(ca_ecc_enrichi),\n\t\t{ca plateforme final} = toDouble(ca_ecc_enrichi)) ~> toDoubleCA\nQtFinalCaFinalCanalDistributin derive(year = substring(yearmonth,1,4),\n\t\tmonth = substring(yearmonth,5,2)) ~> ExtractYearandMonth\nPlateformes derive(Distributeur = lower(WholeSalerID),\n\t\tDist = lower(WholeSalerID)) ~> Distributeur\nDistributeur derive(Distributeur = iif(Distributeur=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(Distributeur, 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(Distributeur, 'dsc')>0, 'dsc', \r\n    iif(instr(Distributeur, 'vf' )>0, 'vf', \r\n     iif(instr(Distributeur, 'sonac' )>0, 'sonac',\r\nDist)))))) ~> distributeurr\ndistributeurr select(mapColumn(\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tt_distrubuteur = Distributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistributeur\nExtractYearandMonth, RenameDistributeur join(RenameCaFinal@HubSAPid == RenameDistributeur@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinPlateforme\nJoinPlateforme derive(distributeur = iif(isNull(RenameCaFinal@HubSAPid), distributeur, 'plateforme'+distributeur)) ~> CDistributeur\nCDistributeur derive(POSSAMidString = iif(POSSAMidString=='', RenameCaFinal@HubSAPid, POSSAMidString)) ~> PossmidString\nSelect2, SelectNomClient union(byName: true)~> UnionClientEHSandExtractionCompte\nUnionClientEHSandExtractionCompte aggregate(groupBy({Numéro du compte}),\n\t{Nom du compte} = max({Nom du compte}),\n\t\t{Groupe cible/Typologie générale} = max({Groupe cible/Typologie générale}),\n\t\t{Sous groupe cible/Typologie détaillée} = max({Sous groupe cible/Typologie détaillée}),\n\t\t{Compte principal: Numéro du compte} = max({Compte principal: Numéro du compte}),\n\t\t{Compte principal: Nom du compte} = max({Compte principal: Nom du compte})) ~> AgregatNumeroCompte\nClientEHS select(mapColumn(\n\t\t{Numéro du compte} = Client,\n\t\t{Nom du compte} = Nom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNomClient\nPossmidString, AgregatNumeroCompte join(POSSAMidString == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCompte\nJoinCompte select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = RenameCaFinal@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tRight_reference = reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tRight_HubSAPid = RenameCaFinal@HubSAPid,\n\t\tType_Facturation,\n\t\tqt_ecc_enrichi = {Qté facturée},\n\t\tca_ecc_enrichi,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\tcanal,\n\t\t{ATC 1},\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName = RenameCaFinal@HubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\tid_canal,\n\t\tmarque_code,\n\t\tClient,\n\t\tMarque,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tOffre,\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tmarque = OrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tca_final,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName = RenameDistributeur@HubName,\n\t\tHubSAPid = RenameDistributeur@HubSAPid,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameMarque\nrenameMarque select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré} = POSSAMidString,\n\t\t{code client plateforme livree} = HubSAPid,\n\t\t{code produit} = reference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque = marque_name,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tRight_reference = reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tRight_HubSAPid = HubSAPid,\n\t\tType_Facturation,\n\t\tqt_ecc_enrichi = qt_final,\n\t\tca_ecc_enrichi,\n\t\tquantite = qt_final,\n\t\t{origine de la ligne} = data_origin,\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC offre} = {ATC 2},\n\t\tcanal,\n\t\t{ATC livré} = {ATC 1},\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final} = ca_final,\n\t\tid_canal,\n\t\tmarque_code,\n\t\tClient,\n\t\tMarque,\n\t\t{ATC Corrigé},\n\t\t{ commerciale} = marque_code,\n\t\tmarque_id,\n\t\tOffre,\n\t\t{ATC Performance} = ATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\t{id marque} = marque,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tca = ca_final,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\nRenameColumn derive({affecte/non_affecte} = iif(({origine de la ligne}==\"facturation decrementé\" || {origine de la ligne}==\"facturation sans ecoulement\" || (distributeur=='vente directe'&&{origine de la ligne}==\"facturation\")),\r\n  \"non affecté\",\r\n   \"affecté\")) ~> affecteNonaffecte\naffecteNonaffecte derive({id marque} = iif(instr(marque,'SaunierDuval')>0,1604, \r\n iif(instr(marque,'Vaillant')>0,1621,\r\n0))) ~> IdMarque\nIdMarque derive({nom du canal} = iif(canal_distribution_final=='45', 'FP', \r\n iif(canal_distribution_final=='51', 'FS', \r\n  iif(canal_distribution_final=='43', 'FC', 'FD')))) ~> NomDuCanal\nNomDuCanal select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\t{plateforme/vente directe} = distributeur,\n\t\t{Code postal},\n\t\tmarque,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tType_Facturation,\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite = {qte plateforme final},\n\t\t{origine de la ligne},\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC offre},\n\t\tcanal,\n\t\t{ATC livré},\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tid_canal,\n\t\tmarque_code,\n\t\tClient,\n\t\t{ATC Corrigé},\n\t\t{ commerciale} = marque_id,\n\t\tmarque_id,\n\t\tOffre,\n\t\t{ATC Performance},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tca = ca_ecc_enrichi,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistrib\nRenameDistrib filter(N1locale==\"FA\"||\r\nN1locale==\"FB\"||\r\nN1locale==\"FC\"||\r\nN1locale==\"FD\"||\r\nN1locale==\"FE\"||\r\nN1locale==\"FG\"||\r\nN1locale==\"FH\"||\r\nN1locale==\"FL\"||\r\nN1locale==\"FM\"||\r\nN1locale==\"FP\"||\r\nN1locale==\"FR\"||\r\nN1locale==\"FV\") ~> FiltrerN1Locale\nJoinArticle select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = Select1@reference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.} = yearmonth,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tRight_HubSAPid = HubSAPid,\n\t\tType_Facturation,\n\t\tqt_fact = {Qté facturée},\n\t\tca_ecc_enrichi = ca_final,\n\t\tqt_ecc_enrichi = qt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\tcanal,\n\t\t{ATC 1},\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tid_canal,\n\t\tmarque_code,\n\t\t{Type de facture} = Type_Facturation,\n\t\tClient,\n\t\tMarque,\n\t\t{ATC Corrigé},\n\t\t{ commerciale} = marque_code,\n\t\tmarque_id,\n\t\tOffre,\n\t\tATC,\n\t\tsource_atc,\n\t\treference = UniqueReferenc@reference,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameCaFinal\nInputManuel derive({origine de la ligne} = 'ajout manuel') ~> OrigineDeLaLigne\nLeftJoinArticle filter(Select1@reference!='') ~> FiltreReferenceNull\nExtractionCompte select(mapColumn(\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nFiltrerN1Locale select(mapColumn(\n\t\t{plateforme/vente directe},\n\t\t{affecte/non_affecte},\n\t\t{origine de la ligne},\n\t\t{code produit},\n\t\tannee = year,\n\t\tmois = month,\n\t\tquantite = qte_ecoulement,\n\t\tca = {ca plateforme final},\n\t\tcanal_distribution_final,\n\t\t{nom du canal},\n\t\tcanal_final,\n\t\t{Code client livré},\n\t\tmarque,\n\t\t{id marque},\n\t\tno_offre,\n\t\t{Hiérarch groupe} = {Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tcode_postal_atc,\n\t\tN1locale,\n\t\t{ATC Performance},\n\t\t{Numéro du compte},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\tNomATC,\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nBCUnion derive({ATC Corrigé} = ATC,\n\t\tqt_ecc_enrichi = qte_ecoulement,\n\t\t{qte plateforme final} = qt_final,\n\t\t{ca plateforme final} = ca_final) ~> DerivedColumn1\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OutputBaseAllDistru'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OutBaseCommercial\nFiltreReferenceNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataCommercialNotFOund\nrenameMarque sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataCommercialDT2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/unionAllModel')]",
				"[concat(variables('factoryId'), '/datasets/article_hierarchi')]",
				"[concat(variables('factoryId'), '/datasets/PLATEFORMES')]",
				"[concat(variables('factoryId'), '/datasets/ExtractionComptesEPSTypologieSousTypoComptePrincipal')]",
				"[concat(variables('factoryId'), '/datasets/ClientEHS')]",
				"[concat(variables('factoryId'), '/datasets/input_manuel')]",
				"[concat(variables('factoryId'), '/datasets/OutputBaseAllDistru')]",
				"[concat(variables('factoryId'), '/datasets/DataCommercialNotfound')]",
				"[concat(variables('factoryId'), '/datasets/data_commercial_DTP2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/basecommercialUnion_Model')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "base commercial après UNion",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InUnionBasecommercial",
								"type": "DatasetReference"
							},
							"name": "BCUnion"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "ArticleHierarchi"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "Plateformes"
						},
						{
							"dataset": {
								"referenceName": "ExtractionComptesEPSTypologieSousTypoComptePrincipal",
								"type": "DatasetReference"
							},
							"name": "ExtractionCompte"
						},
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "ClientEHS"
						},
						{
							"dataset": {
								"referenceName": "input_manuel",
								"type": "DatasetReference"
							},
							"name": "InputManuel"
						},
						{
							"dataset": {
								"referenceName": "StgOffreUniq",
								"type": "DatasetReference"
							},
							"name": "StgOffreUnique"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference"
							},
							"name": "OutBaseCommercial"
						},
						{
							"dataset": {
								"referenceName": "DataCommercialNotfound",
								"type": "DatasetReference"
							},
							"name": "DataCommercialNotFOund"
						},
						{
							"dataset": {
								"referenceName": "data_commercial_DTP2",
								"type": "DatasetReference"
							},
							"name": "DataCommercialDT2"
						},
						{
							"dataset": {
								"referenceName": "baseCommercialOut",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Cleansing"
						},
						{
							"name": "AtcSOurceATC"
						},
						{
							"name": "MarqueID"
						},
						{
							"name": "renameReference"
						},
						{
							"name": "UniqueReferenc"
						},
						{
							"name": "JoinArticle"
						},
						{
							"name": "LeftJoinArticle"
						},
						{
							"name": "QtFinalCaFinalCanalDistributin"
						},
						{
							"name": "toDoubleCA"
						},
						{
							"name": "ExtractYearandMonth"
						},
						{
							"name": "Distributeur"
						},
						{
							"name": "distributeurr"
						},
						{
							"name": "RenameDistributeur"
						},
						{
							"name": "JoinPlateforme"
						},
						{
							"name": "CDistributeur"
						},
						{
							"name": "PossmidString"
						},
						{
							"name": "UnionClientEHSandExtractionCompte"
						},
						{
							"name": "AgregatNumeroCompte"
						},
						{
							"name": "SelectNomClient"
						},
						{
							"name": "JoinCompte"
						},
						{
							"name": "affecteNonaffecte"
						},
						{
							"name": "IdMarque"
						},
						{
							"name": "NomDuCanal"
						},
						{
							"name": "RenameDistrib"
						},
						{
							"name": "FiltrerN1Locale"
						},
						{
							"name": "RenameCaFinal"
						},
						{
							"name": "OrigineDeLaLigne"
						},
						{
							"name": "FiltreReferenceNull"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "JoinStgOffreUnique"
						},
						{
							"name": "EPSData",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "RenameNUmeroInterne"
						},
						{
							"name": "Joindre1"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Select6"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select7"
						},
						{
							"name": "DerivedColumn2"
						}
					],
					"script": "source(output(\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tcanal_final as string,\n\t\tid_canal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPOSSAMidString as string,\n\t\treference as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\tyearmonth as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\t{Agence commerciale} as string,\n\t\t{ATC Corrigé} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tHubSAPid as string,\n\t\tNoCli as string,\n\t\t{ATC Performance} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tqt_plateforme_final as string,\n\t\tca_plateforme_final as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tagence_code as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> BCUnion\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ArticleHierarchi\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Plateformes\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionCompte\nsource(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ClientEHS\nsource(output(\n\t\t{plateforme/vente directe} as string,\n\t\t{affecte/non_affecte} as string,\n\t\t{origine de la ligne} as string,\n\t\t{code produit} as string,\n\t\t{code client plateforme livree} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\t{Code client livré} as string,\n\t\tmarque as string,\n\t\t{id marque} as string,\n\t\tno_offre as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.local.designation} as string,\n\t\t{N2.local.designation} as string,\n\t\t{N3.local.designation} as string,\n\t\t{N4.local.designation} as string,\n\t\t{N6.local.designation} as string,\n\t\t{N7.local.designation} as string,\n\t\t{code postal livrer} as string,\n\t\t{ATC Performance} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC Corrigé} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\tis_prix_dsc as string,\n\t\t{N5.local.designation} as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\t{Motif commande} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> InputManuel\nsource(output(\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\tRight_Produit as string,\n\t\t{Right_Quantité} as string,\n\t\t{Right_Numéro interne 1} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> StgOffreUnique\nSelect4 select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Secteur d'activité},\n\t\tdocument_vente = {Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC 2} = {ATC performance},\n\t\t{ATC 1} = ATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tid_canal_final,\n\t\t{qte plateforme final} = qt_plateforme_final,\n\t\t{ca plateforme final} = ca_plateforme_final,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive({ATC 2} = iif(isNull({ATC 2}),'',{ATC 2}),\n\t\t{ATC 1} = iif(isNull({ATC 1}),'',{ATC 1})) ~> Cleansing\nCleansing derive(ATC = iif(distributeur!='vente directe', \r\n iif({ATC 2}!='', {ATC 2}, {ATC 1}),\r\n  iif({ATC Corrigé}!='', {ATC Corrigé}, iif({ATC 2}!='', {ATC 2}, {ATC 1}))),\n\t\tsource_atc = iif(isNull({ATC 2})||{ATC 2}!='0','[ATC 2]','[ATC 1]')) ~> AtcSOurceATC\nAtcSOurceATC derive(marque_id = marque_id) ~> MarqueID\nArticleHierarchi select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\treference = Article,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\tN1groupe = {N1.groupe},\n\t\tN2groupe = {N2.groupe},\n\t\tN3groupe = {N3.groupe},\n\t\tN4groupe = {N4.groupe},\n\t\tN5groupe = {N5.groupe},\n\t\tN6groupe = {N6.groupe},\n\t\tN7groupe = {N7.groupe},\n\t\tN1locale = {N1.locale},\n\t\tN2locale = {N2.locale},\n\t\tN3locale = {N3.locale},\n\t\tN4locale = {N4.locale},\n\t\tN5locale = {N5.locale},\n\t\tN6locale = {N6.locale},\n\t\tN7locale = {N7.locale},\n\t\tN1groupedesignation = {N1.groupe.designation},\n\t\tN2groupedesignation = {N2.groupe.designation},\n\t\tN3groupedesignation = {N3.groupe.designation},\n\t\tN4groupedesignation = {N4.groupe.designation},\n\t\tN5groupedesignation = {N5.groupe.designation},\n\t\tN6groupedesignation = {N6.groupe.designation},\n\t\tN7groupedesignation = {N7.groupe.designation},\n\t\tN1localedesignation = {N1.locale.designation},\n\t\tN2localedesignation = {N2.locale.designation},\n\t\tN3localedesignation = {N3.locale.designation},\n\t\tN4localedesignation = {N4.locale.designation},\n\t\tN5localedesignation = {N5.locale.designation},\n\t\tN6localedesignation = {N6.locale.designation},\n\t\tN7localedesignation = {N7.locale.designation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameReference\nrenameReference aggregate(groupBy(reference),\n\tSuccessor = max(Successor),\n\t\tCDis = max(CDis),\n\t\tOrgCm = max(OrgCm),\n\t\tPredecessor = max(Predecessor),\n\t\tSt = max(St),\n\t\t{Désignation Statut} = max({Désignation Statut}),\n\t\t{Deb val} = max({Déb. val.}),\n\t\tN1groupe = max(N1groupe),\n\t\tN2groupe = max(N2groupe),\n\t\tN3groupe = max(N3groupe),\n\t\tN4groupe = max(N4groupe),\n\t\tN5groupe = max(N5groupe),\n\t\tN6groupe = max(N6groupe),\n\t\tN7groupe = max(N7groupe),\n\t\tN1groupedesignation = max(N1groupedesignation),\n\t\tN2groupedesignation = max(N2groupedesignation),\n\t\tN3groupedesignation = max(N3groupedesignation),\n\t\tN4groupedesignation = max(N4groupedesignation),\n\t\tN5groupedesignation = max(N5groupedesignation),\n\t\tN6groupedesignation = max(N6groupedesignation),\n\t\tN7groupedesignation = max(N7groupedesignation),\n\t\tN1localedesignation = max(N1localedesignation),\n\t\tN2localedesignation = max(N2localedesignation),\n\t\tN3localedesignation = max(N3localedesignation),\n\t\tN4localedesignation = max(N4localedesignation),\n\t\tN5localedesignation = max(N5localedesignation),\n\t\tN6localedesignation = max(N6localedesignation),\n\t\tN7localedesignation = max(N7localedesignation),\n\t\tN1locale = max(N1locale),\n\t\tN2locale = max(N2locale),\n\t\tN3locale = max(N3locale),\n\t\tN4locale = max(N4locale),\n\t\tN5locale = max(N5locale),\n\t\tN6locale = max(N6locale),\n\t\tN7locale = max(N7locale),\n\t\t{Hiérarchgroupe} = max({Hiérarch.groupe}),\n\t\t{Hiérarchlocale} = max({Hiérarch.locale})) ~> UniqueReferenc\nMarqueID, UniqueReferenc join(Select1@reference == UniqueReferenc@reference,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinArticle\nMarqueID, UniqueReferenc join(Select1@reference == UniqueReferenc@reference,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinArticle\ntoDoubleCA derive(qt_final = coalesce(qt_ecc_enrichi ,{qte plateforme final}  ),\n\t\tca_final = coalesce( ca_ecc_enrichi, {ca plateforme final} ),\n\t\tcanal_distribution_final = id_canal_final) ~> QtFinalCaFinalCanalDistributin\nRenameCaFinal derive(ca_ecc_enrichi = toDouble(ca_ecc_enrichi),\n\t\t{ca plateforme final} = toDouble({ca plateforme final})) ~> toDoubleCA\nQtFinalCaFinalCanalDistributin derive(year = substring(yearmonth,1,4),\n\t\tmonth = substring(yearmonth,5,2)) ~> ExtractYearandMonth\nPlateformes derive(Distributeur = lower(WholeSalerID),\n\t\tDist = lower(WholeSalerID)) ~> Distributeur\nDistributeur derive(Distributeur = iif(Distributeur=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(Distributeur, 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(Distributeur, 'dsc')>0, 'dsc', \r\n    iif(instr(Distributeur, 'vf' )>0, 'vf', \r\n     iif(instr(Distributeur, 'sonac' )>0, 'sonac',\r\nDist)))))) ~> distributeurr\ndistributeurr select(mapColumn(\n\t\tHubSAPid,\n\t\tt_distrubuteur = Distributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistributeur\nExtractYearandMonth, RenameDistributeur join(RenameCaFinal@HubSAPid == RenameDistributeur@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinPlateforme\nJoinPlateforme derive(distributeur = iif(isNull(RenameDistributeur@HubSAPid),distributeur, 'plateforme '+t_distrubuteur)) ~> CDistributeur\nCDistributeur derive(POSSAMidString = coalesce(POSSAMidString , RenameCaFinal@HubSAPid)) ~> PossmidString\nSelect2, SelectNomClient union(byName: true)~> UnionClientEHSandExtractionCompte\nUnionClientEHSandExtractionCompte aggregate(groupBy({Numéro du compte}),\n\t{Nom du compte} = max({Nom du compte}),\n\t\t{Groupe cible/Typologie générale} = max({Groupe cible/Typologie générale}),\n\t\t{Sous groupe cible/Typologie détaillée} = max({Sous groupe cible/Typologie détaillée}),\n\t\t{Compte principal: Numéro du compte} = max({Compte principal: Numéro du compte}),\n\t\t{Compte principal: Nom du compte} = max({Compte principal: Nom du compte})) ~> AgregatNumeroCompte\nClientEHS select(mapColumn(\n\t\t{Numéro du compte} = Client,\n\t\t{Nom du compte} = Nom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNomClient\nPossmidString, EPSData join(toInteger(POSSAMidString) == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCompte\nSelect5 derive({affecte/non_affecte} = iif(  ( data_origin ==\"vente directe\") , \"affecté\" , \r\n   iif(  ( data_origin == \"facturation decrementé\"  || data_origin==\"facturation sans ecoulement\") ,\r\n    \"non affecté\" , \"affecté\" )  \r\n      )) ~> affecteNonaffecte\naffecteNonaffecte derive({id marque} = marque_id) ~> IdMarque\nIdMarque derive({nom du canal} = iif(canal_distribution_final=='45', 'FP', \r\n iif(canal_distribution_final=='51', 'FS', \r\n  iif(canal_distribution_final=='43', 'FC', 'FD')))) ~> NomDuCanal\nNomDuCanal select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré} = POSSAMidString,\n\t\t{code client plateforme livree} = HubSAPid,\n\t\t{code produit} = reference,\n\t\t{plateforme/vente directe} = distributeur,\n\t\t{Code postal},\n\t\tmarque = marque_name,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Canal distribution} = id_canal_final,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite = qt_final,\n\t\tca = ca_final,\n\t\t{origine de la ligne} = data_origin,\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC offre} = {ATC 2},\n\t\t{ATC livré} = {ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_code = marque_id,\n\t\t{Document de vente} = document_vente,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tmarque_id,\n\t\t{ATC Performance} = ATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistrib\nRenameDistrib filter(N1locale==\"FA\"||\r\nN1locale==\"FB\"||\r\nN1locale==\"FC\"||\r\nN1locale==\"FD\"||\r\nN1locale==\"FE\"||\r\nN1locale==\"FG\"||\r\nN1locale==\"FH\"||\r\nN1locale==\"FL\"||\r\nN1locale==\"FM\"||\r\nN1locale==\"FP\"||\r\nN1locale==\"FR\"||\r\nN1locale==\"FV\") ~> FiltrerN1Locale\nJoinArticle select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = Select1@reference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_ecc_enrichi = ca_final,\n\t\tqt_ecc_enrichi = qt_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\t{ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameCaFinal\nInputManuel derive({origine de la ligne} = 'ajout manuel') ~> OrigineDeLaLigne\nLeftJoinArticle filter(isNull(UniqueReferenc@reference)) ~> FiltreReferenceNull\nExtractionCompte select(mapColumn(\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nFiltrerN1Locale select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\t{plateforme/vente directe},\n\t\t{Code postal},\n\t\tmarque,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite,\n\t\tca,\n\t\t{origine de la ligne},\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_code,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\t{ATC Performance},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, RenameNUmeroInterne join(canal_final == canal\n\t&& no_offre == Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStgOffreUnique\nAgregatNumeroCompte derive({Numéro du compte} = toInteger({Numéro du compte})) ~> EPSData\nStgOffreUnique select(mapColumn(\n\t\tMarque,\n\t\t{Quantité},\n\t\t{Numéro client indirect} = {Numéro interne 1},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tATC,\n\t\tcanal,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\tRight_Produit,\n\t\t{Right_Quantité},\n\t\t{Right_Numéro interne 1}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameNUmeroInterne\nJoinStgOffreUnique, EPSData join(toInteger({Numéro client indirect}) == EPSData@{Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Joindre1\nBCUnion select(mapColumn(\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tyearmonth,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\t{Agence commerciale},\n\t\t{ATC Corrigé},\n\t\t{ATC performance} = {ATC Performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tHubSAPid,\n\t\tNoCli,\n\t\t{Canal final} = id_canal_final,\n\t\t{ATC Performance},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tagence_code,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\t{Qté facturée},\n\t\t{CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nJoinCompte select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = RenameCaFinal@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_ecc_enrichi,\n\t\tqt_ecc_enrichi,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\t{ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tHubSAPid = RenameDistributeur@HubSAPid,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nJoindre1 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal},\n\t\tmarque = Select3@marque,\n\t\tmarque_code,\n\t\t{Canal distribution},\n\t\t{nom du canal},\n\t\tcanal_distribution_final,\n\t\tcanal_final,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\tno_offre,\n\t\t{ATC Corrigé},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tqte_ecoulement,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\t{Motif commande},\n\t\t{Type de facture},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte} = Select3@{Numéro du compte},\n\t\t{EPS_Nom du compte} = Select3@{Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale} = Select3@{Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée} = Select3@{Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte} = Select3@{Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte} = Select3@{Compte principal: Nom du compte},\n\t\tca_ecoulement,\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tATC,\n\t\tcanal,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\t{Numéro du compte} = EPSData@{Numéro du compte},\n\t\t{Nom du compte} = AgregatNumeroCompte@{Nom du compte},\n\t\t{Numero Interne_ Groupe cible/Typologie générale} = AgregatNumeroCompte@{Groupe cible/Typologie générale},\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} = AgregatNumeroCompte@{Sous groupe cible/Typologie détaillée},\n\t\t{Numero Interne_ Compte principal: Numéro du compte} = AgregatNumeroCompte@{Compte principal: Numéro du compte},\n\t\t{Numero Interne_ Compte principal: Nom du compte} = AgregatNumeroCompte@{Compte principal: Nom du compte},\n\t\t{Jour calendaire}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nSelect6 derive(quantite = toInteger(quantite)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré} = {Code postal},\n\t\tmarque,\n\t\t{ID marque} = marque_code,\n\t\t{ID canal de distribution} = {Canal distribution},\n\t\t{Nom du canal} = {nom du canal},\n\t\t{Diffus/Chantier} = canal_final,\n\t\t{document_vente (vente directe)} = document_vente,\n\t\t{Agence commerciale corrigé (vente directe)} = {Agence commerciale corrigé},\n\t\t{Donneur d'ordre (vente directe)} = {Donneur d'ordre},\n\t\t{Facture (vente directe)} = Facture,\n\t\t{Type poste Facture (vente directe)} = {Type poste Facture},\n\t\t{Numéro offre} = no_offre,\n\t\t{ATC Corrigé (vente directe)} = {ATC Corrigé},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)} = {Motif commande},\n\t\t{Type de facture (vente directe)} = {Type de facture},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale} = {Numero Interne_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} = {Numero Interne_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte} = {Numero Interne_ Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte} = {Numero Interne_ Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nSelect7 derive(ca = replace(toString(ca), \".\", \",\")) ~> DerivedColumn2\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OutputBaseAllDistru.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OutBaseCommercial\nFiltreReferenceNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataCommercialNotFOund\nSelect5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataCommercialDT2\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\t{Code postal} as string\n\t),\n\tpartitionFileNames:['base commercial.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InUnionBasecommercial')]",
				"[concat(variables('factoryId'), '/datasets/article_hierarchi')]",
				"[concat(variables('factoryId'), '/datasets/PLATEFORMES')]",
				"[concat(variables('factoryId'), '/datasets/ExtractionComptesEPSTypologieSousTypoComptePrincipal')]",
				"[concat(variables('factoryId'), '/datasets/ClientEHS')]",
				"[concat(variables('factoryId'), '/datasets/input_manuel')]",
				"[concat(variables('factoryId'), '/datasets/StgOffreUniq')]",
				"[concat(variables('factoryId'), '/datasets/OutputBaseAllDistru')]",
				"[concat(variables('factoryId'), '/datasets/DataCommercialNotfound')]",
				"[concat(variables('factoryId'), '/datasets/data_commercial_DTP2')]",
				"[concat(variables('factoryId'), '/datasets/baseCommercialOut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/basecommercialUnion_Model_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "base commercial après UNion",
				"folder": {
					"name": "VERIFICATION/bkp"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "basecommercialUnion",
								"type": "DatasetReference"
							},
							"name": "BCUnion"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "ArticleHierarchi"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "Plateformes"
						},
						{
							"dataset": {
								"referenceName": "ExtractionComptesEPSTypologieSousTypoComptePrincipal",
								"type": "DatasetReference"
							},
							"name": "ExtractionCompte"
						},
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "ClientEHS"
						},
						{
							"dataset": {
								"referenceName": "input_manuel",
								"type": "DatasetReference"
							},
							"name": "InputManuel"
						},
						{
							"dataset": {
								"referenceName": "StgOffreUniq",
								"type": "DatasetReference"
							},
							"name": "StgOffreUnique"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference"
							},
							"name": "OutBaseCommercial"
						},
						{
							"dataset": {
								"referenceName": "DataCommercialNotfound",
								"type": "DatasetReference"
							},
							"name": "DataCommercialNotFOund"
						},
						{
							"dataset": {
								"referenceName": "data_commercial_DTP2",
								"type": "DatasetReference"
							},
							"name": "DataCommercialDT2"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Cleansing"
						},
						{
							"name": "AtcSOurceATC"
						},
						{
							"name": "MarqueID"
						},
						{
							"name": "renameReference"
						},
						{
							"name": "UniqueReferenc"
						},
						{
							"name": "JoinArticle"
						},
						{
							"name": "LeftJoinArticle"
						},
						{
							"name": "QtFinalCaFinalCanalDistributin"
						},
						{
							"name": "toDoubleCA"
						},
						{
							"name": "ExtractYearandMonth"
						},
						{
							"name": "Distributeur"
						},
						{
							"name": "distributeurr"
						},
						{
							"name": "RenameDistributeur"
						},
						{
							"name": "JoinPlateforme"
						},
						{
							"name": "CDistributeur"
						},
						{
							"name": "PossmidString"
						},
						{
							"name": "UnionClientEHSandExtractionCompte"
						},
						{
							"name": "AgregatNumeroCompte"
						},
						{
							"name": "SelectNomClient"
						},
						{
							"name": "JoinCompte"
						},
						{
							"name": "renameMarque"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "affecteNonaffecte"
						},
						{
							"name": "IdMarque"
						},
						{
							"name": "NomDuCanal"
						},
						{
							"name": "RenameDistrib"
						},
						{
							"name": "FiltrerN1Locale"
						},
						{
							"name": "RenameCaFinal"
						},
						{
							"name": "OrigineDeLaLigne"
						},
						{
							"name": "FiltreReferenceNull"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "JoinStgOffreUnique"
						},
						{
							"name": "ModifyColumns1",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "ModifyColumns2",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "RenameNUmeroInterne"
						},
						{
							"name": "Joindre1"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> BCUnion\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ArticleHierarchi\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Plateformes\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionCompte\nsource(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ClientEHS\nsource(output(\n\t\t{plateforme/vente directe} as string,\n\t\t{affecte/non_affecte} as string,\n\t\t{origine de la ligne} as string,\n\t\t{code produit} as string,\n\t\t{code client plateforme livree} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\t{Code client livré} as string,\n\t\tmarque as string,\n\t\t{id marque} as string,\n\t\tno_offre as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.local.designation} as string,\n\t\t{N2.local.designation} as string,\n\t\t{N3.local.designation} as string,\n\t\t{N4.local.designation} as string,\n\t\t{N6.local.designation} as string,\n\t\t{N7.local.designation} as string,\n\t\t{code postal livrer} as string,\n\t\t{ATC Performance} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC Corrigé} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\tis_prix_dsc as string,\n\t\t{N5.local.designation} as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\t{Motif commande} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> InputManuel\nsource(output(\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\tRight_Produit as string,\n\t\t{Right_Quantité} as string,\n\t\t{Right_Numéro interne 1} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> StgOffreUnique\nBCUnion select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tis_prix_dsc,\n\t\tqte_ecc,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité} = {Secteur d'activit�},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé} = {Agence commerciale corrig�},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.} = {R�cept. de march.},\n\t\tRight_reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée} = {Qt� factur�e},\n\t\t{CA facturé} = {CA factur�},\n\t\tRight_HubSAPid,\n\t\tType_Facturation = {Type_Facturation�},\n\t\tqt_fact,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC 2} = {ATC Performance},\n\t\tcanal,\n\t\tRowCount,\n\t\t{ATC 1} = ATC,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tcode_depot,\n\t\tid_canal,\n\t\tmarque_code,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\tClient,\n\t\tMarque,\n\t\t{ATC Corrigé} = {ATC Corrig�},\n\t\t{Motif commande},\n\t\t{ commerciale} = {Org. commerciale},\n\t\tmarque_id,\n\t\tOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive({ATC 2} = iif(isNull({ATC 2}),'',{ATC 2}),\n\t\t{ATC 1} = iif(isNull({ATC 1}),'',{ATC 1})) ~> Cleansing\nCleansing derive(ATC = iif(distributeur!='vente directe', \r\n iif({ATC 2}!='', {ATC 2}, {ATC 1}),\r\n  iif({ATC Corrigé}!='', {ATC Corrigé}, iif({ATC 2}!='', {ATC 2}, {ATC 1}))),\n\t\tsource_atc = iif(isNull({ATC 2})||{ATC 2}!='0','[ATC 2]','[ATC 1]')) ~> AtcSOurceATC\nAtcSOurceATC derive(marque_id = iif(instr(marque_name, 'SaunierDuval')>0,\r\n 1604, \r\n iif(instr(marque_name, 'Vaillant')>0, 1621, 1621))) ~> MarqueID\nArticleHierarchi select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\treference = Article,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\tN1groupe = {N1.groupe},\n\t\tN2groupe = {N2.groupe},\n\t\tN3groupe = {N3.groupe},\n\t\tN4groupe = {N4.groupe},\n\t\tN5groupe = {N5.groupe},\n\t\tN6groupe = {N6.groupe},\n\t\tN7groupe = {N7.groupe},\n\t\tN1locale = {N1.locale},\n\t\tN2locale = {N2.locale},\n\t\tN3locale = {N3.locale},\n\t\tN4locale = {N4.locale},\n\t\tN5locale = {N5.locale},\n\t\tN6locale = {N6.locale},\n\t\tN7locale = {N7.locale},\n\t\tN1groupedesignation = {N1.groupe.designation},\n\t\tN2groupedesignation = {N2.groupe.designation},\n\t\tN3groupedesignation = {N3.groupe.designation},\n\t\tN4groupedesignation = {N4.groupe.designation},\n\t\tN5groupedesignation = {N5.groupe.designation},\n\t\tN6groupedesignation = {N6.groupe.designation},\n\t\tN7groupedesignation = {N7.groupe.designation},\n\t\tN1localedesignation = {N1.locale.designation},\n\t\tN2localedesignation = {N2.locale.designation},\n\t\tN3localedesignation = {N3.locale.designation},\n\t\tN4localedesignation = {N4.locale.designation},\n\t\tN5localedesignation = {N5.locale.designation},\n\t\tN6localedesignation = {N6.locale.designation},\n\t\tN7localedesignation = {N7.locale.designation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameReference\nrenameReference aggregate(groupBy(reference),\n\tSuccessor = max(Successor),\n\t\tCDis = max(CDis),\n\t\tOrgCm = max(OrgCm),\n\t\tPredecessor = max(Predecessor),\n\t\tSt = max(St),\n\t\t{Désignation Statut} = max({Désignation Statut}),\n\t\t{Deb val} = max({Déb. val.}),\n\t\tN1groupe = max(N1groupe),\n\t\tN2groupe = max(N2groupe),\n\t\tN3groupe = max(N3groupe),\n\t\tN4groupe = max(N4groupe),\n\t\tN5groupe = max(N5groupe),\n\t\tN6groupe = max(N6groupe),\n\t\tN7groupe = max(N7groupe),\n\t\tN1groupedesignation = max(N1groupedesignation),\n\t\tN2groupedesignation = max(N2groupedesignation),\n\t\tN3groupedesignation = max(N3groupedesignation),\n\t\tN4groupedesignation = max(N4groupedesignation),\n\t\tN5groupedesignation = max(N5groupedesignation),\n\t\tN6groupedesignation = max(N6groupedesignation),\n\t\tN7groupedesignation = max(N7groupedesignation),\n\t\tN1localedesignation = max(N1localedesignation),\n\t\tN2localedesignation = max(N2localedesignation),\n\t\tN3localedesignation = max(N3localedesignation),\n\t\tN4localedesignation = max(N4localedesignation),\n\t\tN5localedesignation = max(N5localedesignation),\n\t\tN6localedesignation = max(N6localedesignation),\n\t\tN7localedesignation = max(N7localedesignation),\n\t\tN1locale = max(N1locale),\n\t\tN2locale = max(N2locale),\n\t\tN3locale = max(N3locale),\n\t\tN4locale = max(N4locale),\n\t\tN5locale = max(N5locale),\n\t\tN6locale = max(N6locale),\n\t\tN7locale = max(N7locale),\n\t\t{Hiérarchgroupe} = max({Hiérarch.groupe}),\n\t\t{Hiérarchlocale} = max({Hiérarch.locale})) ~> UniqueReferenc\nMarqueID, UniqueReferenc join(Select1@reference == UniqueReferenc@reference,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinArticle\nMarqueID, UniqueReferenc join(Select1@reference == UniqueReferenc@reference,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinArticle\ntoDoubleCA derive(qt_final = iif(isNull(qt_ecc_enrichi),\r\n {qte plateforme final},\r\n  iif(isNull({qte plateforme final}),qt_ecc_enrichi,qt_ecc_enrichi)),\n\t\tca_final = coalesce(  ca_ecc_enrichi , {ca plateforme final} ),\n\t\tcanal_distribution_final = iif(isNull({Canal distribution}), \r\n iif(isNull(id_canal_final),\r\n id_canal,id_canal_final),\r\n {Canal distribution}\r\n )) ~> QtFinalCaFinalCanalDistributin\nRenameCaFinal derive(ca_ecc_enrichi = toDouble(ca_ecc_enrichi),\n\t\t{ca plateforme final} = toDouble({ca plateforme final})) ~> toDoubleCA\nQtFinalCaFinalCanalDistributin derive(year = substring(yearmonth,1,4),\n\t\tmonth = substring(yearmonth,5,2)) ~> ExtractYearandMonth\nPlateformes derive(Distributeur = lower(WholeSalerID),\n\t\tDist = lower(WholeSalerID)) ~> Distributeur\nDistributeur derive(Distributeur = iif(Distributeur=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(Distributeur, 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(Distributeur, 'dsc')>0, 'dsc', \r\n    iif(instr(Distributeur, 'vf' )>0, 'vf', \r\n     iif(instr(Distributeur, 'sonac' )>0, 'sonac',\r\nDist)))))) ~> distributeurr\ndistributeurr select(mapColumn(\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\tt_distrubuteur = Distributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistributeur\nExtractYearandMonth, RenameDistributeur join(RenameCaFinal@HubSAPid == RenameDistributeur@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinPlateforme\nJoinPlateforme derive(distributeur = iif(isNull(Right_HubSAPid), distributeur, 'plateforme'+distributeur)) ~> CDistributeur\nCDistributeur derive(POSSAMidString = iif(POSSAMidString=='', Right_HubSAPid, POSSAMidString)) ~> PossmidString\nSelect2, SelectNomClient union(byName: true)~> UnionClientEHSandExtractionCompte\nUnionClientEHSandExtractionCompte aggregate(groupBy({Numéro du compte}),\n\t{Nom du compte} = max({Nom du compte}),\n\t\t{Groupe cible/Typologie générale} = max({Groupe cible/Typologie générale}),\n\t\t{Sous groupe cible/Typologie détaillée} = max({Sous groupe cible/Typologie détaillée}),\n\t\t{Compte principal: Numéro du compte} = max({Compte principal: Numéro du compte}),\n\t\t{Compte principal: Nom du compte} = max({Compte principal: Nom du compte})) ~> AgregatNumeroCompte\nClientEHS select(mapColumn(\n\t\t{Numéro du compte} = Client,\n\t\t{Nom du compte} = Nom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNomClient\nModifyColumns1, ModifyColumns2 join(POSSAMidString == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCompte\nJoinCompte select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = RenameCaFinal@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tis_prix_dsc,\n\t\tqte_ecc,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\tRight_reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tRight_HubSAPid,\n\t\tType_Facturation,\n\t\tqt_ecc_enrichi = qt_fact,\n\t\tca_ecc_enrichi,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\tcanal,\n\t\tRowCount,\n\t\t{ATC 1},\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName = RenameCaFinal@HubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tcode_depot,\n\t\tid_canal,\n\t\tmarque_code,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\tClient,\n\t\tMarque,\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\t{ commerciale},\n\t\tmarque_id,\n\t\tOffre,\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tmarque = OrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tca_final,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName = RenameDistributeur@HubName,\n\t\tHubSAPid = RenameDistributeur@HubSAPid,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameMarque\nrenameMarque select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré} = POSSAMidString,\n\t\t{code client plateforme livree} = HubSAPid,\n\t\t{code produit} = reference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque = marque_name,\n\t\tis_prix_dsc,\n\t\tqte_ecc,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\tRight_reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tRight_HubSAPid,\n\t\tType_Facturation,\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite = qt_final,\n\t\t{origine de la ligne} = data_origin,\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC offre} = {ATC 2},\n\t\tcanal,\n\t\tRowCount,\n\t\t{ATC livré} = {ATC 1},\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tcode_depot,\n\t\tid_canal,\n\t\tmarque_code,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\tClient,\n\t\tMarque,\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\t{ commerciale},\n\t\tmarque_id,\n\t\tOffre,\n\t\t{ATC Performance} = ATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\t{id marque} = marque,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tca = ca_final,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\nRenameColumn derive({affecte/non_affecte} = iif(({origine de la ligne}==\"facturation decrementé\" || {origine de la ligne}==\"facturation sans ecoulement\" || (distributeur=='vente directe'&&{origine de la ligne}==\"facturation\")),\r\n  \"non affecté\",\r\n   \"affecté\")) ~> affecteNonaffecte\naffecteNonaffecte derive({id marque} = iif(instr(marque,'SaunierDuval')>0,1604, \r\n iif(instr(marque,'Vaillant')>0,1621,\r\n0))) ~> IdMarque\nIdMarque derive({nom du canal} = iif(canal_distribution_final=='45', 'FP', \r\n iif(canal_distribution_final=='51', 'FS', \r\n  iif(canal_distribution_final=='43', 'FC', 'FD')))) ~> NomDuCanal\nNomDuCanal select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\t{plateforme/vente directe} = distributeur,\n\t\t{Code postal},\n\t\tmarque,\n\t\tis_prix_dsc,\n\t\tqte_ecc,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\tRight_reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tRight_HubSAPid,\n\t\tType_Facturation,\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite,\n\t\t{origine de la ligne},\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC offre},\n\t\tcanal,\n\t\tRowCount,\n\t\t{ATC livré},\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tcode_depot,\n\t\tid_canal,\n\t\tmarque_code,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\tClient,\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\t{ commerciale},\n\t\tmarque_id,\n\t\tOffre,\n\t\t{ATC Performance},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tca,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistrib\nRenameDistrib filter(N1locale==\"FA\"||\r\nN1locale==\"FB\"||\r\nN1locale==\"FC\"||\r\nN1locale==\"FD\"||\r\nN1locale==\"FE\"||\r\nN1locale==\"FG\"||\r\nN1locale==\"FH\"||\r\nN1locale==\"FL\"||\r\nN1locale==\"FM\"||\r\nN1locale==\"FP\"||\r\nN1locale==\"FR\"||\r\nN1locale==\"FV\") ~> FiltrerN1Locale\nJoinArticle select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = Select1@reference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tis_prix_dsc,\n\t\tqte_ecc,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\tRight_reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tRight_HubSAPid,\n\t\tType_Facturation,\n\t\tqt_fact,\n\t\tca_ecc_enrichi = ca_final,\n\t\tqt_ecc_enrichi = qt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\tcanal,\n\t\tRowCount,\n\t\t{ATC 1},\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tcode_depot,\n\t\tid_canal,\n\t\tmarque_code,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\tClient,\n\t\tMarque,\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\t{ commerciale},\n\t\tmarque_id,\n\t\tOffre,\n\t\tATC,\n\t\tsource_atc,\n\t\treference = UniqueReferenc@reference,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameCaFinal\nInputManuel derive({origine de la ligne} = 'ajout manuel') ~> OrigineDeLaLigne\nLeftJoinArticle filter(Right_reference!='') ~> FiltreReferenceNull\nExtractionCompte select(mapColumn(\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nFiltrerN1Locale select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\t{plateforme/vente directe},\n\t\t{Code postal},\n\t\tmarque,\n\t\tis_prix_dsc,\n\t\tqte_ecc,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\tRight_reference,\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tRight_HubSAPid,\n\t\tType_Facturation,\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite,\n\t\t{origine de la ligne},\n\t\tcanal_final,\n\t\tCommande,\n\t\tno_offre,\n\t\t{ATC offre},\n\t\tcanal,\n\t\tRowCount,\n\t\t{ATC livré},\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tNomATC,\n\t\tMatricule,\n\t\tdate_id,\n\t\tHubName,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tcode_depot,\n\t\tid_canal,\n\t\tmarque_code,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\tClient,\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\t{ commerciale},\n\t\tmarque_id,\n\t\tOffre,\n\t\t{ATC Performance},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarch groupe} = {Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tca,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, RenameNUmeroInterne join(Select3@canal == RenameNUmeroInterne@canal\n\t&& no_offre == RenameNUmeroInterne@Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStgOffreUnique\nPossmidString derive(POSSAMidString = toInteger(POSSAMidString)) ~> ModifyColumns1\nAgregatNumeroCompte derive({Numéro du compte} = toInteger({Numéro du compte})) ~> ModifyColumns2\nStgOffreUnique select(mapColumn(\n\t\tMarque,\n\t\t{Quantité},\n\t\t{Numéro client indirect} = {Numéro interne 1},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tATC,\n\t\tcanal,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\tRight_Produit,\n\t\t{Right_Quantité},\n\t\t{Right_Numéro interne 1}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameNUmeroInterne\nJoinStgOffreUnique, ModifyColumns2 join(toInteger({Numéro client indirect}) == ModifyColumns2@{Numéro du compte},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joindre1\nJoindre1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OutputBaseAllDistru'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OutBaseCommercial\nFiltreReferenceNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataCommercialNotFOund\nrenameMarque sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataCommercialDT2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/basecommercialUnion')]",
				"[concat(variables('factoryId'), '/datasets/article_hierarchi')]",
				"[concat(variables('factoryId'), '/datasets/PLATEFORMES')]",
				"[concat(variables('factoryId'), '/datasets/ExtractionComptesEPSTypologieSousTypoComptePrincipal')]",
				"[concat(variables('factoryId'), '/datasets/ClientEHS')]",
				"[concat(variables('factoryId'), '/datasets/input_manuel')]",
				"[concat(variables('factoryId'), '/datasets/StgOffreUniq')]",
				"[concat(variables('factoryId'), '/datasets/OutputBaseAllDistru')]",
				"[concat(variables('factoryId'), '/datasets/DataCommercialNotfound')]",
				"[concat(variables('factoryId'), '/datasets/data_commercial_DTP2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cleaning')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "cleaning process after join",
				"folder": {
					"name": "REFERENTIEL/ATC"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "atc_joined",
								"type": "DatasetReference"
							},
							"name": "atcJoined"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outReferentielATC",
								"type": "DatasetReference"
							},
							"name": "AtcprepareForReplicate"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Flatten1"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "DerivedColumn4"
						}
					],
					"script": "source(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as integer,\n\t\t{Code Postal fin} as integer,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> atcJoined\natcJoined filter(!isNull(ATC)) ~> Filter1\nFilter1 select(mapColumn(\n\t\t{Clé Référentiel},\n\t\t{Recherche Clé EPS},\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tDR_x,\n\t\tmatches,\n\t\tATC,\n\t\tNomATC,\n\t\t{Plan primes},\n\t\tDR_y,\n\t\t{Secteur prime},\n\t\tMatricule,\n\t\t{Secteur DEC},\n\t\tRallye\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive({Canal final} = iif( in([\"Vaillant diffus\",\"SD diffus\"], {Plan primes}), \"Diffus\" ,\"Chantier\" ),\n\t\ttoreplicate = {Code Postal fin}-{Code Postal début}+1) ~> DerivedColumn1\nDerivedColumn1 filter({Code Postal début}<= {Code Postal fin}) ~> Filter2\nFilter2 derive(dd = mapLoop(abs(toInteger(toreplicate)), #index)) ~> DerivedColumn2\nDerivedColumn2 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\t{Clé Référentiel},\n\t\t{Recherche Clé EPS},\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tDR_x,\n\t\tmatches,\n\t\tATC,\n\t\tNomATC,\n\t\t{Plan primes},\n\t\tDR_y,\n\t\t{Secteur prime},\n\t\tMatricule,\n\t\t{Secteur DEC},\n\t\tRallye,\n\t\t{Canal final},\n\t\ttoreplicate,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 derive(dd = toInteger(dd) -1) ~> DerivedColumn3\nDerivedColumn3 derive({Code postal} = {Code Postal début}+dd) ~> DerivedColumn4\nDerivedColumn4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['referentiel_atc.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> AtcprepareForReplicate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/atc_joined')]",
				"[concat(variables('factoryId'), '/datasets/outReferentielATC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fuzzyjoinATC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "afctationflows",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> afctationflows",
							"dataset": {
								"referenceName": "afctationflows",
								"type": "DatasetReference"
							}
						},
						{
							"name": "atcc2021",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> atcc2021",
							"dataset": {
								"referenceName": "atcc2021",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared afctationflows = let\r\n  AdfDoc = AzureStorage.BlobContents(\"https://dsvaillantfr.blob.core.windows.net/data-warehouse/Temp/atc_affectation_lower\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared atcc2021 = let\r\n  AdfDoc = AzureStorage.BlobContents(\"https://dsvaillantfr.blob.core.windows.net/data-warehouse/Temp/atc_c2021_lower\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = afctationflows,\r\n  #\"Choose columns\" = Table.SelectColumns(Source, {\"Clé Référentiel\", \"Marque\", \"Code Postal début\", \"Code Postal fin\", \"Utilisateur\", \"Fonction\", \"Département\", \"DR\"})\r\nin\r\n  #\"Choose columns\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/afctationflows')]",
				"[concat(variables('factoryId'), '/datasets/atcc2021')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lower_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL/ATC"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ref_affectation",
								"type": "DatasetReference"
							},
							"name": "refaffectation"
						},
						{
							"dataset": {
								"referenceName": "ref_atc_2021",
								"type": "DatasetReference"
							},
							"name": "ref2021"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "atc_affectation_lower",
								"type": "DatasetReference"
							},
							"name": "atcAffectationLower"
						},
						{
							"dataset": {
								"referenceName": "atc_c2021_lower",
								"type": "DatasetReference"
							},
							"name": "atcC2021Lower"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "filteredcolumnsrefrefaffectation"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "source(output(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR as string,\n\t\t{ID SAP} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> refaffectation\nsource(output(\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ref2021\nrefaffectation derive(Utilisateur = lower(Utilisateur)) ~> DerivedColumn1\nSelect1 derive(NomATC = lower(NomATC)) ~> DerivedColumn2\nDerivedColumn1 select(mapColumn(\n\t\t{Clé Référentiel},\n\t\t{Recherche Clé EPS},\n\t\tMarque,\n\t\t{Code Postal début},\n\t\t{Code Postal fin},\n\t\tUtilisateur,\n\t\tFonction,\n\t\t{Département},\n\t\tDR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filteredcolumnsrefrefaffectation\nFilter1 select(mapColumn(\n\t\tATC,\n\t\tNomATC,\n\t\t{Plan primes},\n\t\tDR,\n\t\t{Secteur prime},\n\t\tMatricule,\n\t\t{Secteur DEC},\n\t\tRallye\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nref2021 filter(!isNull(NomATC)) ~> Filter1\nfilteredcolumnsrefrefaffectation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['atc_affectation_lower'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> atcAffectationLower\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['atc_c2021_lower'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> atcC2021Lower"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ref_affectation')]",
				"[concat(variables('factoryId'), '/datasets/ref_atc_2021')]",
				"[concat(variables('factoryId'), '/datasets/atc_affectation_lower')]",
				"[concat(variables('factoryId'), '/datasets/atc_c2021_lower')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/preparation_facturation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "pre",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "FacturationBW",
								"type": "DatasetReference"
							},
							"name": "facturationbw"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outfactDescTereva",
								"type": "DatasetReference"
							},
							"name": "facturationForDSCTEREVA"
						},
						{
							"dataset": {
								"referenceName": "facturationForOtherPlateform",
								"type": "DatasetReference"
							},
							"name": "facturationForOtherPlateform"
						},
						{
							"dataset": {
								"referenceName": "notDSCTerevaPlateform",
								"type": "DatasetReference"
							},
							"name": "notDSCTerevaPlateform"
						},
						{
							"dataset": {
								"referenceName": "facturationForVanMarkes",
								"type": "DatasetReference"
							},
							"name": "facturationForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outFacturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "venteDirect"
						},
						{
							"dataset": {
								"referenceName": "AZ_OFacturactionPartedisLikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "transfoDate"
						},
						{
							"name": "extractYearMonth"
						},
						{
							"name": "extractYearMonthh"
						},
						{
							"name": "FactFilterc"
						},
						{
							"name": "AddColumn"
						},
						{
							"name": "extractYearMonthc"
						},
						{
							"name": "FactFilter"
						},
						{
							"name": "filtreDSC"
						},
						{
							"name": "Joindre1"
						},
						{
							"name": "filtreOtherPlateforme"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Flatten1"
						},
						{
							"name": "Window1"
						},
						{
							"name": "DerivedColumn3"
						}
					],
					"script": "source(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturationbw\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nfacturationbw derive(date_id = replace({Jour calendaire},'-','')) ~> transfoDate\ntransfoDate derive(year = substring(date_id,1,4),\n\t\tyearmonth = substring(date_id,1,6),\n\tpartitionBy('hash', 1)) ~> extractYearMonth\nextractYearMonth derive(year = substring(date_id,1,4),\n\t\tyearmonth = substring(date_id,1,6)) ~> extractYearMonthh\nextractYearMonthh derive(fact_filter = iif ( ({Type de facture} =='YFAR' && ({Motif commande}=='FAS')  ||  ( {Type de facture}=='YFAB' && {Motif commande}=='FAS' )) ,1,0)) ~> FactFilterc\nFactFilterc derive(qt_cd_e = {Qté cdée},\n\t\tca_cd_ = {CA cdé},\n\t\tqt_livr_e = {Qté livrée},\n\t\tca_livr_ = {CA livré},\n\t\tqt_factur_e = {Qté facturée},\n\t\tca_factur_ = {CA facturé},\n\t\tcout_standard_cd_ = {Cout standard cdé},\n\t\tcout_fabrication = {Cout fabrication},\n\t\tcout_standard_livr_ = {Cout standard livré},\n\t\tcout_standard_factur_ = {Cout standard facturé}) ~> AddColumn\nAddColumn derive(year_month = substring(date_id,1,6)) ~> extractYearMonthc\nextractYearMonthc filter(fact_filter==0 && !isNull(Article)) ~> FactFilter\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')> 0  ||instr(WholeSalerID, 'TEREVA')> 0) ~> filtreDSC\nSelect1, filtreDSC join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joindre1\nPLATEFORMES filter(instr(WholeSalerID, 'DSC')== 0  &&  instr(WholeSalerID, 'TEREVA')== 0) ~> filtreOtherPlateforme\nSelect1, filtreOtherPlateforme join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> leftOuter\nFactFilter select(mapColumn(\n\t\t{ Org. commerciale} = {Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{ vente} = {Type doc. vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference = Article\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, PLATEFORMES join({Récept. de march.} == HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(isNull( HubSAPid )) ~> Filter1\nJoindre1 select(mapColumn(\n\t\t{Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nleftOuter select(mapColumn(\n\t\t{ Org commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{Type doc vente} = { vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect4 derive(toreplicate = abs(toInteger({Qté facturée}))) ~> DerivedColumn1\nDerivedColumn1 derive(toroll = mapLoop(abs(toInteger( {Qté facturée})), #index)) ~> DerivedColumn2\nDerivedColumn2 foldDown(unroll(toroll, toroll),\n\tmapColumn(\n\t\t{ Org commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Recept de march},\n\t\t{Destinataire facture},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\ttoroll\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 window(over(yearmonth,\n\t\tHubSAPid,\n\t\treference),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window1\nWindow1 derive(indexcols2 = yearmonth+HubSAPid+reference+toString(indexcols2),\n\t\t{Qté facturée} = iif(toDouble({Qté facturée})<=0, -1, 1)) ~> DerivedColumn3\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['AZ_facturationDescTEREVA'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForDSCTEREVA\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForOther'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForOtherPlateform\nfiltreOtherPlateforme sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> notDSCTerevaPlateform\nextractYearMonthc sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['facturationForDSCTEREVA'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> facturationForVanMarkes\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['facturationForVenteDirect'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> venteDirect\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OFacturactionPartedisLikeWithIndex'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FacturationBW')]",
				"[concat(variables('factoryId'), '/datasets/PLATEFORMES')]",
				"[concat(variables('factoryId'), '/datasets/outfactDescTereva')]",
				"[concat(variables('factoryId'), '/datasets/facturationForOtherPlateform')]",
				"[concat(variables('factoryId'), '/datasets/notDSCTerevaPlateform')]",
				"[concat(variables('factoryId'), '/datasets/facturationForVanMarkes')]",
				"[concat(variables('factoryId'), '/datasets/outFacturationForVenteDirect')]",
				"[concat(variables('factoryId'), '/datasets/AZ_OFacturactionPartedisLikeWithIndex')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}