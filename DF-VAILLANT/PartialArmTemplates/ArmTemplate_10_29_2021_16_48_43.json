{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-VAILLANT"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/InputLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "prepare azure function load",
				"activities": [
					{
						"name": "importDataMabille",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "importDataVF_confort",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_MABILE",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/Mabile",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/MABILE_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataPartedis",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "importDataVF_confort",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_PARTEDIS",
							"method": "POST",
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/Partedis",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/PARTEDIS_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataVF_confort",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_VFCONFORT",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/VF Confort",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/CONFORT_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataOrcab",
						"description": "import data from orcab",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_ORCAB",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/ORCAB",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/ORCAB_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataEHS",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "importDataOrcab",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_EHS",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/Engie_Home_Services",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/EHS_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importDataTereva",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "importDataMabille",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "importDataPartedis",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "importDataEHS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_TEREVA",
							"method": "POST",
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/Téréva",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/TEREVA_ECOULEMENT.csv"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MAIN_PREPARATION_ECOULEMENT",
						"description": "PL Input_Load\nPL_MABILLE\nPL_ORCAB\nPL_VF_CONFORT\nPL_TEREVA\nPL_PARTEDIS\nPL_TRAITEMENT_DSC\nDF_UNION_ECOULEMENT\nPL_POST_UNION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "preparation_facturation",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "MAIN_REFERENTIEL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_PREPARATION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_MAIN_BASE_COMMERCIAL",
						"description": "PL main for : \nPREPARATION_ECC_AVOIR\nDSCTEREVA2\nModel_PARTEDIS2\nVanMarkes\nModelVenteDirecte\nUNION_BASE_COMMERCIAL\nPOST_UNION_FINISH\nATC_PERFORMANCE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MAIN_PREPARATION_ECOULEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAIN_BASE_COMMERCIALE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "MAIN_REFERENTIEL",
						"description": "PL_GET_ARTICLE_DESIGNATION\nPL_OFFRE\nPL_REFERENTIEL_ATC\nPL_REFERENTIEL_PRIX",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_REFERENTIEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "MAIN_LOGISTIQUE",
						"description": "NomenclatureProduit\nNomenclatureClient\nTDataSD",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MAIN_REFERENTIEL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_LOGISTIQUE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "preparation_facturation",
						"description": "Input : -facturationbw\n          -PLATEFORMES\ntraitement : -join facturationbw & Plateformes\n                 -join facturationbw & other plateformes\n                 -join facturationbw & filtre DSC\nOutput : -venteDirect\n-AZ_OFacturactionPartedisLikeWithIndex\n-facturationForOtherPlateform\n-facturationForDSCTEREVA\n-facturationForVanMarkes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "preparation_facturation",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "MAIN_LOGISTIQUE1",
						"description": "NomenclatureProduit\nNomenclatureClient\nTDataSD",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_LOGISTIQUE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "CONTRAT DISTRIBUTION",
						"description": "CALCUL SEUIL\nCALCUL REMUNERATION\nCONTRAT DISTRIBUTION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CONTRAT_DISTRIBUTION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "start",
						"description": "fuzzy join: atc 2020 2021 and  atc affectation",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "HelloWord",
							"method": "POST",
							"body": {
								"name": "bobl"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_SUIVIE_OFFRE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SUIVIE_OFFRE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "SORTIE MARKETING",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SORTIE MARKETING",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-10-04T10:59:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MAIN_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_POST_UNION",
						"description": "prix_moyen\nunionSAP_EHS\nCleaninPostUnion",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UNION_ECOULEMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_POST_UNION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_MABILE",
						"description": "Input : \n-MabilleSaunierDuvale\n-OrganisationMabilleSonac\n-ventesDirectes\nOutput : \n-MabileQteNull\n-organisationNotFound\n-MABILE_ECOULEMENT_OUTPUT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MABILE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_ORCAB",
						"description": "Input : \n-ORCAB_ECOULEMENT_INPUT\n-ORCAB_ORGANISATION\n-ventesDirectes\nOutput : \n-ORCAB_QTE_NULL\n-organisationNotFound\n-ORCAB_ECOULEMENT_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORCAB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_TRAITEMENT_DSC",
						"description": "Input : \nDSCINPUT\norganisation\nventesDirectes\nOutput : \noutputNullQuantity\norgaNotFound\npreparedDSC\nDSCPieceDetache",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DSC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_VF_CONFORT",
						"description": "Input : \n-ecoulement\n-CONFORT_ORGANISATION\n-ventesDirectes\nOutput : \n-outputQuantityNull\n-VFCONFORT_ECOULEMENT_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_VF_CONFORT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_TEREVA",
						"description": "Input : \necoulement\nTEREVA_ORGANISATION\nventesDirectes\nOutput : \nTEREVA_EC_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TEREVA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "UNION_ECOULEMENT",
						"description": "Inupt : \nvfconfortPrepared\nmabillePrepared\norcabPrepared\ntereva\nDSC\nmaillard\nPartedis\nEHS\nOutput : \nallUnionedDistributor",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PL_PARTEDIS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_EHS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_MAILLARD",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_TEREVA",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_TRAITEMENT_DSC",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_ORCAB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_MABILE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_VF_CONFORT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNION_ECOULEMENT",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PL_PARTEDIS",
						"description": "Input : \necoulement\nPARTEDIS_ORGANISATION\nventesDirectes\npartedisPrixStd\nprixParPeriode\nOutput : \norganisationNotFound\nquantityNullOutput\nPARTEDIS_ECOUL_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PARTEDIS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_MAILLARD",
						"description": "Input : \necoulement\norganisation\nventesDirectes\nOutput : \norgaNotFound\nMAILLARD_ECOUL_PREPARED",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAILLARD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_EHS",
						"description": "Input : \nEHS\norganisation\nventesDirectes\nOutput : \norgaNotFound\nSoriteEHS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "InputLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_EHS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "InputLoad",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "InputLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-27T09:12:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DSC')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TEREVA')]",
				"[concat(variables('factoryId'), '/pipelines/InputLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAIN_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_MAIN_BASE_COMMERCIAL",
						"description": "PL main for : \nPREPARATION_ECC_AVOIR\nDSCTEREVA2\nModel_PARTEDIS2\nVanMarkes\nModelVenteDirecte\nUNION_BASE_COMMERCIAL\nPOST_UNION_FINISH\nATC_PERFORMANCE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MAIN_BASE_COMMERCIALE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "MAIN_LOGISTIQUE1",
						"description": "NomenclatureProduit\nNomenclatureClient\nTDataSD",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAIN_LOGISTIQUE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "CONTRAT DISTRIBUTION",
						"description": "CALCUL SEUIL\nCALCUL REMUNERATION\nCONTRAT DISTRIBUTION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CONTRAT_DISTRIBUTION",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_SUIVIE_OFFRE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MAIN_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SUIVIE_OFFRE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"folder": {
					"name": "tutoriel"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-04T10:59:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DSC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DSC_PREPARATION",
						"description": "Input : \nDSCINPUT\norganisation\nventesDirectes\nOutput : \noutputNullQuantity\norgaNotFound\npreparedDSC\nDSCPieceDetache",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "importDataDSC",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DSC_PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "importDataDSC",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_DSC ",
							"method": "POST",
							"body": {
								"inputContainer": "data-input",
								"inputFolderPath": "Ecoulement/DSC",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/DSC_ECOULEMENT.csv"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T08:09:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DSC_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_OFFRE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"description": "Input : \noffreDiffusInput\noffreChantierInput\nreferentielATCinput\nOutput : \noffreDiffusTemp\nStg_offre_diffus\noffreChantierTemp\nstagingChantier\noffreAtcTemp\n",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "importOffreChantier",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "importOffreDiffus",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "fuzzyjoin",
						"description": "fuzzy join: atc 2020 2021 and  atc affectation",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "PREPARATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "fuzzyjoin",
							"method": "POST",
							"body": {
								"leftfilepath": "Temp/atc_affectation_lower",
								"rightfilepath": "Temp/atc_c2021_lower",
								"leftkey": "Utilisateur",
								"rightkey": "NomATC",
								"outputpath": "Temp/atc_fuzzyjoined.xlsx",
								"containername": "data-warehouse"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FINITION",
						"description": "Input : \noffreInDiffus\nchantier\nOutput : \nstg_offre\n",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FINITION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "importOffreDiffus",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_OFFRE_DIFFUS",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Offre/OffresBAD&BAC/Diffus",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/ALL_OFFRE_DIFFUS.csv"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importOffreChantier",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_OFFRE_CHANTIER",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Offre/OffresBAD&BAC/Chantier",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/ALL_OFFRE_CHANTIER.csv"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "REFERENTIEL"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-13T07:55:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TEREVA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"description": "Input : \necoulement\nTEREVA_ORGANISATION\nventesDirectes\nOutput : \nTEREVA_EC_PREPARED\nTEREVA_qtenull\nTEREVA orga notfound",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TEREVA_PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-28T07:36:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TEREVA_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ATC_PERFORMANCE_ET_CLIENT_SAP_copy1",
						"description": "Input : \nBASE_AVANT_TRAITEMENT_ATC\nsecteurFictif\nOutput : \nbaseCommercialOut",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ATC_PERFORMANCE_ET_CLIENT_SAP",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ATC_PERFORMANCE_ET_CLIENT_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "importDataTereva",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_TEREVA",
							"method": "POST",
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/Téréva",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/TEREVA_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "tutoriel"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"description": "Input : \noffreDiffusInput\noffreChantierInput\nreferentielATCinput\nOutput : \noffreDiffusTemp\nStg_offre_diffus\noffreChantierTemp\nstagingChantier\noffreAtcTemp\n",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "tutoriel"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testLongAF_offre')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "importOffreDiffus",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "importOffreChantier",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_OFFRE_DIFFUS",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Offre/OffresBAD&BAC/Diffus",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/ALL_OFFRE_DIFFUS.csv"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "importOffreChantier",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_OFFRE_CHANTIER",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Offre/OffresBAD&BAC/Chantier",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/ALL_OFFRE_CHANTIER.csv"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionPremium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "tutoriel"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ALL_OFFRE_CHANTIER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ALL_OFFRE_CHANTIER.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix client",
						"type": "String"
					},
					{
						"name": "Prix négoce",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Typologie projet",
						"type": "String"
					},
					{
						"name": "DateValidite",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ALL_OFFRE_DIFFUS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ALL_OFFRE_DIFFUS.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "DateOffre",
						"type": "String"
					},
					{
						"name": "Date Prev Cde",
						"type": "String"
					},
					{
						"name": "Code projet",
						"type": "String"
					},
					{
						"name": "Projet",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "CP projet",
						"type": "String"
					},
					{
						"name": "Ville projet",
						"type": "String"
					},
					{
						"name": "NbLogement",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Famille",
						"type": "String"
					},
					{
						"name": "Produit",
						"type": "String"
					},
					{
						"name": "Quantité",
						"type": "String"
					},
					{
						"name": "Prix de base",
						"type": "String"
					},
					{
						"name": "Prix DO",
						"type": "String"
					},
					{
						"name": "Prix pro",
						"type": "String"
					},
					{
						"name": "Prix total",
						"type": "String"
					},
					{
						"name": "Numéro interne 1",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Ville client",
						"type": "String"
					},
					{
						"name": "Type financement",
						"type": "String"
					},
					{
						"name": "Numéro interne 2",
						"type": "String"
					},
					{
						"name": "Négoce",
						"type": "String"
					},
					{
						"name": "Ville négoce",
						"type": "String"
					},
					{
						"name": "Statut offre",
						"type": "String"
					},
					{
						"name": "Responsable",
						"type": "String"
					},
					{
						"name": "Groupe",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					},
					{
						"name": "Date de maj statut",
						"type": "String"
					},
					{
						"name": "Numéro avant vente",
						"type": "String"
					},
					{
						"name": "Créateur offre",
						"type": "String"
					},
					{
						"name": "Commentaire interne",
						"type": "String"
					},
					{
						"name": "Offre dérogée",
						"type": "String"
					},
					{
						"name": "Contrat cadre",
						"type": "String"
					},
					{
						"name": "Offre nationale",
						"type": "String"
					},
					{
						"name": "Année Tarif",
						"type": "String"
					},
					{
						"name": "PotentielP1N",
						"type": "String"
					},
					{
						"name": "PotentielP2N",
						"type": "String"
					},
					{
						"name": "PotentielP3N",
						"type": "String"
					},
					{
						"name": "PotentielP4N",
						"type": "String"
					},
					{
						"name": "PotentielP5N",
						"type": "String"
					},
					{
						"name": "PotentielP6N",
						"type": "String"
					},
					{
						"name": "Date de validité",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "CodeATC",
						"type": "String"
					},
					{
						"name": "DEEE",
						"type": "String"
					},
					{
						"name": "OffreSupprimee",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BASE_COMMERCIALE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LEVIER RH"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "BaseCommercialeDTP2.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "canal_distribution_final",
						"type": "String"
					},
					{
						"name": "nom du canal",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre (vente directe)",
						"type": "String"
					},
					{
						"name": "Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Type poste Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Nom du compte",
						"type": "String"
					},
					{
						"name": "EPS_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "EPS_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N1 SAP ",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N2 SAP ",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N1 SAP",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N2 SAP",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DSC_ECOULEMENT.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_ECOULEMENT_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "import ecoulement for tereva",
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TEREVA_ECOULEMENT.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "societe",
						"type": "String"
					},
					{
						"name": "region_lib",
						"type": "String"
					},
					{
						"name": "sgeo",
						"type": "String"
					},
					{
						"name": "sgeo_lib",
						"type": "String"
					},
					{
						"name": "agence",
						"type": "String"
					},
					{
						"name": "agence_lib",
						"type": "String"
					},
					{
						"name": "dep_ag",
						"type": "String"
					},
					{
						"name": "frs",
						"type": "String"
					},
					{
						"name": "article",
						"type": "String"
					},
					{
						"name": "article_lib",
						"type": "String"
					},
					{
						"name": "dm",
						"type": "String"
					},
					{
						"name": "ref_frs",
						"type": "String"
					},
					{
						"name": "vva (m) n",
						"type": "String"
					},
					{
						"name": "vva (m) n-1",
						"type": "String"
					},
					{
						"name": "qte (m) n",
						"type": "String"
					},
					{
						"name": "qte (m) n-1",
						"type": "String"
					},
					{
						"name": "vva (c) n",
						"type": "String"
					},
					{
						"name": "vva (c) n-1",
						"type": "String"
					},
					{
						"name": "qte (c) n",
						"type": "String"
					},
					{
						"name": "qte (c) n-1",
						"type": "String"
					},
					{
						"name": "var. vva (m)",
						"type": "String"
					},
					{
						"name": "var. qte (m)",
						"type": "String"
					},
					{
						"name": "var. vva (c)",
						"type": "String"
					},
					{
						"name": "var. qte (c)",
						"type": "String"
					},
					{
						"name": "path",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "base commerciale.csv",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal du client livré",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "ID marque",
						"type": "String"
					},
					{
						"name": "ID canal de distribution",
						"type": "String"
					},
					{
						"name": "Nom du canal",
						"type": "String"
					},
					{
						"name": "Diffus/Chantier",
						"type": "String"
					},
					{
						"name": "document_vente (vente directe)",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre (vente directe)",
						"type": "String"
					},
					{
						"name": "Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Type poste Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Numéro offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Motif commande (vente directe)",
						"type": "String"
					},
					{
						"name": "Type de facture (vente directe)",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Nom du compte",
						"type": "String"
					},
					{
						"name": "EPS_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "EPS_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N1 SAP ",
						"type": "String"
					},
					{
						"name": "Client Direct - Hiérarchie N2 SAP ",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N1 SAP",
						"type": "String"
					},
					{
						"name": "Client Indirect - Hiérarchie N2 SAP",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/avoir')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "test_base_commercial"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "T_DSC",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Avoirs.xlsx",
						"folderPath": "Avoir",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "Code_depot",
						"type": "String"
					},
					{
						"name": "Depot",
						"type": "String"
					},
					{
						"name": "NoFrs",
						"type": "String"
					},
					{
						"name": "FOUR2",
						"type": "String"
					},
					{
						"name": "C_Four",
						"type": "String"
					},
					{
						"name": "Lib_Four",
						"type": "String"
					},
					{
						"name": "Categorie",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Financement",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "Date_Debut",
						"type": "String"
					},
					{
						"name": "Date_Fin",
						"type": "String"
					},
					{
						"name": "NoArtDSC",
						"type": "String"
					},
					{
						"name": "LibArt",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "LIB AGENCE",
						"type": "String"
					},
					{
						"name": "Qté_Ini",
						"type": "String"
					},
					{
						"name": "Solde_Qte",
						"type": "String"
					},
					{
						"name": "Qte_Tot",
						"type": "String"
					},
					{
						"name": "Qte_Retenue",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "NomCli",
						"type": "String"
					},
					{
						"name": "PRR",
						"type": "String"
					},
					{
						"name": "PRS_ligne_BL",
						"type": "String"
					},
					{
						"name": "PA_Ref",
						"type": "String"
					},
					{
						"name": "PA_D",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Ecart",
						"type": "String"
					},
					{
						"name": "Aide",
						"type": "String"
					},
					{
						"name": "Aide_Retenue",
						"type": "String"
					},
					{
						"name": "Aide_Validée_VGF",
						"type": "String"
					},
					{
						"name": "Date_Num",
						"type": "String"
					},
					{
						"name": "P_Fact",
						"type": "String"
					},
					{
						"name": "Clé_Offre_Article",
						"type": "String"
					},
					{
						"name": "Motif_Commentaire",
						"type": "String"
					},
					{
						"name": "Qté_Campagne",
						"type": "String"
					},
					{
						"name": "Prix_Campagne",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "Montant_Avoir",
						"type": "String"
					},
					{
						"name": "NoDocRefac",
						"type": "String"
					},
					{
						"name": "NoLigneDocRefac",
						"type": "String"
					},
					{
						"name": "Contrôle",
						"type": "String"
					},
					{
						"name": "Date_Ctrl",
						"type": "String"
					},
					{
						"name": "Code_Motif_Refus",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "ValidéPar",
						"type": "String"
					},
					{
						"name": "DateAjout",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/offre_et_baseCom_sans_matching')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ATC_PERFORMANCE_ET_CLIENT_SAP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BASE_AVANT_TRAITEMENT_ATC",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "SECTEUR_FICTIF",
								"type": "DatasetReference"
							},
							"name": "secteurFictif"
						},
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "ExtractionSAP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "baseCommercialOut",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "atcOffreINNER"
						},
						{
							"name": "atcOffreFULLLEFT"
						},
						{
							"name": "atcOffreOUTERLEFT"
						},
						{
							"name": "updateATCOffre"
						},
						{
							"name": "nullToEmpty"
						},
						{
							"name": "atcOffreTraite"
						},
						{
							"name": "atcCorrigeINNER"
						},
						{
							"name": "atcCorrigeFULLLEFT"
						},
						{
							"name": "atcCorrigeOUTERLEFT"
						},
						{
							"name": "deleteSecteurColumn"
						},
						{
							"name": "updateATCCorrige"
						},
						{
							"name": "atcCorrigetraite"
						},
						{
							"name": "deleteSecteurColumn2"
						},
						{
							"name": "atcPerformance"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "JoinClientDirect"
						},
						{
							"name": "RenameSAP"
						},
						{
							"name": "JoinClientIndirect"
						},
						{
							"name": "MapDrifted2",
							"description": "Crée un mappage explicite pour chaque colonne dérivée"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "AgregateClient"
						},
						{
							"name": "RenameClientDirect"
						},
						{
							"name": "RenameClientIndirect"
						},
						{
							"name": "columnDPT2"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "endSecteurFictifs"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal du client livré} as string,\n\t\tmarque as string,\n\t\t{ID marque} as string,\n\t\t{ID canal de distribution} as string,\n\t\t{Nom du canal} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{document_vente (vente directe)} as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\t{Numéro offre} as string,\n\t\t{ATC Corrigé (vente directe)} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande (vente directe)} as string,\n\t\t{Type de facture (vente directe)} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\tNoATC as string,\n\t\tATC as string,\n\t\tDRCde as string,\n\t\tFirstName as string,\n\t\tLastName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> secteurFictif\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionSAP\nnullToEmpty, endSecteurFictifs join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcOffreINNER\nbaseCommerciale, endSecteurFictifs join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcOffreFULLLEFT\natcOffreFULLLEFT filter(isNull(NoATC)) ~> atcOffreOUTERLEFT\natcOffreINNER derive({ATC fictif} = 1) ~> updateATCOffre\nbaseCommerciale derive({ATC offre} = iif(isNull({ATC offre}), \"\", {ATC offre}),\n\t\t{ATC Corrigé (vente directe)} = iif(isNull({ATC Corrigé (vente directe)}), \"\", {ATC Corrigé (vente directe)})) ~> nullToEmpty\nupdateATCOffre, atcOffreOUTERLEFT union(byName: true)~> atcOffreTraite\ndeleteSecteurColumn, endSecteurFictifs join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcCorrigeINNER\ndeleteSecteurColumn, endSecteurFictifs join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcCorrigeFULLLEFT\natcCorrigeFULLLEFT filter(isNull(NoATC)) ~> atcCorrigeOUTERLEFT\natcOffreTraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC fictif},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn\natcCorrigeINNER derive({ATC fictif} = 1) ~> updateATCCorrige\natcCorrigeOUTERLEFT, updateATCCorrige union(byName: true)~> atcCorrigetraite\nSelect1 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{ATC fictif},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn2\ndeleteSecteurColumn2 derive({ATC Performance} = iif(!isNull({ATC Corrigé (vente directe)}) && {ATC fictif}!=1, {ATC Corrigé (vente directe)}, iif(!isNull({ATC offre}) && {ATC fictif}!=1, {ATC offre}, {ATC livré}))) ~> atcPerformance\natcCorrigetraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\natcPerformance select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2, RenameClientDirect join({Code client livré} == {Client Direct},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinClientDirect\nMapDrifted2 select(mapColumn(\n\t\t{Client Direct} = Client,\n\t\t{Client Direct - Hiérarchie N1 SAP } = {_c4},\n\t\t{Client Direct - Hiérarchie N2 SAP } = {_c6}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameSAP\nSelect3, RenameClientIndirect join({Numéro client indirect} == {Client Indirect},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinClientIndirect\nExtractionSAP derive({_c2} = toString(byName('_c2')),\n\t\t{_c4} = toString(byName('_c4')),\n\t\t{_c6} = toString(byName('_c6')),\n\t\t{_c8} = toString(byName('_c8')),\n\t\t{_c10} = toString(byName('_c10')),\n\t\t{_c18} = toString(byName('_c18')),\n\t\t{_c22} = toString(byName('_c22')),\n\t\t{_c24} = toString(byName('_c24')),\n\t\t{_c26} = toString(byName('_c26')),\n\t\t{_c28} = toString(byName('_c28')),\n\t\t{_c30} = toString(byName('_c30')),\n\t\t{_c32} = toString(byName('_c32')),\n\t\t{_c34} = toString(byName('_c34')),\n\t\t{_c36} = toString(byName('_c36')),\n\t\t{_c39} = toString(byName('_c39')),\n\t\t{_c41} = toString(byName('_c41')),\n\t\t{_c43} = toString(byName('_c43'))) ~> MapDrifted2\nJoinClientDirect select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nDerivedColumn2 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nRenameSAP aggregate(groupBy({Client Direct}),\n\t{Client Direct - Hiérarchie N1 SAP } = first({Client Direct - Hiérarchie N1 SAP }),\n\t\t{Client Direct - Hiérarchie N2 SAP } = first({Client Direct - Hiérarchie N2 SAP })) ~> AgregateClient\nAgregateClient select(mapColumn(\n\t\t{Client Direct},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameClientDirect\nAgregateClient select(mapColumn(\n\t\t{Client Indirect} = {Client Direct},\n\t\t{Client Indirect - Hiérarchie N1 SAP} = {Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Indirect - Hiérarchie N2 SAP} = {Client Direct - Hiérarchie N2 SAP }\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameClientIndirect\nSelect4 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal} = {Code postal du client livré},\n\t\tmarque,\n\t\tmarque_code = {ID marque},\n\t\tcanal_distribution_final = {ID canal de distribution},\n\t\t{nom du canal} = {Nom du canal},\n\t\tcanal_final = {Diffus/Chantier},\n\t\tdocument_vente = {document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\tno_offre = {Numéro offre},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande} = {Motif commande (vente directe)},\n\t\t{Type de facture} = {Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnDPT2\ncolumnDPT2 derive(yearmonth = year+month,\n\t\t{ATC Corrigé} = {ATC Performance}) ~> DerivedColumn1\nJoinClientIndirect derive({Diffus/Chantier} = iif({ID canal de distribution}==\"43\", \"Chantier\", \"Diffus\")) ~> DerivedColumn2\nAggregate1 select(mapColumn(\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endSecteurFictifs\nsecteurFictif aggregate(groupBy(NoATC),\n\tATC = last(ATC),\n\t\tDRCde = last(DRCde),\n\t\tFirstName = last(FirstName),\n\t\tLastName = last(LastName)) ~> Aggregate1\nSelect4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\t{Code postal} as string\n\t),\n\tpartitionFileNames:['base commerciale.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['BaseCommercialeDTP2.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCTEREVA2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InEcoulementWithIndexDSC",
								"type": "DatasetReference"
							},
							"name": "ecoulementwithIndex"
						},
						{
							"dataset": {
								"referenceName": "In_avoirwithIndex",
								"type": "DatasetReference"
							},
							"name": "avoirwithIndex"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "referentielATC"
						},
						{
							"dataset": {
								"referenceName": "inFacturationDSC",
								"type": "DatasetReference"
							},
							"name": "facturation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outdsctereva2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "avoirUnMappedutput",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "fullLeft"
						},
						{
							"name": "caFinal"
						},
						{
							"name": "RenameLeft"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "columnChoiceEcoulement"
						},
						{
							"name": "renameAvoir"
						},
						{
							"name": "inner"
						},
						{
							"name": "canal"
						},
						{
							"name": "idCanal"
						},
						{
							"name": "idCanalFinal"
						},
						{
							"name": "Select1"
						},
						{
							"name": "uniqueOffre"
						},
						{
							"name": "fullLeftOffre"
						},
						{
							"name": "EndInner",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "Union1"
						},
						{
							"name": "canalFinal"
						},
						{
							"name": "keepColumns"
						},
						{
							"name": "atcKeepingColumn"
						},
						{
							"name": "atcNotNull"
						},
						{
							"name": "uniqueATC"
						},
						{
							"name": "fullLeftATC"
						},
						{
							"name": "renameColumn"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "aggFacturation"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "innerFacturation"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "leftFacturation"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "facturationOnly"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "EndunJoinedFacturation"
						},
						{
							"name": "endInerEcouFact"
						},
						{
							"name": "Union2"
						},
						{
							"name": "endDecrementation"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Select5"
						},
						{
							"name": "DerivedColumn5"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Aggregate4"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Aggregate5"
						},
						{
							"name": "Filter4"
						},
						{
							"name": "DerivedColumn6"
						},
						{
							"name": "Aggregate6"
						},
						{
							"name": "facturationColFilter"
						},
						{
							"name": "Aggregate7"
						},
						{
							"name": "DerivedColumn7"
						},
						{
							"name": "Join1"
						},
						{
							"name": "ecoulementOnlt"
						},
						{
							"name": "Select7"
						},
						{
							"name": "DerivedColumn8"
						},
						{
							"name": "endunJoinedEcoulement"
						},
						{
							"name": "Union4"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Filter6"
						},
						{
							"name": "Select8"
						},
						{
							"name": "Filter7"
						},
						{
							"name": "Aggregate8"
						},
						{
							"name": "Filter8"
						},
						{
							"name": "Aggregate9"
						},
						{
							"name": "Filter9"
						},
						{
							"name": "Aggregate10"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulementwithIndex\nsource(output(\n\t\tMois_Selection as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tdd as string,\n\t\tindexcols2 as string,\n\t\tqte_avoir as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoirwithIndex\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tNbLogement as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Créateur offre} as string,\n\t\tSource as string,\n\t\tUserLowerCase as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{Cl� R�f�rentiel} as string,\n\t\t{Recherche Cl� EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal d�but} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{D�partement} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATC\nsource(output(\n\t\t{Org commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{recept de march} as string,\n\t\t{Destinataire facture} as string,\n\t\t{type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tarticle as string,\n\t\tprix_unitaire_std as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> facturation\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nRenameLeft derive(ca_final = toDouble(ca_ecoulement),\n\t\tqt_final = toInteger(qte_ecc ),\n\t\tdata_origin = \"ecoulement\",\n\t\tid_canal_final = 42) ~> caFinal\nouterLeft select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameLeft\nfullLeft filter(isNull(renameAvoir@indexcols2)) ~> outerLeft\necoulementwithIndex select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2,\n\t\tqte_ecc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoiceEcoulement\navoirwithIndex select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth,\n\t\tPOSid,\n\t\tindexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameAvoir\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inner\ninner derive(canal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\", \n    iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\"))) ~> canal\ncanal derive(id_canal_final = iif(canal==\"FP\", 45, \n    iif(canal==\"FS\", 51, \n    iif(canal==\"FC\", 43, 42))),\n\t\tca_final = toDouble(qte_avoir)*toDouble(ca_avoir),\n\t\tqt_final = toInteger(qte_avoir)) ~> idCanal\nidCanal derive(canal_final = iif(id_canal_final==43, \"Chantier\", 'Diffus'),\n\t\tdata_origin = \"ecoulement_retraité\") ~> idCanalFinal\nstgOffre select(mapColumn(\n\t\tNoOffre = Offre,\n\t\t{ATC Performance} = CodeATC,\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(NoOffre,\n\t\t{ATC Performance}),\n\tCanal = max(Canal)) ~> uniqueOffre\nidCanalFinal, uniqueOffre join(renameAvoir@NoOffre == uniqueOffre@NoOffre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftOffre\nSelect2 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndInner\ncaFinal, EndInner union(byName: true)~> Union1\nUnion1 derive(canal_final = iif(id_canal_final==43, \"Chantier\", \"Diffus\")) ~> canalFinal\nSelect3 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement = qte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id = marque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> keepColumns\nreferentielATC select(mapColumn(\n\t\tMarque,\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Canal final},\n\t\tcode_postal_atc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> atcKeepingColumn\natcKeepingColumn filter(!isNull(ATC)) ~> atcNotNull\natcNotNull aggregate(groupBy(code_postal_atc,\n\t\t{Canal final},\n\t\tMarque),\n\tATC = max(ATC),\n\t\tNomATC = max(NomATC),\n\t\tMatricule = max(Matricule)) ~> uniqueATC\nkeepColumns, uniqueATC join({Code postal} == code_postal_atc\n\t&& canal_final == {Canal final}\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftATC\nSelect4 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameColumn\nfacturation derive(qt_cd_e = toInteger(qt_cd_e),\n\t\tca_cd_ = toInteger(qt_factur_e),\n\t\tqt_livr_e = toInteger(qt_livr_e),\n\t\tqt_factur_e = toInteger(qt_factur_e),\n\t\tca_livr_ = toDouble(ca_livr_),\n\t\tca_factur_ = toDouble(ca_factur_)) ~> typeCaste\ntypeCaste aggregate(groupBy(reference,\n\t\tHubSAPid,\n\t\tyearmonth),\n\tqt_cd_e = sum(qt_cd_e),\n\t\tca_cd_ = sum(ca_cd_),\n\t\tqt_livr_e = sum(qt_livr_e),\n\t\tca_livr_ = sum(ca_livr_),\n\t\tqt_factur_e = sum(qt_factur_e),\n\t\tca_factur_ = sum(ca_factur_),\n\t\t{Canal distribution} = first({Canal distribution}),\n\t\t{Org commerciale} = first({Org commerciale}),\n\t\t{recept de march} = first({recept de march})) ~> Aggregate2\nDerivedColumn2 select(mapColumn(\n\t\tarticle = reference,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final = {Canal distribution},\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e = qt_cd_e,\n\t\tSum_ca_cd_ = ca_cd_,\n\t\tSum_qt_livr_e = qt_livr_e,\n\t\tSum_ca_livr_ = ca_livr_,\n\t\tSum_qt_factur_e = qt_factur_e,\n\t\tSum_ca_factur_ = ca_factur_,\n\t\ttempOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> aggFacturation\nkeepColumns aggregate(groupBy(yearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tdistributeur),\n\tSum_ca_ecoulement = sum(toDouble(ca_ecoulement)),\n\t\tSum_qte_ecoulement = sum(toDouble(qte_ecoulement))) ~> Aggregate3\nAggregate3, aggFacturation join(reference == article\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerFacturation\nfullLeftOffre select(mapColumn(\n\t\tyearmonth = columnChoiceEcoulement@yearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tqte_ecc,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = columnChoiceEcoulement@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tindexcols2 = columnChoiceEcoulement@indexcols2,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tcanal = canal@canal,\n\t\tca_final,\n\t\tqt_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tdata_origin,\n\t\t{ATC Performance},\n\t\tNoOffre = renameAvoir@NoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\ncanalFinal select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tqte_ecc,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tNoOffre,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_avoir,\n\t\tcanal,\n\t\tcanal_final,\n\t\t{ATC Performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nfullLeftATC select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\t{ATC Performance},\n\t\tcode_postal_atc,\n\t\t{Canal final},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nDerivedColumn3, aggFacturation join(reference == article\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> leftFacturation\ninnerFacturation derive(qt_plateforme_final = toDouble(Sum_qt_factur_e) - toDouble(Sum_qte_ecoulement),\n\t\tca_plateforme_final = Sum_ca_factur_ -  Sum_ca_ecoulement,\n\t\tdata_origin = \"facturation decrementé\") ~> DerivedColumn1\nAggregate2 derive(tempOrigin = \"facturation\",\n\t\t{Canal distribution} = 42) ~> DerivedColumn2\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> DerivedColumn3\nleftFacturation filter(isNull(DerivedColumn3@tempOrigin)) ~> facturationOnly\nfacturationColFilter derive(qt_plateforme_final = toDouble(Sum_qt_factur_e),\n\t\tca_plateforme_final = Sum_ca_factur_,\n\t\tdata_origin = \"facturation\",\n\t\tmarque_name = iif({Org commerciale}==\"1604\", \"SaunierDuval\", \"Vaillant\")) ~> DerivedColumn4\nDerivedColumn4 select(mapColumn(\n\t\treference = article,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code = {Org commerciale},\n\t\tmarque_name,\n\t\tPOSSAMidString = {recept de march},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EndunJoinedFacturation\nDerivedColumn1 select(mapColumn(\n\t\tyearmonth = Aggregate3@yearmonth,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tid_canal_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\ttempOrigin,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endInerEcouFact\nEndunJoinedFacturation, endInerEcouFact union(byName: true)~> Union2\nDerivedColumn6 select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tid_canal_final,\n\t\tmarque_code,\n\t\tmarque_name,\n\t\tPOSSAMidString,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tdata_origin,\n\t\tmarque_id = marque_code,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDecrementation\nrenameColumn, endDecrementation union(byName: true)~> Union3\nDerivedColumn5 select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tNoOffre,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tCompanyId,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tid_canal_final,\n\t\t{Canal final},\n\t\t{ATC Performance},\n\t\t{code postal} = DerivedColumn5@{code postal},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nUnion3 derive(marque_id = coalesce(marque_id , marque_code),\n\t\tid_canal_final = coalesce(id_canal_final ),\n\t\t{Canal final} = coalesce({Canal final} , canal_final),\n\t\t{code postal} = coalesce(code_postal_atc , {Code postal})) ~> DerivedColumn5\naggFacturation filter(toInteger({recept de march})==16012598 && toInteger(article)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter2\nFilter2 aggregate(sq = sum(Sum_qt_factur_e)) ~> Aggregate4\nendDecrementation filter(toInteger(HubSAPid)==16012598 && toInteger(reference)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter3\nFilter3 aggregate(sqte = sum(toDouble(qt_plateforme_final))) ~> Aggregate5\nEndunJoinedFacturation filter(toInteger(HubSAPid)==16012598 && toInteger(reference)==10017388 && instr(yearmonth, \"2020\")>0) ~> Filter4\nUnion4 derive(id_canal_final = toInteger(id_canal_final)) ~> DerivedColumn6\nFilter4 aggregate(column1 = sum( qt_plateforme_final )) ~> Aggregate6\nfacturationOnly select(mapColumn(\n\t\treference,\n\t\tdistributeur,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\ttempOrigin = DerivedColumn3@tempOrigin,\n\t\tarticle,\n\t\tHubSAPid = aggFacturation@HubSAPid,\n\t\tyearmonth = aggFacturation@yearmonth,\n\t\tid_canal_final,\n\t\t{Org commerciale},\n\t\t{recept de march},\n\t\tSum_qt_cd_e,\n\t\tSum_ca_cd_,\n\t\tSum_qt_livr_e,\n\t\tSum_ca_livr_,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> facturationColFilter\nendInerEcouFact aggregate(cons = sum(qt_plateforme_final)) ~> Aggregate7\nAggregate3 derive(tempOrigin = \"ecoulement\") ~> DerivedColumn7\nDerivedColumn7, aggFacturation join(reference == article\n\t&& Aggregate3@HubSAPid == aggFacturation@HubSAPid\n\t&& Aggregate3@yearmonth == aggFacturation@yearmonth,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(isNull(aggFacturation@tempOrigin)) ~> ecoulementOnlt\necoulementOnlt select(mapColumn(\n\t\tyearmonth = Aggregate3@yearmonth,\n\t\treference,\n\t\tHubSAPid = Aggregate3@HubSAPid,\n\t\tdistributeur,\n\t\tca_plateforme_final = Sum_ca_ecoulement,\n\t\tqt_plateforme_final = Sum_qte_ecoulement\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nSelect7 derive(data_origin = \"decrementation ecoulement sans matching\",\n\t\tca_plateforme_final = -1*toDouble(ca_plateforme_final),\n\t\tqt_plateforme_final = -toDouble(qt_plateforme_final)) ~> DerivedColumn8\nDerivedColumn8 select(mapColumn(\n\t\tyearmonth,\n\t\treference,\n\t\tHubSAPid,\n\t\tdistributeur,\n\t\tca_plateforme_final,\n\t\tqt_plateforme_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endunJoinedEcoulement\nUnion2, endunJoinedEcoulement union(byName: true)~> Union4\ncolumnChoiceEcoulement, renameAvoir join(columnChoiceEcoulement@indexcols2 == renameAvoir@indexcols2,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join2\nJoin2 filter(isNull(columnChoiceEcoulement@indexcols2)) ~> Filter6\nFilter6 select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid = renameAvoir@HubSAPid,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth = renameAvoir@yearmonth,\n\t\tPOSid,\n\t\tindexcols2 = renameAvoir@indexcols2,\n\t\tqte_avoir\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select8\nrenameAvoir filter((CompanyId==\"7\") && ({Année}==\"2020\")) ~> Filter7\nFilter7 aggregate(Qte_Validee_VGF = sum(toInteger(qte_avoir))) ~> Aggregate8\nSelect8 filter((CompanyId==\"7\") && ({Année}==\"2020\")) ~> Filter8\nFilter8 aggregate(columncoll = sum(toInteger(qte_avoir))) ~> Aggregate9\ninner filter(year==\"2020\"&& distributeur==\"DSC\") ~> Filter9\nFilter9 aggregate(column1 = sum(toInteger(qte_avoir))) ~> Aggregate10\nSelect5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['OModelDSC'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nSelect8 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoirUnMapped.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DSC_input",
								"type": "DatasetReference"
							},
							"name": "DSCINPUT"
						},
						{
							"dataset": {
								"referenceName": "dsc_orga",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DSC_PIECE_DETACHEE",
								"type": "DatasetReference"
							},
							"name": "DSCPieceDetache"
						},
						{
							"dataset": {
								"referenceName": "DSC_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "outputNullQuantity"
						},
						{
							"dataset": {
								"referenceName": "DSC_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "preparedDSC"
						},
						{
							"dataset": {
								"referenceName": "DSC_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "orgaNotFound"
						}
					],
					"transformations": [
						{
							"name": "KeepImportantColumn"
						},
						{
							"name": "notNullQuantity"
						},
						{
							"name": "columnFormat",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "pieceDetache"
						},
						{
							"name": "nullQuantity"
						},
						{
							"name": "notPieceDetache"
						},
						{
							"name": "agenceCodeNotNull"
						},
						{
							"name": "posidNotNull"
						},
						{
							"name": "innerJoinWithOrga"
						},
						{
							"name": "fullLeftJoin"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "InnerVentesDirecte"
						},
						{
							"name": "fullLeftVentesDirectes"
						},
						{
							"name": "removeQuantityVenteDirecte"
						},
						{
							"name": "Select1"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "Select2"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Union1"
						}
					],
					"script": "source(output(\n\t\tProp_0 as string,\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as integer,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSCINPUT\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as integer,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nDSCINPUT select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> KeepImportantColumn\ncolumnFormat filter({Quantité en UV BL}!=0) ~> notNullQuantity\nKeepImportantColumn derive({Quantité en UV BL} = toDouble({Quantité en UV BL}),\n\t\t{Marque Code} = toDouble({Marque Code}),\n\t\tyear = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> columnFormat\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})>0) ~> pieceDetache\ncolumnFormat filter({Quantité en UV BL}==0) ~> nullQuantity\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})==0) ~> notPieceDetache\nnotPieceDetache filter(!isNull({Agence Code})) ~> agenceCodeNotNull\nAggregate1 filter(!isNull(POSid)) ~> posidNotNull\nagenceCodeNotNull, posidNotNull join(toFloat({Agence Code}) == toFloat(POSid),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerJoinWithOrga\nagenceCodeNotNull, posidNotNull join({Agence Code} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftJoin\nfullLeftJoin filter(!isNull({Agence Code})) ~> leftOuter\nventesDirectes select(mapColumn(\n\t\tyearmonth_right = yearmonth,\n\t\tArticle_right = Article,\n\t\t{Code client_right} = {Code client},\n\t\t{Qté vente directe} = {Qt� vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\ninnerJoinWithOrga, RenameColumn join(yearmonth == yearmonth_right\n\t&& {Référence Article Fournisseur} == Article_right\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerVentesDirecte\ninnerJoinWithOrga, RenameColumn join(yearmonth == yearmonth_right\n\t&& {Référence Article Fournisseur} == Article_right\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftVentesDirectes\nInnerVentesDirecte derive({Quantité en UV BL} = {Quantité en UV BL}-toDouble({Qté vente directe})) ~> removeQuantityVenteDirecte\nremoveQuantityVenteDirecte select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\tBrandID,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nfullLeftVentesDirectes filter(isNull(yearmonth_right) || isNull(Article_right) || isNull({Code client_right})) ~> outerLeft\nouterLeft select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nUnion1 select(mapColumn(\n\t\tmarque_file = {Marque DESC},\n\t\tsous_famille = {Sous Famille},\n\t\treference = {Référence Article Fournisseur},\n\t\tagence_code = {Agence Code},\n\t\tdepartement_id = {Département ID},\n\t\tqte_ecoulement = {Quantité en UV BL},\n\t\tyearmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nSelect1 derive(departement_id = toDouble(''),\n\t\tprix_unitaire_std = toDouble(''),\n\t\tdistributeur = \"DSC\") ~> Addcolumn\norganisation aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tPOSSAMidString = first(POSSAMidString),\n\t\tHubSAPid = first(HubSAPid),\n\t\tBrandID = first(BrandID)) ~> Aggregate1\nAddcolumn, Select2 union(byName: true)~> Union1\npieceDetache sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_PIECE_DETACHEE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DSCPieceDetache\nnullQuantity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputNullQuantity\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string\n\t),\n\tpartitionFileNames:['DSC_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> preparedDSC\nleftOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> orgaNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DSC_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LEVIER_RH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "RH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "dataCommerciale"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "PLATEFORMES"
						},
						{
							"dataset": {
								"referenceName": "REFERENTIEL_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "levierPerformance"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_RH",
								"type": "DatasetReference"
							},
							"name": "output"
						},
						{
							"dataset": {
								"referenceName": "TEMP_LEVIER_PERFORMANCE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "cleansingInput"
						},
						{
							"name": "cleansingPlateformes"
						},
						{
							"name": "innerPlateformes"
						},
						{
							"name": "innerTypeDeVente"
						},
						{
							"name": "fullLeftPlateforme"
						},
						{
							"name": "outerLeftPlateforme"
						},
						{
							"name": "Select1"
						},
						{
							"name": "leftTypeDeVente"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Rename"
						},
						{
							"name": "typeParse"
						},
						{
							"name": "ATCandDistributeurNotNull"
						},
						{
							"name": "newColumn"
						},
						{
							"name": "RecordID"
						},
						{
							"name": "Select3"
						},
						{
							"name": "YEARFILTER"
						},
						{
							"name": "splitting"
						},
						{
							"name": "FlattenHierarchie"
						},
						{
							"name": "FlattenMarque"
						},
						{
							"name": "FlattenCanal"
						},
						{
							"name": "lenHierarchie3"
						},
						{
							"name": "innerLevier"
						},
						{
							"name": "Select4"
						},
						{
							"name": "levierCA"
						},
						{
							"name": "Pivot1"
						},
						{
							"name": "levierQA"
						},
						{
							"name": "Pivot2"
						},
						{
							"name": "Union2"
						},
						{
							"name": "lenHierarchieNot3"
						},
						{
							"name": "innerLevier2"
						},
						{
							"name": "levierQA2"
						},
						{
							"name": "Pivot3"
						},
						{
							"name": "levierCA2"
						},
						{
							"name": "Pivot4"
						},
						{
							"name": "Union3"
						},
						{
							"name": "Union4"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "libelleLevier"
						},
						{
							"name": "uniqueLevier"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10000,\n\tignoreNoFilesFound: false) ~> dataCommerciale\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10000,\n\tignoreNoFilesFound: false) ~> PLATEFORMES\nsource(output(\n\t\t{Année} as string,\n\t\tDocumentation as string,\n\t\tMarque as string,\n\t\tCible as string,\n\t\t{Périmètre} as string,\n\t\tLevier as string,\n\t\tCanal as string,\n\t\t{Hiérarchie inclues} as string,\n\t\t{Hiérarchies exclues} as string,\n\t\tType as string,\n\t\t{Valeur Annuelle} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> levierPerformance\ndataCommerciale filter(instr(lower({origine de la ligne}), \"ecoulement\") > 0 || lower({origine de la ligne}) == \"facturation avec matching\") ~> Filter1\nSelect4 derive(HubSAPid = trim(HubSAPid, \" \")) ~> cleansingInput\nPLATEFORMES derive(HubSAPid = trim(HubSAPid, \" \")) ~> cleansingPlateformes\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerPlateformes\ninnerPlateformes derive({Type de vente} = WholeSalerID) ~> innerTypeDeVente\ncleansingInput, cleansingPlateformes join(cleansingInput@HubSAPid == cleansingPlateformes@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftPlateforme\nfullLeftPlateforme filter(isNull(cleansingPlateformes@HubSAPid)) ~> outerLeftPlateforme\nouterLeftPlateforme select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque = marque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive({Type de vente} = \"Ventes directes\") ~> leftTypeDeVente\nSelect2, leftTypeDeVente union(byName: true)~> Union1\ninnerTypeDeVente select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid = cleansingInput@HubSAPid,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tmarque,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation = N5LocalDesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nUnion1 select(mapColumn(\n\t\tdistributeur,\n\t\tdata_origin,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tcanal_jointure = canal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_final,\n\t\tPOSSAMidString,\n\t\tmarque_name,\n\t\tno_offre,\n\t\tHierarchiegroupe,\n\t\tHierarchielocale,\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation,\n\t\tN2GroupeDesignation,\n\t\tN3GroupeDesignation,\n\t\tN4GroupeDesignation,\n\t\tN5GroupeDesignation,\n\t\tN6GroupeDesignation,\n\t\tN7GroupeDesignation,\n\t\tN1LocalDesignation,\n\t\tN2LocalDesignation,\n\t\tN3LocalDesignation,\n\t\tN4LocalDesignation,\n\t\tN6LocalDesignation,\n\t\tN7LocalDesignation,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tATC,\n\t\tATC1,\n\t\tATC2,\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tdesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\t{Type de vente},\n\t\tOrgCm = marque\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nRename derive({Canal distribution} = toInteger(canal_jointure),\n\t\tid_canal_final = toInteger(canal_jointure),\n\t\tcanal = toInteger(canal_jointure),\n\t\tid_canal = toInteger(canal_jointure),\n\t\t{Canal Final} = toInteger(canal_jointure)) ~> typeParse\ntypeParse filter(!isNull(ATC) && !isNull(distributeur)) ~> ATCandDistributeurNotNull\nFilter3 derive({diffus/chantier} = trim(split(Cible, \" \")[2], \" \"),\n\t\tID_KPI = \"Sum_XRow_\"+toString(RecordID)) ~> newColumn\nuniqueLevier keyGenerate(output(RecordID as long),\n\tstartAt: 1L) ~> RecordID\nnewColumn select(mapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie = {Hiérarchie inclues},\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nlevierPerformance filter({Année}==\"2020\") ~> YEARFILTER\nSelect3 derive(Marque = split(Marque, \".\"),\n\t\tCanal = split(Canal, \",\"),\n\t\tHierarchie = split(Hierarchie, \",\")) ~> splitting\nFlattenCanal foldDown(unroll(Hierarchie),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenHierarchie\nsplitting foldDown(unroll(Marque),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenMarque\nFlattenMarque foldDown(unroll(Canal),\n\tmapColumn(\n\t\t{Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\tHierarchie,\n\t\tType,\n\t\t{Libellé levié},\n\t\t{diffus/chantier},\n\t\tID_KPI,\n\t\t{Valeur Annuelle}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenCanal\nFlattenHierarchie filter(length(Hierarchie)==3) ~> lenHierarchie3\nATCandDistributeurNotNull, lenHierarchie3 join(OrgCm == Marque\n\t&& lower(canal_final) == {diffus/chantier}\n\t&& canal_jointure == FlattenHierarchie@Canal\n\t&& N2locale == Hierarchie\n\t&& year == {Année},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerLevier\nFilter1 select(mapColumn(\n\t\tdistributeur = {plateforme/vente directe},\n\t\tdata_origin = {origine de la ligne},\n\t\treference = {code produit},\n\t\tyearmonth,\n\t\tHubSAPid = {code client plateforme livree},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tqt_final = quantite,\n\t\tca_final = ca,\n\t\tcanal_final,\n\t\tPOSSAMidString = {Code client livré},\n\t\tmarque_name = marque,\n\t\tno_offre,\n\t\tHierarchiegroupe = {Hiérarchgroupe},\n\t\tHierarchielocale = {Hiérarchlocale},\n\t\tN2groupe,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN1GroupeDesignation = N1groupedesignation,\n\t\tN2GroupeDesignation = N2groupedesignation,\n\t\tN3GroupeDesignation = N3groupedesignation,\n\t\tN4GroupeDesignation = N4groupedesignation,\n\t\tN5GroupeDesignation = N5groupedesignation,\n\t\tN6GroupeDesignation = N6groupedesignation,\n\t\tN7GroupeDesignation = N7groupedesignation,\n\t\tN1LocalDesignation = N1localedesignation,\n\t\tN2LocalDesignation = N2localedesignation,\n\t\tN3LocalDesignation = N3localedesignation,\n\t\tN4LocalDesignation = N4localedesignation,\n\t\tN6LocalDesignation = N6localedesignation,\n\t\tN7LocalDesignation = N7localedesignation,\n\t\t{Code postal},\n\t\tmarque = marque_code,\n\t\tATC = {ATC Performance},\n\t\tATC1 = {ATC livré},\n\t\tATC2 = {ATC offre},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\tN1groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\tdocument_vente,\n\t\tN5LocalDesignation = N5localedesignation,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\ninnerLevier filter(Type==\"CA\") ~> levierCA\nlevierCA pivot(groupBy(year,\n\t\tmonth,\n\t\tATC,\n\t\t{Type de vente},\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(ca_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot1\ninnerLevier filter(Type==\"Quantité\") ~> levierQA\nlevierQA pivot(groupBy(year,\n\t\tmonth,\n\t\tATC,\n\t\t{Type de vente},\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(qt_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot2\nPivot1, Pivot2 union(byName: true)~> Union2\nFlattenHierarchie filter(length(Hierarchie)!=3) ~> lenHierarchieNot3\nATCandDistributeurNotNull, lenHierarchieNot3 join(OrgCm == Marque\n\t&& canal_jointure == FlattenHierarchie@Canal\n\t&& lower(canal_final) == {diffus/chantier}\n\t&& N1locale == Hierarchie\n\t&& year == {Année},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerLevier2\ninnerLevier2 filter(Type==\"Quantité\") ~> levierQA2\nlevierQA2 pivot(groupBy(year,\n\t\tmonth,\n\t\tATC,\n\t\t{Type de vente},\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(qt_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot3\ninnerLevier2 filter(Type==\"CA\") ~> levierCA2\nlevierCA2 pivot(groupBy(year,\n\t\tmonth,\n\t\tATC,\n\t\t{Type de vente},\n\t\t{Valeur Annuelle}),\n\tpivotBy(ID_KPI),\n\t{} = sum(toDouble(ca_final)),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot4\nPivot3, Pivot4 union(byName: true)~> Union3\nUnion2, Union3 union(byName: true)~> Union4\nRecordID filter(!isNull(Documentation) || !isNull(Levier)) ~> Filter3\nYEARFILTER derive({Libellé levié} = Levier+\"-\"+Documentation+\" \"+Cible+\" \"+{Périmètre}+\" \"+iif({Valeur Annuelle}==\"YES\", \"Annuel\", \"Mensuel\")) ~> libelleLevier\nlibelleLevier aggregate(groupBy({Année},\n\t\tDocumentation,\n\t\tMarque,\n\t\tCible,\n\t\t{Périmètre},\n\t\tLevier,\n\t\tCanal,\n\t\t{Hiérarchie inclues},\n\t\t{Hiérarchies exclues},\n\t\tType,\n\t\t{Valeur Annuelle}),\n\t{Libellé levié} = max({Libellé levié})) ~> uniqueLevier\nuniqueLevier aggregate(groupBy({Libellé levié}),\n\tcount = count({Libellé levié})) ~> Aggregate1\nUnion4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TEMP_LEVIERS_RH.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['TEMP_LEVIER_PERFORMANCE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BASE_COMMERCIALE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "REFERENTIEL/OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ALL_OFFRE_DIFFUS",
								"type": "DatasetReference"
							},
							"name": "offreDiffusInput"
						},
						{
							"dataset": {
								"referenceName": "ALL_OFFRE_CHANTIER",
								"type": "DatasetReference"
							},
							"name": "offreChantierInput"
						},
						{
							"dataset": {
								"referenceName": "ref_atc_2021",
								"type": "DatasetReference"
							},
							"name": "referentielATCinput"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Stg_offre_diffus",
								"type": "DatasetReference"
							},
							"name": "stagingDiffus"
						},
						{
							"dataset": {
								"referenceName": "Stg_offre_chantier",
								"type": "DatasetReference"
							},
							"name": "stagingChantier"
						},
						{
							"dataset": {
								"referenceName": "offreAtcTemp",
								"type": "DatasetReference"
							},
							"name": "outTemp"
						},
						{
							"dataset": {
								"referenceName": "offreChantierTemp",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "offreDiffusTemp",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "canalDiffus"
						},
						{
							"name": "columnsChoiceDiffus"
						},
						{
							"name": "typeCast",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "canalChantier"
						},
						{
							"name": "columnsChoiceChantier"
						},
						{
							"name": "typeCastChantier"
						},
						{
							"name": "Select1"
						},
						{
							"name": "typeCastATC"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "DerivedColumn3"
						}
					],
					"script": "source(output(\n\t\tProp_0 as string,\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix DO} as string,\n\t\t{Prix pro} as string,\n\t\t{Prix total} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\t{Ville client} as string,\n\t\t{Type financement} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Offre nationale} as string,\n\t\t{Année Tarif} as string,\n\t\tPotentielP1N as string,\n\t\tPotentielP2N as string,\n\t\tPotentielP3N as string,\n\t\tPotentielP4N as string,\n\t\tPotentielP5N as string,\n\t\tPotentielP6N as string,\n\t\t{Date de validité} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tCodeATC as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offreDiffusInput\nsource(output(\n\t\tProp_0 as string,\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix client} as string,\n\t\t{Prix négoce} as string,\n\t\t{Prix total} as string,\n\t\tClient as string,\n\t\t{Type financement} as string,\n\t\t{Ville client} as string,\n\t\t{Numéro interne 1} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Typologie projet} as string,\n\t\tDateValidite as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> offreChantierInput\nsource(output(\n\t\tATC as string,\n\t\tNomATC2 as string,\n\t\t{Plan primes} as string,\n\t\tDR as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\tNomATC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> referentielATCinput\nFilter1 derive(Canal = \"Diffus\",\n\t\t{Référence} = iif(substring({Référence},1,2) == \"00\", substring({Référence},3,length({Référence})-2), {Référence})) ~> canalDiffus\ncanalDiffus select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tCodeATC,\n\t\tcanal = Canal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoiceDiffus\ncolumnsChoiceDiffus derive({Quantité} = toDouble({Quantité}),\n\t\tCodeATC = toDouble(CodeATC),\n\t\tDateOffre = toDate(DateOffre,\"yyyy-mm-dd\")) ~> typeCast\nFilter2 derive(Canal = \"Chantier\",\n\t\t{Référence} = iif(substring({Référence},1,2) == \"00\", substring({Référence},3,length({Référence})-2), {Référence})) ~> canalChantier\ncanalChantier select(mapColumn(\n\t\tDateOffre,\n\t\tNbLogement,\n\t\t{Référence},\n\t\tMarque,\n\t\tProduit,\n\t\t{Quantité},\n\t\t{Numéro interne 2},\n\t\tResponsable,\n\t\tOffre,\n\t\t{Créateur offre},\n\t\tCanal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnsChoiceChantier\ncolumnsChoiceChantier derive(DateOffre = toDate(DateOffre,\"yyyy-mm-dd\"),\n\t\tSource = \"file1\",\n\t\tUserLowerCase = lower(Responsable),\n\t\tNbLogement = toDouble(NbLogement),\n\t\t{Quantité} = toDouble({Quantité}),\n\t\t{Numéro interne 2} = toDouble({Numéro interne 2})) ~> typeCastChantier\nreferentielATCinput select(mapColumn(\n\t\tATC,\n\t\tNomATC,\n\t\t{Plan primes},\n\t\tDR,\n\t\t{Secteur prime},\n\t\tMatricule,\n\t\t{Secteur DEC},\n\t\tRallye\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(DR = toDouble(DR),\n\t\tNomATC = lower(NomATC),\n\t\tSource = \"file2\") ~> typeCastATC\ntypeCastChantier derive(Produit = replace(Produit, '\"', \"\")) ~> DerivedColumn1\nDerivedColumn1 derive(Produit = replace(Produit, \"'\", \" \")) ~> DerivedColumn2\noffreDiffusInput filter(!isNull(Offre)) ~> Filter1\noffreChantierInput filter(!isNull(Offre)) ~> Filter2\noffreChantierInput filter(Offre==\"ZADX6708\") ~> Filter3\nFilter3 derive({Référence} = iif(substring({Référence},1,2) == \"00\", substring({Référence},3,length({Référence})-2), {Référence})) ~> DerivedColumn3\ncanalDiffus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['STG_OFFRE_DIFFUS.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> stagingDiffus\ncanalChantier sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['STG_OFFRE_CHANTIER.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> stagingChantier\ntypeCastATC sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['refATC2021Offre.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outTemp\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['offreChantierTemp.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\ntypeCast sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['offreDiffusTemp.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ALL_OFFRE_DIFFUS')]",
				"[concat(variables('factoryId'), '/datasets/ALL_OFFRE_CHANTIER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_CHANTIER')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SUIVI OFFRE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_OFFRE_CHANTIER_INPUT",
								"type": "DatasetReference"
							},
							"name": "stgOffre"
						},
						{
							"dataset": {
								"referenceName": "BASE_COMMERCIALE",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SUIVIE_OFFRE_CHANTIER",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "offre_et_baseCom_sans_matching",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "aggregationOffre"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "offreNotNull"
						},
						{
							"name": "aggregationBase"
						},
						{
							"name": "Join1"
						},
						{
							"name": "yearmonth"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tDateOffre as string,\n\t\t{Date Prev Cde} as string,\n\t\t{Code projet} as string,\n\t\tProjet as string,\n\t\tType as string,\n\t\t{CP projet} as string,\n\t\t{Ville projet} as string,\n\t\tNbLogement as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\tFamille as string,\n\t\tProduit as string,\n\t\t{Quantité} as string,\n\t\t{Prix de base} as string,\n\t\t{Prix client} as string,\n\t\t{Prix négoce} as string,\n\t\t{Prix total} as string,\n\t\tClient as string,\n\t\t{Type financement} as string,\n\t\t{Ville client} as string,\n\t\t{Numéro interne 1} as string,\n\t\t{Négoce} as string,\n\t\t{Ville négoce} as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Statut offre} as string,\n\t\tResponsable as string,\n\t\tGroupe as string,\n\t\tOffre as string,\n\t\t{Date de maj statut} as string,\n\t\t{Numéro avant vente} as string,\n\t\t{Créateur offre} as string,\n\t\t{Commentaire interne} as string,\n\t\t{Offre dérogée} as string,\n\t\t{Contrat cadre} as string,\n\t\t{Typologie projet} as string,\n\t\tDateValidite as string,\n\t\tDEEE as string,\n\t\tOffreSupprimee as string,\n\t\tcanal as string,\n\t\tCanal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> stgOffre\nsource(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal} as string,\n\t\tmarque as string,\n\t\tmarque_code as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\tdocument_vente as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\tno_offre as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande} as string,\n\t\t{Type de facture} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string,\n\t\tyearmonth as string,\n\t\t{ATC Corrigé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nFilter1 aggregate(groupBy(Offre,\n\t\t{Référence},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\tstgOffre@Canal,\n\t\t{Numéro interne 1},\n\t\t{Négoce},\n\t\t{Numéro interne 2}),\n\t{Quantité de l'offre} = sum(toInteger({Quantité})),\n\t\t{Date fin validité} = max(DateValidite)) ~> aggregationOffre\nstgOffre filter(!isNull(Offre)) ~> Filter1\nbaseCommerciale filter(!isNull(no_offre) && canal_final==\"Chantier\") ~> offreNotNull\nDerivedColumn1 aggregate(groupBy({plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit},\n\t\tcanal_final),\n\t{qte consommée} = sum(toInteger(quantite) ),\n\t\t{dernière facturation année} = max(toInteger(year)),\n\t\t{dernière facturation mois} = max(toInteger(month))) ~> aggregationBase\naggregationOffre, aggregationBase join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive({Date de dernière facturation de l'offre} = toString({dernière facturation année})+\"-\"+toString({dernière facturation mois})) ~> yearmonth\nyearmonth select(mapColumn(\n\t\t{Num offre} = Offre,\n\t\tCanal,\n\t\tProduit = {Référence},\n\t\t{Quantité de l'offre},\n\t\t{Date fin validité},\n\t\t{Quantité consommée} = {qte consommée},\n\t\t{Date de dernière facturation de l'offre},\n\t\t{Statut offre},\n\t\tResponsable,\n\t\t{Numéro interne 1},\n\t\t{Négoce},\n\t\t{Numéro interne 2}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\naggregationOffre, aggregationBase join(Offre == no_offre\n\t&& {Référence} == {code produit},\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join2\nJoin2 filter(isNull(Offre) || isNull({Référence})) ~> Filter2\nFilter2 select(mapColumn(\n\t\t{plateforme/vente directe},\n\t\tno_offre,\n\t\t{code produit},\n\t\tcanal_final,\n\t\t{qte consommée},\n\t\t{dernière facturation année},\n\t\t{dernière facturation mois}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\noffreNotNull derive({code produit} = iif(substring({code produit},1,2) == \"00\", substring({code produit},3,length({code produit})-2), {code produit}),\n\t\tno_offre = upper(no_offre)) ~> DerivedColumn1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SUIVIE_OFFRE_CHANTIER.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['offre_et_baseCom_sans_matching.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BASE_COMMERCIALE')]",
				"[concat(variables('factoryId'), '/datasets/offre_et_baseCom_sans_matching')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEREVA_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TEREVA_ECOULEMENT_INPUT",
								"type": "DatasetReference"
							},
							"name": "ECOULEMENT"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TEREVA_EC_PREPARED",
								"type": "DatasetReference"
							},
							"name": "output"
						},
						{
							"dataset": {
								"referenceName": "TerevaOrgaNotFound",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "terevaQteNull",
								"type": "DatasetReference"
							},
							"name": "terevaQteNull"
						}
					],
					"transformations": [
						{
							"name": "yearmonthANDcanal"
						},
						{
							"name": "yearANDmonth"
						},
						{
							"name": "agenceCodeNotNull"
						},
						{
							"name": "posIDNotNull"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "deleteVentesDirectes"
						},
						{
							"name": "rename"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerLeftVentesDirectes"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Union1"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "marquename"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "ConditionalSplit1"
						}
					],
					"script": "source(output(\n\t\tProp_0 as string,\n\t\tsociete as string,\n\t\tregion_lib as string,\n\t\tsgeo as string,\n\t\tsgeo_lib as string,\n\t\tagence as string,\n\t\tagence_lib as string,\n\t\tdep_ag as string,\n\t\tfrs as string,\n\t\tarticle as string,\n\t\tarticle_lib as string,\n\t\tdm as string,\n\t\tref_frs as string,\n\t\t{vva (m) n} as string,\n\t\t{vva (m) n-1} as string,\n\t\t{qte (m) n} as string,\n\t\t{qte (m) n-1} as string,\n\t\t{vva (c) n} as string,\n\t\t{vva (c) n-1} as string,\n\t\t{qte (c) n} as string,\n\t\t{qte (c) n-1} as string,\n\t\t{var. vva (m)} as string,\n\t\t{var. qte (m)} as string,\n\t\t{var. vva (c)} as string,\n\t\t{var. qte (c)} as string,\n\t\tpath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ECOULEMENT\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nrename derive(yearmonth = replace(split(split(path, \"/\")[3], \"_\")[1], \"-\", \"\"),\n\t\tcanal = split(split(path, \"/\")[3], \"_\")[2],\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonthANDcanal\nConditionalSplit1@qteNotNul derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> yearANDmonth\nyearANDmonth filter(!isNull(agence_code)) ~> agenceCodeNotNull\norganisation filter(!isNull(POSid)) ~> posIDNotNull\nagenceCodeNotNull, uniqueOrganisation join(agence_code == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\nposIDNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> uniqueOrganisation\ninnerOrganisation, ventesDirectes join(ConditionalSplit1@qteNotNul@yearmonth == ventesDirectes@yearmonth\n\t&& reference == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerVentesDirectes derive(qte_ecoulement = qte_ecoulement-toDouble({Qt� vente directe})) ~> deleteVentesDirectes\nECOULEMENT select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code = agence,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file = frs,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference = ref_frs,\n\t\tqte_ecoulement = {qte (m) n},\n\t\tpath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> rename\ninnerOrganisation, ventesDirectes join(ConditionalSplit1@qteNotNul@yearmonth == ventesDirectes@yearmonth\n\t&& reference == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(Article) || isNull(ventesDirectes@yearmonth) || isNull({Code client})) ~> outerLeftVentesDirectes\ndeleteVentesDirectes select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tpath,\n\t\tyearmonth = ConditionalSplit1@qteNotNul@yearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nouterLeftVentesDirectes select(mapColumn(\n\t\tsociete,\n\t\tregion_lib,\n\t\tsgeo,\n\t\tsgeo_lib,\n\t\tagence_code,\n\t\tagence_lib,\n\t\tdep_ag,\n\t\tmarque_file,\n\t\tarticle_lib,\n\t\tdm,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tpath,\n\t\tyearmonth = ConditionalSplit1@qteNotNul@yearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect1, Select2 union(byName: true)~> Union1\nmarquename select(mapColumn(\n\t\tdistributeur = societe,\n\t\tagence_code,\n\t\tmarque_file,\n\t\treference,\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tcanal,\n\t\tyear,\n\t\tmonth,\n\t\tHubSAPid,\n\t\tCounty,\n\t\tPOSSAMid,\n\t\tmarque_id = BrandID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nUnion1 derive(marque_name = \"SaunierDuval\",\n\t\tmarque = \"1604\",\n\t\tmarque_num = \"1604\") ~> marquename\nagenceCodeNotNull, uniqueOrganisation join(agence_code == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 filter(isNull(POSid)) ~> Filter1\nyearmonthANDcanal split(qte_ecoulement!=0,\n\tdisjoint: false) ~> ConditionalSplit1@(qteNotNul, qteNull)\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['TEREVA_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['TEREVA_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nConditionalSplit1@qteNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['TEREVA_QteNull.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> terevaQteNull"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TEREVA_ECOULEMENT_INPUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRAITEMENTECOULEMENT_AVOIR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "flux pour le retraitmenet des ecoulements du modele dsc-tereva",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ecoulementUniformAz",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "avoir",
								"type": "DatasetReference"
							},
							"name": "avoir"
						},
						{
							"dataset": {
								"referenceName": "salerDsc",
								"type": "DatasetReference"
							},
							"name": "salerDSC"
						},
						{
							"dataset": {
								"referenceName": "TEREVA_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "OrgaTerevas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "eccToReplicate",
								"type": "DatasetReference"
							},
							"name": "outEccDscTereva"
						},
						{
							"dataset": {
								"referenceName": "avoirToReplicate",
								"type": "DatasetReference"
							},
							"name": "DTAvoirRetraiter"
						},
						{
							"dataset": {
								"referenceName": "AZ_OecoulementDscTerevaWithIndex",
								"type": "DatasetReference"
							},
							"name": "outEcoulementDScTereva"
						},
						{
							"dataset": {
								"referenceName": "AZ_OecoulementPartedislikeWithIndex",
								"type": "DatasetReference"
							},
							"name": "outputEcoulementPartedis"
						},
						{
							"dataset": {
								"referenceName": "AZ_AvoirWithIndexDSClike",
								"type": "DatasetReference"
							},
							"name": "outputAvoirDSc"
						},
						{
							"dataset": {
								"referenceName": "AvoirForVanMarkes",
								"type": "DatasetReference"
							},
							"name": "AvoirForVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "outAvoirNotFound",
								"type": "DatasetReference"
							},
							"name": "outputAvoirNotFound"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "filterColumnsToUse"
						},
						{
							"name": "filterDistrubitor"
						},
						{
							"name": "AvoirAddToReplicate"
						},
						{
							"name": "EccAddToReplicate"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "Union1"
						},
						{
							"name": "uniqueAgenceCode"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DscTerevaJoinOrganisation"
						},
						{
							"name": "ReSelect"
						},
						{
							"name": "positiveQuantite"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "Flatten1"
						},
						{
							"name": "Window1"
						},
						{
							"name": "DerivedColumn5"
						},
						{
							"name": "Flatten2"
						},
						{
							"name": "Window2"
						},
						{
							"name": "DerivedColumn6"
						},
						{
							"name": "Window3"
						},
						{
							"name": "Flatten3"
						},
						{
							"name": "DerivedColumn7"
						},
						{
							"name": "DerivedColumn8"
						},
						{
							"name": "DerivedColumn9"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Select4"
						},
						{
							"name": "DerivedColumn10"
						},
						{
							"name": "DerivedColumn11"
						},
						{
							"name": "JoinOrganisation"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Filter3"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tmarque_file as string,\n\t\tagence_code as string,\n\t\tmarque_id as string,\n\t\tmarque as string,\n\t\tClient as string,\n\t\t{code postal} as string,\n\t\tmarque_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Clé} as string,\n\t\tMarque as string,\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tDepot as string,\n\t\tNoFrs as string,\n\t\tFOUR2 as string,\n\t\tC_Four as string,\n\t\tLib_Four as string,\n\t\tCategorie as string,\n\t\tCanal as string,\n\t\tFinancement as string,\n\t\tNoOffre as string,\n\t\tDate_Debut as string,\n\t\tDate_Fin as string,\n\t\tNoArtDSC as string,\n\t\tLibArt as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\t{LIB AGENCE} as string,\n\t\t{Qté_Ini} as string,\n\t\tSolde_Qte as string,\n\t\tQte_Tot as string,\n\t\tQte_Retenue as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tNomCli as string,\n\t\tPRR as string,\n\t\tPRS_ligne_BL as string,\n\t\tPA_Ref as string,\n\t\tPA_D as string,\n\t\tPA_Valide_VGF as string,\n\t\tEcart as string,\n\t\tAide as string,\n\t\tAide_Retenue as string,\n\t\t{Aide_Validée_VGF} as string,\n\t\tDate_Num as string,\n\t\tP_Fact as string,\n\t\t{Clé_Offre_Article} as string,\n\t\tMotif_Commentaire as string,\n\t\t{Qté_Campagne} as string,\n\t\tPrix_Campagne as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tMontant_Avoir as string,\n\t\tNoDocRefac as string,\n\t\tNoLigneDocRefac as string,\n\t\t{Contrôle} as string,\n\t\tDate_Ctrl as string,\n\t\tCode_Motif_Refus as string,\n\t\tCompanyId as string,\n\t\t{ValidéPar} as string,\n\t\tDateAjout as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> avoir\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> salerDSC\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> OrgaTerevas\necoulement select(mapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal} = {code postal},\n\t\tmarque_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\navoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filterColumnsToUse\nEccAddToReplicate split(in([\"dsc\",'tereva'],lower(distributeur)),\n\tdisjoint: false) ~> filterDistrubitor@(dscTereva, notDscTereva)\nfilterColumnsToUse derive(toreplicate = abs( toInteger( Qte_Validee_VGF ) )) ~> AvoirAddToReplicate\nSelect1 derive(toreplicate = abs(toInteger( qte_ecoulement )),\n\t\tagence_code = replace(agence_code, \".0\", \"\")) ~> EccAddToReplicate\nDerivedColumn1 split(in([\"2\",\"7\"], CompanyId),\n\tdisjoint: false) ~> ConditionalSplit1@(DscTerevaAvoir, NotDscTerevaAvoir)\nsalerDSC, OrgaTerevas union(byName: true)~> Union1\nUnion1 aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tHubSAPid = last(HubSAPid)) ~> uniqueAgenceCode\nAvoirAddToReplicate derive(ca_avoir = toFloat(PA_Valide_VGF),\n\t\tyearmonth = iif(toInteger(Mois)<10, {Année}+\"0\"+Mois  ,   {Année}+Mois  ),\n\t\tQte_Validee_VGF = toInteger( Qte_Validee_VGF )) ~> DerivedColumn1\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> DscTerevaJoinOrganisation\nConditionalSplit1@DscTerevaAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\ttoreplicate,\n\t\tca_avoir,\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReSelect\nDscTerevaJoinOrganisation filter(toInteger(Qte_Validee_VGF) >0) ~> positiveQuantite\nfilterDistrubitor@dscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index),\n\t\trcount = 1) ~> DerivedColumn4\nDerivedColumn4 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tdd,\n\t\trcount\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 window(over(year,\n\t\tagence_code,\n\t\treference),\n\tasc(year, true),\n\tasc(agence_code, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window1\nfilterDistrubitor@notDscTereva derive(dd = mapLoop(abs(toInteger(qte_ecoulement)), #index)) ~> DerivedColumn5\nDerivedColumn5 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\ttoreplicate,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten2\nFlatten2 window(over(yearmonth,\n\t\tHubSAPid,\n\t\treference),\n\tasc(yearmonth, true),\n\tasc(HubSAPid, true),\n\tasc(reference, true),\n\tindexcols2 = rowNumber()) ~> Window2\npositiveQuantite derive(dd = mapLoop(abs(toInteger(Qte_Validee_VGF)), #index)) ~> DerivedColumn6\nFlatten3 window(over(year = {Année},\n\t\tAgence,\n\t\tNoArtVGF),\n\tasc({Année}, true),\n\tasc(Agence, true),\n\tasc(NoArtVGF, true),\n\tindexcols2 = rowNumber()) ~> Window3\nDerivedColumn6 foldDown(unroll(dd, dd),\n\tmapColumn(\n\t\tNoOffre,\n\t\tNoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\t{Année},\n\t\tMois_Selection,\n\t\tMois,\n\t\tPA_Valide_VGF,\n\t\tyearmonth,\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\tca_avoir,\n\t\tPOSid,\n\t\tWholeSalerID,\n\t\tdd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten3\nWindow3 derive(indexcols2 = {Année}+Agence+NoArtVGF+toString(indexcols2),\n\t\tqte_avoir = iif(toInteger(Qte_Validee_VGF) >0, 1, -1 )) ~> DerivedColumn7\nWindow2 derive(indexcols2 = yearmonth+HubSAPid+reference+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> DerivedColumn8\nSelect4 derive(indexcols2 = year+agence_code+reference+toString(indexcols2),\n\t\tqte_ecc = iif(toInteger(qte_ecoulement) >0, 1, -1 )) ~> DerivedColumn9\nfilterDistrubitor@notDscTereva filter(lower(distributeur)==\"tereva\") ~> Filter1\nWindow1 select(mapColumn(\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\tagence_code,\n\t\tmarque,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\trcount,\n\t\tindexcols2,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nDerivedColumn9 derive(ca_ecoulement = abs(toDouble(ca_ecoulement))*qte_ecc) ~> DerivedColumn10\nDerivedColumn7 derive(ca_avoir = abs(ca_avoir)*qte_avoir) ~> DerivedColumn11\nReSelect, uniqueAgenceCode join(Agence == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOrganisation\nJoinOrganisation filter(isNull(POSid)) ~> Filter2\nFilter2 filter({Année}==\"2020\"&&CompanyId==\"7\") ~> Filter3\nFilter3 aggregate(Qte_Validee_VGF = sum(Qte_Validee_VGF)) ~> Aggregate1\nfilterDistrubitor@dscTereva sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['outEccDscTereva.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEccDscTereva\npositiveQuantite sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['DscAvoirTemp.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DTAvoirRetraiter\nDerivedColumn10 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementDscTerevaWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outEcoulementDScTereva\nDerivedColumn8 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_OecoulementPartedislikeWithIndex.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputEcoulementPartedis\nDerivedColumn11 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['AZ_AvoirWithIndexDSClike.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirDSc\nConditionalSplit1@NotDscTerevaAvoir sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['AvoirForVanMarkes.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> AvoirForVanMarkes\nFilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Agence Code} as string,\n\t\t{Département ID} as string,\n\t\t{Quantité en UV BL} as string,\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tPOSid as string,\n\t\tWholeSalerID as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tpartitionFileNames:['avoir.organisationNotFound.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputAvoirNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/avoir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanMarkes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EVanMarkes1",
								"type": "DatasetReference"
							},
							"name": "organisaation"
						},
						{
							"dataset": {
								"referenceName": "AvoirForVanMarkesInput",
								"type": "DatasetReference"
							},
							"name": "Avoir"
						},
						{
							"dataset": {
								"referenceName": "In_FacturationVM",
								"type": "DatasetReference"
							},
							"name": "Facturation"
						},
						{
							"dataset": {
								"referenceName": "extractionSap",
								"type": "DatasetReference"
							},
							"name": "ExtarctionSAP"
						},
						{
							"dataset": {
								"referenceName": "ref_atc",
								"type": "DatasetReference"
							},
							"name": "REFATC"
						},
						{
							"dataset": {
								"referenceName": "STG_OFFRE_SOURCE",
								"type": "DatasetReference"
							},
							"name": "Offre"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SVanMarkes",
								"type": "DatasetReference"
							},
							"name": "SortieVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "OutpuVanMarkes",
								"type": "DatasetReference"
							},
							"name": "OutputVanMarkes"
						},
						{
							"dataset": {
								"referenceName": "SinkVanMarkes",
								"type": "DatasetReference"
							},
							"name": "SinkVanMarkes"
						}
					],
					"transformations": [
						{
							"name": "selectAvoir"
						},
						{
							"name": "Join2"
						},
						{
							"name": "FilterQte"
						},
						{
							"name": "typeCast"
						},
						{
							"name": "mapCanalID"
						},
						{
							"name": "efacturation"
						},
						{
							"name": "inner"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "fullLeft"
						},
						{
							"name": "fullRight"
						},
						{
							"name": "Select1"
						},
						{
							"name": "left"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "right"
						},
						{
							"name": "Select3"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "endInner"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "endRight"
						},
						{
							"name": "endLeft"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Union2"
						},
						{
							"name": "endDerementaiton"
						},
						{
							"name": "DerivedColumn5"
						},
						{
							"name": "Select6"
						},
						{
							"name": "Agregat"
						},
						{
							"name": "SelectcolonneATC"
						},
						{
							"name": "SelectColonneOffre"
						},
						{
							"name": "AgregatOffreCanalATC"
						},
						{
							"name": "SelectOffre"
						},
						{
							"name": "canalfinal"
						},
						{
							"name": "Selec"
						},
						{
							"name": "SelectSAP"
						},
						{
							"name": "JoinSAP"
						},
						{
							"name": "marqueNamee"
						},
						{
							"name": "SelectCol"
						},
						{
							"name": "JoinATC"
						},
						{
							"name": "addDataorigin"
						},
						{
							"name": "RenameATC"
						},
						{
							"name": "JoinOffre"
						},
						{
							"name": "renameNoOffre"
						},
						{
							"name": "DerivedColumn6"
						},
						{
							"name": "filtreCompany"
						},
						{
							"name": "setHubsID"
						}
					],
					"script": "source(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tF5 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisaation\nsource(output(\n\t\tMois_Selection as string,\n\t\tCode_depot as string,\n\t\tNoOffre as string,\n\t\tNoArtVGF as string,\n\t\tAgence as string,\n\t\tQte_Validee_VGF as string,\n\t\tNoCli as string,\n\t\tPA_Valide_VGF as string,\n\t\tMois as string,\n\t\t{Année} as string,\n\t\tCompanyId as string,\n\t\tHubSAPid as string,\n\t\ttoreplicate as string,\n\t\tca_avoir as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Avoir\nsource(output(\n\t\t{Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\tArticle as string,\n\t\t{Type doc. vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Facturation\nsource(output(\n\t\t{Agence commerciale} as string,\n\t\t{ATC Client} as string,\n\t\tColumn_3 as string,\n\t\t{Niveau 1} as string,\n\t\tColumn_5 as string,\n\t\t{Niveau 2} as string,\n\t\tColumn_7 as string,\n\t\t{Niveau 3} as string,\n\t\tColumn_9 as string,\n\t\tClient as string,\n\t\tColumn_11 as string,\n\t\tRue as string,\n\t\t{Dép} as string,\n\t\t{Code postal} as string,\n\t\t{Localité} as string,\n\t\t{Téléphone 1} as string,\n\t\t{Numéro de télécopie} as string,\n\t\t{Attribut 2} as string,\n\t\tColumn_19 as string,\n\t\tEmail as string,\n\t\tSIRET as string,\n\t\t{Niveau 4} as string,\n\t\tColumn_23 as string,\n\t\t{Groupe de clients} as string,\n\t\tColumn_25 as string,\n\t\t{Groupe de clients 5} as string,\n\t\tColumn_27 as string,\n\t\t{Attribut 1} as string,\n\t\tColumn_29 as string,\n\t\t{Attribut 3} as string,\n\t\tColumn_31 as string,\n\t\t{Récept. de march.} as string,\n\t\tColumn_33 as string,\n\t\t{Destinataire facture} as string,\n\t\tColumn_35 as string,\n\t\tPayeur as string,\n\t\tColumn_37 as string,\n\t\t{Témoin suppr. Tous domaines} as string,\n\t\t{Org. commerciale} as string,\n\t\tColumn_40 as string,\n\t\t{Canal distribution} as string,\n\t\tColumn_42 as string,\n\t\t{Secteur d'activité} as string,\n\t\tColumn_44 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtarctionSAP\nsource(output(\n\t\t{Cl� R�f�rentiel} as string,\n\t\t{Recherche Cl� EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal d�but} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{D�partement} as string,\n\t\tDR as string,\n\t\tUser_lowerCase as string,\n\t\tsource as string,\n\t\tRight_DR as string,\n\t\tRight_User_lowerCase as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> REFATC\nsource(output(\n\t\tDateOffre as string,\n\t\t{Référence} as string,\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCodeATC as string,\n\t\tCanal as string,\n\t\tNbLogement as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\t{Créateur offre} as string,\n\t\tSource as string,\n\t\tUserLowerCase as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Offre\nAvoir select(mapColumn(\n\t\tMois_Selection,\n\t\tCode_depot,\n\t\tNoOffre,\n\t\treference = NoArtVGF,\n\t\tAgence,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectAvoir\nFacturation, organisaation join({Récept. de march.} == HubSAPid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2\nsetHubsID filter(toDouble(Qte_Validee_VGF)>0) ~> FilterQte\nFilterQte derive(Mois = toInteger(Mois),\n\t\t{Année} = toInteger({Année}),\n\t\tcanal = iif(substring(NoOffre,1,2)==\"FP\", \"FP\",     iif(substring(NoOffre,1,2)==\"FS\", \"FS\", \"FC\")),\n\t\tyearmonth = iif(toInteger(Mois)<10, {Année}+\"0\"+Mois  ,   {Année}+\"0\"+Mois  )) ~> typeCast\nSelect1 derive(id_canal_final = iif(canal==\"FP\", 45,     iif(canal==\"FS\", 51,     iif(canal==\"FC\", 43, 42))),\n\t\ttOrigin = \"avoir\") ~> mapCanalID\nDerivedColumn1 select(mapColumn(\n\t\tmarque_id = {Org. commerciale},\n\t\t{Canal distribution},\n\t\tPoste,\n\t\t{ATC Corrigé},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString = {Récept. de march.},\n\t\treference = Article,\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tyear,\n\t\tmonth,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\ttOrigin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> efacturation\nmapCanalID, efacturation join(Select1@HubSAPid == efacturation@HubSAPid\n\t&& {Année} == toInteger(year)\n\t&& Mois == toInteger(month)\n\t&& Select1@reference == efacturation@reference,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inner\nJoin2 derive(month = right(yearmonth, 2),\n\t\ttOrigin = \"facturation\") ~> DerivedColumn1\nmapCanalID, efacturation join({Année} == toInteger(year)\n\t&& Mois == toInteger(month)\n\t&& Select1@HubSAPid == efacturation@HubSAPid\n\t&& Select1@reference == efacturation@reference,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeft\nmapCanalID, efacturation join(Select1@HubSAPid == efacturation@HubSAPid\n\t&& Select1@reference == efacturation@reference\n\t&& Mois == toInteger(month)\n\t&& {Année} == toInteger(year),\n\tjoinType:'right',\n\tbroadcast: 'auto')~> fullRight\ntypeCast select(mapColumn(\n\t\tMois_Selection,\n\t\tNoOffre,\n\t\treference,\n\t\tQte_Validee_VGF,\n\t\tNoCli,\n\t\tPA_Valide_VGF,\n\t\tMois,\n\t\t{Année},\n\t\tCompanyId,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tcanal,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nfullLeft filter(isNull(efacturation@tOrigin)) ~> left\nleft derive(data_origin = \"avoir\",\n\t\tid_canal_final = toString(id_canal_final)) ~> DerivedColumn2\nDerivedColumn2 select(mapColumn(\n\t\tNoOffre,\n\t\treference = Select1@reference,\n\t\tqt_final = Qte_Validee_VGF,\n\t\tPOSSAMidString = NoCli,\n\t\tca_final = PA_Valide_VGF,\n\t\tHubSAPid = Select1@HubSAPid,\n\t\tyearmonth = Select1@yearmonth,\n\t\tcanal,\n\t\tid_canal_final\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nfullRight filter(isNull(mapCanalID@tOrigin)) ~> right\nright select(mapColumn(\n\t\tmarque_id,\n\t\tid_canal_final = {Canal distribution},\n\t\t{ATC Corrigé},\n\t\t{Document de vente},\n\t\t{Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\treference = efacturation@reference,\n\t\tyearmonth = efacturation@yearmonth,\n\t\tHubSAPid = efacturation@HubSAPid,\n\t\tqt_final = {Qté facturée},\n\t\tca_final = {CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 derive(data_origin = \"facturation\") ~> DerivedColumn3\ninner select(mapColumn(\n\t\tNoOffre,\n\t\treference = Select1@reference,\n\t\tqt_final = Qte_Validee_VGF,\n\t\tca_final = PA_Valide_VGF,\n\t\tHubSAPid = Select1@HubSAPid,\n\t\tyearmonth = Select1@yearmonth,\n\t\tcanal,\n\t\tid_canal_final,\n\t\tmarque_id,\n\t\t{Canal distribution},\n\t\tPoste,\n\t\t{ATC Corrigé},\n\t\t{Donneur d ordre} = {Donneur d'ordre},\n\t\tPOSSAMidString\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect4 aggregate(groupBy(reference,\n\t\tyearmonth,\n\t\tHubSAPid),\n\tca_final = first(ca_final),\n\t\tNoOffre = max(NoOffre),\n\t\tqt_final = max(qt_final),\n\t\tcanal = max(canal),\n\t\tid_canal_final = max(id_canal_final),\n\t\t{ATC Corrigé} = max({ATC Corrigé}),\n\t\tmarque_id = max(marque_id),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\t{Donneur d ordre} = max({Donneur d ordre})) ~> Aggregate1\nDerivedColumn4 select(mapColumn(\n\t\treference,\n\t\tNoOffre,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endInner\nAggregate1 derive(data_origin = \"facturation avoir\") ~> DerivedColumn4\nDerivedColumn3 select(mapColumn(\n\t\tmarque_id,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\t{Document de vente},\n\t\t{Donneur d ordre} = {Donneur d'ordre},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tqt_final,\n\t\tca_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endRight\naddDataorigin select(mapColumn(\n\t\tNoOffre,\n\t\treference,\n\t\tqt_final,\n\t\tPOSSAMidString,\n\t\tca_final,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tcanal,\n\t\tid_canal_final,\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endLeft\nDerivedColumn5, endRight union(byName: true)~> Union1\nUnion1 select(mapColumn(\n\t\treference,\n\t\tNoOffre,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect5, endLeft union(byName: true)~> Union2\nDerivedColumn6 select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> endDerementaiton\nendInner derive(id_canal_final = toString(id_canal_final)) ~> DerivedColumn5\nUnion2 select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nREFATC aggregate(groupBy(Marque,\n\t\t{Canal final},\n\t\tcode_postal_atc),\n\tMatricule = max(Matricule),\n\t\tNomATC = max(NomATC),\n\t\tATC = max(ATC)) ~> Agregat\nAgregat select(mapColumn(\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectcolonneATC\nOffre select(mapColumn(\n\t\tDateOffre,\n\t\t{Référence},\n\t\tMarque,\n\t\t{Quantité},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tATC = CodeATC,\n\t\tCanal,\n\t\tNbLogement,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\t{Créateur offre},\n\t\tSource,\n\t\tUserLowerCase\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColonneOffre\nSelectColonneOffre aggregate(groupBy(Offre,\n\t\tCanal,\n\t\tATC),\n\tDateOffre = first(DateOffre)) ~> AgregatOffreCanalATC\nAgregatOffreCanalATC select(mapColumn(\n\t\tOffre,\n\t\tcanal = Canal,\n\t\t{ATC performance} = ATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOffre\nendDerementaiton derive(canal_final = iif(id_canal_final==\"43\", \"Chantier\",  \"Diffus\")) ~> canalfinal\ncanalfinal select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tcanal_final,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Selec\nExtarctionSAP select(mapColumn(\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal},\n\t\t{Téléphone 1},\n\t\t{Numéro de télécopie},\n\t\t{Org. commerciale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSAP\nSelec, SelectSAP join(POSSAMidString == Client\n\t&& marque_id == {Org. commerciale},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSAP\nJoinSAP derive(marque_name = iif(marque_id==\"1604\", 'SaunierDuval', 'Vaillant'),\n\t\tdistributeur = \"van markes\") ~> marqueNamee\nmarqueNamee select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tcanal_final,\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal},\n\t\t{Téléphone 1},\n\t\t{Numéro de télécopie},\n\t\t{Org. commerciale},\n\t\tmarque_name,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCol\nSelectCol, SelectcolonneATC join(canal_final == {Canal final}\n\t&& {Code postal} == code_postal_atc\n\t&& marque_name == Marque,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinATC\nSelect2 derive(data_origin = \"avoir\") ~> addDataorigin\nJoinATC select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tcanal,\n\t\tid_canal_final,\n\t\t{ATC Corrigé},\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\t{Donneur d ordre},\n\t\t{Document de vente},\n\t\tdata_origin,\n\t\tNoOffre,\n\t\tcanal_final,\n\t\t{Agence commerciale},\n\t\tClient,\n\t\t{Code postal},\n\t\t{Org. commerciale},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\tMarque,\n\t\t{Canal final},\n\t\tcode_postal_atc,\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameATC\nRenameATC, SelectOffre join(NoOffre == Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOffre\nJoinOffre select(mapColumn(\n\t\treference,\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tca_final,\n\t\tqt_final,\n\t\tmarque_id,\n\t\tPOSSAMidString,\n\t\tdata_origin,\n\t\tno_offre = NoOffre,\n\t\tcanal_final,\n\t\t{Code postal},\n\t\t{Org. commerciale},\n\t\tmarque_name,\n\t\tdistributeur,\n\t\tMarque,\n\t\t{Canal final},\n\t\tMatricule,\n\t\tNomATC,\n\t\tATC,\n\t\tOffre,\n\t\t{ATC performance}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameNoOffre\nSelect6 derive(distributeur = \"Van Markes\") ~> DerivedColumn6\nselectAvoir filter(CompanyId==\"11\") ~> filtreCompany\nfiltreCompany derive(HubSAPid = \"16004028\") ~> setHubsID\norganisaation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SVanMarkes.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SortieVanMarkes\nendDerementaiton sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['OutpoutVanMarkes'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OutputVanMarkes\nrenameNoOffre sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\tagence_code as string,\n\t\tmarque as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\trcount as string,\n\t\tindexcols2 as string,\n\t\tqte_ecc as string\n\t),\n\tpartitionFileNames:['SinkVanMarkes'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SinkVanMarkes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/basecommercialUnion_Model')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "base commercial après UNion",
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InUnionBasecommercial",
								"type": "DatasetReference"
							},
							"name": "BCUnion"
						},
						{
							"dataset": {
								"referenceName": "article_hierarchi",
								"type": "DatasetReference"
							},
							"name": "ArticleHierarchi"
						},
						{
							"dataset": {
								"referenceName": "PLATEFORMES",
								"type": "DatasetReference"
							},
							"name": "Plateformes"
						},
						{
							"dataset": {
								"referenceName": "ExtractionComptesEPSTypologieSousTypoComptePrincipal",
								"type": "DatasetReference"
							},
							"name": "ExtractionCompte"
						},
						{
							"dataset": {
								"referenceName": "ClientEHS",
								"type": "DatasetReference"
							},
							"name": "ClientEHS"
						},
						{
							"dataset": {
								"referenceName": "input_manuel",
								"type": "DatasetReference"
							},
							"name": "InputManuel"
						},
						{
							"dataset": {
								"referenceName": "StgOffreUniq",
								"type": "DatasetReference"
							},
							"name": "StgOffreUnique"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataCommercialNotfound",
								"type": "DatasetReference"
							},
							"name": "DataCommercialNotFOund"
						},
						{
							"dataset": {
								"referenceName": "TEMP_baseCommercialOut",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Cleansing"
						},
						{
							"name": "AtcSOurceATC"
						},
						{
							"name": "MarqueID"
						},
						{
							"name": "renameReference"
						},
						{
							"name": "UniqueReferenc"
						},
						{
							"name": "JoinArticle"
						},
						{
							"name": "LeftJoinArticle"
						},
						{
							"name": "QtFinalCaFinalCanalDistributin"
						},
						{
							"name": "toDoubleCA"
						},
						{
							"name": "ExtractYearandMonth"
						},
						{
							"name": "Distributeur"
						},
						{
							"name": "distributeurr"
						},
						{
							"name": "RenameDistributeur"
						},
						{
							"name": "JoinPlateforme"
						},
						{
							"name": "CDistributeur"
						},
						{
							"name": "PossmidString"
						},
						{
							"name": "UnionClientEHSandExtractionCompte"
						},
						{
							"name": "AgregatNumeroCompte"
						},
						{
							"name": "SelectNomClient"
						},
						{
							"name": "JoinCompte"
						},
						{
							"name": "affecteNonaffecte"
						},
						{
							"name": "IdMarque"
						},
						{
							"name": "NomDuCanal"
						},
						{
							"name": "RenameDistrib"
						},
						{
							"name": "FiltrerN1Locale"
						},
						{
							"name": "RenameCaFinal"
						},
						{
							"name": "OrigineDeLaLigne"
						},
						{
							"name": "FiltreReferenceNull"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Select3"
						},
						{
							"name": "JoinStgOffreUnique"
						},
						{
							"name": "EPSData",
							"description": "Généré automatiquement par les actions d'aperçu de données"
						},
						{
							"name": "RenameNUmeroInterne"
						},
						{
							"name": "Joindre1"
						},
						{
							"name": "Select4"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Select6"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select7"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "Aggregate3"
						}
					],
					"script": "source(output(\n\t\tmarque_id as string,\n\t\tmarque_name as string,\n\t\tcanal_final as string,\n\t\tid_canal_final as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPOSSAMidString as string,\n\t\treference as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Motif commande} as string,\n\t\tyearmonth as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\t{Agence commerciale} as string,\n\t\t{ATC Corrigé} as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tno_offre as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tHubSAPid as string,\n\t\tNoCli as string,\n\t\t{ATC Performance} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tqt_plateforme_final as string,\n\t\tca_plateforme_final as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tagence_code as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Type doc vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> BCUnion\nsource(output(\n\t\tOrgCm as string,\n\t\tCDis as string,\n\t\tArticle as string,\n\t\tDescription as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\tPredecessor as string,\n\t\tSuccessor as string,\n\t\tSt as string,\n\t\t{Désignation Statut} as string,\n\t\t{Déb. val.} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale.designation} as string,\n\t\t{N2.locale.designation} as string,\n\t\t{N3.locale.designation} as string,\n\t\t{N4.locale.designation} as string,\n\t\t{N5.locale.designation} as string,\n\t\t{N6.locale.designation} as string,\n\t\t{N7.locale.designation} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ArticleHierarchi\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Plateformes\nsource(output(\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExtractionCompte\nsource(output(\n\t\tClient as string,\n\t\tBrandID as string,\n\t\t{Code Postal} as string,\n\t\tNom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ClientEHS\nsource(output(\n\t\t{plateforme/vente directe} as string,\n\t\t{affecte/non_affecte} as string,\n\t\t{origine de la ligne} as string,\n\t\t{code produit} as string,\n\t\t{code client plateforme livree} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\tcanal_distribution_final as string,\n\t\t{nom du canal} as string,\n\t\tcanal_final as string,\n\t\t{Code client livré} as string,\n\t\tmarque as string,\n\t\t{id marque} as string,\n\t\tno_offre as string,\n\t\t{Hiérarch.groupe} as string,\n\t\t{Hiérarch.locale} as string,\n\t\t{N1.groupe} as string,\n\t\t{N2.groupe} as string,\n\t\t{N3.groupe} as string,\n\t\t{N4.groupe} as string,\n\t\t{N5.groupe} as string,\n\t\t{N6.groupe} as string,\n\t\t{N7.groupe} as string,\n\t\t{N1.groupe.designation} as string,\n\t\t{N2.groupe.designation} as string,\n\t\t{N3.groupe.designation} as string,\n\t\t{N4.groupe.designation} as string,\n\t\t{N5.groupe.designation} as string,\n\t\t{N6.groupe.designation} as string,\n\t\t{N7.groupe.designation} as string,\n\t\t{N1.locale} as string,\n\t\t{N2.locale} as string,\n\t\t{N3.locale} as string,\n\t\t{N4.locale} as string,\n\t\t{N5.locale} as string,\n\t\t{N6.locale} as string,\n\t\t{N7.locale} as string,\n\t\t{N1.local.designation} as string,\n\t\t{N2.local.designation} as string,\n\t\t{N3.local.designation} as string,\n\t\t{N4.local.designation} as string,\n\t\t{N6.local.designation} as string,\n\t\t{N7.local.designation} as string,\n\t\t{code postal livrer} as string,\n\t\t{ATC Performance} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC Corrigé} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Numéro du compte} as string,\n\t\t{Nom du compte} as string,\n\t\t{Groupe cible/Typologie générale} as string,\n\t\t{Sous groupe cible/Typologie détaillée} as string,\n\t\t{Compte principal: Numéro du compte} as string,\n\t\t{Compte principal: Nom du compte} as string,\n\t\tis_prix_dsc as string,\n\t\t{N5.local.designation} as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\t{Motif commande} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> InputManuel\nsource(output(\n\t\tMarque as string,\n\t\t{Quantité} as string,\n\t\t{Numéro interne 1} as string,\n\t\tClient as string,\n\t\tResponsable as string,\n\t\tOffre as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\tATC as string,\n\t\tcanal as string,\n\t\tProduit as string,\n\t\t{Numéro interne 2} as string,\n\t\tRight_Produit as string,\n\t\t{Right_Quantité} as string,\n\t\t{Right_Numéro interne 1} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> StgOffreUnique\nSelect4 select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Secteur d'activité},\n\t\tdocument_vente = {Document de vente},\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC 2} = {ATC performance},\n\t\t{ATC 1} = ATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tid_canal_final,\n\t\t{qte plateforme final} = qt_plateforme_final,\n\t\t{ca plateforme final} = ca_plateforme_final,\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\t{Document de vente},\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive({ATC 2} = iif(isNull({ATC 2}),'',{ATC 2}),\n\t\t{ATC 1} = iif(isNull({ATC 1}),'',{ATC 1})) ~> Cleansing\nCleansing derive(ATC = iif(distributeur!='vente directe', \r\n iif({ATC 2}!='', {ATC 2}, {ATC 1}),\r\n  iif({ATC Corrigé}!='', {ATC Corrigé}, iif({ATC 2}!='', {ATC 2}, {ATC 1}))),\n\t\tsource_atc = iif(isNull({ATC 2})||{ATC 2}!='0','[ATC 2]','[ATC 1]')) ~> AtcSOurceATC\nAtcSOurceATC derive(marque_id = marque_id) ~> MarqueID\nArticleHierarchi select(mapColumn(\n\t\tOrgCm,\n\t\tCDis,\n\t\treference = Article,\n\t\tDescription,\n\t\t{Hiérarch.groupe},\n\t\t{Hiérarch.locale},\n\t\tPredecessor,\n\t\tSuccessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Déb. val.},\n\t\tN1groupe = {N1.groupe},\n\t\tN2groupe = {N2.groupe},\n\t\tN3groupe = {N3.groupe},\n\t\tN4groupe = {N4.groupe},\n\t\tN5groupe = {N5.groupe},\n\t\tN6groupe = {N6.groupe},\n\t\tN7groupe = {N7.groupe},\n\t\tN1locale = {N1.locale},\n\t\tN2locale = {N2.locale},\n\t\tN3locale = {N3.locale},\n\t\tN4locale = {N4.locale},\n\t\tN5locale = {N5.locale},\n\t\tN6locale = {N6.locale},\n\t\tN7locale = {N7.locale},\n\t\tN1groupedesignation = {N1.groupe.designation},\n\t\tN2groupedesignation = {N2.groupe.designation},\n\t\tN3groupedesignation = {N3.groupe.designation},\n\t\tN4groupedesignation = {N4.groupe.designation},\n\t\tN5groupedesignation = {N5.groupe.designation},\n\t\tN6groupedesignation = {N6.groupe.designation},\n\t\tN7groupedesignation = {N7.groupe.designation},\n\t\tN1localedesignation = {N1.locale.designation},\n\t\tN2localedesignation = {N2.locale.designation},\n\t\tN3localedesignation = {N3.locale.designation},\n\t\tN4localedesignation = {N4.locale.designation},\n\t\tN5localedesignation = {N5.locale.designation},\n\t\tN6localedesignation = {N6.locale.designation},\n\t\tN7localedesignation = {N7.locale.designation}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renameReference\nrenameReference aggregate(groupBy(reference),\n\tSuccessor = max(Successor),\n\t\tCDis = max(CDis),\n\t\tOrgCm = max(OrgCm),\n\t\tPredecessor = max(Predecessor),\n\t\tSt = max(St),\n\t\t{Désignation Statut} = max({Désignation Statut}),\n\t\t{Deb val} = max({Déb. val.}),\n\t\tN1groupe = max(N1groupe),\n\t\tN2groupe = max(N2groupe),\n\t\tN3groupe = max(N3groupe),\n\t\tN4groupe = max(N4groupe),\n\t\tN5groupe = max(N5groupe),\n\t\tN6groupe = max(N6groupe),\n\t\tN7groupe = max(N7groupe),\n\t\tN1groupedesignation = max(N1groupedesignation),\n\t\tN2groupedesignation = max(N2groupedesignation),\n\t\tN3groupedesignation = max(N3groupedesignation),\n\t\tN4groupedesignation = max(N4groupedesignation),\n\t\tN5groupedesignation = max(N5groupedesignation),\n\t\tN6groupedesignation = max(N6groupedesignation),\n\t\tN7groupedesignation = max(N7groupedesignation),\n\t\tN1localedesignation = max(N1localedesignation),\n\t\tN2localedesignation = max(N2localedesignation),\n\t\tN3localedesignation = max(N3localedesignation),\n\t\tN4localedesignation = max(N4localedesignation),\n\t\tN5localedesignation = max(N5localedesignation),\n\t\tN6localedesignation = max(N6localedesignation),\n\t\tN7localedesignation = max(N7localedesignation),\n\t\tN1locale = max(N1locale),\n\t\tN2locale = max(N2locale),\n\t\tN3locale = max(N3locale),\n\t\tN4locale = max(N4locale),\n\t\tN5locale = max(N5locale),\n\t\tN6locale = max(N6locale),\n\t\tN7locale = max(N7locale),\n\t\t{Hiérarchgroupe} = max({Hiérarch.groupe}),\n\t\t{Hiérarchlocale} = max({Hiérarch.locale})) ~> UniqueReferenc\nMarqueID, UniqueReferenc join(Select1@reference == UniqueReferenc@reference,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinArticle\nMarqueID, UniqueReferenc join(Select1@reference == UniqueReferenc@reference,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinArticle\ntoDoubleCA derive(qt_final = coalesce(qt_ecc_enrichi ,{qte plateforme final}  ),\n\t\tca_final = coalesce( ca_ecc_enrichi, {ca plateforme final} ),\n\t\tcanal_distribution_final = id_canal_final) ~> QtFinalCaFinalCanalDistributin\nRenameCaFinal derive(ca_ecc_enrichi = toDouble(ca_ecc_enrichi),\n\t\t{ca plateforme final} = toDouble({ca plateforme final})) ~> toDoubleCA\nQtFinalCaFinalCanalDistributin derive(year = substring(yearmonth,1,4),\n\t\tmonth = substring(yearmonth,5,2)) ~> ExtractYearandMonth\nPlateformes derive(Distributeur = lower(WholeSalerID),\n\t\tDist = lower(WholeSalerID)) ~> Distributeur\nDistributeur derive(Distributeur = iif(Distributeur=='ancs - accueil négoce chauffage sanitaire','partedis',\r\n  iif(instr(Distributeur, 'trva - tereva' )>0, 'tereva', \r\n   iif(instr(Distributeur, 'dsc')>0, 'dsc', \r\n    iif(instr(Distributeur, 'vf' )>0, 'vf', \r\n     iif(instr(Distributeur, 'sonac' )>0, 'sonac',\r\nDist)))))) ~> distributeurr\ndistributeurr select(mapColumn(\n\t\tHubSAPid,\n\t\tt_distrubuteur = Distributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistributeur\nExtractYearandMonth, RenameDistributeur join(RenameCaFinal@HubSAPid == RenameDistributeur@HubSAPid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinPlateforme\nJoinPlateforme derive(distributeur = iif(isNull(RenameDistributeur@HubSAPid),distributeur, 'plateforme '+t_distrubuteur)) ~> CDistributeur\nCDistributeur derive(POSSAMidString = coalesce(POSSAMidString , RenameCaFinal@HubSAPid)) ~> PossmidString\nSelect2, SelectNomClient union(byName: true)~> UnionClientEHSandExtractionCompte\nUnionClientEHSandExtractionCompte aggregate(groupBy({Numéro du compte}),\n\t{Nom du compte} = max({Nom du compte}),\n\t\t{Groupe cible/Typologie générale} = max({Groupe cible/Typologie générale}),\n\t\t{Sous groupe cible/Typologie détaillée} = max({Sous groupe cible/Typologie détaillée}),\n\t\t{Compte principal: Numéro du compte} = max({Compte principal: Numéro du compte}),\n\t\t{Compte principal: Nom du compte} = max({Compte principal: Nom du compte})) ~> AgregatNumeroCompte\nClientEHS select(mapColumn(\n\t\t{Numéro du compte} = Client,\n\t\t{Nom du compte} = Nom\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNomClient\nPossmidString, EPSData join(toInteger(POSSAMidString) == {Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCompte\nSelect5 derive({affecte/non_affecte} = iif(  ( data_origin ==\"vente directe\") , \"affecté\" , \r\n   iif(  ( data_origin == \"facturation decrementé\"  || data_origin==\"facturation sans ecoulement\" || data_origin==\"decrementation ecoulement sans matching\") ,\r\n    \"non affecté\" , \"affecté\" )  \r\n      )) ~> affecteNonaffecte\naffecteNonaffecte derive({id marque} = marque_id) ~> IdMarque\nIdMarque derive({nom du canal} = iif(canal_distribution_final=='45', 'FP', \r\n iif(canal_distribution_final=='51', 'FS', \r\n  iif(canal_distribution_final=='43', 'FC', 'FD')))) ~> NomDuCanal\nNomDuCanal select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré} = POSSAMidString,\n\t\t{code client plateforme livree} = HubSAPid,\n\t\t{code produit} = reference,\n\t\t{plateforme/vente directe} = distributeur,\n\t\t{Code postal},\n\t\tmarque = marque_name,\n\t\tqte_ecc = qte_ecoulement,\n\t\t{Canal distribution} = id_canal_final,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite = qt_final,\n\t\tca = ca_final,\n\t\t{origine de la ligne} = data_origin,\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC offre} = {ATC 2},\n\t\t{ATC livré} = {ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\tid_canal_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_code = marque_id,\n\t\t{Document de vente} = document_vente,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tmarque_id,\n\t\t{ATC Performance} = ATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDistrib\nRenameDistrib filter(N1locale==\"FA\"||\r\nN1locale==\"FB\"||\r\nN1locale==\"FC\"||\r\nN1locale==\"FD\"||\r\nN1locale==\"FE\"||\r\nN1locale==\"FG\"||\r\nN1locale==\"FH\"||\r\nN1locale==\"FL\"||\r\nN1locale==\"FM\"||\r\nN1locale==\"FP\"||\r\nN1locale==\"FR\"||\r\nN1locale==\"FV\") ~> FiltrerN1Locale\nJoinArticle select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\treference = Select1@reference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_ecc_enrichi = ca_final,\n\t\tqt_ecc_enrichi = qt_final,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\t{ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameCaFinal\nInputManuel derive({origine de la ligne} = 'ajout manuel') ~> OrigineDeLaLigne\nLeftJoinArticle filter(isNull(UniqueReferenc@reference)) ~> FiltreReferenceNull\nExtractionCompte select(mapColumn(\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nFiltrerN1Locale select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\t{plateforme/vente directe},\n\t\t{Code postal},\n\t\tmarque,\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tquantite,\n\t\tca,\n\t\t{origine de la ligne},\n\t\tcanal_final,\n\t\tno_offre,\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tmarque_code,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\t{ATC Performance},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte},\n\t\t{affecte/non_affecte},\n\t\t{id marque},\n\t\t{nom du canal}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, RenameNUmeroInterne join(canal_final == canal\n\t&& no_offre == Offre,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStgOffreUnique\nAgregatNumeroCompte derive({Numéro du compte} = toInteger({Numéro du compte})) ~> EPSData\nAggregate3 select(mapColumn(\n\t\tMarque,\n\t\t{Quantité},\n\t\t{Numéro client indirect} = {Numéro interne 1},\n\t\tClient,\n\t\tResponsable,\n\t\tOffre,\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tATC,\n\t\tcanal,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\tRight_Produit,\n\t\t{Right_Quantité},\n\t\t{Right_Numéro interne 1}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameNUmeroInterne\nJoinStgOffreUnique, EPSData join(toInteger({Numéro client indirect}) == EPSData@{Numéro du compte},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Joindre1\nBCUnion select(mapColumn(\n\t\tmarque_id,\n\t\tmarque_name,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPOSSAMidString,\n\t\treference,\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Motif commande},\n\t\tyearmonth,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\t{Agence commerciale},\n\t\t{ATC Corrigé},\n\t\t{ATC performance} = {ATC Performance},\n\t\tATC,\n\t\tNomATC,\n\t\tMatricule,\n\t\tno_offre,\n\t\tca_final,\n\t\tqt_final,\n\t\tdata_origin,\n\t\tyear,\n\t\tmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tHubSAPid,\n\t\tNoCli,\n\t\t{Canal final} = id_canal_final,\n\t\t{ATC Performance},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tqt_plateforme_final,\n\t\tca_plateforme_final,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tagence_code,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Type doc vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\t{Qté facturée},\n\t\t{CA facturé}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nJoinCompte select(mapColumn(\n\t\tyearmonth,\n\t\tqte_ecoulement,\n\t\tca_ecoulement,\n\t\tPOSSAMidString,\n\t\tHubSAPid = RenameCaFinal@HubSAPid,\n\t\treference,\n\t\tdistributeur,\n\t\t{Code postal},\n\t\tmarque_name,\n\t\tmarque_id,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tca_ecc_enrichi,\n\t\tqt_ecc_enrichi,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\tdata_origin,\n\t\tcanal_final,\n\t\tid_canal_final,\n\t\tno_offre,\n\t\t{ATC 2},\n\t\t{ATC 1},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Type de facture},\n\t\t{ATC Corrigé},\n\t\t{Motif commande},\n\t\tATC,\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tOrgCm,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\tqt_final,\n\t\tca_final,\n\t\tcanal_distribution_final,\n\t\tyear,\n\t\tmonth,\n\t\tHubSAPid = RenameDistributeur@HubSAPid,\n\t\tt_distrubuteur,\n\t\t{Numéro du compte},\n\t\t{Nom du compte},\n\t\t{Groupe cible/Typologie générale},\n\t\t{Sous groupe cible/Typologie détaillée},\n\t\t{Compte principal: Numéro du compte},\n\t\t{Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nJoindre1 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal},\n\t\tmarque = Select3@marque,\n\t\tmarque_code,\n\t\t{Canal distribution},\n\t\t{nom du canal},\n\t\tcanal_distribution_final,\n\t\tcanal_final,\n\t\t{Secteur d'activité},\n\t\tdocument_vente,\n\t\t{Agence commerciale corrigé},\n\t\t{Donneur d'ordre},\n\t\tFacture,\n\t\t{Type poste Facture},\n\t\tno_offre,\n\t\t{ATC Corrigé},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\tqt_ecc_enrichi,\n\t\tca_ecc_enrichi,\n\t\tqte_ecoulement,\n\t\t{qte plateforme final},\n\t\t{ca plateforme final},\n\t\tSum_qt_factur_e,\n\t\tSum_ca_factur_,\n\t\tSum_ca_ecoulement,\n\t\tSum_qte_ecoulement,\n\t\t{Motif commande},\n\t\t{Type de facture},\n\t\tsource_atc,\n\t\tSuccessor,\n\t\tCDis,\n\t\tPredecessor,\n\t\tSt,\n\t\t{Désignation Statut},\n\t\t{Deb val},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte} = Select3@{Numéro du compte},\n\t\t{EPS_Nom du compte} = Select3@{Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale} = Select3@{Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée} = Select3@{Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte} = Select3@{Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte} = Select3@{Compte principal: Nom du compte},\n\t\tca_ecoulement,\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\tATC,\n\t\tcanal,\n\t\tProduit,\n\t\t{Numéro interne 2},\n\t\t{Numéro du compte} = EPSData@{Numéro du compte},\n\t\t{Nom du compte} = AgregatNumeroCompte@{Nom du compte},\n\t\t{Numero Interne_ Groupe cible/Typologie générale} = AgregatNumeroCompte@{Groupe cible/Typologie générale},\n\t\t{Numero Interne_ Sous groupe cible/Typologie détaillée} = AgregatNumeroCompte@{Sous groupe cible/Typologie détaillée},\n\t\t{Numero Interne_ Compte principal: Numéro du compte} = AgregatNumeroCompte@{Compte principal: Numéro du compte},\n\t\t{Numero Interne_ Compte principal: Nom du compte} = AgregatNumeroCompte@{Compte principal: Nom du compte},\n\t\t{Jour calendaire}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nSelect6 derive(quantite = toInteger(quantite)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré} = {Code postal},\n\t\tmarque,\n\t\t{ID marque} = marque_code,\n\t\t{ID canal de distribution} = {Canal distribution},\n\t\t{Nom du canal} = {nom du canal},\n\t\t{Diffus/Chantier} = canal_final,\n\t\t{document_vente (vente directe)} = document_vente,\n\t\t{Agence commerciale corrigé (vente directe)} = {Agence commerciale corrigé},\n\t\t{Donneur d'ordre (vente directe)} = {Donneur d'ordre},\n\t\t{Facture (vente directe)} = Facture,\n\t\t{Type poste Facture (vente directe)} = {Type poste Facture},\n\t\t{Numéro offre} = no_offre,\n\t\t{ATC Corrigé (vente directe)} = {ATC Corrigé},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)} = {Motif commande},\n\t\t{Type de facture (vente directe)} = {Type de facture},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale} = {Numero Interne_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} = {Numero Interne_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte} = {Numero Interne_ Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte} = {Numero Interne_ Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nSelect7 derive(ca = replace(toString(ca), \".\", \",\")) ~> DerivedColumn2\nJoinCompte filter(instr(distributeur, \"dsc\")>0 && (year==\"2020\")&&  instr(data_origin, \"retr\")>0) ~> Filter1\nFilter1 aggregate(column1 = sum(toDouble(qt_final))) ~> Aggregate1\nJoinStgOffreUnique filter(instr({plateforme/vente directe}, \"dsc\")>0 && (year==\"2020\")&&  instr({origine de la ligne}, \"retr\")>0) ~> Filter2\nFilter2 aggregate(column1 = sum(toDouble(quantite))) ~> Aggregate2\nStgOffreUnique aggregate(groupBy(canal,\n\t\tOffre),\n\tMarque = last(Marque),\n\t\t{Quantité} = last({Quantité}),\n\t\t{Numéro interne 1} = last( {Numéro interne 1}),\n\t\tClient = last(Client),\n\t\tResponsable = last(Responsable),\n\t\tCODE_CMI = last(CODE_CMI),\n\t\tNOM_CMI = last(NOM_CMI),\n\t\tATC = last(ATC),\n\t\tProduit = last(Produit),\n\t\t{Numéro interne 2} = last({Numéro interne 2}),\n\t\tRight_Produit = last(Right_Produit),\n\t\t{Right_Quantité} = last({Right_Quantité}),\n\t\t{Right_Numéro interne 1} = last({Right_Numéro interne 1})) ~> Aggregate3\nFiltreReferenceNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['BaseCommercialArticle.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DataCommercialNotFOund\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{yearmonth,year,month,qte_ecoulement,ca_ecoulement,POSSAMidString,HubSAPid,reference,distributeur,agence_code,marque,Code postal,marque_name,toreplicate,dd,rcount,indexcols2,qte_ecc} as string\n\t),\n\tpartitionFileNames:['base commerciale.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TEST",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputBaseAllDistru",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal du client livré} as string,\n\t\tmarque as string,\n\t\t{ID marque} as string,\n\t\t{ID canal de distribution} as string,\n\t\t{Nom du canal} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{document_vente (vente directe)} as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\t{Numéro offre} as string,\n\t\t{ATC Corrigé (vente directe)} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande (vente directe)} as string,\n\t\t{Type de facture (vente directe)} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string,\n\t\t{Client Direct - Hiérarchie N1 SAP } as string,\n\t\t{Client Direct - Hiérarchie N2 SAP } as string,\n\t\t{Client Indirect - Hiérarchie N1 SAP} as string,\n\t\t{Client Indirect - Hiérarchie N2 SAP} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal} = {Code postal du client livré},\n\t\tmarque,\n\t\tmarque_code = {ID marque},\n\t\tcanal_distribution_final = {ID canal de distribution},\n\t\t{nom du canal} = {Nom du canal},\n\t\tcanal_final = {Diffus/Chantier},\n\t\tdocument_vente = {document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\tno_offre = {Numéro offre},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Corrigé} = {ATC Performance},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande} = {Motif commande (vente directe)},\n\t\t{Type de facture} = {Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\t{Client Direct - Hiérarchie N1 SAP },\n\t\t{Client Direct - Hiérarchie N2 SAP },\n\t\t{Client Indirect - Hiérarchie N1 SAP},\n\t\t{Client Indirect - Hiérarchie N2 SAP}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(yearmonth = year+month) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['BaseCommercialeDTP2.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TEST')]"
			]
		}
	]
}