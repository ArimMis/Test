{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-VAILLANT"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_DSC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DSC_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DSC_PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "importData",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "DSC_PREPARATION",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_DSC",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/DSC",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/DSC_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T08:09:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DSC_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MABILE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MABILE_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "importData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MABILE_PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "importData",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_MABILE",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/Mabile",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/MABILE_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-13T20:37:13Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAILLARD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MAILLARD_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DATA IMPORT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MAILLARD_PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DATA IMPORT",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_PARTEDIS",
							"method": "POST",
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/Partedis",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/PARTEDIS_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MAILLARD_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MAIN_BASE_COMMERCIALE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION_ECC_AVOIR",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TRAITEMENTECOULEMENT_AVOIR",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ModelVenteDirecte",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ModelVenteDirecte",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DSCTEREVA2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_ECC_AVOIR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DSCTEREVA2",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "UNION_BASE_COMMERCIAL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DSCTEREVA2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ModelVenteDirecte",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Model_PARTEDIS2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "VanMarkes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNION_BASE_COMMERCIAL",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "POST_UNION_FINISH",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "UNION_BASE_COMMERCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "basecommercialUnion_Model",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Model_PARTEDIS2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_ECC_AVOIR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Model_PARTEDIS2",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "VanMarkes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PREPARATION_ECC_AVOIR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "VanMarkes",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ATC_PERFORMANCE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "POST_UNION_FINISH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ATC_PERFORMANCE",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-30T07:05:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ATC_PERFORMANCE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORCAB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ORCAB_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "import orcab",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ORCAB_PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "import orcab",
						"description": "import data from orcab",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_ORCAB",
							"method": "POST",
							"body": {
								"containername": "data-input",
								"folderpath": "Ecoulement/ORCAB",
								"outputContainer": "data-warehouse",
								"outputpath": "Temp/ORCAB_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-10T11:58:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PARTEDIS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DATA IMPORT",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_PARTEDIS",
							"method": "POST",
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/Partedis",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/PARTEDIS_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DATA IMPORT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PARTEDIS_PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T08:05:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PARTEDIS_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TEREVA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "importData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TEREVA_PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "importData",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_TEREVA",
							"method": "POST",
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/Téréva",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/TEREVA_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-28T07:36:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_VF_CONFORT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "VF_CONFORT_PREPARATION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "importData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "VF_CONFORT_PREPARATION",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "importData",
						"description": "import all file un folder",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "AF_IMPORT_ECOUL_VFCONFORT",
							"method": "POST",
							"body": {
								"inputcontainer": "data-input",
								"folderpath": "Ecoulement/VF Confort",
								"outputcontainer": "data-warehouse",
								"outputpath": "Temp/CONFORT_ECOULEMENT.xlsx"
							}
						},
						"linkedServiceName": {
							"referenceName": "data transformation azure function",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-09T20:12:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/VF_CONFORT_PREPARATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARTICLE_HIERARCHIE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL ARTICLE"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Articles avec hiérarchie Articles groupe et locale.xlsx",
						"folderPath": "Reference article",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "OrgCm",
						"type": "String"
					},
					{
						"name": "CDis",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Hiérarch.groupe",
						"type": "String"
					},
					{
						"name": "Hiérarch.locale",
						"type": "String"
					},
					{
						"name": "Predecessor",
						"type": "String"
					},
					{
						"name": "Successor",
						"type": "String"
					},
					{
						"name": "St",
						"type": "String"
					},
					{
						"name": "Désignation Statut",
						"type": "String"
					},
					{
						"name": "Déb. val.",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BASE_AVANT_TRAITEMENT_ATC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "base commerciale.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "affecte/non_affecte",
						"type": "String"
					},
					{
						"name": "plateforme/vente directe",
						"type": "String"
					},
					{
						"name": "origine de la ligne",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "Code client livré",
						"type": "String"
					},
					{
						"name": "code client plateforme livree",
						"type": "String"
					},
					{
						"name": "code produit",
						"type": "String"
					},
					{
						"name": "quantite",
						"type": "String"
					},
					{
						"name": "ca",
						"type": "String"
					},
					{
						"name": "Code postal du client livré",
						"type": "String"
					},
					{
						"name": "marque",
						"type": "String"
					},
					{
						"name": "ID marque",
						"type": "String"
					},
					{
						"name": "ID canal de distribution",
						"type": "String"
					},
					{
						"name": "Nom du canal",
						"type": "String"
					},
					{
						"name": "Diffus/Chantier",
						"type": "String"
					},
					{
						"name": "document_vente (vente directe)",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre (vente directe)",
						"type": "String"
					},
					{
						"name": "Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Type poste Facture (vente directe)",
						"type": "String"
					},
					{
						"name": "Numéro offre",
						"type": "String"
					},
					{
						"name": "ATC Corrigé (vente directe)",
						"type": "String"
					},
					{
						"name": "ATC offre",
						"type": "String"
					},
					{
						"name": "ATC livré",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "Motif commande (vente directe)",
						"type": "String"
					},
					{
						"name": "Type de facture (vente directe)",
						"type": "String"
					},
					{
						"name": "N1groupe",
						"type": "String"
					},
					{
						"name": "N2groupe",
						"type": "String"
					},
					{
						"name": "N3groupe",
						"type": "String"
					},
					{
						"name": "N4groupe",
						"type": "String"
					},
					{
						"name": "N5groupe",
						"type": "String"
					},
					{
						"name": "N6groupe",
						"type": "String"
					},
					{
						"name": "N7groupe",
						"type": "String"
					},
					{
						"name": "N1groupedesignation",
						"type": "String"
					},
					{
						"name": "N2groupedesignation",
						"type": "String"
					},
					{
						"name": "N3groupedesignation",
						"type": "String"
					},
					{
						"name": "N4groupedesignation",
						"type": "String"
					},
					{
						"name": "N5groupedesignation",
						"type": "String"
					},
					{
						"name": "N6groupedesignation",
						"type": "String"
					},
					{
						"name": "N7groupedesignation",
						"type": "String"
					},
					{
						"name": "N1localedesignation",
						"type": "String"
					},
					{
						"name": "N2localedesignation",
						"type": "String"
					},
					{
						"name": "N3localedesignation",
						"type": "String"
					},
					{
						"name": "N4localedesignation",
						"type": "String"
					},
					{
						"name": "N5localedesignation",
						"type": "String"
					},
					{
						"name": "N6localedesignation",
						"type": "String"
					},
					{
						"name": "N7localedesignation",
						"type": "String"
					},
					{
						"name": "N1locale",
						"type": "String"
					},
					{
						"name": "N2locale",
						"type": "String"
					},
					{
						"name": "N3locale",
						"type": "String"
					},
					{
						"name": "N4locale",
						"type": "String"
					},
					{
						"name": "N5locale",
						"type": "String"
					},
					{
						"name": "N6locale",
						"type": "String"
					},
					{
						"name": "N7locale",
						"type": "String"
					},
					{
						"name": "Hiérarchgroupe",
						"type": "String"
					},
					{
						"name": "Hiérarchlocale",
						"type": "String"
					},
					{
						"name": "Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Nom du compte",
						"type": "String"
					},
					{
						"name": "EPS_Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "EPS_Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "EPS_Compte principal: Nom du compte",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Numéro client indirect",
						"type": "String"
					},
					{
						"name": "CODE_CMI",
						"type": "String"
					},
					{
						"name": "NOM_CMI",
						"type": "String"
					},
					{
						"name": "Nom du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Groupe cible/Typologie générale",
						"type": "String"
					},
					{
						"name": "Client Indirect_ Sous groupe cible/Typologie détaillée",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Numéro du compte",
						"type": "String"
					},
					{
						"name": "Client Indirect_  Compte principal: Nom du compte",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ORGANISATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_DSC.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_ORGANISATION_NOTFOUND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PIECE_DETACHEE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_QTE_NULL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "PREPARATION ECOULEMENT/DSC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Error_finding",
						"container": "data-warehouse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DSC_ECOULEMENT.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FacturationBW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "xTract",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FacturationBW.xlsx",
						"folderPath": "FacturationBW",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": "Article",
						"type": "String"
					},
					{
						"name": "Type doc. vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SUIVIE_OFFRE_CHANTIER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Suivi Offre",
						"container": "data-mart"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SessionDataSet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Ecoulements PF VAILLANT Novembre 2020.xlsx",
						"folderPath": "Ecoulement/ORCAB",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Fournisseur",
						"type": "String"
					},
					{
						"name": "Coopérative",
						"type": "String"
					},
					{
						"name": "Référence",
						"type": "String"
					},
					{
						"name": "Désignation",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "CA 2020",
						"type": "String"
					},
					{
						"name": "CA 2019",
						"type": "String"
					},
					{
						"name": "Qte 2020",
						"type": "String"
					},
					{
						"name": "Qte 2019",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stg_offre_chantier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/avoir')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "test_base_commercial"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "4.Avoirs validés",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Avoir Validés.xlsx",
						"folderPath": "Avoir",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Clé",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "Mois_Selection",
						"type": "String"
					},
					{
						"name": "Code_depot",
						"type": "String"
					},
					{
						"name": "Depot",
						"type": "String"
					},
					{
						"name": "NoFrs",
						"type": "String"
					},
					{
						"name": "FOUR2",
						"type": "String"
					},
					{
						"name": "C_Four",
						"type": "String"
					},
					{
						"name": "Lib_Four",
						"type": "String"
					},
					{
						"name": "Categorie",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Financement",
						"type": "String"
					},
					{
						"name": "NoOffre",
						"type": "String"
					},
					{
						"name": "Date_Debut",
						"type": "String"
					},
					{
						"name": "Date_Fin",
						"type": "String"
					},
					{
						"name": "NoArtDSC",
						"type": "String"
					},
					{
						"name": "LibArt",
						"type": "String"
					},
					{
						"name": "NoArtVGF",
						"type": "String"
					},
					{
						"name": "Agence",
						"type": "String"
					},
					{
						"name": "LIB AGENCE",
						"type": "String"
					},
					{
						"name": "Qté_Ini",
						"type": "String"
					},
					{
						"name": "Solde_Qte",
						"type": "String"
					},
					{
						"name": "Qte_Tot",
						"type": "String"
					},
					{
						"name": "Qte_Retenue",
						"type": "String"
					},
					{
						"name": "Qte_Validee_VGF",
						"type": "String"
					},
					{
						"name": "NoCli",
						"type": "String"
					},
					{
						"name": "NomCli",
						"type": "String"
					},
					{
						"name": "PRR",
						"type": "String"
					},
					{
						"name": "PRS_ligne_BL",
						"type": "String"
					},
					{
						"name": "PA_Ref",
						"type": "String"
					},
					{
						"name": "PA_D",
						"type": "String"
					},
					{
						"name": "PA_Valide_VGF",
						"type": "String"
					},
					{
						"name": "Ecart",
						"type": "String"
					},
					{
						"name": "Aide",
						"type": "String"
					},
					{
						"name": "Aide_Retenue",
						"type": "String"
					},
					{
						"name": "Aide_Validée_VGF",
						"type": "String"
					},
					{
						"name": "Date_Num",
						"type": "String"
					},
					{
						"name": "P_Fact",
						"type": "String"
					},
					{
						"name": "Clé_Offre_Article",
						"type": "String"
					},
					{
						"name": "Motif_Commentaire",
						"type": "String"
					},
					{
						"name": "Qté_Campagne",
						"type": "String"
					},
					{
						"name": "Prix_Campagne",
						"type": "String"
					},
					{
						"name": "Mois",
						"type": "String"
					},
					{
						"name": "Année",
						"type": "String"
					},
					{
						"name": "Montant_Avoir",
						"type": "String"
					},
					{
						"name": "NoDocRefac",
						"type": "String"
					},
					{
						"name": "NoLigneDocRefac",
						"type": "String"
					},
					{
						"name": "Contrôle",
						"type": "String"
					},
					{
						"name": "Date_Ctrl",
						"type": "String"
					},
					{
						"name": "Code_Motif_Refus",
						"type": "String"
					},
					{
						"name": "CompanyId",
						"type": "String"
					},
					{
						"name": "ValidéPar",
						"type": "String"
					},
					{
						"name": "DateAjout",
						"type": "String"
					},
					{
						"name": "ID ATC",
						"type": "String"
					},
					{
						"name": "Nom ATC",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "Nouveau Prix vente unitaire",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsc_orga')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Organisation_DSC.xlsx",
						"folderPath": "Organisation",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerShortName",
						"type": "String"
					},
					{
						"name": "UnitID",
						"type": "String"
					},
					{
						"name": "POSid",
						"type": "String"
					},
					{
						"name": "POSdescription",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "POSSAMid",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "SupplierID",
						"type": "String"
					},
					{
						"name": "BrandID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "SectorID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/facturationForVenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "facturationForVenteDirect.csv",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": " Org. commerciale",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activité",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Poste",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrigé",
						"type": "String"
					},
					{
						"name": "ATC Corrigé",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "Récept. de march.",
						"type": "String"
					},
					{
						"name": "Destinataire facture",
						"type": "String"
					},
					{
						"name": " vente",
						"type": "String"
					},
					{
						"name": "Type de poste",
						"type": "String"
					},
					{
						"name": "Livraison",
						"type": "String"
					},
					{
						"name": "Type de livraison",
						"type": "String"
					},
					{
						"name": "Type poste Livraison",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Mois calendrier",
						"type": "String"
					},
					{
						"name": "Année civile",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Qté cdée",
						"type": "String"
					},
					{
						"name": "CA cdé",
						"type": "String"
					},
					{
						"name": "Qté livrée",
						"type": "String"
					},
					{
						"name": "CA livré",
						"type": "String"
					},
					{
						"name": "Qté facturée",
						"type": "String"
					},
					{
						"name": "CA facturé",
						"type": "String"
					},
					{
						"name": "Cout standard cdé",
						"type": "String"
					},
					{
						"name": "Cout fabrication",
						"type": "String"
					},
					{
						"name": "Cout standard livré",
						"type": "String"
					},
					{
						"name": "Cout standard facturé",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "fact_filter",
						"type": "String"
					},
					{
						"name": "qt_cd_e",
						"type": "String"
					},
					{
						"name": "ca_cd_",
						"type": "String"
					},
					{
						"name": "qt_livr_e",
						"type": "String"
					},
					{
						"name": "ca_livr_",
						"type": "String"
					},
					{
						"name": "qt_factur_e",
						"type": "String"
					},
					{
						"name": "ca_factur_",
						"type": "String"
					},
					{
						"name": "cout_standard_cd_",
						"type": "String"
					},
					{
						"name": "cout_fabrication",
						"type": "String"
					},
					{
						"name": "cout_standard_livr_",
						"type": "String"
					},
					{
						"name": "cout_standard_factur_",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreAtcTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreChantierTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"rowDelimiter": "\n",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/offreDiffusTemp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "REFERENTIEL_OFFRE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Région Statistique",
						"type": "String"
					},
					{
						"name": "Enseigne",
						"type": "String"
					},
					{
						"name": "Marque DESC",
						"type": "String"
					},
					{
						"name": "Marque Code",
						"type": "String"
					},
					{
						"name": "Sous Famille",
						"type": "String"
					},
					{
						"name": "Référence Article Fournisseur",
						"type": "String"
					},
					{
						"name": "Article National DESC",
						"type": "String"
					},
					{
						"name": "Article National Code",
						"type": "String"
					},
					{
						"name": "Agence Code",
						"type": "String"
					},
					{
						"name": "Agence DESC",
						"type": "String"
					},
					{
						"name": "Département DESC",
						"type": "String"
					},
					{
						"name": "Département ID",
						"type": "String"
					},
					{
						"name": "Secteur",
						"type": "String"
					},
					{
						"name": "Quantité en UV BL",
						"type": "String"
					},
					{
						"name": "Année Précédente (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "Cumul Exercice A-1 (Quantité en UV BL)",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N",
						"type": "String"
					},
					{
						"name": "MOIS CA PRR N-1",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul",
						"type": "String"
					},
					{
						"name": "CA PRR au cumul N-1",
						"type": "String"
					},
					{
						"name": "fileName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/outFacturationForVenteDirect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BASE_COMMERCIAL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Temp",
						"container": "data-warehouse"
					},
					"columnDelimiter": ";",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "yearmonth",
						"type": "String"
					},
					{
						"name": "qte_ecoulement",
						"type": "String"
					},
					{
						"name": "ca_ecoulement",
						"type": "String"
					},
					{
						"name": "POSSAMidString",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					},
					{
						"name": "reference",
						"type": "String"
					},
					{
						"name": "distributeur",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "marque_name",
						"type": "String"
					},
					{
						"name": "is_prix_dsc",
						"type": "String"
					},
					{
						"name": "qte_ecc",
						"type": "String"
					},
					{
						"name": "Canal distribution",
						"type": "String"
					},
					{
						"name": "Secteur d'activit�",
						"type": "String"
					},
					{
						"name": "document_vente",
						"type": "String"
					},
					{
						"name": "Jour calendaire",
						"type": "String"
					},
					{
						"name": "Agence commerciale corrig�",
						"type": "String"
					},
					{
						"name": "Donneur d'ordre",
						"type": "String"
					},
					{
						"name": "R�cept. de march.",
						"type": "String"
					},
					{
						"name": "Right_reference",
						"type": "String"
					},
					{
						"name": "Facture",
						"type": "String"
					},
					{
						"name": "Type poste Facture",
						"type": "String"
					},
					{
						"name": "Qt� factur�e",
						"type": "String"
					},
					{
						"name": "CA factur�",
						"type": "String"
					},
					{
						"name": "Right_HubSAPid",
						"type": "String"
					},
					{
						"name": "Type_Facturation�",
						"type": "String"
					},
					{
						"name": "qt_fact",
						"type": "String"
					},
					{
						"name": "ca_final",
						"type": "String"
					},
					{
						"name": "qt_final",
						"type": "String"
					},
					{
						"name": "data_origin",
						"type": "String"
					},
					{
						"name": "canal_final",
						"type": "String"
					},
					{
						"name": "Commande",
						"type": "String"
					},
					{
						"name": "no_offre",
						"type": "String"
					},
					{
						"name": "ATC Performance",
						"type": "String"
					},
					{
						"name": "canal",
						"type": "String"
					},
					{
						"name": "RowCount",
						"type": "String"
					},
					{
						"name": "ATC",
						"type": "String"
					},
					{
						"name": "Canal final",
						"type": "String"
					},
					{
						"name": "code_postal_atc",
						"type": "String"
					},
					{
						"name": "NomATC",
						"type": "String"
					},
					{
						"name": "Matricule",
						"type": "String"
					},
					{
						"name": "date_id",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "id_canal_final",
						"type": "String"
					},
					{
						"name": "qte plateforme final",
						"type": "String"
					},
					{
						"name": "ca plateforme final",
						"type": "String"
					},
					{
						"name": "Sum_qt_factur_e",
						"type": "String"
					},
					{
						"name": "Sum_ca_factur_",
						"type": "String"
					},
					{
						"name": "Sum_ca_ecoulement",
						"type": "String"
					},
					{
						"name": "Sum_qte_ecoulement",
						"type": "String"
					},
					{
						"name": "code_depot",
						"type": "String"
					},
					{
						"name": "id_canal",
						"type": "String"
					},
					{
						"name": "marque_code",
						"type": "String"
					},
					{
						"name": "Document de vente",
						"type": "String"
					},
					{
						"name": "Type de facture",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Marque",
						"type": "String"
					},
					{
						"name": "ATC Corrig�",
						"type": "String"
					},
					{
						"name": "Motif commande",
						"type": "String"
					},
					{
						"name": "Org. commerciale",
						"type": "String"
					},
					{
						"name": "marque_id",
						"type": "String"
					},
					{
						"name": "Offre",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/platforme')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VAILLANT_ARCHITECTURE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OTHER"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Feuil1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Plateformes.xlsx",
						"folderPath": "Plateformes",
						"container": "data-input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "WholeSalerID",
						"type": "String"
					},
					{
						"name": "WholeSalerHubID",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "HubSAPid",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ATC_PERFORMANCE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BASE COMMERCIALE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BASE_AVANT_TRAITEMENT_ATC",
								"type": "DatasetReference"
							},
							"name": "baseCommerciale"
						},
						{
							"dataset": {
								"referenceName": "SECTEUR_FICTIF",
								"type": "DatasetReference"
							},
							"name": "secteurFictif"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "baseCommercialOut",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "atcOffreINNER"
						},
						{
							"name": "atcOffreFULLLEFT"
						},
						{
							"name": "atcOffreOUTERLEFT"
						},
						{
							"name": "updateATCOffre"
						},
						{
							"name": "nullToEmpty"
						},
						{
							"name": "atcOffreTraite"
						},
						{
							"name": "atcCorrigeINNER"
						},
						{
							"name": "atcCorrigeFULLLEFT"
						},
						{
							"name": "atcCorrigeOUTERLEFT"
						},
						{
							"name": "deleteSecteurColumn"
						},
						{
							"name": "updateATCCorrige"
						},
						{
							"name": "atcCorrigetraite"
						},
						{
							"name": "deleteSecteurColumn2"
						},
						{
							"name": "atcPerformance"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Select2"
						}
					],
					"script": "source(output(\n\t\t{affecte/non_affecte} as string,\n\t\t{plateforme/vente directe} as string,\n\t\t{origine de la ligne} as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\t{Code client livré} as string,\n\t\t{code client plateforme livree} as string,\n\t\t{code produit} as string,\n\t\tquantite as string,\n\t\tca as string,\n\t\t{Code postal du client livré} as string,\n\t\tmarque as string,\n\t\t{ID marque} as string,\n\t\t{ID canal de distribution} as string,\n\t\t{Nom du canal} as string,\n\t\t{Diffus/Chantier} as string,\n\t\t{document_vente (vente directe)} as string,\n\t\t{Agence commerciale corrigé (vente directe)} as string,\n\t\t{Donneur d'ordre (vente directe)} as string,\n\t\t{Facture (vente directe)} as string,\n\t\t{Type poste Facture (vente directe)} as string,\n\t\t{Numéro offre} as string,\n\t\t{ATC Corrigé (vente directe)} as string,\n\t\t{ATC offre} as string,\n\t\t{ATC livré} as string,\n\t\t{ATC Performance} as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\t{Motif commande (vente directe)} as string,\n\t\t{Type de facture (vente directe)} as string,\n\t\tN1groupe as string,\n\t\tN2groupe as string,\n\t\tN3groupe as string,\n\t\tN4groupe as string,\n\t\tN5groupe as string,\n\t\tN6groupe as string,\n\t\tN7groupe as string,\n\t\tN1groupedesignation as string,\n\t\tN2groupedesignation as string,\n\t\tN3groupedesignation as string,\n\t\tN4groupedesignation as string,\n\t\tN5groupedesignation as string,\n\t\tN6groupedesignation as string,\n\t\tN7groupedesignation as string,\n\t\tN1localedesignation as string,\n\t\tN2localedesignation as string,\n\t\tN3localedesignation as string,\n\t\tN4localedesignation as string,\n\t\tN5localedesignation as string,\n\t\tN6localedesignation as string,\n\t\tN7localedesignation as string,\n\t\tN1locale as string,\n\t\tN2locale as string,\n\t\tN3locale as string,\n\t\tN4locale as string,\n\t\tN5locale as string,\n\t\tN6locale as string,\n\t\tN7locale as string,\n\t\t{Hiérarchgroupe} as string,\n\t\t{Hiérarchlocale} as string,\n\t\t{Numéro du compte} as string,\n\t\t{EPS_Nom du compte} as string,\n\t\t{EPS_Groupe cible/Typologie générale} as string,\n\t\t{EPS_Sous groupe cible/Typologie détaillée} as string,\n\t\t{EPS_Compte principal: Numéro du compte} as string,\n\t\t{EPS_Compte principal: Nom du compte} as string,\n\t\tClient as string,\n\t\t{Numéro client indirect} as string,\n\t\tCODE_CMI as string,\n\t\tNOM_CMI as string,\n\t\t{Nom du compte} as string,\n\t\t{Client Indirect_ Groupe cible/Typologie générale} as string,\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée} as string,\n\t\t{Client Indirect_  Compte principal: Numéro du compte} as string,\n\t\t{Client Indirect_  Compte principal: Nom du compte} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> baseCommerciale\nsource(output(\n\t\tNoATC as string,\n\t\tATC as string,\n\t\tDRCde as string,\n\t\tFirstName as string,\n\t\tLastName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> secteurFictif\nnullToEmpty, secteurFictif join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcOffreINNER\nbaseCommerciale, secteurFictif join(replace({ATC offre}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcOffreFULLLEFT\natcOffreFULLLEFT filter(isNull(NoATC)) ~> atcOffreOUTERLEFT\natcOffreINNER derive({ATC fictif} = 1) ~> updateATCOffre\nbaseCommerciale derive({ATC offre} = iif(isNull({ATC offre}), \"\", {ATC offre}),\n\t\t{ATC Corrigé (vente directe)} = iif(isNull({ATC Corrigé (vente directe)}), \"\", {ATC Corrigé (vente directe)})) ~> nullToEmpty\nupdateATCOffre, atcOffreOUTERLEFT union(byName: true)~> atcOffreTraite\ndeleteSecteurColumn, secteurFictif join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> atcCorrigeINNER\ndeleteSecteurColumn, secteurFictif join(replace({ATC Corrigé (vente directe)}, \" \", \"\") == replace(NoATC, \" \", \"\"),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> atcCorrigeFULLLEFT\natcCorrigeFULLLEFT filter(isNull(NoATC)) ~> atcCorrigeOUTERLEFT\natcOffreTraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC fictif},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn\natcCorrigeINNER derive({ATC fictif} = 1) ~> updateATCCorrige\natcCorrigeOUTERLEFT, updateATCCorrige union(byName: true)~> atcCorrigetraite\nSelect1 select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{ATC fictif},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deleteSecteurColumn2\ndeleteSecteurColumn2 derive({ATC Performance} = iif(!isNull({ATC Corrigé (vente directe)}) && {ATC fictif}!=1, {ATC Corrigé (vente directe)}, iif(!isNull({ATC offre}) && {ATC fictif}!=1, {ATC offre}, {ATC livré}))) ~> atcPerformance\natcCorrigetraite select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte},\n\t\tNoATC,\n\t\tATC,\n\t\tDRCde,\n\t\tFirstName,\n\t\tLastName,\n\t\t{ATC fictif}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\natcPerformance select(mapColumn(\n\t\t{affecte/non_affecte},\n\t\t{plateforme/vente directe},\n\t\t{origine de la ligne},\n\t\tyear,\n\t\tmonth,\n\t\t{Code client livré},\n\t\t{code client plateforme livree},\n\t\t{code produit},\n\t\tquantite,\n\t\tca,\n\t\t{Code postal du client livré},\n\t\tmarque,\n\t\t{ID marque},\n\t\t{ID canal de distribution},\n\t\t{Nom du canal},\n\t\t{Diffus/Chantier},\n\t\t{document_vente (vente directe)},\n\t\t{Agence commerciale corrigé (vente directe)},\n\t\t{Donneur d'ordre (vente directe)},\n\t\t{Facture (vente directe)},\n\t\t{Type poste Facture (vente directe)},\n\t\t{Numéro offre},\n\t\t{ATC Corrigé (vente directe)},\n\t\t{ATC offre},\n\t\t{ATC livré},\n\t\t{ATC Performance},\n\t\tNomATC,\n\t\tMatricule,\n\t\t{Motif commande (vente directe)},\n\t\t{Type de facture (vente directe)},\n\t\tN1groupe,\n\t\tN2groupe,\n\t\tN3groupe,\n\t\tN4groupe,\n\t\tN5groupe,\n\t\tN6groupe,\n\t\tN7groupe,\n\t\tN1groupedesignation,\n\t\tN2groupedesignation,\n\t\tN3groupedesignation,\n\t\tN4groupedesignation,\n\t\tN5groupedesignation,\n\t\tN6groupedesignation,\n\t\tN7groupedesignation,\n\t\tN1localedesignation,\n\t\tN2localedesignation,\n\t\tN3localedesignation,\n\t\tN4localedesignation,\n\t\tN5localedesignation,\n\t\tN6localedesignation,\n\t\tN7localedesignation,\n\t\tN1locale,\n\t\tN2locale,\n\t\tN3locale,\n\t\tN4locale,\n\t\tN5locale,\n\t\tN6locale,\n\t\tN7locale,\n\t\t{Hiérarchgroupe},\n\t\t{Hiérarchlocale},\n\t\t{Numéro du compte},\n\t\t{EPS_Nom du compte},\n\t\t{EPS_Groupe cible/Typologie générale},\n\t\t{EPS_Sous groupe cible/Typologie détaillée},\n\t\t{EPS_Compte principal: Numéro du compte},\n\t\t{EPS_Compte principal: Nom du compte},\n\t\tClient,\n\t\t{Numéro client indirect},\n\t\tCODE_CMI,\n\t\tNOM_CMI,\n\t\t{Nom du compte},\n\t\t{Client Indirect_ Groupe cible/Typologie générale},\n\t\t{Client Indirect_ Sous groupe cible/Typologie détaillée},\n\t\t{Client Indirect_  Compte principal: Numéro du compte},\n\t\t{Client Indirect_  Compte principal: Nom du compte}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Clé Référentiel} as string,\n\t\t{Recherche Clé EPS} as string,\n\t\tMarque as string,\n\t\t{Code Postal début} as string,\n\t\t{Code Postal fin} as string,\n\t\tUtilisateur as string,\n\t\tFonction as string,\n\t\t{Département} as string,\n\t\tDR_x as string,\n\t\tmatches as string,\n\t\tATC as string,\n\t\tNomATC as string,\n\t\t{Plan primes} as string,\n\t\tDR_y as string,\n\t\t{Secteur prime} as string,\n\t\tMatricule as string,\n\t\t{Secteur DEC} as string,\n\t\tRallye as string,\n\t\t{Canal final} as string,\n\t\ttoreplicate as string,\n\t\tdd as string,\n\t\t{Code postal} as string\n\t),\n\tpartitionFileNames:['base commerciale.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BASE_AVANT_TRAITEMENT_ATC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSC_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DSC_input",
								"type": "DatasetReference"
							},
							"name": "DSCINPUT"
						},
						{
							"dataset": {
								"referenceName": "dsc_orga",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DSC_PIECE_DETACHEE",
								"type": "DatasetReference"
							},
							"name": "DSCPieceDetache"
						},
						{
							"dataset": {
								"referenceName": "DSC_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "outputNullQuantity"
						},
						{
							"dataset": {
								"referenceName": "DSC_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "preparedDSC"
						},
						{
							"dataset": {
								"referenceName": "DSC_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "orgaNotFound"
						}
					],
					"transformations": [
						{
							"name": "KeepImportantColumn"
						},
						{
							"name": "notNullQuantity"
						},
						{
							"name": "columnFormat",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "pieceDetache"
						},
						{
							"name": "nullQuantity"
						},
						{
							"name": "notPieceDetache"
						},
						{
							"name": "agenceCodeNotNull"
						},
						{
							"name": "posidNotNull"
						},
						{
							"name": "innerJoinWithOrga"
						},
						{
							"name": "fullLeftJoin"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "InnerVentesDirecte"
						},
						{
							"name": "fullLeftVentesDirectes"
						},
						{
							"name": "removeQuantityVenteDirecte"
						},
						{
							"name": "Select1"
						},
						{
							"name": "outerLeft"
						},
						{
							"name": "Select2"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Union1"
						}
					],
					"script": "source(output(\n\t\tProp_0 as string,\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tyearmonth as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DSCINPUT\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nDSCINPUT select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> KeepImportantColumn\ncolumnFormat filter({Quantité en UV BL}!=0) ~> notNullQuantity\nKeepImportantColumn derive({Quantité en UV BL} = toDouble({Quantité en UV BL}),\n\t\t{Marque Code} = toDouble({Marque Code}),\n\t\tyear = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 4, 2)) ~> columnFormat\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})>0) ~> pieceDetache\ncolumnFormat filter({Quantité en UV BL}==0) ~> nullQuantity\nnotNullQuantity filter(locate(\"Pièces détachées pour chauffage\", {Sous Famille})==0) ~> notPieceDetache\nnotPieceDetache filter(!isNull({Agence Code})) ~> agenceCodeNotNull\nAggregate1 filter(!isNull(POSid)) ~> posidNotNull\nagenceCodeNotNull, posidNotNull join({Agence Code} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerJoinWithOrga\nagenceCodeNotNull, posidNotNull join({Agence Code} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftJoin\nfullLeftJoin filter(!isNull({Agence Code})) ~> leftOuter\nventesDirectes select(mapColumn(\n\t\tyearmonth_right = yearmonth,\n\t\tArticle_right = Article,\n\t\t{Code client_right} = {Code client},\n\t\t{Qté vente directe} = {Qt� vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\ninnerJoinWithOrga, RenameColumn join(yearmonth == yearmonth_right\n\t&& {Référence Article Fournisseur} == Article_right\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerVentesDirecte\ninnerJoinWithOrga, RenameColumn join(yearmonth == yearmonth_right\n\t&& {Référence Article Fournisseur} == Article_right\n\t&& POSSAMidString == {Code client_right},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> fullLeftVentesDirectes\nInnerVentesDirecte derive({Quantité en UV BL} = {Quantité en UV BL}-toDouble({Qté vente directe})) ~> removeQuantityVenteDirecte\nremoveQuantityVenteDirecte select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid,\n\t\tBrandID,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nfullLeftVentesDirectes filter(isNull(yearmonth_right) || isNull(Article_right) || isNull({Code client_right})) ~> outerLeft\nouterLeft select(mapColumn(\n\t\t{Marque DESC},\n\t\t{Marque Code},\n\t\t{Sous Famille},\n\t\t{Référence Article Fournisseur},\n\t\t{Agence Code},\n\t\t{Département ID},\n\t\t{Quantité en UV BL},\n\t\tyearmonth,\n\t\tWholeSalerID,\n\t\tPOSid,\n\t\tPOSSAMidString,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nUnion1 select(mapColumn(\n\t\tmarque_file = {Marque DESC},\n\t\tsous_famille = {Sous Famille},\n\t\treference = {Référence Article Fournisseur},\n\t\tagence_code = {Agence Code},\n\t\tdepartement_id = {Département ID},\n\t\tqte_ecoulement = {Quantité en UV BL},\n\t\tyearmonth,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubSAPid,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nSelect1 derive(departement_id = toDouble(''),\n\t\tprix_unitaire_std = toDouble(''),\n\t\tdistributeur = \"DSC\") ~> Addcolumn\norganisation aggregate(groupBy(POSid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tPOSSAMidString = first(POSSAMidString),\n\t\tHubSAPid = first(HubSAPid),\n\t\tBrandID = first(BrandID)) ~> Aggregate1\nAddcolumn, Select2 union(byName: true)~> Union1\npieceDetache sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_PIECE_DETACHEE.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DSCPieceDetache\nnullQuantity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_QTE_NULL.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputNullQuantity\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string,\n\t\tColumn_22 as string\n\t),\n\tpartitionFileNames:['DSC_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> preparedDSC\nleftOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSC_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> orgaNotFound"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DSC_input')]",
				"[concat(variables('factoryId'), '/datasets/dsc_orga')]",
				"[concat(variables('factoryId'), '/datasets/DSC_PIECE_DETACHEE')]",
				"[concat(variables('factoryId'), '/datasets/DSC_QTE_NULL')]",
				"[concat(variables('factoryId'), '/datasets/DSC_ORGANISATION_NOTFOUND')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAILLARD_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MAILLARD_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MAILLARD_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "output"
						},
						{
							"dataset": {
								"referenceName": "MAILLARD_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						}
					],
					"transformations": [
						{
							"name": "quantityNotNull"
						},
						{
							"name": "cleansingEcoulement",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "getYear"
						},
						{
							"name": "yearMonth"
						},
						{
							"name": "depotNotNull"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "notNull"
						},
						{
							"name": "uniqueAgenceAndHubsapID"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "leftOrganisation"
						},
						{
							"name": "outerleftOrganisation"
						},
						{
							"name": "cleansingVentesDirectes"
						},
						{
							"name": "sumQuantity"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "typeCaste"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "outerleftVentesDirectes"
						},
						{
							"name": "enleverVentesDirectes"
						},
						{
							"name": "Rename"
						},
						{
							"name": "Union1"
						},
						{
							"name": "marqueFile"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{Société} as string,\n\t\t{Dépot} as string,\n\t\tMois as string,\n\t\t{Code GTAC} as string,\n\t\t{Référence} as string,\n\t\t{Désignation} as string,\n\t\t{Quantité} as string,\n\t\tValeur as string,\n\t\t{Quantité n-1} as string,\n\t\t{Valeur n-1} as string,\n\t\t{CP Dépôt} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\t{Nom Agence (Code)} as string,\n\t\t{CP Agence} as string,\n\t\tPOSSAMid as string,\n\t\tHubSAPid as string,\n\t\tBrandID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\necoulement filter(!isNull({Quantité})) ~> quantityNotNull\nquantityNotNull derive({Quantité} = toDouble({Quantité})) ~> cleansingEcoulement\ncleansingEcoulement derive(Year = split(Mois, \"/\")[2],\n\t\tMonth = split(Mois, \"/\")[1]) ~> getYear\ngetYear derive(Yearmonth = concat(Year, Month)) ~> yearMonth\nyearMonth filter(!isNull({Dépot})) ~> depotNotNull\norganisation derive({Nom Agence (Code)} = trim({Nom Agence (Code)}, \" \"),\n\t\tHubSAPid = trim({HubSAPid}, \" \")) ~> cleansing\ncleansing filter(!isNull({Nom Agence (Code)})) ~> notNull\nnotNull aggregate(groupBy({Nom Agence (Code)},\n\t\tHubSAPid),\n\t{CP Agence} = max({CP Agence}),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tBrandID = max(BrandID)) ~> uniqueAgenceAndHubsapID\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\ndepotNotNull, uniqueAgenceAndHubsapID join({Dépot} == {Nom Agence (Code)},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftOrganisation\nleftOrganisation filter(isNull({Nom Agence (Code)})) ~> outerleftOrganisation\nventesDirectes derive({Code client} = trim({Code client}, \" \"),\n\t\t{Qté facturée} = toDouble({Qt� vente directe}),\n\t\tyearmonth = trim(yearmonth, \" \"),\n\t\tArticle = trim(Article, \" \")) ~> cleansingVentesDirectes\ncleansingVentesDirectes aggregate(groupBy(yearmonth,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> sumQuantity\nDerivedColumn1, typeCaste join(DerivedColumn1@Yearmonth == typeCaste@yearmonth\n\t&& {Référence} == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\nRename derive(yearmonth = toString(yearmonth),\n\t\tArticle = toString(Article),\n\t\t{Code client} = toString({Code client})) ~> typeCaste\nDerivedColumn1, typeCaste join(DerivedColumn1@Yearmonth == typeCaste@yearmonth\n\t&& {Référence} == Article\n\t&& POSSAMid == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\nleftVentesDirectes filter(isNull(typeCaste@yearmonth) || isNull(Article) || isNull({Code client})) ~> outerleftVentesDirectes\ninnerVentesDirectes derive({Quantité} = {Quantité}-{Qté ventes directes}) ~> enleverVentesDirectes\nsumQuantity select(mapColumn(\n\t\tyearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté ventes directes} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nenleverVentesDirectes, outerleftVentesDirectes union(byName: true)~> Union1\nUnion1 derive(marque_file = iif(toInteger(BrandID)==1604, \"saunier\", \"vaillant\"),\n\t\t{Société} = upper({Société})) ~> marqueFile\nmarqueFile select(mapColumn(\n\t\tdistributeur = {Société},\n\t\treference = {Référence},\n\t\tarticle = {Désignation},\n\t\tqte_ecoulement = {Quantité},\n\t\tca_ecoulement = Valeur,\n\t\t{Code postal} = {CP Dépôt},\n\t\tyear = Year,\n\t\tmonth = Month,\n\t\tyearmonth = Union1@Yearmonth,\n\t\tHubSAPid,\n\t\tPOSSAMid,\n\t\tmarque_id = BrandID,\n\t\tmarque_file\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\ninnerOrganisation derive(Yearmonth = replace(Yearmonth, \" \", \"\")) ~> DerivedColumn1\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique0} as string,\n\t\t{SaunierDuvalNicolas HERNANDEZ0100001999Conseiller Technique Thermodynamique1} as string,\n\t\tSaunierDuval as string,\n\t\t{01000} as string,\n\t\t{01999} as string,\n\t\t{nicolas hernandez} as string,\n\t\t{Conseiller Technique Thermodynamique} as string,\n\t\t{01} as string,\n\t\t{1647-Rhône-Alpes Auvergne} as string,\n\t\t{16400092} as string,\n\t\t{nicolas julien} as string,\n\t\t{SD diffus} as string,\n\t\t{NICOLAS Julien} as string,\n\t\t{16566798} as string,\n\t\tProp_14 as string\n\t),\n\tpartitionFileNames:['MAILLARD_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output\nouterleftOrganisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MAILLARD_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PARTEDIS_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PARTEDIS_ECOULEMENT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "venteDirecte"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_PRIX_STD",
								"type": "DatasetReference"
							},
							"name": "partedisPrixStd"
						},
						{
							"dataset": {
								"referenceName": "TEMP_PRIX_PAR_PERIODE",
								"type": "DatasetReference"
							},
							"name": "prixParPeriode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PARTEDIS_ORGANISATION_NOTFOUND",
								"type": "DatasetReference"
							},
							"name": "organisationNotFound"
						},
						{
							"dataset": {
								"referenceName": "Partedis_qte_null",
								"type": "DatasetReference"
							},
							"name": "quantityNullOutput"
						},
						{
							"dataset": {
								"referenceName": "PARTEDIS_ECOUL_PREPARED",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "columnChoice"
						},
						{
							"name": "typeCaste",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "posIdNotNull"
						},
						{
							"name": "unique"
						},
						{
							"name": "InnerJoin"
						},
						{
							"name": "LeftJoin"
						},
						{
							"name": "Outer"
						},
						{
							"name": "uniqueKey"
						},
						{
							"name": "cleansingVenteDirecte"
						},
						{
							"name": "eccoulementVenteDirecteLeftJoin"
						},
						{
							"name": "cleansingEcoulement"
						},
						{
							"name": "ecoulementVenteDirecteInnerJoin"
						},
						{
							"name": "leftOuter"
						},
						{
							"name": "rendreZeroLesVentesDirectesNegatives"
						},
						{
							"name": "enleverQuantiteVenteDirecte"
						},
						{
							"name": "fullLeft"
						},
						{
							"name": "Select1"
						},
						{
							"name": "exctractYear"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "Select2"
						},
						{
							"name": "uploadingDate"
						},
						{
							"name": "prixStdToDouble"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Addcolumn"
						}
					],
					"script": "source(output(\n\t\t{Nom Fournisseur Principal} as string,\n\t\tClients as string,\n\t\t{Code Agence} as string,\n\t\t{Libellé Agence} as string,\n\t\t{Code postal agence} as string,\n\t\t{Ag Siret} as string,\n\t\tSiren as string,\n\t\tMKT1 as string,\n\t\tMKT2 as string,\n\t\tMKT3 as string,\n\t\t{Reference Fournisseur} as string,\n\t\tLibelle as string,\n\t\t{Qté Livré Mois A} as string,\n\t\t{Qté Livré Mois A-1} as string,\n\t\t{Qté Livré Cumul A} as string,\n\t\t{Qté Livré Cumul A-1} as string,\n\t\t{VVA MOIS} as string,\n\t\t{VVA MOIS N-1} as string,\n\t\t{VVA CUMUL EXERCICE} as string,\n\t\t{VVA CUMUL EXERCICE N-1} as string,\n\t\tpath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> venteDirecte\nsource(output(\n\t\t{Référence} as string,\n\t\tArticle as string,\n\t\t{Prix Unitaire Std} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> partedisPrixStd\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> prixParPeriode\necoulement select(mapColumn(\n\t\tMarque_file = {Nom Fournisseur Principal},\n\t\tClients,\n\t\t{Code Agence},\n\t\t{Libellé Agence},\n\t\t{Code postal agence},\n\t\t{Ag Siret},\n\t\tSiren,\n\t\tMKT1,\n\t\tMKT2,\n\t\tMKT3,\n\t\tReference = {Reference Fournisseur},\n\t\tLibelle,\n\t\t{Qté Livré Mois A},\n\t\t{Qté Livré Mois A-1},\n\t\t{Qté Livré Cumul A},\n\t\t{Qté Livré Cumul A-1},\n\t\t{VVA MOIS},\n\t\t{VVA MOIS N-1},\n\t\t{VVA CUMUL EXERCICE},\n\t\t{VVA CUMUL EXERCICE N-1},\n\t\tpath\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> columnChoice\ncolumnChoice derive({Qté Livré Mois A} = toInteger({Qté Livré Mois A}),\n\t\tyearmonth = trim(replace(split(path, \"-\")[3], \".xlsx\", \"\"), \" \")) ~> typeCaste\norganisation filter(!isNull(POSid)) ~> posIdNotNull\nposIdNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> unique\ntypeCaste, unique join({Code Agence} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerJoin\ntypeCaste, unique join({Code Agence} == POSid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoin\nLeftJoin filter(isNull(POSid)) ~> Outer\ncleansingVenteDirecte aggregate(groupBy(yearmonth_right,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté ventes directes} = sum({Qté ventes directes})) ~> uniqueKey\nventeDirecte derive({Qté ventes directes} = toDouble({Qt� vente directe}),\n\t\tyearmonth_right = replace(yearmonth, \" \", \"\"),\n\t\tArticle = replace(Article, \" \", \"\"),\n\t\t{Code client} = replace({Code client}, \" \", \"\")) ~> cleansingVenteDirecte\ncleansingEcoulement, uniqueKey join(yearmonth == yearmonth_right\n\t&& Reference == Article\n\t&& POSSAMidString == {Code client},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> eccoulementVenteDirecteLeftJoin\nInnerJoin derive(Reference = replace(Reference,\" \",\"\"),\n\t\tPOSSAMidString = replace(POSSAMidString,\" \",\"\")) ~> cleansingEcoulement\ncleansingEcoulement, uniqueKey join(yearmonth == yearmonth_right\n\t&& Reference == Article\n\t&& POSSAMidString == {Code client},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> ecoulementVenteDirecteInnerJoin\necoulementVenteDirecteInnerJoin filter(isNull(yearmonth_right) || isNull(Article) || isNull({Code client})) ~> leftOuter\neccoulementVenteDirecteLeftJoin derive({Qté ventes directes} = iif({Qté ventes directes}<0, toDouble(0), {Qté ventes directes})) ~> rendreZeroLesVentesDirectesNegatives\nrendreZeroLesVentesDirectesNegatives derive({Qté Livré Mois A} = {Qté Livré Mois A}-{Qté ventes directes}) ~> enleverQuantiteVenteDirecte\nenleverQuantiteVenteDirecte, leftOuter union(byName: true)~> fullLeft\nfullLeft select(mapColumn(\n\t\tMarque_file,\n\t\tClients,\n\t\t{Code Agence},\n\t\t{Libellé Agence},\n\t\t{Code postal agence},\n\t\t{Ag Siret},\n\t\tSiren,\n\t\tReference,\n\t\tLibelle,\n\t\t{Qté Livré Mois A},\n\t\t{VVA MOIS},\n\t\tyearmonth,\n\t\tPOSid,\n\t\tHubSAPid,\n\t\tWholeSalerID,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tSupplierID,\n\t\tBrandID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tSectorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(year = substring(yearmonth, 1, 4),\n\t\tmonth = substring(yearmonth, 5, 2)) ~> exctractYear\nexctractYear filter(!isNull({Qté Livré Mois A})) ~> quantityNotNull\nexctractYear filter(isNull({Qté Livré Mois A})) ~> quantityNull\npartedisPrixStd select(mapColumn(\n\t\tReference = {Référence},\n\t\tArticle,\n\t\t{Prix Unitaire Std}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 derive({Uploading date} = currentDate(),\n\t\tYear = \"2020\") ~> uploadingDate\nuploadingDate derive({Prix Unitaire Std} = toDouble({Prix Unitaire Std}),\n\t\tYear = toDouble(Year)) ~> prixStdToDouble\nAddcolumn select(mapColumn(\n\t\tmarque_file = Marque_file,\n\t\tagence_code = {Code Agence},\n\t\t{Code postal} = {Code postal agence},\n\t\treference = Reference,\n\t\tqte_ecoulement = {Qté Livré Mois A},\n\t\tyearmonth,\n\t\tHubSAPid,\n\t\tWholeSalerShortName,\n\t\tUnitID,\n\t\tPOSdescription,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tyear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nquantityNotNull derive(canal = '',\n\t\tDept = '') ~> Addcolumn\nOuter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['PARTEDIS_ORGANISATION_NOTFOUND.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> organisationNotFound\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OeccPartedis.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> quantityNullOutput\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tyearmonth as string,\n\t\tqte_ecoulement as string,\n\t\tca_ecoulement as string,\n\t\tPOSSAMidString as string,\n\t\tHubSAPid as string,\n\t\treference as string,\n\t\tdistributeur as string,\n\t\t{Code postal} as string,\n\t\tmarque_name as string,\n\t\tis_prix_dsc as string,\n\t\tqte_ecc as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activit�} as string,\n\t\tdocument_vente as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrig�} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{R�cept. de march.} as string,\n\t\tRight_reference as string,\n\t\tFacture as string,\n\t\t{Type poste Facture} as string,\n\t\t{Qt� factur�e} as string,\n\t\t{CA factur�} as string,\n\t\tRight_HubSAPid as string,\n\t\t{Type_Facturation�} as string,\n\t\tqt_fact as string,\n\t\tca_final as string,\n\t\tqt_final as string,\n\t\tdata_origin as string,\n\t\tcanal_final as string,\n\t\tCommande as string,\n\t\tno_offre as string,\n\t\t{ATC Performance} as string,\n\t\tcanal as string,\n\t\tRowCount as string,\n\t\tATC as string,\n\t\t{Canal final} as string,\n\t\tcode_postal_atc as string,\n\t\tNomATC as string,\n\t\tMatricule as string,\n\t\tdate_id as string,\n\t\tHubName as string,\n\t\tid_canal_final as string,\n\t\t{qte plateforme final} as string,\n\t\t{ca plateforme final} as string,\n\t\tSum_qt_factur_e as string,\n\t\tSum_ca_factur_ as string,\n\t\tSum_ca_ecoulement as string,\n\t\tSum_qte_ecoulement as string,\n\t\tcode_depot as string,\n\t\tid_canal as string,\n\t\tmarque_code as string,\n\t\t{Document de vente} as string,\n\t\t{Type de facture} as string,\n\t\tClient as string,\n\t\tMarque as string,\n\t\t{ATC Corrig�} as string,\n\t\t{Motif commande} as string,\n\t\t{Org. commerciale} as string,\n\t\tmarque_id as string,\n\t\tOffre as string\n\t),\n\tpartitionFileNames:['PARTEDIS_ECOUL_PREPARED.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VENTES_DIRECTES_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "facturationForVenteDirect",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARATION",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Cleansing"
						},
						{
							"name": "SumQuantity"
						},
						{
							"name": "RenameColumn"
						},
						{
							"name": "Uniformisation"
						},
						{
							"name": "Addcolumn"
						},
						{
							"name": "renam"
						}
					],
					"script": "source(output(\n\t\t{ Org. commerciale} as string,\n\t\t{Canal distribution} as string,\n\t\t{Secteur d'activité} as string,\n\t\t{Document de vente} as string,\n\t\tPoste as string,\n\t\t{Jour calendaire} as string,\n\t\t{Agence commerciale corrigé} as string,\n\t\t{ATC Corrigé} as string,\n\t\t{Donneur d'ordre} as string,\n\t\t{Récept. de march.} as string,\n\t\t{Destinataire facture} as string,\n\t\t{ vente} as string,\n\t\t{Type de poste} as string,\n\t\tLivraison as string,\n\t\t{Type de livraison} as string,\n\t\t{Type poste Livraison} as string,\n\t\tFacture as string,\n\t\t{Type de facture} as string,\n\t\t{Type poste Facture} as string,\n\t\t{Mois calendrier} as string,\n\t\t{Année civile} as string,\n\t\t{Motif commande} as string,\n\t\t{Qté cdée} as string,\n\t\t{CA cdé} as string,\n\t\t{Qté livrée} as string,\n\t\t{CA livré} as string,\n\t\t{Qté facturée} as string,\n\t\t{CA facturé} as string,\n\t\t{Cout standard cdé} as string,\n\t\t{Cout fabrication} as string,\n\t\t{Cout standard livré} as string,\n\t\t{Cout standard facturé} as string,\n\t\tdate_id as string,\n\t\tyear as string,\n\t\tyearmonth as string,\n\t\tfact_filter as string,\n\t\tqt_cd_e as string,\n\t\tca_cd_ as string,\n\t\tqt_livr_e as string,\n\t\tca_livr_ as string,\n\t\tqt_factur_e as string,\n\t\tca_factur_ as string,\n\t\tcout_standard_cd_ as string,\n\t\tcout_fabrication as string,\n\t\tcout_standard_livr_ as string,\n\t\tcout_standard_factur_ as string,\n\t\tyear_month as string,\n\t\treference as string,\n\t\tWholeSalerID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nrenam derive({Code client} = replace( {Code client}, \" \", \"\"),\n\t\t{Qté facturée} = toDouble({Qté facturée}),\n\t\tyearmonth = replace(yearmonth, \" \", \"\"),\n\t\tArticle = replace(reference, \" \", \"\")) ~> Cleansing\nCleansing aggregate(groupBy(yearmonth,\n\t\tArticle,\n\t\t{Code client}),\n\t{Qté facturée} = sum({Qté facturée})) ~> SumQuantity\nSumQuantity select(mapColumn(\n\t\tyearmonth,\n\t\tArticle,\n\t\t{Code client},\n\t\t{Qté vente directe} = {Qté facturée}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumn\nAddcolumn select(mapColumn(\n\t\tyearmonth,\n\t\treference = Article,\n\t\t{Code client},\n\t\tqte_ecoulement = {Qté vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Uniformisation\nRenameColumn derive(canal = '',\n\t\tDept = '') ~> Addcolumn\nventesDirectes select(mapColumn(\n\t\t{ commerciale} = { Org. commerciale},\n\t\t{Canal distribution},\n\t\t{Secteur d'activité},\n\t\t{Document de vente},\n\t\tPoste,\n\t\t{Jour calendaire},\n\t\t{Agence commerciale corrigé},\n\t\t{ATC Corrigé},\n\t\t{Donneur d'ordre},\n\t\t{Code client} = {Récept. de march.},\n\t\t{Destinataire facture},\n\t\t{ vente},\n\t\t{Type de poste},\n\t\tLivraison,\n\t\t{Type de livraison},\n\t\t{Type poste Livraison},\n\t\tFacture,\n\t\t{Type de facture},\n\t\t{Type poste Facture},\n\t\t{Mois calendrier},\n\t\t{Année civile},\n\t\t{Motif commande},\n\t\t{Qté cdée},\n\t\t{CA cdé},\n\t\t{Qté livrée},\n\t\t{CA livré},\n\t\t{Qté facturée},\n\t\t{CA facturé},\n\t\t{Cout standard cdé},\n\t\t{Cout fabrication},\n\t\t{Cout standard livré},\n\t\t{Cout standard facturé},\n\t\tdate_id,\n\t\tyear,\n\t\tyearmonth,\n\t\tfact_filter,\n\t\tqt_cd_e,\n\t\tca_cd_,\n\t\tqt_livr_e,\n\t\tca_livr_,\n\t\tqt_factur_e,\n\t\tca_factur_,\n\t\tcout_standard_cd_,\n\t\tcout_fabrication,\n\t\tcout_standard_livr_,\n\t\tcout_standard_factur_,\n\t\tyear_month,\n\t\treference,\n\t\tWholeSalerID,\n\t\tWholeSalerHubID,\n\t\tHubName,\n\t\tHubSAPid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renam\nUniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['VENTES_DIRECTES_PREPARATION.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/facturationForVenteDirect')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VF_CONFORT_PREPARATION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PREPARATION ECOULEMENT"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VFINPUT",
								"type": "DatasetReference"
							},
							"name": "ecoulement"
						},
						{
							"dataset": {
								"referenceName": "CONFORT_ORGANISATION",
								"type": "DatasetReference"
							},
							"name": "organisation"
						},
						{
							"dataset": {
								"referenceName": "VENTES_DIRECTES_PREPARED",
								"type": "DatasetReference"
							},
							"name": "ventesDirectes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CONFORT_QTE_NULL",
								"type": "DatasetReference"
							},
							"name": "outputQuantityNull"
						},
						{
							"dataset": {
								"referenceName": "VFCONFORT_ECOULEMENT_PREPARED",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "yearmonth"
						},
						{
							"name": "yearAndMonth"
						},
						{
							"name": "quantityNull"
						},
						{
							"name": "quantityNotNull"
						},
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "Select1"
						},
						{
							"name": "codePointVenteNotNull"
						},
						{
							"name": "cleansing"
						},
						{
							"name": "posidNotNull"
						},
						{
							"name": "uniqueOrganisation"
						},
						{
							"name": "innerOrganisation"
						},
						{
							"name": "RenameVentesDirectes"
						},
						{
							"name": "innerVentesDirectes"
						},
						{
							"name": "leftVentesDirectes"
						},
						{
							"name": "enleverVentesDirectes"
						},
						{
							"name": "outerleftVentesDirectes"
						},
						{
							"name": "uniformisation"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Addcolumn"
						}
					],
					"script": "source(output(\n\t\t{Représentant} as string,\n\t\t{N° Département} as string,\n\t\t{Département} as string,\n\t\t{Code point de vente} as string,\n\t\t{Libellé point de vente} as string,\n\t\t{Code Depot source} as string,\n\t\t{Code client} as string,\n\t\tClient as string,\n\t\t{N° Siret} as string,\n\t\t{Code postal} as string,\n\t\tVille as string,\n\t\t{Année livraison} as string,\n\t\t{Mois livraison} as string,\n\t\t{code fournisseur} as string,\n\t\t{fournisseur principal} as string,\n\t\t{Code produit} as string,\n\t\tproduit as string,\n\t\t{Réference} as string,\n\t\t{Qte en unité de vente} as string,\n\t\t{Montant prv net} as string,\n\t\tpath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ecoulement\nsource(output(\n\t\tWholeSalerID as string,\n\t\tWholeSalerShortName as string,\n\t\tUnitID as string,\n\t\tPOSid as string,\n\t\tPOSdescription as string,\n\t\tCounty as string,\n\t\tPOSSAMid as string,\n\t\tPOSSAMidString as string,\n\t\tSupplierID as string,\n\t\tBrandID as string,\n\t\tWholeSalerHubID as string,\n\t\tHubName as string,\n\t\tHubSAPid as string,\n\t\tSectorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> organisation\nsource(output(\n\t\tyearmonth as string,\n\t\tArticle as string,\n\t\t{Code client} as string,\n\t\t{Qt� vente directe} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ventesDirectes\nSelect1 derive(yearmonth = regexExtract(fileName , '(\\\\d+)'),\n\t\tqte_ecoulement = toDouble(qte_ecoulement)) ~> yearmonth\nyearmonth derive(year = substring(yearmonth, 1, 5),\n\t\tmonth = substring(yearmonth, 6 ,2)) ~> yearAndMonth\nyearAndMonth filter(isNull(qte_ecoulement)) ~> quantityNull\nyearAndMonth filter(!isNull(qte_ecoulement)) ~> quantityNotNull\necoulement derive({Représentant} = toString(byName('Représentant')),\n\t\t{N° Département} = toString(byName('N° Département')),\n\t\t{Département} = toString(byName('Département')),\n\t\t{Libellé point de vente} = toString(byName('Libellé point de vente')),\n\t\t{N° Siret} = toString(byName('N° Siret')),\n\t\t{Année livraison} = toString(byName('Année livraison')),\n\t\t{Réference} = toString(byName('Réference')),\n\t\t{Qte en unité de vente} = toString(byName('Qte en unité de vente'))) ~> MapDrifted1\nMapDrifted1 select(mapColumn(\n\t\t{Code point de vente},\n\t\t{Code Depot source},\n\t\t{Code client},\n\t\tClient,\n\t\t{Code postal},\n\t\tVille,\n\t\t{Mois livraison},\n\t\t{code fournisseur},\n\t\t{fournisseur principal},\n\t\t{Code produit},\n\t\tproduit,\n\t\t{Montant prv net},\n\t\t{Représentant},\n\t\t{N° Département},\n\t\t{Département},\n\t\t{Libellé point de vente},\n\t\t{N° Siret},\n\t\t{Année livraison},\n\t\t{Réference},\n\t\tqte_ecoulement = {Qte en unité de vente},\n\t\tfileName = path\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nquantityNotNull filter(!isNull({Code point de vente})) ~> codePointVenteNotNull\norganisation derive(POSid = trim(POSid, \" \"),\n\t\tHubSAPid = trim(HubSAPid, \" \")) ~> cleansing\ncleansing filter(!isNull(POSid)) ~> posidNotNull\nposidNotNull aggregate(groupBy(POSid,\n\t\tHubSAPid),\n\tWholeSalerID = max(WholeSalerID),\n\t\tWholeSalerShortName = max(WholeSalerShortName),\n\t\tUnitID = max(UnitID),\n\t\tPOSdescription = max(POSdescription),\n\t\tCounty = max(County),\n\t\tPOSSAMid = max(POSSAMid),\n\t\tPOSSAMidString = max(POSSAMidString),\n\t\tSupplierID = max(SupplierID),\n\t\tBrandID = max(BrandID),\n\t\tWholeSalerHubID = max(WholeSalerHubID),\n\t\tHubName = max(HubName),\n\t\tSectorID = max(SectorID)) ~> uniqueOrganisation\ncodePointVenteNotNull, organisation join({Code point de vente} == POSid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerOrganisation\nventesDirectes select(mapColumn(\n\t\tyearmonth_right = yearmonth,\n\t\tArticle,\n\t\t{Code client_right} = {Code client},\n\t\t{Qté ventes directes} = {Qt� vente directe}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameVentesDirectes\ninnerOrganisation, RenameVentesDirectes join(yearmonth == yearmonth_right\n\t&& {Réference} == Article\n\t&& POSSAMid == {Code client_right},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> innerVentesDirectes\ninnerOrganisation, RenameVentesDirectes join(yearmonth == yearmonth_right\n\t&& {Réference} == Article\n\t&& POSSAMid == {Code client_right},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> leftVentesDirectes\ninnerVentesDirectes derive(qte_ecoulement = qte_ecoulement-toDouble({Qté ventes directes})) ~> enleverVentesDirectes\nleftVentesDirectes filter(isNull(yearmonth) || isNull(Article) || isNull({Code client_right})) ~> outerleftVentesDirectes\nAddcolumn select(mapColumn(\n\t\t{Code postal},\n\t\tmarque_file = {fournisseur principal},\n\t\tarticle = produit,\n\t\tca_ecoulement = {Montant prv net},\n\t\t{Représentant},\n\t\tdepartement_id = {N° Département},\n\t\treference = {Réference},\n\t\tqte_ecoulement,\n\t\tyearmonth,\n\t\tyear,\n\t\tmonth,\n\t\tUnitID,\n\t\tCounty,\n\t\tPOSSAMidString,\n\t\tmarque_id = BrandID,\n\t\tHubSAPid,\n\t\tdistributeur\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> uniformisation\nenleverVentesDirectes, outerleftVentesDirectes union(byName: true)~> Union1\nUnion1 derive(canal = '',\n\t\tdistributeur = \"vf_confort\") ~> Addcolumn\nquantityNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['VFCONFORT_QTE_NULL'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> outputQuantityNull\nuniformisation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Région Statistique} as string,\n\t\tEnseigne as string,\n\t\t{Marque DESC} as string,\n\t\t{Marque Code} as string,\n\t\t{Sous Famille} as string,\n\t\t{Référence Article Fournisseur} as string,\n\t\t{Article National DESC} as string,\n\t\t{Article National Code} as string,\n\t\t{Agence Code} as string,\n\t\t{Agence DESC} as string,\n\t\t{Département DESC} as string,\n\t\t{Département ID} as string,\n\t\tSecteur as string,\n\t\t{Quantité en UV BL} as string,\n\t\t{Année Précédente (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice (Quantité en UV BL)} as string,\n\t\t{Cumul Exercice A-1 (Quantité en UV BL)} as string,\n\t\t{MOIS CA PRR N} as string,\n\t\t{MOIS CA PRR N-1} as string,\n\t\t{CA PRR au cumul} as string,\n\t\t{CA PRR au cumul N-1} as string,\n\t\tfileName as string\n\t),\n\tpartitionFileNames:['VFCONFORT_ECOUL_PREPARED'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> output"
				}
			},
			"dependsOn": []
		}
	]
}